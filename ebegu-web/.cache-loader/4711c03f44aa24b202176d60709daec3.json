{"remainingRequest":"/home/imanol/projects/ebegu/ebegu-web/node_modules/thread-loader/dist/cjs.js??ref--0-1!/home/imanol/projects/ebegu/ebegu-web/node_modules/ts-loader/index.js??ref--0-2!/home/imanol/projects/ebegu/ebegu-web/src/gesuch/service/fallRS.rest.ts","cacheIdentifier":"cache-loader:1.1.0 test","dependencies":[{"path":"/home/imanol/projects/ebegu/ebegu-web/src/gesuch/service/fallRS.rest.ts","mtime":1512484412019},{"path":"/home/imanol/projects/ebegu/ebegu-web/node_modules/cache-loader/dist/cjs.js","mtime":1507514019000},{"path":"/home/imanol/projects/ebegu/ebegu-web/node_modules/thread-loader/dist/cjs.js","mtime":1507523420000},{"path":"/home/imanol/projects/ebegu/ebegu-web/node_modules/ts-loader/index.js","mtime":1508488471000}],"contextDependencies":[],"result":["\"use strict\";\n/*\n * Ki-Tax: System for the management of external childcare subsidies\n * Copyright (C) 2017 City of Bern Switzerland\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar TSFall_1 = require(\"../../models/TSFall\");\nvar FallRS = /** @class */ (function () {\n    /* @ngInject */\n    function FallRS($http, REST_API, ebeguRestUtil, $log) {\n        this.$log = $log;\n        this.serviceURL = REST_API + 'falle';\n        this.http = $http;\n        this.ebeguRestUtil = ebeguRestUtil;\n    }\n    FallRS.prototype.createFall = function (fall) {\n        return this.saveFall(fall);\n    };\n    FallRS.prototype.updateFall = function (fall) {\n        return this.saveFall(fall);\n    };\n    FallRS.prototype.saveFall = function (fall) {\n        var _this = this;\n        var fallObject = {};\n        fallObject = this.ebeguRestUtil.fallToRestObject(fallObject, fall);\n        return this.http.put(this.serviceURL, fallObject, {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }).then(function (response) {\n            _this.$log.debug('PARSING fall REST object ', response.data);\n            _this.$log.debug('PARSed fall REST object ', _this.ebeguRestUtil.parseFall(new TSFall_1.default(), response.data));\n            return _this.ebeguRestUtil.parseFall(new TSFall_1.default(), response.data);\n        });\n    };\n    FallRS.prototype.findFall = function (fallID) {\n        var _this = this;\n        return this.http.get(this.serviceURL + '/id/' + encodeURIComponent(fallID))\n            .then(function (response) {\n            _this.$log.debug('PARSING fall REST object ', response.data);\n            return _this.ebeguRestUtil.parseFall(new TSFall_1.default(), response.data);\n        });\n    };\n    FallRS.prototype.findFallByCurrentBenutzerAsBesitzer = function () {\n        var _this = this;\n        return this.http.get(this.serviceURL + '/currentbenutzer/')\n            .then(function (response) {\n            _this.$log.debug('PARSING fall REST object ', response.data);\n            return _this.ebeguRestUtil.parseFall(new TSFall_1.default(), response.data);\n        });\n    };\n    FallRS.prototype.getServiceName = function () {\n        return 'FallRS';\n    };\n    FallRS.prototype.createFallForCurrentBenutzerAsBesitzer = function () {\n        var _this = this;\n        return this.http.put(this.serviceURL + '/createforcurrentbenutzer/', null, {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }).then(function (response) {\n            _this.$log.debug('PARSING fall REST object ', response.data);\n            return _this.ebeguRestUtil.parseFall(new TSFall_1.default(), response.data);\n        });\n    };\n    FallRS.$inject = ['$http', 'REST_API', 'EbeguRestUtil', '$log'];\n    return FallRS;\n}());\nexports.default = FallRS;\n",{"version":3,"file":"/home/imanol/projects/ebegu/ebegu-web/src/gesuch/service/fallRS.rest.ts","sourceRoot":"","sources":["/home/imanol/projects/ebegu/ebegu-web/src/gesuch/service/fallRS.rest.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Ki-Tax: System for the management of external childcare subsidies\n * Copyright (C) 2017 City of Bern Switzerland\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport {IHttpService, ILogService, IPromise} from 'angular';\nimport EbeguRestUtil from '../../utils/EbeguRestUtil';\nimport TSFall from '../../models/TSFall';\n\nexport default class FallRS {\n    serviceURL: string;\n    http: IHttpService;\n    ebeguRestUtil: EbeguRestUtil;\n\n    static $inject = ['$http', 'REST_API', 'EbeguRestUtil', '$log'];\n    /* @ngInject */\n    constructor($http: IHttpService, REST_API: string, ebeguRestUtil: EbeguRestUtil, private $log: ILogService) {\n        this.serviceURL = REST_API + 'falle';\n        this.http = $http;\n        this.ebeguRestUtil = ebeguRestUtil;\n    }\n\n    public createFall(fall: TSFall): IPromise<any> {\n        return this.saveFall(fall);\n    }\n\n    public updateFall(fall: TSFall): IPromise<any> {\n        return this.saveFall(fall);\n    }\n\n    private saveFall(fall: TSFall): IPromise<TSFall> {\n        let fallObject = {};\n        fallObject = this.ebeguRestUtil.fallToRestObject(fallObject, fall);\n\n        return this.http.put(this.serviceURL, fallObject, {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }).then((response: any) => {\n            this.$log.debug('PARSING fall REST object ', response.data);\n            this.$log.debug('PARSed fall REST object ', this.ebeguRestUtil.parseFall(new TSFall(), response.data));\n            return this.ebeguRestUtil.parseFall(new TSFall(), response.data);\n        });\n    }\n\n    public findFall(fallID: string): IPromise<any> {\n        return this.http.get(this.serviceURL + '/id/' + encodeURIComponent(fallID))\n            .then((response: any) => {\n                this.$log.debug('PARSING fall REST object ', response.data);\n                return this.ebeguRestUtil.parseFall(new TSFall(), response.data);\n            });\n    }\n\n    public findFallByCurrentBenutzerAsBesitzer(): IPromise<any> {\n        return this.http.get(this.serviceURL + '/currentbenutzer/')\n            .then((response: any) => {\n                this.$log.debug('PARSING fall REST object ', response.data);\n                return this.ebeguRestUtil.parseFall(new TSFall(), response.data);\n            });\n    }\n\n    public getServiceName(): string {\n        return 'FallRS';\n    }\n\n    public createFallForCurrentBenutzerAsBesitzer(): IPromise<TSFall> {\n        return this.http.put(this.serviceURL + '/createforcurrentbenutzer/', null, {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }).then((response: any) => {\n            this.$log.debug('PARSING fall REST object ', response.data);\n            return this.ebeguRestUtil.parseFall(new TSFall(), response.data);\n        });\n    }\n}\n"]}]}