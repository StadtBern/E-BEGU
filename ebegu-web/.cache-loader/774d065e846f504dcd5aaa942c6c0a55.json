{"remainingRequest":"/home/imanol/projects/ebegu/ebegu-web/node_modules/thread-loader/dist/cjs.js??ref--0-1!/home/imanol/projects/ebegu/ebegu-web/node_modules/ts-loader/index.js??ref--0-2!/home/imanol/projects/ebegu/ebegu-web/src/utils/EbeguUtil.ts","cacheIdentifier":"cache-loader:1.1.0 test","dependencies":[{"path":"/home/imanol/projects/ebegu/ebegu-web/src/utils/EbeguUtil.ts","mtime":1518612532822},{"path":"/home/imanol/projects/ebegu/ebegu-web/node_modules/cache-loader/dist/cjs.js","mtime":1507514019000},{"path":"/home/imanol/projects/ebegu/ebegu-web/node_modules/thread-loader/dist/cjs.js","mtime":1507523420000},{"path":"/home/imanol/projects/ebegu/ebegu-web/node_modules/ts-loader/index.js","mtime":1508488471000}],"contextDependencies":[],"result":["\"use strict\";\n/*\n * Ki-Tax: System for the management of external childcare subsidies\n * Copyright (C) 2017 City of Bern Switzerland\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar DateUtil_1 = require(\"./DateUtil\");\nvar TSAntragTyp_1 = require(\"../models/enums/TSAntragTyp\");\nvar TSBetreuungsnummerParts_1 = require(\"../models/dto/TSBetreuungsnummerParts\");\n/**\n * Klasse die allgemeine utils Methoden implementiert\n */\nvar EbeguUtil = /** @class */ (function () {\n    /* @ngInject */\n    function EbeguUtil($filter, CONSTANTS, $translate) {\n        this.$filter = $filter;\n        this.CONSTANTS = CONSTANTS;\n        this.$translate = $translate;\n    }\n    /**\n     * Returns the first day of the given Period in the format DD.MM.YYYY\n     * @param gesuchsperiode\n     * @returns {string}\n     */\n    EbeguUtil.prototype.getFirstDayGesuchsperiodeAsString = function (gesuchsperiode) {\n        if (gesuchsperiode && gesuchsperiode.gueltigkeit && gesuchsperiode.gueltigkeit.gueltigAb) {\n            return DateUtil_1.default.momentToLocalDateFormat(gesuchsperiode.gueltigkeit.gueltigAb, 'DD.MM.YYYY');\n        }\n        return '';\n    };\n    EbeguUtil.prototype.getAntragTextDateAsString = function (tsAntragTyp, eingangsdatum, laufnummer) {\n        if (tsAntragTyp) {\n            if (tsAntragTyp === TSAntragTyp_1.TSAntragTyp.MUTATION && eingangsdatum) {\n                return this.$translate.instant('TOOLBAR_' + TSAntragTyp_1.TSAntragTyp[tsAntragTyp], {\n                    nummer: laufnummer,\n                    date: eingangsdatum.format('DD.MM.YYYY')\n                });\n            }\n            return this.$translate.instant('TOOLBAR_' + TSAntragTyp_1.TSAntragTyp[tsAntragTyp] + '_NO_DATE');\n        }\n        return '';\n    };\n    /**\n     * Takes the given Gesuchsperiode and returns a string with the format \"gueltigAb.year/gueltigBis.year\"\n     * @returns {any}\n     */\n    EbeguUtil.prototype.getBasisJahrPlusAsString = function (gesuchsperiode, plusJahr) {\n        if (gesuchsperiode && gesuchsperiode.gueltigkeit) {\n            return String(gesuchsperiode.gueltigkeit.gueltigAb.year() + plusJahr);\n        }\n        return undefined;\n    };\n    /**\n     * Translates the given string using the angular-translate filter\n     * @param toTranslate word to translate\n     * @returns {any} translated word\n     */\n    EbeguUtil.prototype.translateString = function (toTranslate) {\n        return this.$filter('translate')(toTranslate).toString();\n    };\n    /**\n     * Translates the given list using the angular translate filter\n     * @param translationList list of words that will be translated\n     * @returns {any} A List of Objects with key and value, where value is the translated word.\n     */\n    EbeguUtil.prototype.translateStringList = function (translationList) {\n        var _this = this;\n        var listResult = [];\n        translationList.forEach(function (item) {\n            listResult.push({ key: item, value: _this.translateString(item) });\n        });\n        return listResult;\n    };\n    EbeguUtil.prototype.addZerosToNumber = function (number, length) {\n        return EbeguUtil.addZerosToNumber(number, length);\n    };\n    /**\n     * Die Methode fuegt 0s (links) hinzu bis die gegebene Nummer, die gegebene Laenge hat und dann gibt die nummer als string zurueck\n     * @param number\n     * @param length\n     * @returns {any}\n     */\n    EbeguUtil.addZerosToNumber = function (number, length) {\n        if (number != null) {\n            var fallnummerString = '' + number;\n            while (fallnummerString.length < length) {\n                fallnummerString = '0' + fallnummerString;\n            }\n            return fallnummerString;\n        }\n        return undefined;\n    };\n    EbeguUtil.getIndexOfElementwithID = function (entityToSearch, listToSearchIn) {\n        var idToSearch = entityToSearch.id;\n        for (var i = 0; i < listToSearchIn.length; i++) {\n            if (listToSearchIn[i].id === idToSearch) {\n                return i;\n            }\n        }\n        return -1;\n    };\n    /* bgNummer is also stored on betreuung when Betreuung is loaded from server! (Don't use this function if you load betreuung from server) */\n    EbeguUtil.prototype.calculateBetreuungsId = function (gesuchsperiode, fall, kindContainerNumber, betreuungNumber) {\n        var betreuungsId = '';\n        if (gesuchsperiode && fall) {\n            betreuungsId =\n                gesuchsperiode.gueltigkeit.gueltigAb.year().toString().substring(2)\n                    + '.' + this.addZerosToNumber(fall.fallNummer, this.CONSTANTS.FALLNUMMER_LENGTH)\n                    + '.' + kindContainerNumber\n                    + '.' + betreuungNumber;\n        }\n        return betreuungsId;\n    };\n    /* bgNummer is also stored on betreuung when Betreuung is loaded from server! (Don't use this function if you load betreuung from server) */\n    EbeguUtil.prototype.calculateBetreuungsIdFromBetreuung = function (fall, betreuung) {\n        var betreuungsId = '';\n        if (betreuung && fall) {\n            betreuungsId =\n                betreuung.gesuchsperiode.gueltigkeit.gueltigAb.year().toString().substring(2)\n                    + '.' + this.addZerosToNumber(fall.fallNummer, this.CONSTANTS.FALLNUMMER_LENGTH)\n                    + '.' + betreuung.kindNummer\n                    + '.' + betreuung.betreuungNummer;\n        }\n        return betreuungsId;\n    };\n    /**\n     * hilfsmethode um die betreuungsnummer in ihre einzelteile zu zerlegen. gibt ein objekt zurueck welches die werte einzeln enthaelt\n     * @param betreuungsnummer im format JJ.Fallnr.kindnr.betrnr\n     */\n    EbeguUtil.prototype.splitBetreuungsnummer = function (betreuungsnummer) {\n        var parts = betreuungsnummer.split('.');\n        if (!parts || parts.length !== 4) {\n            return undefined;\n        }\n        return new TSBetreuungsnummerParts_1.default(parts[0], parts[1], parts[2], parts[3]);\n    };\n    EbeguUtil.prototype.handleSmarttablesUpdateBug = function (aList) {\n        // Ugly Fix:\n        // Because of a bug in smarttables, the table will only be refreshed if the reverence or the first element\n        // changes in table. To resolve this bug, we overwrite the first element by a copy of itself.\n        aList[0] = angular.copy(aList[0]);\n    };\n    /**\n     * Erzeugt einen random String mit einer Laenge von numberOfCharacters\n     * @param numberOfCharacters\n     * @returns {string}\n     */\n    EbeguUtil.generateRandomName = function (numberOfCharacters) {\n        var text = '';\n        var possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n        for (var i = 0; i < numberOfCharacters; i++) {\n            text += possible.charAt(Math.floor(Math.random() * possible.length));\n        }\n        return text;\n    };\n    /**\n     * Returns a string like \"fallID GesuchstellerName\". The name of the GS comes from the name of the\n     * first Gesuchsteller of the given Gesuch. This method should be used if possible instead of getGesuchNameFromFall\n     * because the name of the Gesuchsteller1 is suppoused to be more actual than the name of the owner.\n     */\n    EbeguUtil.prototype.getGesuchNameFromGesuch = function (gesuch) {\n        var text = '';\n        if (gesuch) {\n            if (gesuch.fall) {\n                text = this.addZerosToNumber(gesuch.fall.fallNummer, this.CONSTANTS.FALLNUMMER_LENGTH);\n            }\n            if (gesuch.gesuchsteller1 && gesuch.gesuchsteller1.extractNachname()) {\n                text = text + ' ' + gesuch.gesuchsteller1.extractNachname();\n            }\n        }\n        return text;\n    };\n    /**\n     * Returns a string like \"fallID GesuchstellerName\". The name of the GS comes from the name of the\n     * owner of the given fall. Use this method instead of getGesuchNameFromGesuch only when there is no Gesuch but a fall\n     */\n    EbeguUtil.prototype.getGesuchNameFromFall = function (fall) {\n        var text = '';\n        if (fall) {\n            text = this.addZerosToNumber(fall.fallNummer, this.CONSTANTS.FALLNUMMER_LENGTH);\n            if (fall.besitzer && fall.besitzer.getFullName()) {\n                text = text + ' ' + fall.besitzer.getFullName();\n            }\n        }\n        return text;\n    };\n    EbeguUtil.selectFirst = function () {\n        var tmp = angular.element('md-radio-button:not([disabled=\"disabled\"]),'\n            + 'fieldset:not([disabled=\"disabled\"],.dv-adresse__fieldset) input:not([disabled=\"disabled\"]),'\n            + 'fieldset:not([disabled=\"disabled\"],.dv-adresse__fieldset) textarea:not([disabled=\"disabled\"]),'\n            + 'fieldset:not([disabled=\"disabled\"],.dv-adresse__fieldset) select:not([disabled=\"disabled\"]),'\n            + 'fieldset:not([disabled=\"disabled\"],.dv-adresse__fieldset) md-checkbox:not([disabled=\"disabled\"]),'\n            + '#gesuchContainer button:not([disabled=\"disabled\"]),'\n            + '#gesuchContainer .dvb-loading-button button:not([disabled=\"disabled\"]),'\n            + '.dv-btn-row,'\n            + '#gesuchContainer button.link-underline:not([disabled=\"disabled\"]),'\n            + '.dv-dokumente-list a:not([disabled=\"disabled\"])').first();\n        if (tmp) {\n            var tmpAria = tmp.attr('aria-describedby') === undefined ? '' : tmp.attr('aria-describedby') + ' ';\n            var h2 = angular.element('h2:not(.access-for-all-title)').first();\n            var h2Id = h2.attr('id') === undefined ? 'aria-describe-form-h2' : h2.attr('id');\n            h2.attr('id', h2Id);\n            tmpAria += h2Id;\n            var h3 = angular.element('h3:not(.access-for-all-title)').first();\n            var h3Id = h3.attr('id') === undefined ? 'aria-describe-form-h3' : h3.attr('id');\n            h3.attr('id', h3Id);\n            tmpAria += ' ' + h3Id;\n            tmp.attr('aria-describedby', tmpAria);\n            if (tmp.prop('tagName') === 'MD-RADIO-BUTTON') {\n                tmp = tmp.parent().first();\n            }\n            tmp.focus();\n        }\n    };\n    EbeguUtil.selectFirstInvalid = function () {\n        var tmp = angular.element('md-radio-group.ng-invalid,'\n            + ' .ng-invalid>input,'\n            + 'input.ng-invalid,'\n            + 'textarea.ng-invalid,'\n            + 'select.ng-invalid,'\n            + 'md-checkbox.ng-invalid').first();\n        if (tmp) {\n            tmp.focus();\n        }\n    };\n    EbeguUtil.isNullOrUndefined = function (data) {\n        return data === null || data === undefined;\n    };\n    EbeguUtil.isNotNullOrUndefined = function (data) {\n        return !EbeguUtil.isNullOrUndefined(data);\n    };\n    EbeguUtil.prototype.replaceElementInList = function (element, list, wasNew) {\n        if (wasNew) {\n            list.push(element);\n        }\n        else {\n            var index = EbeguUtil.getIndexOfElementwithID(element, list);\n            if (index > -1) {\n                list[index] = element;\n                this.handleSmarttablesUpdateBug(list);\n            }\n        }\n    };\n    EbeguUtil.$inject = ['$filter', 'CONSTANTS', '$translate'];\n    return EbeguUtil;\n}());\nexports.default = EbeguUtil;\n",{"version":3,"file":"/home/imanol/projects/ebegu/ebegu-web/src/utils/EbeguUtil.ts","sourceRoot":"","sources":["/home/imanol/projects/ebegu/ebegu-web/src/utils/EbeguUtil.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Ki-Tax: System for the management of external childcare subsidies\n * Copyright (C) 2017 City of Bern Switzerland\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport TSGesuchsperiode from '../models/TSGesuchsperiode';\nimport {IFilterService} from 'angular';\nimport TSAbstractEntity from '../models/TSAbstractEntity';\nimport TSFall from '../models/TSFall';\nimport DateUtil from './DateUtil';\nimport {TSAntragTyp} from '../models/enums/TSAntragTyp';\nimport TSBetreuungsnummerParts from '../models/dto/TSBetreuungsnummerParts';\nimport * as moment from 'moment';\nimport TSGesuch from '../models/TSGesuch';\nimport ITranslateService = angular.translate.ITranslateService;\nimport Moment = moment.Moment;\nimport TSBetreuung from '../models/TSBetreuung';\n\n/**\n * Klasse die allgemeine utils Methoden implementiert\n */\nexport default class EbeguUtil {\n\n    static $inject = ['$filter', 'CONSTANTS', '$translate'];\n\n    /* @ngInject */\n    constructor(private $filter: IFilterService, private CONSTANTS: any, private $translate: ITranslateService) {\n    }\n\n    /**\n     * Returns the first day of the given Period in the format DD.MM.YYYY\n     * @param gesuchsperiode\n     * @returns {string}\n     */\n    public getFirstDayGesuchsperiodeAsString(gesuchsperiode: TSGesuchsperiode): string {\n        if (gesuchsperiode && gesuchsperiode.gueltigkeit && gesuchsperiode.gueltigkeit.gueltigAb) {\n            return DateUtil.momentToLocalDateFormat(gesuchsperiode.gueltigkeit.gueltigAb, 'DD.MM.YYYY');\n        }\n        return '';\n    }\n\n    public getAntragTextDateAsString(tsAntragTyp: TSAntragTyp, eingangsdatum: Moment, laufnummer: number): string {\n        if (tsAntragTyp) {\n            if (tsAntragTyp === TSAntragTyp.MUTATION && eingangsdatum) {\n                return this.$translate.instant('TOOLBAR_' + TSAntragTyp[tsAntragTyp], {\n                    nummer: laufnummer,\n                    date: eingangsdatum.format('DD.MM.YYYY')\n                });\n            }\n            return this.$translate.instant('TOOLBAR_' + TSAntragTyp[tsAntragTyp] + '_NO_DATE');\n        }\n        return '';\n    }\n\n    /**\n     * Takes the given Gesuchsperiode and returns a string with the format \"gueltigAb.year/gueltigBis.year\"\n     * @returns {any}\n     */\n    public getBasisJahrPlusAsString(gesuchsperiode: TSGesuchsperiode, plusJahr: number): string {\n        if (gesuchsperiode && gesuchsperiode.gueltigkeit) {\n            return String(gesuchsperiode.gueltigkeit.gueltigAb.year() + plusJahr);\n        }\n        return undefined;\n    }\n\n    /**\n     * Translates the given string using the angular-translate filter\n     * @param toTranslate word to translate\n     * @returns {any} translated word\n     */\n    public translateString(toTranslate: string): string {\n        return this.$filter('translate')(toTranslate).toString();\n    }\n\n    /**\n     * Translates the given list using the angular translate filter\n     * @param translationList list of words that will be translated\n     * @returns {any} A List of Objects with key and value, where value is the translated word.\n     */\n    public translateStringList(translationList: Array<any>): Array<any> {\n        let listResult: Array<any> = [];\n        translationList.forEach((item) => {\n            listResult.push({key: item, value: this.translateString(item)});\n        });\n        return listResult;\n    }\n\n    public addZerosToNumber(number: number, length: number): string {\n        return EbeguUtil.addZerosToNumber(number, length);\n    }\n\n    /**\n     * Die Methode fuegt 0s (links) hinzu bis die gegebene Nummer, die gegebene Laenge hat und dann gibt die nummer als string zurueck\n     * @param number\n     * @param length\n     * @returns {any}\n     */\n    public static addZerosToNumber(number: number, length: number): string {\n        if (number != null) {\n            let fallnummerString = '' + number;\n            while (fallnummerString.length < length) {\n                fallnummerString = '0' + fallnummerString;\n            }\n            return fallnummerString;\n        }\n        return undefined;\n    }\n\n    public static getIndexOfElementwithID(entityToSearch: TSAbstractEntity, listToSearchIn: Array<any>): number {\n        let idToSearch = entityToSearch.id;\n        for (let i = 0; i < listToSearchIn.length; i++) {\n            if (listToSearchIn[i].id === idToSearch) {\n                return i;\n            }\n        }\n        return -1;\n    }\n\n    /* bgNummer is also stored on betreuung when Betreuung is loaded from server! (Don't use this function if you load betreuung from server) */\n    public calculateBetreuungsId(gesuchsperiode: TSGesuchsperiode, fall: TSFall, kindContainerNumber: number, betreuungNumber: number): string {\n        let betreuungsId: string = '';\n        if (gesuchsperiode && fall) {\n            betreuungsId =\n                gesuchsperiode.gueltigkeit.gueltigAb.year().toString().substring(2)\n                + '.' + this.addZerosToNumber(fall.fallNummer, this.CONSTANTS.FALLNUMMER_LENGTH)\n                + '.' + kindContainerNumber\n                + '.' + betreuungNumber;\n        }\n        return betreuungsId;\n    }\n\n    /* bgNummer is also stored on betreuung when Betreuung is loaded from server! (Don't use this function if you load betreuung from server) */\n    public calculateBetreuungsIdFromBetreuung(fall: TSFall, betreuung: TSBetreuung): string {\n        let betreuungsId: string = '';\n        if (betreuung && fall) {\n            betreuungsId =\n                betreuung.gesuchsperiode.gueltigkeit.gueltigAb.year().toString().substring(2)\n                + '.' + this.addZerosToNumber(fall.fallNummer, this.CONSTANTS.FALLNUMMER_LENGTH)\n                + '.' + betreuung.kindNummer\n                + '.' + betreuung.betreuungNummer;\n        }\n        return betreuungsId;\n    }\n\n    /**\n     * hilfsmethode um die betreuungsnummer in ihre einzelteile zu zerlegen. gibt ein objekt zurueck welches die werte einzeln enthaelt\n     * @param betreuungsnummer im format JJ.Fallnr.kindnr.betrnr\n     */\n    public splitBetreuungsnummer(betreuungsnummer: string): TSBetreuungsnummerParts {\n        let parts: Array<string> = betreuungsnummer.split('.');\n        if (!parts || parts.length !== 4) {\n            return undefined;\n        }\n        return new TSBetreuungsnummerParts(parts[0], parts[1], parts[2], parts[3]);\n    }\n\n    public handleSmarttablesUpdateBug(aList: any[]) {\n        // Ugly Fix:\n        // Because of a bug in smarttables, the table will only be refreshed if the reverence or the first element\n        // changes in table. To resolve this bug, we overwrite the first element by a copy of itself.\n        aList[0] = angular.copy(aList[0]);\n    }\n\n    /**\n     * Erzeugt einen random String mit einer Laenge von numberOfCharacters\n     * @param numberOfCharacters\n     * @returns {string}\n     */\n    public static generateRandomName(numberOfCharacters: number): string {\n        let text = '';\n        let possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n\n        for (let i = 0; i < numberOfCharacters; i++) {\n            text += possible.charAt(Math.floor(Math.random() * possible.length));\n        }\n        return text;\n    }\n\n    /**\n     * Returns a string like \"fallID GesuchstellerName\". The name of the GS comes from the name of the\n     * first Gesuchsteller of the given Gesuch. This method should be used if possible instead of getGesuchNameFromFall\n     * because the name of the Gesuchsteller1 is suppoused to be more actual than the name of the owner.\n     */\n    public getGesuchNameFromGesuch(gesuch: TSGesuch): string {\n        let text = '';\n        if (gesuch) {\n            if (gesuch.fall) {\n                text = this.addZerosToNumber(gesuch.fall.fallNummer, this.CONSTANTS.FALLNUMMER_LENGTH);\n            }\n            if (gesuch.gesuchsteller1 && gesuch.gesuchsteller1.extractNachname()) {\n                text = text + ' ' + gesuch.gesuchsteller1.extractNachname();\n            }\n        }\n        return text;\n    }\n\n    /**\n     * Returns a string like \"fallID GesuchstellerName\". The name of the GS comes from the name of the\n     * owner of the given fall. Use this method instead of getGesuchNameFromGesuch only when there is no Gesuch but a fall\n     */\n    public getGesuchNameFromFall(fall: TSFall): string {\n        let text = '';\n        if (fall) {\n            text = this.addZerosToNumber(fall.fallNummer, this.CONSTANTS.FALLNUMMER_LENGTH);\n            if (fall.besitzer && fall.besitzer.getFullName()) {\n                text = text + ' ' + fall.besitzer.getFullName();\n            }\n        }\n        return text;\n    }\n\n    public static selectFirst(): void {\n        let tmp = angular.element('md-radio-button:not([disabled=\"disabled\"]),'\n            + 'fieldset:not([disabled=\"disabled\"],.dv-adresse__fieldset) input:not([disabled=\"disabled\"]),'\n            + 'fieldset:not([disabled=\"disabled\"],.dv-adresse__fieldset) textarea:not([disabled=\"disabled\"]),'\n            + 'fieldset:not([disabled=\"disabled\"],.dv-adresse__fieldset) select:not([disabled=\"disabled\"]),'\n            + 'fieldset:not([disabled=\"disabled\"],.dv-adresse__fieldset) md-checkbox:not([disabled=\"disabled\"]),'\n            + '#gesuchContainer button:not([disabled=\"disabled\"]),'\n            + '#gesuchContainer .dvb-loading-button button:not([disabled=\"disabled\"]),'\n            + '.dv-btn-row,'\n            + '#gesuchContainer button.link-underline:not([disabled=\"disabled\"]),'\n            + '.dv-dokumente-list a:not([disabled=\"disabled\"])').first();\n        if (tmp) {\n            let tmpAria = tmp.attr('aria-describedby') === undefined ? '' : tmp.attr('aria-describedby') + ' ';\n            let h2 = angular.element('h2:not(.access-for-all-title)').first();\n            let h2Id = h2.attr('id') === undefined ? 'aria-describe-form-h2' : h2.attr('id');\n            h2.attr('id', h2Id);\n            tmpAria += h2Id;\n            let h3 = angular.element('h3:not(.access-for-all-title)').first();\n            let h3Id = h3.attr('id') === undefined ? 'aria-describe-form-h3' : h3.attr('id');\n            h3.attr('id', h3Id);\n            tmpAria += ' ' + h3Id;\n            tmp.attr('aria-describedby', tmpAria);\n            if (tmp.prop('tagName') === 'MD-RADIO-BUTTON') {\n                tmp = tmp.parent().first();\n            }\n            tmp.focus();\n        }\n    }\n\n    public static selectFirstInvalid(): void {\n        let tmp: any = angular.element('md-radio-group.ng-invalid,'\n            + ' .ng-invalid>input,'\n            + 'input.ng-invalid,'\n            + 'textarea.ng-invalid,'\n            + 'select.ng-invalid,'\n            + 'md-checkbox.ng-invalid').first();\n        if (tmp) {\n            tmp.focus();\n        }\n    }\n\n    public static isNullOrUndefined(data: any): boolean {\n        return data === null || data === undefined;\n    }\n\n    public static isNotNullOrUndefined(data: any): boolean {\n        return !EbeguUtil.isNullOrUndefined(data);\n    }\n\n    public replaceElementInList(element: TSAbstractEntity, list: TSAbstractEntity[], wasNew: boolean) {\n        if (wasNew) {\n            list.push(element);\n        } else {\n            let index = EbeguUtil.getIndexOfElementwithID(element, list);\n            if (index > -1) {\n                list[index] = element;\n                this.handleSmarttablesUpdateBug(list);\n            }\n        }\n    }\n}\n"]}]}