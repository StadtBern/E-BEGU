{"remainingRequest":"/home/imanol/projects/ebegu/ebegu-web/node_modules/thread-loader/dist/cjs.js??ref--0-1!/home/imanol/projects/ebegu/ebegu-web/node_modules/ts-loader/index.js??ref--0-2!/home/imanol/projects/ebegu/ebegu-web/src/utils/EbeguUtil.ts","cacheIdentifier":"cache-loader:1.1.0 test","dependencies":[{"path":"/home/imanol/projects/ebegu/ebegu-web/src/utils/EbeguUtil.ts","mtime":1518535855240},{"path":"/home/imanol/projects/ebegu/ebegu-web/node_modules/cache-loader/dist/cjs.js","mtime":1507514019000},{"path":"/home/imanol/projects/ebegu/ebegu-web/node_modules/thread-loader/dist/cjs.js","mtime":1507523420000},{"path":"/home/imanol/projects/ebegu/ebegu-web/node_modules/ts-loader/index.js","mtime":1508488471000}],"contextDependencies":[],"result":["/*\n * Ki-Tax: System for the management of external childcare subsidies\n * Copyright (C) 2017 City of Bern Switzerland\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\ndefine([\"require\", \"exports\", \"./DateUtil\", \"../models/enums/TSAntragTyp\", \"../models/dto/TSBetreuungsnummerParts\"], function (require, exports, DateUtil_1, TSAntragTyp_1, TSBetreuungsnummerParts_1) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    /**\n     * Klasse die allgemeine utils Methoden implementiert\n     */\n    var EbeguUtil = /** @class */ (function () {\n        /* @ngInject */\n        function EbeguUtil($filter, CONSTANTS, $translate) {\n            this.$filter = $filter;\n            this.CONSTANTS = CONSTANTS;\n            this.$translate = $translate;\n        }\n        /**\n         * Returns the first day of the given Period in the format DD.MM.YYYY\n         * @param gesuchsperiode\n         * @returns {string}\n         */\n        EbeguUtil.prototype.getFirstDayGesuchsperiodeAsString = function (gesuchsperiode) {\n            if (gesuchsperiode && gesuchsperiode.gueltigkeit && gesuchsperiode.gueltigkeit.gueltigAb) {\n                return DateUtil_1.default.momentToLocalDateFormat(gesuchsperiode.gueltigkeit.gueltigAb, 'DD.MM.YYYY');\n            }\n            return '';\n        };\n        EbeguUtil.prototype.getAntragTextDateAsString = function (tsAntragTyp, eingangsdatum, laufnummer) {\n            if (tsAntragTyp) {\n                if (tsAntragTyp === TSAntragTyp_1.TSAntragTyp.MUTATION && eingangsdatum) {\n                    return this.$translate.instant('TOOLBAR_' + TSAntragTyp_1.TSAntragTyp[tsAntragTyp], {\n                        nummer: laufnummer,\n                        date: eingangsdatum.format('DD.MM.YYYY')\n                    });\n                }\n                return this.$translate.instant('TOOLBAR_' + TSAntragTyp_1.TSAntragTyp[tsAntragTyp] + '_NO_DATE');\n            }\n            return '';\n        };\n        /**\n         * Takes the given Gesuchsperiode and returns a string with the format \"gueltigAb.year/gueltigBis.year\"\n         * @returns {any}\n         */\n        EbeguUtil.prototype.getBasisJahrPlusAsString = function (gesuchsperiode, plusJahr) {\n            if (gesuchsperiode && gesuchsperiode.gueltigkeit) {\n                return String(gesuchsperiode.gueltigkeit.gueltigAb.year() + plusJahr);\n            }\n            return undefined;\n        };\n        /**\n         * Translates the given string using the angular-translate filter\n         * @param toTranslate word to translate\n         * @returns {any} translated word\n         */\n        EbeguUtil.prototype.translateString = function (toTranslate) {\n            return this.$filter('translate')(toTranslate).toString();\n        };\n        /**\n         * Translates the given list using the angular translate filter\n         * @param translationList list of words that will be translated\n         * @returns {any} A List of Objects with key and value, where value is the translated word.\n         */\n        EbeguUtil.prototype.translateStringList = function (translationList) {\n            var _this = this;\n            var listResult = [];\n            translationList.forEach(function (item) {\n                listResult.push({ key: item, value: _this.translateString(item) });\n            });\n            return listResult;\n        };\n        EbeguUtil.prototype.addZerosToNumber = function (number, length) {\n            return EbeguUtil.addZerosToNumber(number, length);\n        };\n        /**\n         * Die Methode fuegt 0s (links) hinzu bis die gegebene Nummer, die gegebene Laenge hat und dann gibt die nummer als string zurueck\n         * @param number\n         * @param length\n         * @returns {any}\n         */\n        EbeguUtil.addZerosToNumber = function (number, length) {\n            if (number != null) {\n                var fallnummerString = '' + number;\n                while (fallnummerString.length < length) {\n                    fallnummerString = '0' + fallnummerString;\n                }\n                return fallnummerString;\n            }\n            return undefined;\n        };\n        EbeguUtil.getIndexOfElementwithID = function (entityToSearch, listToSearchIn) {\n            var idToSearch = entityToSearch.id;\n            for (var i = 0; i < listToSearchIn.length; i++) {\n                if (listToSearchIn[i].id === idToSearch) {\n                    return i;\n                }\n            }\n            return -1;\n        };\n        EbeguUtil.prototype.calculateBetreuungsId = function (gesuchsperiode, fall, kindContainerNumber, betreuungNumber) {\n            var betreuungsId = '';\n            if (gesuchsperiode && fall) {\n                betreuungsId =\n                    gesuchsperiode.gueltigkeit.gueltigAb.year().toString().substring(2)\n                        + '.' + this.addZerosToNumber(fall.fallNummer, this.CONSTANTS.FALLNUMMER_LENGTH)\n                        + '.' + kindContainerNumber\n                        + '.' + betreuungNumber;\n            }\n            return betreuungsId;\n        };\n        /**\n         * hilfsmethode um die betreuungsnummer in ihre einzelteile zu zerlegen. gibt ein objekt zurueck welches die werte einzeln enthaelt\n         * @param betreuungsnummer im format JJ.Fallnr.kindnr.betrnr\n         */\n        EbeguUtil.prototype.splitBetreuungsnummer = function (betreuungsnummer) {\n            var parts = betreuungsnummer.split('.');\n            if (!parts || parts.length !== 4) {\n                return undefined;\n            }\n            return new TSBetreuungsnummerParts_1.default(parts[0], parts[1], parts[2], parts[3]);\n        };\n        EbeguUtil.prototype.handleSmarttablesUpdateBug = function (aList) {\n            // Ugly Fix:\n            // Because of a bug in smarttables, the table will only be refreshed if the reverence or the first element\n            // changes in table. To resolve this bug, we overwrite the first element by a copy of itself.\n            aList[0] = angular.copy(aList[0]);\n        };\n        /**\n         * Erzeugt einen random String mit einer Laenge von numberOfCharacters\n         * @param numberOfCharacters\n         * @returns {string}\n         */\n        EbeguUtil.generateRandomName = function (numberOfCharacters) {\n            var text = '';\n            var possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n            for (var i = 0; i < numberOfCharacters; i++) {\n                text += possible.charAt(Math.floor(Math.random() * possible.length));\n            }\n            return text;\n        };\n        /**\n         * Returns a string like \"fallID GesuchstellerName\". The name of the GS comes from the name of the\n         * first Gesuchsteller of the given Gesuch. This method should be used if possible instead of getGesuchNameFromFall\n         * because the name of the Gesuchsteller1 is suppoused to be more actual than the name of the owner.\n         */\n        EbeguUtil.prototype.getGesuchNameFromGesuch = function (gesuch) {\n            var text = '';\n            if (gesuch) {\n                if (gesuch.fall) {\n                    text = this.addZerosToNumber(gesuch.fall.fallNummer, this.CONSTANTS.FALLNUMMER_LENGTH);\n                }\n                if (gesuch.gesuchsteller1 && gesuch.gesuchsteller1.extractNachname()) {\n                    text = text + ' ' + gesuch.gesuchsteller1.extractNachname();\n                }\n            }\n            return text;\n        };\n        /**\n         * Returns a string like \"fallID GesuchstellerName\". The name of the GS comes from the name of the\n         * owner of the given fall. Use this method instead of getGesuchNameFromGesuch only when there is no Gesuch but a fall\n         */\n        EbeguUtil.prototype.getGesuchNameFromFall = function (fall) {\n            var text = '';\n            if (fall) {\n                text = this.addZerosToNumber(fall.fallNummer, this.CONSTANTS.FALLNUMMER_LENGTH);\n                if (fall.besitzer && fall.besitzer.getFullName()) {\n                    text = text + ' ' + fall.besitzer.getFullName();\n                }\n            }\n            return text;\n        };\n        EbeguUtil.selectFirst = function () {\n            var tmp = angular.element('md-radio-button:not([disabled=\"disabled\"]),'\n                + 'fieldset:not([disabled=\"disabled\"],.dv-adresse__fieldset) input:not([disabled=\"disabled\"]),'\n                + 'fieldset:not([disabled=\"disabled\"],.dv-adresse__fieldset) textarea:not([disabled=\"disabled\"]),'\n                + 'fieldset:not([disabled=\"disabled\"],.dv-adresse__fieldset) select:not([disabled=\"disabled\"]),'\n                + 'fieldset:not([disabled=\"disabled\"],.dv-adresse__fieldset) md-checkbox:not([disabled=\"disabled\"]),'\n                + '#gesuchContainer button:not([disabled=\"disabled\"]),'\n                + '#gesuchContainer .dvb-loading-button button:not([disabled=\"disabled\"]),'\n                + '.dv-btn-row,'\n                + '#gesuchContainer button.link-underline:not([disabled=\"disabled\"]),'\n                + '.dv-dokumente-list a:not([disabled=\"disabled\"])').first();\n            if (tmp) {\n                var tmpAria = tmp.attr('aria-describedby') === undefined ? '' : tmp.attr('aria-describedby') + ' ';\n                var h2 = angular.element('h2:not(.access-for-all-title)').first();\n                var h2Id = h2.attr('id') === undefined ? 'aria-describe-form-h2' : h2.attr('id');\n                h2.attr('id', h2Id);\n                tmpAria += h2Id;\n                var h3 = angular.element('h3:not(.access-for-all-title)').first();\n                var h3Id = h3.attr('id') === undefined ? 'aria-describe-form-h3' : h3.attr('id');\n                h3.attr('id', h3Id);\n                tmpAria += ' ' + h3Id;\n                tmp.attr('aria-describedby', tmpAria);\n                if (tmp.prop('tagName') === 'MD-RADIO-BUTTON') {\n                    tmp = tmp.parent().first();\n                }\n                tmp.focus();\n            }\n        };\n        EbeguUtil.selectFirstInvalid = function () {\n            var tmp = angular.element('md-radio-group.ng-invalid,'\n                + ' .ng-invalid>input,'\n                + 'input.ng-invalid,'\n                + 'textarea.ng-invalid,'\n                + 'select.ng-invalid,'\n                + 'md-checkbox.ng-invalid').first();\n            if (tmp) {\n                tmp.focus();\n            }\n        };\n        EbeguUtil.$inject = ['$filter', 'CONSTANTS', '$translate'];\n        return EbeguUtil;\n    }());\n    exports.default = EbeguUtil;\n});\n",{"version":3,"file":"/home/imanol/projects/ebegu/ebegu-web/src/utils/EbeguUtil.ts","sourceRoot":"","sources":["/home/imanol/projects/ebegu/ebegu-web/src/utils/EbeguUtil.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Ki-Tax: System for the management of external childcare subsidies\n * Copyright (C) 2017 City of Bern Switzerland\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport TSGesuchsperiode from '../models/TSGesuchsperiode';\nimport {IFilterService} from 'angular';\nimport TSAbstractEntity from '../models/TSAbstractEntity';\nimport TSFall from '../models/TSFall';\nimport DateUtil from './DateUtil';\nimport {TSAntragTyp} from '../models/enums/TSAntragTyp';\nimport TSBetreuungsnummerParts from '../models/dto/TSBetreuungsnummerParts';\nimport * as moment from 'moment';\nimport TSGesuch from '../models/TSGesuch';\nimport ITranslateService = angular.translate.ITranslateService;\nimport Moment = moment.Moment;\n\n/**\n * Klasse die allgemeine utils Methoden implementiert\n */\nexport default class EbeguUtil {\n\n    static $inject = ['$filter', 'CONSTANTS', '$translate'];\n\n    /* @ngInject */\n    constructor(private $filter: IFilterService, private CONSTANTS: any, private $translate: ITranslateService) {\n    }\n\n    /**\n     * Returns the first day of the given Period in the format DD.MM.YYYY\n     * @param gesuchsperiode\n     * @returns {string}\n     */\n    public getFirstDayGesuchsperiodeAsString(gesuchsperiode: TSGesuchsperiode): string {\n        if (gesuchsperiode && gesuchsperiode.gueltigkeit && gesuchsperiode.gueltigkeit.gueltigAb) {\n            return DateUtil.momentToLocalDateFormat(gesuchsperiode.gueltigkeit.gueltigAb, 'DD.MM.YYYY');\n        }\n        return '';\n    }\n\n    public getAntragTextDateAsString(tsAntragTyp: TSAntragTyp, eingangsdatum: Moment, laufnummer: number): string {\n        if (tsAntragTyp) {\n            if (tsAntragTyp === TSAntragTyp.MUTATION && eingangsdatum) {\n                return this.$translate.instant('TOOLBAR_' + TSAntragTyp[tsAntragTyp], {\n                    nummer: laufnummer,\n                    date: eingangsdatum.format('DD.MM.YYYY')\n                });\n            }\n            return this.$translate.instant('TOOLBAR_' + TSAntragTyp[tsAntragTyp] + '_NO_DATE');\n        }\n        return '';\n    }\n\n    /**\n     * Takes the given Gesuchsperiode and returns a string with the format \"gueltigAb.year/gueltigBis.year\"\n     * @returns {any}\n     */\n    public getBasisJahrPlusAsString(gesuchsperiode: TSGesuchsperiode, plusJahr: number): string {\n        if (gesuchsperiode && gesuchsperiode.gueltigkeit) {\n            return String(gesuchsperiode.gueltigkeit.gueltigAb.year() + plusJahr);\n        }\n        return undefined;\n    }\n\n    /**\n     * Translates the given string using the angular-translate filter\n     * @param toTranslate word to translate\n     * @returns {any} translated word\n     */\n    public translateString(toTranslate: string): string {\n        return this.$filter('translate')(toTranslate).toString();\n    }\n\n    /**\n     * Translates the given list using the angular translate filter\n     * @param translationList list of words that will be translated\n     * @returns {any} A List of Objects with key and value, where value is the translated word.\n     */\n    public translateStringList(translationList: Array<any>): Array<any> {\n        let listResult: Array<any> = [];\n        translationList.forEach((item) => {\n            listResult.push({key: item, value: this.translateString(item)});\n        });\n        return listResult;\n    }\n\n    public addZerosToNumber(number: number, length: number): string {\n        return EbeguUtil.addZerosToNumber(number, length);\n    }\n\n    /**\n     * Die Methode fuegt 0s (links) hinzu bis die gegebene Nummer, die gegebene Laenge hat und dann gibt die nummer als string zurueck\n     * @param number\n     * @param length\n     * @returns {any}\n     */\n    public static addZerosToNumber(number: number, length: number): string {\n        if (number != null) {\n            let fallnummerString = '' + number;\n            while (fallnummerString.length < length) {\n                fallnummerString = '0' + fallnummerString;\n            }\n            return fallnummerString;\n        }\n        return undefined;\n    }\n\n    public static getIndexOfElementwithID(entityToSearch: TSAbstractEntity, listToSearchIn: Array<any>): number {\n        let idToSearch = entityToSearch.id;\n        for (let i = 0; i < listToSearchIn.length; i++) {\n            if (listToSearchIn[i].id === idToSearch) {\n                return i;\n            }\n        }\n        return -1;\n    }\n\n    public calculateBetreuungsId(gesuchsperiode: TSGesuchsperiode, fall: TSFall, kindContainerNumber: number, betreuungNumber: number): string {\n        let betreuungsId: string = '';\n        if (gesuchsperiode && fall) {\n            betreuungsId =\n                gesuchsperiode.gueltigkeit.gueltigAb.year().toString().substring(2)\n                + '.' + this.addZerosToNumber(fall.fallNummer, this.CONSTANTS.FALLNUMMER_LENGTH)\n                + '.' + kindContainerNumber\n                + '.' + betreuungNumber;\n        }\n        return betreuungsId;\n    }\n\n    /**\n     * hilfsmethode um die betreuungsnummer in ihre einzelteile zu zerlegen. gibt ein objekt zurueck welches die werte einzeln enthaelt\n     * @param betreuungsnummer im format JJ.Fallnr.kindnr.betrnr\n     */\n    public splitBetreuungsnummer(betreuungsnummer: string): TSBetreuungsnummerParts {\n        let parts: Array<string> = betreuungsnummer.split('.');\n        if (!parts || parts.length !== 4) {\n            return undefined;\n        }\n        return new TSBetreuungsnummerParts(parts[0], parts[1], parts[2], parts[3]);\n    }\n\n    public handleSmarttablesUpdateBug(aList: any[]) {\n        // Ugly Fix:\n        // Because of a bug in smarttables, the table will only be refreshed if the reverence or the first element\n        // changes in table. To resolve this bug, we overwrite the first element by a copy of itself.\n        aList[0] = angular.copy(aList[0]);\n    }\n\n    /**\n     * Erzeugt einen random String mit einer Laenge von numberOfCharacters\n     * @param numberOfCharacters\n     * @returns {string}\n     */\n    public static generateRandomName(numberOfCharacters: number): string {\n        let text = '';\n        let possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n\n        for (let i = 0; i < numberOfCharacters; i++) {\n            text += possible.charAt(Math.floor(Math.random() * possible.length));\n        }\n        return text;\n    }\n\n    /**\n     * Returns a string like \"fallID GesuchstellerName\". The name of the GS comes from the name of the\n     * first Gesuchsteller of the given Gesuch. This method should be used if possible instead of getGesuchNameFromFall\n     * because the name of the Gesuchsteller1 is suppoused to be more actual than the name of the owner.\n     */\n    public getGesuchNameFromGesuch(gesuch: TSGesuch): string {\n        let text = '';\n        if (gesuch) {\n            if (gesuch.fall) {\n                text = this.addZerosToNumber(gesuch.fall.fallNummer, this.CONSTANTS.FALLNUMMER_LENGTH);\n            }\n            if (gesuch.gesuchsteller1 && gesuch.gesuchsteller1.extractNachname()) {\n                text = text + ' ' + gesuch.gesuchsteller1.extractNachname();\n            }\n        }\n        return text;\n    }\n\n    /**\n     * Returns a string like \"fallID GesuchstellerName\". The name of the GS comes from the name of the\n     * owner of the given fall. Use this method instead of getGesuchNameFromGesuch only when there is no Gesuch but a fall\n     */\n    public getGesuchNameFromFall(fall: TSFall): string {\n        let text = '';\n        if (fall) {\n            text = this.addZerosToNumber(fall.fallNummer, this.CONSTANTS.FALLNUMMER_LENGTH);\n            if (fall.besitzer && fall.besitzer.getFullName()) {\n                text = text + ' ' + fall.besitzer.getFullName();\n            }\n        }\n        return text;\n    }\n\n    public static selectFirst(): void {\n        let tmp = angular.element('md-radio-button:not([disabled=\"disabled\"]),'\n            + 'fieldset:not([disabled=\"disabled\"],.dv-adresse__fieldset) input:not([disabled=\"disabled\"]),'\n            + 'fieldset:not([disabled=\"disabled\"],.dv-adresse__fieldset) textarea:not([disabled=\"disabled\"]),'\n            + 'fieldset:not([disabled=\"disabled\"],.dv-adresse__fieldset) select:not([disabled=\"disabled\"]),'\n            + 'fieldset:not([disabled=\"disabled\"],.dv-adresse__fieldset) md-checkbox:not([disabled=\"disabled\"]),'\n            + '#gesuchContainer button:not([disabled=\"disabled\"]),'\n            + '#gesuchContainer .dvb-loading-button button:not([disabled=\"disabled\"]),'\n            + '.dv-btn-row,'\n            + '#gesuchContainer button.link-underline:not([disabled=\"disabled\"]),'\n            + '.dv-dokumente-list a:not([disabled=\"disabled\"])').first();\n        if (tmp) {\n            let tmpAria = tmp.attr('aria-describedby') === undefined ? '' : tmp.attr('aria-describedby') + ' ';\n            let h2 = angular.element('h2:not(.access-for-all-title)').first();\n            let h2Id = h2.attr('id') === undefined ? 'aria-describe-form-h2' : h2.attr('id');\n            h2.attr('id', h2Id);\n            tmpAria += h2Id;\n            let h3 = angular.element('h3:not(.access-for-all-title)').first();\n            let h3Id = h3.attr('id') === undefined ? 'aria-describe-form-h3' : h3.attr('id');\n            h3.attr('id', h3Id);\n            tmpAria += ' ' + h3Id;\n            tmp.attr('aria-describedby', tmpAria);\n            if (tmp.prop('tagName') === 'MD-RADIO-BUTTON') {\n                tmp = tmp.parent().first();\n            }\n            tmp.focus();\n        }\n    }\n\n    public static selectFirstInvalid(): void {\n        let tmp: any = angular.element('md-radio-group.ng-invalid,'\n            + ' .ng-invalid>input,'\n            + 'input.ng-invalid,'\n            + 'textarea.ng-invalid,'\n            + 'select.ng-invalid,'\n            + 'md-checkbox.ng-invalid').first();\n        if (tmp) {\n            tmp.focus();\n        }\n    }\n\n}\n"]}]}