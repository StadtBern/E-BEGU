{"remainingRequest":"/home/imanol/projects/ebegu/ebegu-web/node_modules/thread-loader/dist/cjs.js??ref--0-1!/home/imanol/projects/ebegu/ebegu-web/node_modules/ts-loader/index.js??ref--0-2!/home/imanol/projects/ebegu/ebegu-web/src/gesuch/service/searchRS.rest.ts","cacheIdentifier":"cache-loader:1.1.0 test","dependencies":[{"path":"/home/imanol/projects/ebegu/ebegu-web/src/gesuch/service/searchRS.rest.ts","mtime":1518003987704},{"path":"/home/imanol/projects/ebegu/ebegu-web/node_modules/cache-loader/dist/cjs.js","mtime":1507514019000},{"path":"/home/imanol/projects/ebegu/ebegu-web/node_modules/thread-loader/dist/cjs.js","mtime":1507523420000},{"path":"/home/imanol/projects/ebegu/ebegu-web/node_modules/ts-loader/index.js","mtime":1508488471000}],"contextDependencies":[],"result":["\"use strict\";\n/*\n * Ki-Tax: System for the management of external childcare subsidies\n * Copyright (C) 2017 City of Bern Switzerland\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar TSAntragSearchresultDTO_1 = require(\"../../models/TSAntragSearchresultDTO\");\nvar SearchRS = /** @class */ (function () {\n    /* @ngInject */\n    function SearchRS($http, REST_API, ebeguRestUtil, $log) {\n        this.$log = $log;\n        this.serviceURL = REST_API + 'search';\n        this.http = $http;\n        this.ebeguRestUtil = ebeguRestUtil;\n    }\n    SearchRS.prototype.getServiceName = function () {\n        return 'SearchRS';\n    };\n    SearchRS.prototype.searchAntraege = function (antragSearch) {\n        var _this = this;\n        return this.http.post(this.serviceURL + '/search/', antragSearch, {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }).then(function (response) {\n            _this.$log.debug('PARSING antraege REST array object', response.data);\n            return new TSAntragSearchresultDTO_1.default(_this.ebeguRestUtil.parseAntragDTOs(response.data.antragDTOs), response.data.paginationDTO.totalItemCount);\n        });\n    };\n    SearchRS.prototype.getPendenzenList = function (antragSearch) {\n        var _this = this;\n        return this.http.post(this.serviceURL + '/jugendamt/', antragSearch, {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }).then(function (response) {\n            _this.$log.debug('PARSING antraege REST array object', response.data);\n            return new TSAntragSearchresultDTO_1.default(_this.ebeguRestUtil.parseAntragDTOs(response.data.antragDTOs), response.data.paginationDTO.totalItemCount);\n        });\n    };\n    SearchRS.prototype.getPendenzenListForUser = function (userId) {\n        var _this = this;\n        return this.http.get(this.serviceURL + '/jugendamt/user/' + encodeURIComponent(userId))\n            .then(function (response) {\n            _this.$log.debug('PARSING pendenz REST object ', response.data);\n            return _this.ebeguRestUtil.parseAntragDTOs(response.data);\n        });\n    };\n    SearchRS.prototype.getAntraegeGesuchstellerList = function () {\n        var _this = this;\n        return this.http.get(this.serviceURL + '/gesuchsteller')\n            .then(function (response) {\n            _this.$log.debug('PARSING pendenz REST object ', response.data);\n            return _this.ebeguRestUtil.parseAntragDTOs(response.data);\n        });\n    };\n    SearchRS.$inject = ['$http', 'REST_API', 'EbeguRestUtil', '$log'];\n    return SearchRS;\n}());\nexports.default = SearchRS;\n",{"version":3,"file":"/home/imanol/projects/ebegu/ebegu-web/src/gesuch/service/searchRS.rest.ts","sourceRoot":"","sources":["/home/imanol/projects/ebegu/ebegu-web/src/gesuch/service/searchRS.rest.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;GAaG;;AAIH,gFAA2E;AAI3E;IAMI,eAAe;IACf,kBAAY,KAAmB,EAAE,QAAgB,EAAE,aAA4B,EAAU,IAAiB;QAAjB,SAAI,GAAJ,IAAI,CAAa;QACtG,IAAI,CAAC,UAAU,GAAG,QAAQ,GAAG,QAAQ,CAAC;QACtC,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;QAClB,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;IACvC,CAAC;IAEM,iCAAc,GAArB;QACI,MAAM,CAAC,UAAU,CAAC;IACtB,CAAC;IAGM,iCAAc,GAArB,UAAsB,YAAiB;QAAvC,iBASC;QARG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,GAAG,UAAU,EAAE,YAAY,EAAE;YAC9D,OAAO,EAAE;gBACL,cAAc,EAAE,kBAAkB;aACrC;SACJ,CAAC,CAAC,IAAI,CAAC,UAAC,QAAa;YAClB,KAAI,CAAC,IAAI,CAAC,KAAK,CAAC,oCAAoC,EAAE,QAAQ,CAAC,IAAI,CAAC,CAAC;YACrE,MAAM,CAAC,IAAI,iCAAuB,CAAC,KAAI,CAAC,aAAa,CAAC,eAAe,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,QAAQ,CAAC,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,CAAC;QACjJ,CAAC,CAAC,CAAC;IACP,CAAC;IAEM,mCAAgB,GAAvB,UAAwB,YAAiB;QAAzC,iBASC;QARG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,GAAG,aAAa,EAAE,YAAY,EAAE;YACjE,OAAO,EAAE;gBACL,cAAc,EAAE,kBAAkB;aACrC;SACJ,CAAC,CAAC,IAAI,CAAC,UAAC,QAAa;YAClB,KAAI,CAAC,IAAI,CAAC,KAAK,CAAC,oCAAoC,EAAE,QAAQ,CAAC,IAAI,CAAC,CAAC;YACrE,MAAM,CAAC,IAAI,iCAAuB,CAAC,KAAI,CAAC,aAAa,CAAC,eAAe,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,QAAQ,CAAC,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,CAAC;QACjJ,CAAC,CAAC,CAAC;IACP,CAAC;IAEM,0CAAuB,GAA9B,UAA+B,MAAc;QAA7C,iBAMC;QALG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,GAAG,kBAAkB,GAAG,kBAAkB,CAAC,MAAM,CAAC,CAAC;aAClF,IAAI,CAAC,UAAC,QAAa;YAChB,KAAI,CAAC,IAAI,CAAC,KAAK,CAAC,8BAA8B,EAAE,QAAQ,CAAC,IAAI,CAAC,CAAC;YAC/D,MAAM,CAAC,KAAI,CAAC,aAAa,CAAC,eAAe,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;QAC7D,CAAC,CAAC,CAAC;IACX,CAAC;IAEM,+CAA4B,GAAnC;QAAA,iBAMC;QALG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,GAAG,gBAAgB,CAAC;aACnD,IAAI,CAAC,UAAC,QAAa;YAChB,KAAI,CAAC,IAAI,CAAC,KAAK,CAAC,8BAA8B,EAAE,QAAQ,CAAC,IAAI,CAAC,CAAC;YAC/D,MAAM,CAAC,KAAI,CAAC,aAAa,CAAC,eAAe,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;QAC7D,CAAC,CAAC,CAAC;IACX,CAAC;IAjDM,gBAAO,GAAG,CAAC,OAAO,EAAE,UAAU,EAAE,eAAe,EAAE,MAAM,CAAC,CAAC;IAkDpE,eAAC;CAAA,AAvDD,IAuDC;kBAvDoB,QAAQ","sourcesContent":["/*\n * Ki-Tax: System for the management of external childcare subsidies\n * Copyright (C) 2017 City of Bern Switzerland\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport {IHttpService, ILogService, IPromise} from 'angular';\nimport {IEntityRS} from '../../core/service/iEntityRS.rest';\nimport TSAntragSearchresultDTO from '../../models/TSAntragSearchresultDTO';\nimport EbeguRestUtil from '../../utils/EbeguRestUtil';\nimport TSAntragDTO from '../../models/TSAntragDTO';\n\nexport default class SearchRS implements IEntityRS {\n    serviceURL: string;\n    http: IHttpService;\n    ebeguRestUtil: EbeguRestUtil;\n\n    static $inject = ['$http', 'REST_API', 'EbeguRestUtil', '$log'];\n    /* @ngInject */\n    constructor($http: IHttpService, REST_API: string, ebeguRestUtil: EbeguRestUtil, private $log: ILogService) {\n        this.serviceURL = REST_API + 'search';\n        this.http = $http;\n        this.ebeguRestUtil = ebeguRestUtil;\n    }\n\n    public getServiceName(): string {\n        return 'SearchRS';\n    }\n\n\n    public searchAntraege(antragSearch: any): IPromise<TSAntragSearchresultDTO> {\n        return this.http.post(this.serviceURL + '/search/', antragSearch, {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }).then((response: any) => {\n            this.$log.debug('PARSING antraege REST array object', response.data);\n            return new TSAntragSearchresultDTO(this.ebeguRestUtil.parseAntragDTOs(response.data.antragDTOs), response.data.paginationDTO.totalItemCount);\n        });\n    }\n\n    public getPendenzenList(antragSearch: any): IPromise<TSAntragSearchresultDTO> {\n        return this.http.post(this.serviceURL + '/jugendamt/', antragSearch, {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }).then((response: any) => {\n            this.$log.debug('PARSING antraege REST array object', response.data);\n            return new TSAntragSearchresultDTO(this.ebeguRestUtil.parseAntragDTOs(response.data.antragDTOs), response.data.paginationDTO.totalItemCount);\n        });\n    }\n\n    public getPendenzenListForUser(userId: string): IPromise<Array<TSAntragDTO>> {\n        return this.http.get(this.serviceURL + '/jugendamt/user/' + encodeURIComponent(userId))\n            .then((response: any) => {\n                this.$log.debug('PARSING pendenz REST object ', response.data);\n                return this.ebeguRestUtil.parseAntragDTOs(response.data);\n            });\n    }\n\n    public getAntraegeGesuchstellerList(): IPromise<Array<TSAntragDTO>> {\n        return this.http.get(this.serviceURL + '/gesuchsteller')\n            .then((response: any) => {\n                this.$log.debug('PARSING pendenz REST object ', response.data);\n                return this.ebeguRestUtil.parseAntragDTOs(response.data);\n            });\n    }\n}\n"]}]}