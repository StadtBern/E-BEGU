{"remainingRequest":"/home/imanol/projects/ebegu/ebegu-web/node_modules/thread-loader/dist/cjs.js??ref--0-1!/home/imanol/projects/ebegu/ebegu-web/node_modules/ts-loader/index.js??ref--0-2!/home/imanol/projects/ebegu/ebegu-web/src/utils/DateUtil.ts","cacheIdentifier":"cache-loader:1.1.0 test","dependencies":[{"path":"/home/imanol/projects/ebegu/ebegu-web/src/utils/DateUtil.ts","mtime":1512484412031},{"path":"/home/imanol/projects/ebegu/ebegu-web/node_modules/cache-loader/dist/cjs.js","mtime":1507514019000},{"path":"/home/imanol/projects/ebegu/ebegu-web/node_modules/thread-loader/dist/cjs.js","mtime":1507523420000},{"path":"/home/imanol/projects/ebegu/ebegu-web/node_modules/ts-loader/index.js","mtime":1508488471000}],"contextDependencies":[],"result":["\"use strict\";\n/*\n * Ki-Tax: System for the management of external childcare subsidies\n * Copyright (C) 2017 City of Bern Switzerland\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar moment = require(\"moment\");\nvar DateUtil = /** @class */ (function () {\n    function DateUtil() {\n    }\n    /**\n     * @param {string} localDateTimeString string with format YYYY-MM-DDTHH:mm:ss.SSS\n     * @returns {?Moment}\n     */\n    DateUtil.localDateTimeToMoment = function (localDateTimeString) {\n        var theMoment = moment(localDateTimeString, ['YYYY-MM-DDTHH:mm:ss.SSS', 'YYYY-MM-DDTHH:mm:ss', 'YYYY-MM-DDTHH:mm:ss.SSSZ'], true);\n        return theMoment.isValid() ? theMoment : undefined;\n    };\n    /**\n     * Calls momentToLocalDateFormat with the format by default 'YYYY-MM-DD'\n     * @param aMoment\n     * @returns {string}\n     */\n    DateUtil.momentToLocalDate = function (aMoment) {\n        return DateUtil.momentToLocalDateFormat(aMoment, 'YYYY-MM-DD');\n    };\n    /**\n     * @param {Moment} aMoment time instance\n     * @param {string} format the format\n     * @returns {?string} a Date (YYYY-MM-DD) representation of the given moment. NULL when aMoment is invalid\n     */\n    DateUtil.momentToLocalDateFormat = function (aMoment, format) {\n        if (!aMoment) {\n            return undefined;\n        }\n        return moment(aMoment).startOf('day').format(format);\n    };\n    /**\n     * @param {Moment} aMoment time instance\n     * @param format format for the time\n     * @returns {?string} a Date (YYYY-MM-DD) representation of the given moment. undefined when aMoment is invalid\n     */\n    DateUtil.momentToLocalDateTimeFormat = function (aMoment, format) {\n        if (!aMoment) {\n            return undefined;\n        }\n        return moment(aMoment).format(format);\n    };\n    /**\n     * @param {Moment} aMoment time instance\n     * @returns {?string} a Date (YYYY-MM-DD) representation of the given moment. NULL when aMoment is invalid\n     */\n    DateUtil.momentToLocalDateTime = function (aMoment) {\n        return DateUtil.momentToLocalDateTimeFormat(aMoment, 'YYYY-MM-DDTHH:mm:ss.SSS');\n    };\n    /**\n     * @param {string} localDateString string with format YYYY-MM-DD\n     * @returns {?moment}\n     */\n    DateUtil.localDateToMoment = function (localDateString) {\n        var theMoment = moment(localDateString, 'YYYY-MM-DD', true);\n        return theMoment.isValid() ? theMoment : undefined;\n    };\n    DateUtil.today = function () {\n        return moment().startOf('day');\n    };\n    DateUtil.now = function () {\n        return moment();\n    };\n    DateUtil.currentYear = function () {\n        return moment().year();\n    };\n    /**\n     * Vergleicht 2 Moments. Date und Time werden beruecksichtigt.\n     */\n    DateUtil.compareDateTime = function (a, b) {\n        if (a.isBefore(b)) {\n            return -1;\n        }\n        else if (a.isSame(b)) {\n            return 0;\n        }\n        else {\n            return 1;\n        }\n    };\n    return DateUtil;\n}());\nexports.default = DateUtil;\n",{"version":3,"file":"/home/imanol/projects/ebegu/ebegu-web/src/utils/DateUtil.ts","sourceRoot":"","sources":["/home/imanol/projects/ebegu/ebegu-web/src/utils/DateUtil.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;GAaG;;AAEH,+BAAiC;AAGjC;IAAA;IAqFA,CAAC;IAnFG;;;OAGG;IACW,8BAAqB,GAAnC,UAAoC,mBAA2B;QAC3D,IAAI,SAAS,GAAW,MAAM,CAAC,mBAAmB,EAAE,CAAC,yBAAyB,EAAE,qBAAqB,EAAE,0BAA0B,CAAC,EAAE,IAAI,CAAC,CAAC;QAC1I,MAAM,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,SAAS,CAAC;IACvD,CAAC;IAED;;;;OAIG;IACW,0BAAiB,GAA/B,UAAgC,OAAe;QAC3C,MAAM,CAAC,QAAQ,CAAC,uBAAuB,CAAC,OAAO,EAAE,YAAY,CAAC,CAAC;IACnE,CAAC;IAED;;;;OAIG;IACW,gCAAuB,GAArC,UAAsC,OAAe,EAAE,MAAc;QACjE,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;YACX,MAAM,CAAC,SAAS,CAAC;QACrB,CAAC;QACD,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;IACzD,CAAC;IAED;;;;OAIG;IACW,oCAA2B,GAAzC,UAA0C,OAAe,EAAE,MAAc;QACrE,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;YACX,MAAM,CAAC,SAAS,CAAC;QACrB,CAAC;QACD,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;IAC1C,CAAC;IAED;;;OAGG;IACW,8BAAqB,GAAnC,UAAoC,OAAe;QAC/C,MAAM,CAAC,QAAQ,CAAC,2BAA2B,CAAC,OAAO,EAAE,yBAAyB,CAAC,CAAC;IACpF,CAAC;IAED;;;OAGG;IACW,0BAAiB,GAA/B,UAAgC,eAAuB;QACnD,IAAI,SAAS,GAAG,MAAM,CAAC,eAAe,EAAE,YAAY,EAAE,IAAI,CAAC,CAAC;QAC5D,MAAM,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,SAAS,CAAC;IACvD,CAAC;IAEa,cAAK,GAAnB;QACI,MAAM,CAAC,MAAM,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;IACnC,CAAC;IAEa,YAAG,GAAjB;QACI,MAAM,CAAC,MAAM,EAAE,CAAC;IACpB,CAAC;IAEa,oBAAW,GAAzB;QACI,MAAM,CAAC,MAAM,EAAE,CAAC,IAAI,EAAE,CAAC;IAC3B,CAAC;IAED;;OAEG;IACW,wBAAe,GAA7B,UAA8B,CAAS,EAAE,CAAS;QAC9C,EAAE,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAChB,MAAM,CAAC,CAAC,CAAC,CAAC;QACd,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACrB,MAAM,CAAC,CAAC,CAAC;QACb,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,MAAM,CAAC,CAAC,CAAC;QACb,CAAC;IACL,CAAC;IACL,eAAC;AAAD,CAAC,AArFD,IAqFC","sourcesContent":["/*\n * Ki-Tax: System for the management of external childcare subsidies\n * Copyright (C) 2017 City of Bern Switzerland\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport * as moment from 'moment';\nimport Moment = moment.Moment; // kann das über ein anderes Import Format gelöst werden (import ... from 'moment')?\n\nexport default class DateUtil {\n\n    /**\n     * @param {string} localDateTimeString string with format YYYY-MM-DDTHH:mm:ss.SSS\n     * @returns {?Moment}\n     */\n    public static localDateTimeToMoment(localDateTimeString: string): Moment {\n        let theMoment: Moment = moment(localDateTimeString, ['YYYY-MM-DDTHH:mm:ss.SSS', 'YYYY-MM-DDTHH:mm:ss', 'YYYY-MM-DDTHH:mm:ss.SSSZ'], true);\n        return theMoment.isValid() ? theMoment : undefined;\n    }\n\n    /**\n     * Calls momentToLocalDateFormat with the format by default 'YYYY-MM-DD'\n     * @param aMoment\n     * @returns {string}\n     */\n    public static momentToLocalDate(aMoment: Moment): string {\n        return DateUtil.momentToLocalDateFormat(aMoment, 'YYYY-MM-DD');\n    }\n\n    /**\n     * @param {Moment} aMoment time instance\n     * @param {string} format the format\n     * @returns {?string} a Date (YYYY-MM-DD) representation of the given moment. NULL when aMoment is invalid\n     */\n    public static momentToLocalDateFormat(aMoment: Moment, format: string): string {\n        if (!aMoment) {\n            return undefined;\n        }\n        return moment(aMoment).startOf('day').format(format);\n    }\n\n    /**\n     * @param {Moment} aMoment time instance\n     * @param format format for the time\n     * @returns {?string} a Date (YYYY-MM-DD) representation of the given moment. undefined when aMoment is invalid\n     */\n    public static momentToLocalDateTimeFormat(aMoment: Moment, format: string): string {\n        if (!aMoment) {\n            return undefined;\n        }\n        return moment(aMoment).format(format);\n    }\n\n    /**\n     * @param {Moment} aMoment time instance\n     * @returns {?string} a Date (YYYY-MM-DD) representation of the given moment. NULL when aMoment is invalid\n     */\n    public static momentToLocalDateTime(aMoment: Moment): string {\n        return DateUtil.momentToLocalDateTimeFormat(aMoment, 'YYYY-MM-DDTHH:mm:ss.SSS');\n    }\n\n    /**\n     * @param {string} localDateString string with format YYYY-MM-DD\n     * @returns {?moment}\n     */\n    public static localDateToMoment(localDateString: string): Moment {\n        let theMoment = moment(localDateString, 'YYYY-MM-DD', true);\n        return theMoment.isValid() ? theMoment : undefined;\n    }\n\n    public static today(): Moment {\n        return moment().startOf('day');\n    }\n\n    public static now(): Moment {\n        return moment();\n    }\n\n    public static currentYear(): number {\n        return moment().year();\n    }\n\n    /**\n     * Vergleicht 2 Moments. Date und Time werden beruecksichtigt.\n     */\n    public static compareDateTime(a: Moment, b: Moment): number {\n        if (a.isBefore(b)) {\n            return -1;\n        } else if (a.isSame(b)) {\n            return 0;\n        } else {\n            return 1;\n        }\n    }\n}\n"]}]}