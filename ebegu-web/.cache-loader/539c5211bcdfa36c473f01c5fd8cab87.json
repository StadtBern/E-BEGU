{"remainingRequest":"/home/imanol/projects/ebegu/ebegu-web/node_modules/thread-loader/dist/cjs.js??ref--0-1!/home/imanol/projects/ebegu/ebegu-web/node_modules/ts-loader/index.js??ref--0-2!/home/imanol/projects/ebegu/ebegu-web/src/core/service/version/HttpVersionInterceptor.ts","cacheIdentifier":"cache-loader:1.1.0 test","dependencies":[{"path":"/home/imanol/projects/ebegu/ebegu-web/src/core/service/version/HttpVersionInterceptor.ts","mtime":1512484412011},{"path":"/home/imanol/projects/ebegu/ebegu-web/node_modules/cache-loader/dist/cjs.js","mtime":1507514019000},{"path":"/home/imanol/projects/ebegu/ebegu-web/node_modules/thread-loader/dist/cjs.js","mtime":1507523420000},{"path":"/home/imanol/projects/ebegu/ebegu-web/node_modules/ts-loader/index.js","mtime":1508488471000}],"contextDependencies":[],"result":["\"use strict\";\n/*\n * Ki-Tax: System for the management of external childcare subsidies\n * Copyright (C) 2017 City of Bern Switzerland\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar TSVersionCheckEvent_1 = require(\"../../events/TSVersionCheckEvent\");\n/**\n * this interceptor boradcasts a  VERSION_MATCH or VERSION_MISMATCH event whenever a rest service responds\n */\nvar HttpVersionInterceptor = /** @class */ (function () {\n    /* @ngInject */\n    function HttpVersionInterceptor($rootScope, $q, CONSTANTS, $log) {\n        var _this = this;\n        this.$rootScope = $rootScope;\n        this.$q = $q;\n        this.CONSTANTS = CONSTANTS;\n        this.$log = $log;\n        //interceptor methode\n        this.response = function (response) {\n            if (response.headers && response.config && response.config.url.indexOf(_this.CONSTANTS.REST_API) === 0 && !response.config.cache) {\n                _this.updateBackendVersion(response.headers('x-ebegu-version'));\n            }\n            return response;\n        };\n    }\n    /**\n     * @param {*} newVersion\n     */\n    HttpVersionInterceptor.prototype.updateBackendVersion = function (newVersion) {\n        if (newVersion !== this.backendVersion) {\n            this.backendVersion = newVersion;\n            if (!this.hasVersionCompatibility(this.frontendVersion(), this.backendVersion)) {\n                this.$log.warn('Versions of Frontend and Backend do not match');\n                this.$rootScope.$broadcast(TSVersionCheckEvent_1.TSVersionCheckEvent[TSVersionCheckEvent_1.TSVersionCheckEvent.VERSION_MISMATCH]);\n            }\n            else {\n                //could throw match event here but currently there is no action we want to perform when it matches\n            }\n        }\n    };\n    HttpVersionInterceptor.prototype.hasVersionCompatibility = function (frontendVersion, backendVersion) {\n        // Wir erwarten, dass die Versionsnummern im Frontend und Backend immer synchronisiert werden\n        return frontendVersion === backendVersion;\n    };\n    /**\n     * @return {string}\n     */\n    HttpVersionInterceptor.prototype.frontendVersion = function () {\n        return VERSION;\n    };\n    HttpVersionInterceptor.prototype.getBackendVersion = function () {\n        return this.backendVersion;\n    };\n    HttpVersionInterceptor.prototype.getBuildTime = function () {\n        return BUILDTSTAMP;\n    };\n    HttpVersionInterceptor.$inject = ['$rootScope', '$q', 'CONSTANTS', '$log'];\n    return HttpVersionInterceptor;\n}());\nexports.default = HttpVersionInterceptor;\n",{"version":3,"file":"/home/imanol/projects/ebegu/ebegu-web/src/core/service/version/HttpVersionInterceptor.ts","sourceRoot":"","sources":["/home/imanol/projects/ebegu/ebegu-web/src/core/service/version/HttpVersionInterceptor.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;GAaG;;AAGH,wEAAqE;AAErE;;GAEG;AACH;IAMI,eAAe;IACf,gCAAoB,UAA6B,EAAU,EAAa,EAAU,SAAc,EAAU,IAAiB;QAA3H,iBACC;QADmB,eAAU,GAAV,UAAU,CAAmB;QAAU,OAAE,GAAF,EAAE,CAAW;QAAU,cAAS,GAAT,SAAS,CAAK;QAAU,SAAI,GAAJ,IAAI,CAAa;QAG3H,qBAAqB;QACd,aAAQ,GAAG,UAAC,QAAa;YAC5B,EAAE,CAAC,CAAC,QAAQ,CAAC,OAAO,IAAI,QAAQ,CAAC,MAAM,IAAI,QAAQ,CAAC,MAAM,CAAC,GAAG,CAAC,OAAO,CAAC,KAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;gBAC9H,KAAI,CAAC,oBAAoB,CAAC,QAAQ,CAAC,OAAO,CAAC,iBAAiB,CAAC,CAAC,CAAC;YACnE,CAAC;YAED,MAAM,CAAC,QAAQ,CAAC;QACpB,CAAC,CAAA;IATD,CAAC;IAWD;;OAEG;IACK,qDAAoB,GAA5B,UAA6B,UAAkB;QAC3C,EAAE,CAAC,CAAC,UAAU,KAAK,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC;YACrC,IAAI,CAAC,cAAc,GAAG,UAAU,CAAC;YACjC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,uBAAuB,CAAC,IAAI,CAAC,eAAe,EAAE,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;gBAC7E,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,+CAA+C,CAAC,CAAC;gBAChE,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,yCAAmB,CAAC,yCAAmB,CAAC,gBAAgB,CAAC,CAAC,CAAC;YAC1F,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,kGAAkG;YACtG,CAAC;QACL,CAAC;IACL,CAAC;IAEO,wDAAuB,GAA/B,UAAgC,eAAuB,EAAE,cAAsB;QAC3E,6FAA6F;QAC7F,MAAM,CAAC,eAAe,KAAK,cAAc,CAAC;IAC9C,CAAC;IAED;;OAEG;IACI,gDAAe,GAAtB;QACI,MAAM,CAAC,OAAO,CAAC;IACnB,CAAC;IAEM,kDAAiB,GAAxB;QACI,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC;IAC/B,CAAC;IAEM,6CAAY,GAAnB;QACI,MAAM,CAAC,WAAW,CAAC;IACvB,CAAC;IAhDM,8BAAO,GAAG,CAAC,YAAY,EAAE,IAAI,EAAE,WAAW,EAAE,MAAM,CAAC,CAAC;IAkD/D,6BAAC;CAAA,AAtDD,IAsDC;kBAtDoB,sBAAsB","sourcesContent":["/*\n * Ki-Tax: System for the management of external childcare subsidies\n * Copyright (C) 2017 City of Bern Switzerland\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport {IHttpInterceptor, ILogService, IQService, IRootScopeService} from 'angular';\nimport {TSVersionCheckEvent} from '../../events/TSVersionCheckEvent';\n\n/**\n * this interceptor boradcasts a  VERSION_MATCH or VERSION_MISMATCH event whenever a rest service responds\n */\nexport default class HttpVersionInterceptor implements IHttpInterceptor {\n\n    private backendVersion: string;\n\n    static $inject = ['$rootScope', '$q', 'CONSTANTS', '$log'];\n\n    /* @ngInject */\n    constructor(private $rootScope: IRootScopeService, private $q: IQService, private CONSTANTS: any, private $log: ILogService) {\n    }\n\n    //interceptor methode\n    public response = (response: any) => {\n        if (response.headers && response.config && response.config.url.indexOf(this.CONSTANTS.REST_API) === 0 && !response.config.cache) {\n            this.updateBackendVersion(response.headers('x-ebegu-version'));\n        }\n\n        return response;\n    }\n\n    /**\n     * @param {*} newVersion\n     */\n    private updateBackendVersion(newVersion: string) {\n        if (newVersion !== this.backendVersion) {\n            this.backendVersion = newVersion;\n            if (!this.hasVersionCompatibility(this.frontendVersion(), this.backendVersion)) {\n                this.$log.warn('Versions of Frontend and Backend do not match');\n                this.$rootScope.$broadcast(TSVersionCheckEvent[TSVersionCheckEvent.VERSION_MISMATCH]);\n            } else {\n                //could throw match event here but currently there is no action we want to perform when it matches\n            }\n        }\n    }\n\n    private hasVersionCompatibility(frontendVersion: string, backendVersion: string): boolean {\n        // Wir erwarten, dass die Versionsnummern im Frontend und Backend immer synchronisiert werden\n        return frontendVersion === backendVersion;\n    }\n\n    /**\n     * @return {string}\n     */\n    public frontendVersion(): string {\n        return VERSION;\n    }\n\n    public getBackendVersion(): string {\n        return this.backendVersion;\n    }\n\n    public getBuildTime(): string {\n        return BUILDTSTAMP;\n    }\n\n}\n"]}]}