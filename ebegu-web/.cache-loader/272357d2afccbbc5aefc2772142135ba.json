{"remainingRequest":"/home/imanol/projects/ebegu/ebegu-web/node_modules/thread-loader/dist/cjs.js??ref--0-1!/home/imanol/projects/ebegu/ebegu-web/node_modules/ts-loader/index.js??ref--0-2!/home/imanol/projects/ebegu/ebegu-web/src/gesuch/component/fallCreationView/fallCreationView.ts","cacheIdentifier":"cache-loader:1.1.0 test","dependencies":[{"path":"/home/imanol/projects/ebegu/ebegu-web/src/gesuch/component/fallCreationView/fallCreationView.ts","mtime":1512484412015},{"path":"/home/imanol/projects/ebegu/ebegu-web/node_modules/cache-loader/dist/cjs.js","mtime":1507514019000},{"path":"/home/imanol/projects/ebegu/ebegu-web/node_modules/thread-loader/dist/cjs.js","mtime":1507523420000},{"path":"/home/imanol/projects/ebegu/ebegu-web/node_modules/ts-loader/index.js","mtime":1508488471000}],"contextDependencies":[],"result":["\"use strict\";\n/*\n * Ki-Tax: System for the management of external childcare subsidies\n * Copyright (C) 2017 City of Bern Switzerland\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar abstractGesuchView_1 = require(\"../abstractGesuchView\");\nvar TSWizardStepName_1 = require(\"../../../models/enums/TSWizardStepName\");\nvar TSAntragTyp_1 = require(\"../../../models/enums/TSAntragTyp\");\nvar TSRoleUtil_1 = require(\"../../../utils/TSRoleUtil\");\nvar TSGesuchsperiodeStatus_1 = require(\"../../../models/enums/TSGesuchsperiodeStatus\");\nvar template = require('./fallCreationView.html');\nrequire('./fallCreationView.less');\nvar FallCreationViewComponentConfig = /** @class */ (function () {\n    function FallCreationViewComponentConfig() {\n        this.transclude = false;\n        this.template = template;\n        this.controller = FallCreationViewController;\n        this.controllerAs = 'vm';\n    }\n    return FallCreationViewComponentConfig;\n}());\nexports.FallCreationViewComponentConfig = FallCreationViewComponentConfig;\nvar FallCreationViewController = /** @class */ (function (_super) {\n    __extends(FallCreationViewController, _super);\n    /* @ngInject */\n    function FallCreationViewController(gesuchModelManager, berechnungsManager, errorService, $stateParams, wizardStepManager, $translate, $q, $scope, authServiceRS, gesuchsperiodeRS, $timeout) {\n        var _this = _super.call(this, gesuchModelManager, berechnungsManager, wizardStepManager, $scope, TSWizardStepName_1.TSWizardStepName.GESUCH_ERSTELLEN, $timeout) || this;\n        _this.errorService = errorService;\n        _this.$stateParams = $stateParams;\n        _this.$translate = $translate;\n        _this.$q = $q;\n        _this.authServiceRS = authServiceRS;\n        _this.gesuchsperiodeRS = gesuchsperiodeRS;\n        // showError ist ein Hack damit, die Fehlermeldung fuer die Checkboxes nicht direkt beim Laden der Seite angezeigt wird\n        // sondern erst nachdem man auf ein checkbox oder auf speichern geklickt hat\n        _this.showError = false;\n        _this.TSRoleUtil = TSRoleUtil_1.TSRoleUtil;\n        return _this;\n    }\n    FallCreationViewController.prototype.$onInit = function () {\n        this.readStateParams();\n        this.initViewModel();\n    };\n    FallCreationViewController.prototype.readStateParams = function () {\n        if (this.$stateParams.gesuchsperiodeId && this.$stateParams.gesuchsperiodeId !== '') {\n            this.gesuchsperiodeId = this.$stateParams.gesuchsperiodeId;\n        }\n    };\n    FallCreationViewController.prototype.setShowError = function (showError) {\n        this.showError = showError;\n    };\n    FallCreationViewController.prototype.initViewModel = function () {\n        var _this = this;\n        //gesuch should already have been initialized in resolve function\n        if (this.gesuchsperiodeId === null || this.gesuchsperiodeId === undefined || this.gesuchsperiodeId === '') {\n            if (this.gesuchModelManager.getGesuchsperiode()) {\n                this.gesuchsperiodeId = this.gesuchModelManager.getGesuchsperiode().id;\n            }\n        }\n        this.gesuchsperiodeRS.getAllNichtAbgeschlosseneNichtVerwendeteGesuchsperioden(this.$stateParams.fallId).then(function (response) {\n            _this.nichtAbgeschlosseneGesuchsperiodenList = angular.copy(response);\n        });\n    };\n    FallCreationViewController.prototype.save = function () {\n        this.showError = true;\n        if (this.isGesuchValid()) {\n            if (!this.form.$dirty && !this.gesuchModelManager.getGesuch().isNew()) {\n                // If there are no changes in form we don't need anything to update on Server and we could return the\n                // promise immediately\n                return this.$q.when(this.gesuchModelManager.getGesuch());\n            }\n            this.errorService.clearAll();\n            if (this.gesuchModelManager.getGesuch().isNew()) {\n                if (this.gesuchModelManager.getGesuch().typ === TSAntragTyp_1.TSAntragTyp.MUTATION) {\n                    this.berechnungsManager.clear();\n                    return this.gesuchModelManager.saveMutation();\n                }\n                else if (this.gesuchModelManager.getGesuch().typ === TSAntragTyp_1.TSAntragTyp.ERNEUERUNGSGESUCH) {\n                    this.berechnungsManager.clear();\n                    return this.gesuchModelManager.saveErneuerungsgesuch();\n                }\n            }\n            return this.gesuchModelManager.saveGesuchAndFall();\n        }\n        return undefined;\n    };\n    FallCreationViewController.prototype.getGesuchModel = function () {\n        return this.gesuchModelManager.getGesuch();\n    };\n    FallCreationViewController.prototype.getAllActiveGesuchsperioden = function () {\n        return this.nichtAbgeschlosseneGesuchsperiodenList;\n    };\n    FallCreationViewController.prototype.setSelectedGesuchsperiode = function () {\n        var gesuchsperiodeList = this.getAllActiveGesuchsperioden();\n        for (var i = 0; i < gesuchsperiodeList.length; i++) {\n            if (gesuchsperiodeList[i].id === this.gesuchsperiodeId) {\n                this.getGesuchModel().gesuchsperiode = gesuchsperiodeList[i];\n            }\n        }\n    };\n    FallCreationViewController.prototype.isGesuchsperiodeActive = function () {\n        if (this.gesuchModelManager.getGesuchsperiode()) {\n            return TSGesuchsperiodeStatus_1.TSGesuchsperiodeStatus.AKTIV === this.gesuchModelManager.getGesuchsperiode().status\n                || TSGesuchsperiodeStatus_1.TSGesuchsperiodeStatus.INAKTIV === this.gesuchModelManager.getGesuchsperiode().status;\n        }\n        else {\n            return true;\n        }\n    };\n    FallCreationViewController.prototype.getTitle = function () {\n        if (this.gesuchModelManager.isGesuch()) {\n            if (this.gesuchModelManager.isGesuchSaved() && this.gesuchModelManager.getGesuchsperiode()) {\n                var key = (this.gesuchModelManager.getGesuch().typ === TSAntragTyp_1.TSAntragTyp.ERNEUERUNGSGESUCH) ? 'KITAX_ERNEUERUNGSGESUCH_PERIODE' : 'KITAX_ERSTGESUCH_PERIODE';\n                return this.$translate.instant(key, {\n                    periode: this.gesuchModelManager.getGesuchsperiode().gesuchsperiodeString\n                });\n            }\n            else {\n                var key = (this.gesuchModelManager.getGesuch().typ === TSAntragTyp_1.TSAntragTyp.ERNEUERUNGSGESUCH) ? 'KITAX_ERNEUERUNGSGESUCH' : 'KITAX_ERSTGESUCH';\n                return this.$translate.instant(key);\n            }\n        }\n        else {\n            return this.$translate.instant('ART_DER_MUTATION');\n        }\n    };\n    FallCreationViewController.prototype.getNextButtonText = function () {\n        if (this.gesuchModelManager.getGesuch().isNew()) {\n            return this.$translate.instant('ERSTELLEN');\n        }\n        if (this.gesuchModelManager.isGesuchReadonly() || this.authServiceRS.isOneOfRoles(this.TSRoleUtil.getGesuchstellerOnlyRoles())) {\n            return this.$translate.instant('WEITER_ONLY_UPPER');\n        }\n        return this.$translate.instant('WEITER_UPPER');\n    };\n    FallCreationViewController.prototype.isSelectedGesuchsperiodeInaktiv = function () {\n        return this.getGesuchModel() && this.getGesuchModel().gesuchsperiode\n            && this.getGesuchModel().gesuchsperiode.status === TSGesuchsperiodeStatus_1.TSGesuchsperiodeStatus.INAKTIV\n            && this.getGesuchModel().isNew();\n    };\n    FallCreationViewController.prototype.canChangeGesuchsperiode = function () {\n        return this.gesuchModelManager.isGesuch() && this.isGesuchsperiodeActive() && this.gesuchModelManager.getGesuch().isNew();\n    };\n    FallCreationViewController.$inject = ['GesuchModelManager', 'BerechnungsManager', 'ErrorService', '$stateParams',\n        'WizardStepManager', '$translate', '$q', '$scope', 'AuthServiceRS', 'GesuchsperiodeRS', '$timeout'];\n    return FallCreationViewController;\n}(abstractGesuchView_1.default));\nexports.FallCreationViewController = FallCreationViewController;\n",{"version":3,"file":"/home/imanol/projects/ebegu/ebegu-web/src/gesuch/component/fallCreationView/fallCreationView.ts","sourceRoot":"","sources":["/home/imanol/projects/ebegu/ebegu-web/src/gesuch/component/fallCreationView/fallCreationView.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Ki-Tax: System for the management of external childcare subsidies\n * Copyright (C) 2017 City of Bern Switzerland\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport {IComponentOptions, IPromise, IQService, IScope} from 'angular';\nimport AbstractGesuchViewController from '../abstractGesuchView';\nimport GesuchModelManager from '../../service/gesuchModelManager';\nimport BerechnungsManager from '../../service/berechnungsManager';\nimport TSGesuch from '../../../models/TSGesuch';\nimport ErrorService from '../../../core/errors/service/ErrorService';\nimport {INewFallStateParams} from '../../gesuch.route';\nimport WizardStepManager from '../../service/wizardStepManager';\nimport {TSWizardStepName} from '../../../models/enums/TSWizardStepName';\nimport {TSAntragTyp} from '../../../models/enums/TSAntragTyp';\nimport {TSRoleUtil} from '../../../utils/TSRoleUtil';\nimport AuthServiceRS from '../../../authentication/service/AuthServiceRS.rest';\nimport GesuchsperiodeRS from '../../../core/service/gesuchsperiodeRS.rest';\nimport TSGesuchsperiode from '../../../models/TSGesuchsperiode';\nimport {TSGesuchsperiodeStatus} from '../../../models/enums/TSGesuchsperiodeStatus';\nimport ITranslateService = angular.translate.ITranslateService;\nimport ITimeoutService = angular.ITimeoutService;\n\nlet template = require('./fallCreationView.html');\nrequire('./fallCreationView.less');\n\nexport class FallCreationViewComponentConfig implements IComponentOptions {\n    transclude = false;\n    template = template;\n    controller = FallCreationViewController;\n    controllerAs = 'vm';\n}\n\nexport class FallCreationViewController extends AbstractGesuchViewController<any> {\n    private gesuchsperiodeId: string;\n\n    TSRoleUtil: any;\n\n    // showError ist ein Hack damit, die Fehlermeldung fuer die Checkboxes nicht direkt beim Laden der Seite angezeigt wird\n    // sondern erst nachdem man auf ein checkbox oder auf speichern geklickt hat\n    showError: boolean = false;\n    private nichtAbgeschlosseneGesuchsperiodenList: Array<TSGesuchsperiode>;\n\n    static $inject = ['GesuchModelManager', 'BerechnungsManager', 'ErrorService', '$stateParams',\n        'WizardStepManager', '$translate', '$q', '$scope', 'AuthServiceRS', 'GesuchsperiodeRS', '$timeout'];\n\n    /* @ngInject */\n    constructor(gesuchModelManager: GesuchModelManager, berechnungsManager: BerechnungsManager,\n                private errorService: ErrorService, private $stateParams: INewFallStateParams, wizardStepManager: WizardStepManager,\n                private $translate: ITranslateService, private $q: IQService, $scope: IScope, private authServiceRS: AuthServiceRS,\n                private gesuchsperiodeRS: GesuchsperiodeRS, $timeout: ITimeoutService) {\n        super(gesuchModelManager, berechnungsManager, wizardStepManager, $scope, TSWizardStepName.GESUCH_ERSTELLEN, $timeout);\n        this.TSRoleUtil = TSRoleUtil;\n    }\n\n    $onInit() {\n        this.readStateParams();\n        this.initViewModel();\n    }\n\n    private readStateParams() {\n        if (this.$stateParams.gesuchsperiodeId && this.$stateParams.gesuchsperiodeId !== '') {\n            this.gesuchsperiodeId = this.$stateParams.gesuchsperiodeId;\n        }\n    }\n\n    public setShowError(showError: boolean): void {\n        this.showError = showError;\n    }\n\n    private initViewModel(): void {\n        //gesuch should already have been initialized in resolve function\n        if (this.gesuchsperiodeId === null || this.gesuchsperiodeId === undefined || this.gesuchsperiodeId === '') {\n            if (this.gesuchModelManager.getGesuchsperiode()) {\n                this.gesuchsperiodeId = this.gesuchModelManager.getGesuchsperiode().id;\n            }\n        }\n        this.gesuchsperiodeRS.getAllNichtAbgeschlosseneNichtVerwendeteGesuchsperioden(this.$stateParams.fallId).then((response: TSGesuchsperiode[]) => {\n            this.nichtAbgeschlosseneGesuchsperiodenList = angular.copy(response);\n        });\n    }\n\n    save(): IPromise<TSGesuch> {\n        this.showError = true;\n        if (this.isGesuchValid()) {\n            if (!this.form.$dirty && !this.gesuchModelManager.getGesuch().isNew()) {\n                // If there are no changes in form we don't need anything to update on Server and we could return the\n                // promise immediately\n                return this.$q.when(this.gesuchModelManager.getGesuch());\n            }\n            this.errorService.clearAll();\n            if (this.gesuchModelManager.getGesuch().isNew()) {\n                if (this.gesuchModelManager.getGesuch().typ === TSAntragTyp.MUTATION) {\n                    this.berechnungsManager.clear();\n                    return this.gesuchModelManager.saveMutation();\n                } else if (this.gesuchModelManager.getGesuch().typ === TSAntragTyp.ERNEUERUNGSGESUCH) {\n                    this.berechnungsManager.clear();\n                    return this.gesuchModelManager.saveErneuerungsgesuch();\n                }\n            }\n            return this.gesuchModelManager.saveGesuchAndFall();\n        }\n        return undefined;\n    }\n\n    public getGesuchModel(): TSGesuch {\n        return this.gesuchModelManager.getGesuch();\n    }\n\n    public getAllActiveGesuchsperioden() {\n        return this.nichtAbgeschlosseneGesuchsperiodenList;\n    }\n\n    public setSelectedGesuchsperiode(): void {\n        let gesuchsperiodeList = this.getAllActiveGesuchsperioden();\n        for (let i: number = 0; i < gesuchsperiodeList.length; i++) {\n            if (gesuchsperiodeList[i].id === this.gesuchsperiodeId) {\n                this.getGesuchModel().gesuchsperiode = gesuchsperiodeList[i];\n            }\n        }\n    }\n\n    public isGesuchsperiodeActive(): boolean {\n        if (this.gesuchModelManager.getGesuchsperiode()) {\n            return TSGesuchsperiodeStatus.AKTIV === this.gesuchModelManager.getGesuchsperiode().status\n                || TSGesuchsperiodeStatus.INAKTIV === this.gesuchModelManager.getGesuchsperiode().status;\n        } else {\n            return true;\n        }\n    }\n\n    public getTitle(): string {\n        if (this.gesuchModelManager.isGesuch()) {\n            if (this.gesuchModelManager.isGesuchSaved() && this.gesuchModelManager.getGesuchsperiode()) {\n                let key = (this.gesuchModelManager.getGesuch().typ === TSAntragTyp.ERNEUERUNGSGESUCH) ? 'KITAX_ERNEUERUNGSGESUCH_PERIODE' : 'KITAX_ERSTGESUCH_PERIODE';\n                return this.$translate.instant(key, {\n                    periode: this.gesuchModelManager.getGesuchsperiode().gesuchsperiodeString\n                });\n            } else {\n                let key = (this.gesuchModelManager.getGesuch().typ === TSAntragTyp.ERNEUERUNGSGESUCH) ? 'KITAX_ERNEUERUNGSGESUCH' : 'KITAX_ERSTGESUCH';\n                return this.$translate.instant(key);\n            }\n        } else {\n            return this.$translate.instant('ART_DER_MUTATION');\n        }\n    }\n\n    public getNextButtonText(): string {\n        if (this.gesuchModelManager.getGesuch().isNew()) {\n            return this.$translate.instant('ERSTELLEN');\n        }\n        if (this.gesuchModelManager.isGesuchReadonly() || this.authServiceRS.isOneOfRoles(this.TSRoleUtil.getGesuchstellerOnlyRoles())) {\n            return this.$translate.instant('WEITER_ONLY_UPPER');\n        }\n        return this.$translate.instant('WEITER_UPPER');\n    }\n\n    public isSelectedGesuchsperiodeInaktiv(): boolean {\n        return this.getGesuchModel() && this.getGesuchModel().gesuchsperiode\n            && this.getGesuchModel().gesuchsperiode.status === TSGesuchsperiodeStatus.INAKTIV\n            && this.getGesuchModel().isNew();\n    }\n\n    public canChangeGesuchsperiode(): boolean {\n        return this.gesuchModelManager.isGesuch() && this.isGesuchsperiodeActive() && this.gesuchModelManager.getGesuch().isNew();\n    }\n}\n"]}]}