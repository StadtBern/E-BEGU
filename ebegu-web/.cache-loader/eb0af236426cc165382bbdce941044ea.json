{"remainingRequest":"/home/imanol/projects/ebegu/ebegu-web/node_modules/thread-loader/dist/cjs.js??ref--0-1!/home/imanol/projects/ebegu/ebegu-web/node_modules/ts-loader/index.js??ref--0-2!/home/imanol/projects/ebegu/ebegu-web/src/core/service/searchIndexRS.rest.ts","cacheIdentifier":"cache-loader:1.1.0 test","dependencies":[{"path":"/home/imanol/projects/ebegu/ebegu-web/src/core/service/searchIndexRS.rest.ts","mtime":1512484412011},{"path":"/home/imanol/projects/ebegu/ebegu-web/node_modules/cache-loader/dist/cjs.js","mtime":1507514019000},{"path":"/home/imanol/projects/ebegu/ebegu-web/node_modules/thread-loader/dist/cjs.js","mtime":1507523420000},{"path":"/home/imanol/projects/ebegu/ebegu-web/node_modules/ts-loader/index.js","mtime":1508488471000}],"contextDependencies":[],"result":["\"use strict\";\n/*\n * Ki-Tax: System for the management of external childcare subsidies\n * Copyright (C) 2017 City of Bern Switzerland\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar SearchIndexRS = /** @class */ (function () {\n    /* @ngInject */\n    function SearchIndexRS($http, REST_API, ebeguRestUtil, $log) {\n        this.$log = $log;\n        this.serviceURL = REST_API + 'search/';\n        this.http = $http;\n        this.ebeguRestUtil = ebeguRestUtil;\n    }\n    /**\n     * performs a global search that will only return a certain ammount of results\n     * @param query searchstring\n     * @returns {IPromise<TSQuickSearchResult>}\n     */\n    SearchIndexRS.prototype.quickSearch = function (query) {\n        var _this = this;\n        return this.http.get(this.serviceURL + 'quicksearch' + '/' + query).then(function (response) {\n            return _this.ebeguRestUtil.parseQuickSearchResult(response.data);\n        });\n    };\n    /**\n     * performs a global search that will return the full number of matched results\n     * @param query searchstring\n     * @returns {IPromise<TSQuickSearchResult>}\n     */\n    SearchIndexRS.prototype.globalSearch = function (query) {\n        var _this = this;\n        return this.http.get(this.serviceURL + 'globalsearch' + '/' + query).then(function (response) {\n            return _this.ebeguRestUtil.parseQuickSearchResult(response.data);\n        });\n    };\n    SearchIndexRS.$inject = ['$http', 'REST_API', 'EbeguRestUtil', '$log'];\n    return SearchIndexRS;\n}());\nexports.SearchIndexRS = SearchIndexRS;\n",{"version":3,"file":"/home/imanol/projects/ebegu/ebegu-web/src/core/service/searchIndexRS.rest.ts","sourceRoot":"","sources":["/home/imanol/projects/ebegu/ebegu-web/src/core/service/searchIndexRS.rest.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;GAaG;;AAQH;IAMI,eAAe;IACf,uBAAY,KAAmB,EAAE,QAAgB,EAAE,aAA4B,EAAU,IAAiB;QAAjB,SAAI,GAAJ,IAAI,CAAa;QACtG,IAAI,CAAC,UAAU,GAAG,QAAQ,GAAG,SAAS,CAAC;QACvC,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;QAClB,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;IACvC,CAAC;IAED;;;;OAIG;IACH,mCAAW,GAAX,UAAY,KAAa;QAAzB,iBAIC;QAHG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,GAAG,aAAa,GAAG,GAAG,GAAG,KAAK,CAAC,CAAC,IAAI,CAAC,UAAC,QAA4C;YAClH,MAAM,CAAC,KAAI,CAAC,aAAa,CAAC,sBAAsB,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;QACpE,CAAC,CAAC,CAAC;IACP,CAAC;IAGD;;;;OAIG;IACH,oCAAY,GAAZ,UAAa,KAAa;QAA1B,iBAIC;QAHG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,GAAG,cAAc,GAAG,GAAG,GAAG,KAAK,CAAC,CAAC,IAAI,CAAC,UAAC,QAA4C;YACnH,MAAM,CAAC,KAAI,CAAC,aAAa,CAAC,sBAAsB,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;QACpE,CAAC,CAAC,CAAC;IACP,CAAC;IA7BM,qBAAO,GAAG,CAAC,OAAO,EAAE,UAAU,EAAE,eAAe,EAAE,MAAM,CAAC,CAAC;IA8BpE,oBAAC;CAAA,AAnCD,IAmCC;AAnCY,sCAAa","sourcesContent":["/*\n * Ki-Tax: System for the management of external childcare subsidies\n * Copyright (C) 2017 City of Bern Switzerland\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport EbeguRestUtil from '../../utils/EbeguRestUtil';\nimport {IHttpResponse, IHttpService, ILogService} from 'angular';\nimport TSQuickSearchResult from '../../models/dto/TSQuickSearchResult';\nimport IPromise = angular.IPromise;\n\n\nexport class SearchIndexRS {\n    serviceURL: string;\n    http: IHttpService;\n    ebeguRestUtil: EbeguRestUtil;\n\n    static $inject = ['$http', 'REST_API', 'EbeguRestUtil', '$log'];\n    /* @ngInject */\n    constructor($http: IHttpService, REST_API: string, ebeguRestUtil: EbeguRestUtil, private $log: ILogService) {\n        this.serviceURL = REST_API + 'search/';\n        this.http = $http;\n        this.ebeguRestUtil = ebeguRestUtil;\n    }\n\n    /**\n     * performs a global search that will only return a certain ammount of results\n     * @param query searchstring\n     * @returns {IPromise<TSQuickSearchResult>}\n     */\n    quickSearch(query: string): IPromise<TSQuickSearchResult> {\n        return this.http.get(this.serviceURL + 'quicksearch' + '/' + query).then((response: IHttpResponse<TSQuickSearchResult>) => {\n            return this.ebeguRestUtil.parseQuickSearchResult(response.data);\n        });\n    }\n\n\n    /**\n     * performs a global search that will return the full number of matched results\n     * @param query searchstring\n     * @returns {IPromise<TSQuickSearchResult>}\n     */\n    globalSearch(query: string): IPromise<TSQuickSearchResult> {\n        return this.http.get(this.serviceURL + 'globalsearch' + '/' + query).then((response: IHttpResponse<TSQuickSearchResult>) => {\n            return this.ebeguRestUtil.parseQuickSearchResult(response.data);\n        });\n    }\n}\n\n"]}]}