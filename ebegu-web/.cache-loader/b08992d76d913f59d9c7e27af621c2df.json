{"remainingRequest":"/home/imanol/projects/ebegu/ebegu-web/node_modules/thread-loader/dist/cjs.js??ref--0-1!/home/imanol/projects/ebegu/ebegu-web/node_modules/ts-loader/index.js??ref--0-2!/home/imanol/projects/ebegu/ebegu-web/src/core/directive/dv-show-element/dv-show-element.ts","cacheIdentifier":"cache-loader:1.1.0 test","dependencies":[{"path":"/home/imanol/projects/ebegu/ebegu-web/src/core/directive/dv-show-element/dv-show-element.ts","mtime":1512484412003},{"path":"/home/imanol/projects/ebegu/ebegu-web/node_modules/cache-loader/dist/cjs.js","mtime":1507514019000},{"path":"/home/imanol/projects/ebegu/ebegu-web/node_modules/thread-loader/dist/cjs.js","mtime":1507523420000},{"path":"/home/imanol/projects/ebegu/ebegu-web/node_modules/ts-loader/index.js","mtime":1508488471000}],"contextDependencies":[],"result":["\"use strict\";\n/*\n * Ki-Tax: System for the management of external childcare subsidies\n * Copyright (C) 2017 City of Bern Switzerland\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar DVRoleElementController_1 = require(\"../../controller/DVRoleElementController\");\n/**\n * Attribute Directive um Elementen aus- und einblenden. Erweitert ng-if\n * Die Direktive muss folgendermasse benutzt werden:\n *     dv-show-element - diese Attribute muss in jedem Element gesetzt werden, das die Direktive braucht\n *     dv-show-allowed-roles=\"[vm.TSRole.X, vm.TSRole.Y, ...]\" - Array mit allen Rollen, für die das Element eingeblendet werden muss. Um diese Syntax\n *                                                          zu verwenden, muss der Kontroller eine Subklasse von AbstractGesuchViewController sein.\n *                                                          Diese Attribute ist pflicht, darf aber auch auch ein leeres Array sein. Man kann auch eine\n *                                                          Methode oder eine Variable uebergeben\n *     dv-show-expression - optionale Attribute, mit der man einen extra boolean Wert uebergeben kann. Man kann auch eine\n *                          Methode oder eine Variable uebergeben\n *\n * ACHTUNG! Diese Direktive darf nicht mit ng-if zusammen benutzt werden\n */\nvar DVShowElement = /** @class */ (function () {\n    /* @ngInject */\n    function DVShowElement(ngIfDirective) {\n        var _this = this;\n        this.ngIfDirective = ngIfDirective;\n        this.restrict = 'A';\n        this.controller = DVRoleElementController_1.DVRoleElementController;\n        this.replace = true;\n        this.link = function (scope, element, attributes, controller, $transclude) {\n            // Copy arguments to new array to avoid: The 'arguments' object cannot be referenced in an arrow function in ES3 and ES5.\n            // Consider using a standard function expression.\n            var arguments2 = [scope, element, attributes, controller, $transclude];\n            _this.callNgIfThrough(attributes, controller, arguments2);\n            // Die Version mit attributes.$observe funktioniert nicht. Als Wert bekommen wir immer ein string mit dem Namen der Variable, den wir\n            // danach evaluieren muessen. Da dieser String sich nie aendert (sondern eher seine evaluation), wird das observe nie aufgerufen. Mit scope.$watch\n            // funktioniert es weil die Variable immer transcluded wird und somit der Wert aendert sich.\n            scope.$watch(attributes['dvShowAllowedRoles'], function (newValue, oldValue, scope) {\n                controller.dvAllowedRoles = newValue;\n            }, true);\n            scope.$watch(attributes['dvShowExpression'], function (newValue, oldValue) {\n                controller.dvExpression = newValue;\n            }, true);\n        };\n        this.ngIf = ngIfDirective[0];\n        this.transclude = this.ngIf.transclude;\n        this.priority = this.ngIf.priority;\n        this.terminal = this.ngIf.terminal;\n    }\n    /**\n     * Diese Methode darf nur einmal aufgerufen werden.\n     * VORSICHT. Sollte diese Methode X-Mal aufgerufen werden, wird das Element dann X-Mall angezeigt\n     * @param attributes\n     * @param controller\n     * @param arguments2\n     */\n    DVShowElement.prototype.callNgIfThrough = function (attributes, controller, arguments2) {\n        attributes.ngIf = function () {\n            return (controller.checkValidity());\n        };\n        this.ngIf.link.apply(this.ngIf, arguments2);\n    };\n    DVShowElement.factory = function () {\n        var directive = function (ngIfDirective) { return new DVShowElement(ngIfDirective); };\n        directive.$inject = ['ngIfDirective'];\n        return directive;\n    };\n    DVShowElement.$inject = ['ngIfDirective'];\n    return DVShowElement;\n}());\nexports.DVShowElement = DVShowElement;\n",{"version":3,"file":"/home/imanol/projects/ebegu/ebegu-web/src/core/directive/dv-show-element/dv-show-element.ts","sourceRoot":"","sources":["/home/imanol/projects/ebegu/ebegu-web/src/core/directive/dv-show-element/dv-show-element.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;GAaG;;AAGH,oFAAiF;AAEjF;;;;;;;;;;;;GAYG;AACH;IAaI,eAAe;IACf,uBAAoB,aAAkB;QAAtC,iBAKC;QALmB,kBAAa,GAAb,aAAa,CAAK;QAbtC,aAAQ,GAAG,GAAG,CAAC;QACf,eAAU,GAAG,iDAAuB,CAAC;QAMrC,YAAO,GAAG,IAAI,CAAC;QAaf,SAAI,GAAG,UAAC,KAAa,EAAE,OAAyB,EAAE,UAAuB,EAAE,UAAmC,EAAE,WAAgB;YAC5H,yHAAyH;YACzH,iDAAiD;YACjD,IAAI,UAAU,GAAe,CAAC,KAAK,EAAE,OAAO,EAAE,UAAU,EAAE,UAAU,EAAE,WAAW,CAAC,CAAC;YACnF,KAAI,CAAC,eAAe,CAAC,UAAU,EAAE,UAAU,EAAE,UAAU,CAAC,CAAC;YAEzD,qIAAqI;YACrI,kJAAkJ;YAClJ,4FAA4F;YAC5F,KAAK,CAAC,MAAM,CAAC,UAAU,CAAC,oBAAoB,CAAC,EAAE,UAAC,QAAa,EAAE,QAAa,EAAE,KAAU;gBACpF,UAAU,CAAC,cAAc,GAAG,QAAQ,CAAC;YACzC,CAAC,EAAE,IAAI,CAAC,CAAC;YACT,KAAK,CAAC,MAAM,CAAC,UAAU,CAAC,kBAAkB,CAAC,EAAE,UAAC,QAAa,EAAE,QAAa;gBACtE,UAAU,CAAC,YAAY,GAAG,QAAQ,CAAC;YACvC,CAAC,EAAE,IAAI,CAAC,CAAC;QACb,CAAC,CAAA;QArBG,IAAI,CAAC,IAAI,GAAG,aAAa,CAAC,CAAC,CAAC,CAAC;QAC7B,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC;QACvC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC;QACnC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC;IACvC,CAAC;IAmBD;;;;;;OAMG;IACK,uCAAe,GAAvB,UAAwB,UAAe,EAAE,UAAmC,EAAE,UAAsB;QAChG,UAAU,CAAC,IAAI,GAAG;YACd,MAAM,CAAC,CAAC,UAAU,CAAC,aAAa,EAAE,CAAC,CAAC;QACxC,CAAC,CAAC;QACF,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC;IAChD,CAAC;IAEM,qBAAO,GAAd;QACI,IAAM,SAAS,GAAG,UAAC,aAAkB,IAAK,OAAA,IAAI,aAAa,CAAC,aAAa,CAAC,EAAhC,CAAgC,CAAC;QAC3E,SAAS,CAAC,OAAO,GAAG,CAAC,eAAe,CAAC,CAAC;QACtC,MAAM,CAAC,SAAS,CAAC;IACrB,CAAC;IA7CM,qBAAO,GAAa,CAAC,eAAe,CAAC,CAAC;IA8CjD,oBAAC;CAAA,AAzDD,IAyDC;AAzDY,sCAAa","sourcesContent":["/*\n * Ki-Tax: System for the management of external childcare subsidies\n * Copyright (C) 2017 City of Bern Switzerland\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport {IAttributes, IAugmentedJQuery, IDirective, IDirectiveFactory, IScope} from 'angular';\nimport {DVRoleElementController} from '../../controller/DVRoleElementController';\n\n/**\n * Attribute Directive um Elementen aus- und einblenden. Erweitert ng-if\n * Die Direktive muss folgendermasse benutzt werden:\n *     dv-show-element - diese Attribute muss in jedem Element gesetzt werden, das die Direktive braucht\n *     dv-show-allowed-roles=\"[vm.TSRole.X, vm.TSRole.Y, ...]\" - Array mit allen Rollen, für die das Element eingeblendet werden muss. Um diese Syntax\n *                                                          zu verwenden, muss der Kontroller eine Subklasse von AbstractGesuchViewController sein.\n *                                                          Diese Attribute ist pflicht, darf aber auch auch ein leeres Array sein. Man kann auch eine\n *                                                          Methode oder eine Variable uebergeben\n *     dv-show-expression - optionale Attribute, mit der man einen extra boolean Wert uebergeben kann. Man kann auch eine\n *                          Methode oder eine Variable uebergeben\n *\n * ACHTUNG! Diese Direktive darf nicht mit ng-if zusammen benutzt werden\n */\nexport class DVShowElement implements IDirective {\n    restrict = 'A';\n    controller = DVRoleElementController;\n    // kind bindToController und kein controllerAs weil sonst wird der scope ueberschrieben, da wir mit attribute Direktiven arbeiten\n\n    transclude: any;\n    priority: number;\n    terminal: boolean;\n    replace = true;\n    ngIf: any;\n\n    static $inject: string[] = ['ngIfDirective'];\n\n    /* @ngInject */\n    constructor(private ngIfDirective: any) {\n        this.ngIf = ngIfDirective[0];\n        this.transclude = this.ngIf.transclude;\n        this.priority = this.ngIf.priority;\n        this.terminal = this.ngIf.terminal;\n    }\n\n    link = (scope: IScope, element: IAugmentedJQuery, attributes: IAttributes, controller: DVRoleElementController, $transclude: any) => {\n        // Copy arguments to new array to avoid: The 'arguments' object cannot be referenced in an arrow function in ES3 and ES5.\n        // Consider using a standard function expression.\n        let arguments2: Array<any> = [scope, element, attributes, controller, $transclude];\n        this.callNgIfThrough(attributes, controller, arguments2);\n\n        // Die Version mit attributes.$observe funktioniert nicht. Als Wert bekommen wir immer ein string mit dem Namen der Variable, den wir\n        // danach evaluieren muessen. Da dieser String sich nie aendert (sondern eher seine evaluation), wird das observe nie aufgerufen. Mit scope.$watch\n        // funktioniert es weil die Variable immer transcluded wird und somit der Wert aendert sich.\n        scope.$watch(attributes['dvShowAllowedRoles'], (newValue: any, oldValue: any, scope: any) => {\n            controller.dvAllowedRoles = newValue;\n        }, true);\n        scope.$watch(attributes['dvShowExpression'], (newValue: any, oldValue: any) => {\n            controller.dvExpression = newValue;\n        }, true);\n    }\n\n    /**\n     * Diese Methode darf nur einmal aufgerufen werden.\n     * VORSICHT. Sollte diese Methode X-Mal aufgerufen werden, wird das Element dann X-Mall angezeigt\n     * @param attributes\n     * @param controller\n     * @param arguments2\n     */\n    private callNgIfThrough(attributes: any, controller: DVRoleElementController, arguments2: Array<any>) {\n        attributes.ngIf = () => {\n            return (controller.checkValidity());\n        };\n        this.ngIf.link.apply(this.ngIf, arguments2);\n    }\n\n    static factory(): IDirectiveFactory {\n        const directive = (ngIfDirective: any) => new DVShowElement(ngIfDirective);\n        directive.$inject = ['ngIfDirective'];\n        return directive;\n    }\n}\n"]}]}