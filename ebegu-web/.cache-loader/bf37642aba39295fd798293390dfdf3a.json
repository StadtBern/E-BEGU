{"remainingRequest":"/home/imanol/projects/ebegu/ebegu-web/node_modules/thread-loader/dist/cjs.js??ref--0-1!/home/imanol/projects/ebegu/ebegu-web/node_modules/ts-loader/index.js??ref--0-2!/home/imanol/projects/ebegu/ebegu-web/src/utils/EbeguRestUtil.ts","cacheIdentifier":"cache-loader:1.1.0 test","dependencies":[{"path":"/home/imanol/projects/ebegu/ebegu-web/src/utils/EbeguRestUtil.ts","mtime":1518612642528},{"path":"/home/imanol/projects/ebegu/ebegu-web/node_modules/cache-loader/dist/cjs.js","mtime":1507514019000},{"path":"/home/imanol/projects/ebegu/ebegu-web/node_modules/thread-loader/dist/cjs.js","mtime":1507523420000},{"path":"/home/imanol/projects/ebegu/ebegu-web/node_modules/ts-loader/index.js","mtime":1508488471000}],"contextDependencies":[],"result":["\"use strict\";\n/*\n * Ki-Tax: System for the management of external childcare subsidies\n * Copyright (C) 2017 City of Bern Switzerland\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar TSQuickSearchResult_1 = require(\"../models/dto/TSQuickSearchResult\");\nvar TSSearchResultEntry_1 = require(\"../models/dto/TSSearchResultEntry\");\nvar TSAdressetyp_1 = require(\"../models/enums/TSAdressetyp\");\nvar TSAbwesenheit_1 = require(\"../models/TSAbwesenheit\");\nvar TSAbwesenheitContainer_1 = require(\"../models/TSAbwesenheitContainer\");\nvar TSAdresse_1 = require(\"../models/TSAdresse\");\nvar TSAdresseContainer_1 = require(\"../models/TSAdresseContainer\");\nvar TSAntragDTO_1 = require(\"../models/TSAntragDTO\");\nvar TSAntragStatusHistory_1 = require(\"../models/TSAntragStatusHistory\");\nvar TSApplicationProperty_1 = require(\"../models/TSApplicationProperty\");\nvar TSBelegungFerieninsel_1 = require(\"../models/TSBelegungFerieninsel\");\nvar TSBelegungFerieninselTag_1 = require(\"../models/TSBelegungFerieninselTag\");\nvar TSBelegungTagesschule_1 = require(\"../models/TSBelegungTagesschule\");\nvar TSBetreuung_1 = require(\"../models/TSBetreuung\");\nvar TSBetreuungsmitteilung_1 = require(\"../models/TSBetreuungsmitteilung\");\nvar TSBetreuungsmitteilungPensum_1 = require(\"../models/TSBetreuungsmitteilungPensum\");\nvar TSBetreuungspensum_1 = require(\"../models/TSBetreuungspensum\");\nvar TSBetreuungspensumContainer_1 = require(\"../models/TSBetreuungspensumContainer\");\nvar TSDokument_1 = require(\"../models/TSDokument\");\nvar TSDokumentGrund_1 = require(\"../models/TSDokumentGrund\");\nvar TSEbeguParameter_1 = require(\"../models/TSEbeguParameter\");\nvar TSEbeguVorlage_1 = require(\"../models/TSEbeguVorlage\");\nvar TSEinkommensverschlechterung_1 = require(\"../models/TSEinkommensverschlechterung\");\nvar TSEinkommensverschlechterungContainer_1 = require(\"../models/TSEinkommensverschlechterungContainer\");\nvar TSEinkommensverschlechterungInfo_1 = require(\"../models/TSEinkommensverschlechterungInfo\");\nvar TSEinkommensverschlechterungInfoContainer_1 = require(\"../models/TSEinkommensverschlechterungInfoContainer\");\nvar TSErwerbspensum_1 = require(\"../models/TSErwerbspensum\");\nvar TSErwerbspensumContainer_1 = require(\"../models/TSErwerbspensumContainer\");\nvar TSEWKAdresse_1 = require(\"../models/TSEWKAdresse\");\nvar TSEWKBeziehung_1 = require(\"../models/TSEWKBeziehung\");\nvar TSEWKEinwohnercode_1 = require(\"../models/TSEWKEinwohnercode\");\nvar TSEWKPerson_1 = require(\"../models/TSEWKPerson\");\nvar TSFachstelle_1 = require(\"../models/TSFachstelle\");\nvar TSFall_1 = require(\"../models/TSFall\");\nvar TSFallAntragDTO_1 = require(\"../models/TSFallAntragDTO\");\nvar TSFamiliensituation_1 = require(\"../models/TSFamiliensituation\");\nvar TSFamiliensituationContainer_1 = require(\"../models/TSFamiliensituationContainer\");\nvar TSFerieninselStammdaten_1 = require(\"../models/TSFerieninselStammdaten\");\nvar TSFerieninselZeitraum_1 = require(\"../models/TSFerieninselZeitraum\");\nvar TSFinanzielleSituation_1 = require(\"../models/TSFinanzielleSituation\");\nvar TSFinanzielleSituationContainer_1 = require(\"../models/TSFinanzielleSituationContainer\");\nvar TSGesuch_1 = require(\"../models/TSGesuch\");\nvar TSGesuchsperiode_1 = require(\"../models/TSGesuchsperiode\");\nvar TSGesuchsteller_1 = require(\"../models/TSGesuchsteller\");\nvar TSGesuchstellerContainer_1 = require(\"../models/TSGesuchstellerContainer\");\nvar TSInstitution_1 = require(\"../models/TSInstitution\");\nvar TSInstitutionStammdaten_1 = require(\"../models/TSInstitutionStammdaten\");\nvar TSInstitutionStammdatenTagesschule_1 = require(\"../models/TSInstitutionStammdatenTagesschule\");\nvar TSKind_1 = require(\"../models/TSKind\");\nvar TSKindContainer_1 = require(\"../models/TSKindContainer\");\nvar TSKindDublette_1 = require(\"../models/TSKindDublette\");\nvar TSMahnung_1 = require(\"../models/TSMahnung\");\nvar TSMandant_1 = require(\"../models/TSMandant\");\nvar TSMitteilung_1 = require(\"../models/TSMitteilung\");\nvar TSModulTagesschule_1 = require(\"../models/TSModulTagesschule\");\nvar TSPendenzBetreuung_1 = require(\"../models/TSPendenzBetreuung\");\nvar TSPensumFachstelle_1 = require(\"../models/TSPensumFachstelle\");\nvar TSTraegerschaft_1 = require(\"../models/TSTraegerschaft\");\nvar TSUser_1 = require(\"../models/TSUser\");\nvar TSVerfuegung_1 = require(\"../models/TSVerfuegung\");\nvar TSVerfuegungZeitabschnitt_1 = require(\"../models/TSVerfuegungZeitabschnitt\");\nvar TSVorlage_1 = require(\"../models/TSVorlage\");\nvar TSWizardStep_1 = require(\"../models/TSWizardStep\");\nvar TSZahlung_1 = require(\"../models/TSZahlung\");\nvar TSZahlungsauftrag_1 = require(\"../models/TSZahlungsauftrag\");\nvar TSDateRange_1 = require(\"../models/types/TSDateRange\");\nvar TSLand_1 = require(\"../models/types/TSLand\");\nvar DateUtil_1 = require(\"./DateUtil\");\nvar TSWorkJob_1 = require(\"../models/TSWorkJob\");\nvar TSBatchJobInformation_1 = require(\"../models/TSBatchJobInformation\");\nvar EbeguRestUtil = /** @class */ (function () {\n    /* @ngInject */\n    function EbeguRestUtil(ebeguUtil) {\n        this.ebeguUtil = ebeguUtil;\n    }\n    /**\n     * Wandelt Data in einen TSApplicationProperty Array um, welches danach zurueckgeliefert wird\n     * @param data\n     * @returns {TSApplicationProperty[]}\n     */\n    EbeguRestUtil.prototype.parseApplicationProperties = function (data) {\n        var appProperties = [];\n        if (data && Array.isArray(data)) {\n            for (var i = 0; i < data.length; i++) {\n                appProperties[i] = this.parseApplicationProperty(new TSApplicationProperty_1.default('', ''), data[i]);\n            }\n        }\n        else {\n            appProperties[0] = this.parseApplicationProperty(new TSApplicationProperty_1.default('', ''), data);\n        }\n        return appProperties;\n    };\n    /**\n     * Wandelt die receivedAppProperty in einem parsedAppProperty um.\n     * @param parsedAppProperty\n     * @param receivedAppProperty\n     * @returns {TSApplicationProperty}\n     */\n    EbeguRestUtil.prototype.parseApplicationProperty = function (parsedAppProperty, receivedAppProperty) {\n        this.parseAbstractEntity(parsedAppProperty, receivedAppProperty);\n        parsedAppProperty.name = receivedAppProperty.name;\n        parsedAppProperty.value = receivedAppProperty.value;\n        return parsedAppProperty;\n    };\n    EbeguRestUtil.prototype.parseEbeguParameters = function (data) {\n        var ebeguParameters = [];\n        if (data && Array.isArray(data)) {\n            for (var i = 0; i < data.length; i++) {\n                ebeguParameters[i] = this.parseEbeguParameter(new TSEbeguParameter_1.default(), data[i]);\n            }\n        }\n        else {\n            ebeguParameters[0] = this.parseEbeguParameter(new TSEbeguParameter_1.default(), data);\n        }\n        return ebeguParameters;\n    };\n    EbeguRestUtil.prototype.parseEbeguParameter = function (ebeguParameterTS, receivedEbeguParameter) {\n        if (receivedEbeguParameter) {\n            this.parseDateRangeEntity(ebeguParameterTS, receivedEbeguParameter);\n            ebeguParameterTS.name = receivedEbeguParameter.name;\n            ebeguParameterTS.value = receivedEbeguParameter.value;\n            ebeguParameterTS.proGesuchsperiode = receivedEbeguParameter.proGesuchsperiode;\n            return ebeguParameterTS;\n        }\n        return undefined;\n    };\n    EbeguRestUtil.prototype.ebeguParameterToRestObject = function (restEbeguParameter, ebeguParameter) {\n        if (ebeguParameter) {\n            this.abstractDateRangeEntityToRestObject(restEbeguParameter, ebeguParameter);\n            restEbeguParameter.name = ebeguParameter.name;\n            restEbeguParameter.value = ebeguParameter.value;\n            return restEbeguParameter;\n        }\n        return undefined;\n    };\n    EbeguRestUtil.prototype.parseEbeguVorlages = function (data) {\n        var ebeguVorlages = [];\n        if (data && Array.isArray(data)) {\n            for (var i = 0; i < data.length; i++) {\n                ebeguVorlages[i] = this.parseEbeguVorlage(new TSEbeguVorlage_1.default(), data[i]);\n            }\n        }\n        else {\n            ebeguVorlages[0] = this.parseEbeguVorlage(new TSEbeguVorlage_1.default(), data);\n        }\n        return ebeguVorlages;\n    };\n    EbeguRestUtil.prototype.parseEbeguVorlage = function (ebeguVorlageTS, receivedEbeguVorlage) {\n        if (receivedEbeguVorlage) {\n            this.parseDateRangeEntity(ebeguVorlageTS, receivedEbeguVorlage);\n            ebeguVorlageTS.name = receivedEbeguVorlage.name;\n            ebeguVorlageTS.vorlage = this.parseVorlage(new TSVorlage_1.default, receivedEbeguVorlage.vorlage);\n            ebeguVorlageTS.proGesuchsperiode = receivedEbeguVorlage.proGesuchsperiode;\n            return ebeguVorlageTS;\n        }\n        return undefined;\n    };\n    EbeguRestUtil.prototype.parseVorlage = function (vorlageTS, receivedVorlage) {\n        if (receivedVorlage) {\n            this.parseAbstractFileEntity(vorlageTS, receivedVorlage);\n            return vorlageTS;\n        }\n        return undefined;\n    };\n    EbeguRestUtil.prototype.ebeguVorlageToRestObject = function (restEbeguVorlage, ebeguVorlage) {\n        if (ebeguVorlage) {\n            this.abstractDateRangeEntityToRestObject(restEbeguVorlage, ebeguVorlage);\n            restEbeguVorlage.name = ebeguVorlage.name;\n            restEbeguVorlage.value = this.vorlageToRestObject({}, ebeguVorlage.vorlage);\n            return restEbeguVorlage;\n        }\n        return undefined;\n    };\n    EbeguRestUtil.prototype.vorlageToRestObject = function (restVorlage, vorlage) {\n        if (vorlage) {\n            this.abstractFileEntityToRestObject(restVorlage, vorlage);\n            return restVorlage;\n        }\n        return undefined;\n    };\n    EbeguRestUtil.prototype.parseAbstractFileEntity = function (fileTS, fileFromServer) {\n        this.parseAbstractEntity(fileTS, fileFromServer);\n        fileTS.filename = fileFromServer.filename;\n        fileTS.filepfad = fileFromServer.filepfad;\n        fileTS.filesize = fileFromServer.filesize;\n        return fileTS;\n    };\n    EbeguRestUtil.prototype.abstractFileEntityToRestObject = function (restObject, typescriptObject) {\n        this.abstractEntityToRestObject(restObject, typescriptObject);\n        restObject.filename = typescriptObject.filename;\n        restObject.filepfad = typescriptObject.filepfad;\n        restObject.filesize = typescriptObject.filesize;\n        return restObject;\n    };\n    EbeguRestUtil.prototype.parseAbstractEntity = function (parsedAbstractEntity, receivedAbstractEntity) {\n        parsedAbstractEntity.id = receivedAbstractEntity.id;\n        parsedAbstractEntity.timestampErstellt = DateUtil_1.default.localDateTimeToMoment(receivedAbstractEntity.timestampErstellt);\n        parsedAbstractEntity.timestampMutiert = DateUtil_1.default.localDateTimeToMoment(receivedAbstractEntity.timestampMutiert);\n        parsedAbstractEntity.vorgaengerId = receivedAbstractEntity.vorgaengerId;\n    };\n    EbeguRestUtil.prototype.abstractEntityToRestObject = function (restObject, typescriptObject) {\n        restObject.id = typescriptObject.id;\n        restObject.vorgaengerId = typescriptObject.vorgaengerId;\n        if (typescriptObject.timestampErstellt) {\n            restObject.timestampErstellt = DateUtil_1.default.momentToLocalDateTime(typescriptObject.timestampErstellt);\n        }\n        if (typescriptObject.timestampMutiert) {\n            restObject.timestampMutiert = DateUtil_1.default.momentToLocalDateTime(typescriptObject.timestampMutiert);\n        }\n    };\n    EbeguRestUtil.prototype.parseAbstractPersonEntity = function (personObjectTS, receivedPersonObject) {\n        this.parseAbstractEntity(personObjectTS, receivedPersonObject);\n        personObjectTS.vorname = receivedPersonObject.vorname;\n        personObjectTS.nachname = receivedPersonObject.nachname;\n        personObjectTS.geburtsdatum = DateUtil_1.default.localDateToMoment(receivedPersonObject.geburtsdatum);\n        personObjectTS.geschlecht = receivedPersonObject.geschlecht;\n    };\n    EbeguRestUtil.prototype.abstractPersonEntitytoRestObject = function (restPersonObject, personObject) {\n        this.abstractEntityToRestObject(restPersonObject, personObject);\n        restPersonObject.vorname = personObject.vorname;\n        restPersonObject.nachname = personObject.nachname;\n        restPersonObject.geburtsdatum = DateUtil_1.default.momentToLocalDate(personObject.geburtsdatum);\n        restPersonObject.geschlecht = personObject.geschlecht;\n    };\n    EbeguRestUtil.prototype.abstractDateRangeEntityToRestObject = function (restObj, dateRangedEntity) {\n        this.abstractEntityToRestObject(restObj, dateRangedEntity);\n        if (dateRangedEntity && dateRangedEntity.gueltigkeit) {\n            restObj.gueltigAb = DateUtil_1.default.momentToLocalDate(dateRangedEntity.gueltigkeit.gueltigAb);\n            restObj.gueltigBis = DateUtil_1.default.momentToLocalDate(dateRangedEntity.gueltigkeit.gueltigBis);\n        }\n    };\n    EbeguRestUtil.prototype.parseDateRangeEntity = function (parsedObject, receivedAppProperty) {\n        this.parseAbstractEntity(parsedObject, receivedAppProperty);\n        parsedObject.gueltigkeit = new TSDateRange_1.TSDateRange(DateUtil_1.default.localDateToMoment(receivedAppProperty.gueltigAb), DateUtil_1.default.localDateToMoment(receivedAppProperty.gueltigBis));\n    };\n    EbeguRestUtil.prototype.abstractPensumEntityToRestObject = function (restObj, pensumEntity) {\n        this.abstractDateRangeEntityToRestObject(restObj, pensumEntity);\n        restObj.pensum = pensumEntity.pensum;\n    };\n    EbeguRestUtil.prototype.parseAbstractPensumEntity = function (betreuungspensumTS, betreuungspensumFromServer) {\n        this.parseDateRangeEntity(betreuungspensumTS, betreuungspensumFromServer);\n        betreuungspensumTS.pensum = betreuungspensumFromServer.pensum;\n    };\n    EbeguRestUtil.prototype.abstractAntragEntityToRestObject = function (restObj, antragEntity) {\n        this.abstractEntityToRestObject(restObj, antragEntity);\n        restObj.fall = this.fallToRestObject({}, antragEntity.fall);\n        restObj.gesuchsperiode = this.gesuchsperiodeToRestObject({}, antragEntity.gesuchsperiode);\n        restObj.eingangsdatum = DateUtil_1.default.momentToLocalDate(antragEntity.eingangsdatum);\n        restObj.freigabeDatum = DateUtil_1.default.momentToLocalDate(antragEntity.freigabeDatum);\n        restObj.status = antragEntity.status;\n        restObj.typ = antragEntity.typ;\n        restObj.eingangsart = antragEntity.eingangsart;\n    };\n    EbeguRestUtil.prototype.parseAbstractAntragEntity = function (antragTS, antragFromServer) {\n        this.parseAbstractEntity(antragTS, antragFromServer);\n        antragTS.fall = this.parseFall(new TSFall_1.default(), antragFromServer.fall);\n        antragTS.gesuchsperiode = this.parseGesuchsperiode(new TSGesuchsperiode_1.default(), antragFromServer.gesuchsperiode);\n        antragTS.eingangsdatum = DateUtil_1.default.localDateToMoment(antragFromServer.eingangsdatum);\n        antragTS.freigabeDatum = DateUtil_1.default.localDateToMoment(antragFromServer.freigabeDatum);\n        antragTS.status = antragFromServer.status;\n        antragTS.typ = antragFromServer.typ;\n        antragTS.eingangsart = antragFromServer.eingangsart;\n    };\n    EbeguRestUtil.prototype.adressenListToRestObject = function (adressen) {\n        var restAdressenList = [];\n        if (adressen) {\n            for (var i = 0; i < adressen.length; i++) {\n                restAdressenList.push(this.adresseToRestObject({}, adressen[i]));\n            }\n        }\n        return restAdressenList;\n    };\n    EbeguRestUtil.prototype.adresseToRestObject = function (restAdresse, adresse) {\n        if (adresse) {\n            this.abstractDateRangeEntityToRestObject(restAdresse, adresse);\n            restAdresse.strasse = adresse.strasse;\n            restAdresse.hausnummer = adresse.hausnummer;\n            restAdresse.zusatzzeile = adresse.zusatzzeile;\n            restAdresse.plz = adresse.plz;\n            restAdresse.ort = adresse.ort;\n            restAdresse.land = adresse.land;\n            restAdresse.gemeinde = adresse.gemeinde;\n            restAdresse.adresseTyp = TSAdressetyp_1.TSAdressetyp[adresse.adresseTyp];\n            restAdresse.nichtInGemeinde = adresse.nichtInGemeinde;\n            restAdresse.organisation = adresse.organisation;\n            return restAdresse;\n        }\n        return undefined;\n    };\n    EbeguRestUtil.prototype.parseAdressenList = function (adressen) {\n        var adressenList = [];\n        if (adressen) {\n            for (var i = 0; i < adressen.length; i++) {\n                adressenList.push(this.parseAdresse(new TSAdresse_1.default(), adressen[i]));\n            }\n        }\n        return adressenList;\n    };\n    EbeguRestUtil.prototype.parseAdresse = function (adresseTS, receivedAdresse) {\n        if (receivedAdresse) {\n            this.parseDateRangeEntity(adresseTS, receivedAdresse);\n            adresseTS.strasse = receivedAdresse.strasse;\n            adresseTS.hausnummer = receivedAdresse.hausnummer;\n            adresseTS.zusatzzeile = receivedAdresse.zusatzzeile;\n            adresseTS.plz = receivedAdresse.plz;\n            adresseTS.ort = receivedAdresse.ort;\n            adresseTS.land = (this.landCodeToTSLand(receivedAdresse.land)) ? this.landCodeToTSLand(receivedAdresse.land).code : undefined;\n            adresseTS.gemeinde = receivedAdresse.gemeinde;\n            adresseTS.adresseTyp = receivedAdresse.adresseTyp;\n            adresseTS.nichtInGemeinde = receivedAdresse.nichtInGemeinde;\n            adresseTS.organisation = receivedAdresse.organisation;\n            return adresseTS;\n        }\n        return undefined;\n    };\n    /**\n     * Nimmt den eingegebenen Code und erzeugt ein TSLand Objekt mit dem Code und\n     * seine Uebersetzung.\n     * @param landCode\n     * @returns {any}\n     */\n    EbeguRestUtil.prototype.landCodeToTSLand = function (landCode) {\n        if (landCode) {\n            var translationKey = this.landCodeToTSLandCode(landCode);\n            return new TSLand_1.default(landCode, this.ebeguUtil.translateString(translationKey));\n        }\n        return undefined;\n    };\n    /**\n     * Fügt das 'Land_' dem eingegebenen Landcode hinzu.\n     * @param landCode\n     * @returns {any}\n     */\n    EbeguRestUtil.prototype.landCodeToTSLandCode = function (landCode) {\n        if (landCode) {\n            if (landCode.lastIndexOf('Land_', 0) !== 0) {\n                return 'Land_' + landCode;\n            }\n        }\n        return undefined;\n    };\n    EbeguRestUtil.prototype.gesuchstellerToRestObject = function (restGesuchsteller, gesuchsteller) {\n        if (gesuchsteller) {\n            this.abstractPersonEntitytoRestObject(restGesuchsteller, gesuchsteller);\n            restGesuchsteller.mail = gesuchsteller.mail;\n            restGesuchsteller.mobile = gesuchsteller.mobile || undefined;\n            restGesuchsteller.telefon = gesuchsteller.telefon || undefined;\n            restGesuchsteller.telefonAusland = gesuchsteller.telefonAusland || undefined;\n            restGesuchsteller.diplomatenstatus = gesuchsteller.diplomatenstatus;\n            restGesuchsteller.ewkPersonId = gesuchsteller.ewkPersonId;\n            restGesuchsteller.ewkAbfrageDatum = DateUtil_1.default.momentToLocalDate(gesuchsteller.ewkAbfrageDatum);\n            return restGesuchsteller;\n        }\n        return undefined;\n    };\n    EbeguRestUtil.prototype.parseGesuchsteller = function (gesuchstellerTS, gesuchstellerFromServer) {\n        if (gesuchstellerFromServer) {\n            this.parseAbstractPersonEntity(gesuchstellerTS, gesuchstellerFromServer);\n            gesuchstellerTS.mail = gesuchstellerFromServer.mail;\n            gesuchstellerTS.mobile = gesuchstellerFromServer.mobile;\n            gesuchstellerTS.telefon = gesuchstellerFromServer.telefon;\n            gesuchstellerTS.telefonAusland = gesuchstellerFromServer.telefonAusland;\n            gesuchstellerTS.diplomatenstatus = gesuchstellerFromServer.diplomatenstatus;\n            gesuchstellerTS.ewkPersonId = gesuchstellerFromServer.ewkPersonId;\n            gesuchstellerTS.ewkAbfrageDatum = DateUtil_1.default.localDateToMoment(gesuchstellerFromServer.ewkAbfrageDatum);\n            return gesuchstellerTS;\n        }\n        return undefined;\n    };\n    EbeguRestUtil.prototype.parseErwerbspensumContainer = function (erwerbspensumContainer, ewpContFromServer) {\n        if (ewpContFromServer) {\n            this.parseAbstractEntity(erwerbspensumContainer, ewpContFromServer);\n            erwerbspensumContainer.erwerbspensumGS = this.parseErwerbspensum(erwerbspensumContainer.erwerbspensumGS || new TSErwerbspensum_1.default(), ewpContFromServer.erwerbspensumGS);\n            erwerbspensumContainer.erwerbspensumJA = this.parseErwerbspensum(erwerbspensumContainer.erwerbspensumJA || new TSErwerbspensum_1.default(), ewpContFromServer.erwerbspensumJA);\n            return erwerbspensumContainer;\n        }\n        return undefined;\n    };\n    EbeguRestUtil.prototype.erwerbspensumContainerToRestObject = function (restEwpContainer, erwerbspensumContainer) {\n        if (erwerbspensumContainer) {\n            this.abstractEntityToRestObject(restEwpContainer, erwerbspensumContainer);\n            restEwpContainer.erwerbspensumGS = this.erwerbspensumToRestObject({}, erwerbspensumContainer.erwerbspensumGS);\n            restEwpContainer.erwerbspensumJA = this.erwerbspensumToRestObject({}, erwerbspensumContainer.erwerbspensumJA);\n            return restEwpContainer;\n        }\n        return undefined;\n    };\n    EbeguRestUtil.prototype.parseErwerbspensum = function (erwerbspensum, erwerbspensumFromServer) {\n        if (erwerbspensumFromServer) {\n            this.parseAbstractPensumEntity(erwerbspensum, erwerbspensumFromServer);\n            erwerbspensum.taetigkeit = erwerbspensumFromServer.taetigkeit;\n            erwerbspensum.zuschlagsgrund = erwerbspensumFromServer.zuschlagsgrund;\n            erwerbspensum.zuschlagsprozent = erwerbspensumFromServer.zuschlagsprozent;\n            erwerbspensum.zuschlagZuErwerbspensum = erwerbspensumFromServer.zuschlagZuErwerbspensum;\n            erwerbspensum.bezeichnung = erwerbspensumFromServer.bezeichnung;\n            return erwerbspensum;\n        }\n        else {\n            return undefined;\n        }\n    };\n    EbeguRestUtil.prototype.erwerbspensumToRestObject = function (restErwerbspensum, erwerbspensum) {\n        if (erwerbspensum) {\n            this.abstractPensumEntityToRestObject(restErwerbspensum, erwerbspensum);\n            restErwerbspensum.taetigkeit = erwerbspensum.taetigkeit;\n            restErwerbspensum.zuschlagsgrund = erwerbspensum.zuschlagsgrund;\n            restErwerbspensum.zuschlagsprozent = erwerbspensum.zuschlagsprozent;\n            restErwerbspensum.zuschlagZuErwerbspensum = erwerbspensum.zuschlagZuErwerbspensum;\n            restErwerbspensum.bezeichnung = erwerbspensum.bezeichnung;\n            return restErwerbspensum;\n        }\n        return undefined;\n    };\n    EbeguRestUtil.prototype.familiensituationToRestObject = function (restFamiliensituation, familiensituation) {\n        if (familiensituation) {\n            this.abstractEntityToRestObject(restFamiliensituation, familiensituation);\n            restFamiliensituation.familienstatus = familiensituation.familienstatus;\n            restFamiliensituation.gesuchstellerKardinalitaet = familiensituation.gesuchstellerKardinalitaet;\n            restFamiliensituation.gemeinsameSteuererklaerung = familiensituation.gemeinsameSteuererklaerung;\n            restFamiliensituation.aenderungPer = DateUtil_1.default.momentToLocalDate(familiensituation.aenderungPer);\n            restFamiliensituation.sozialhilfeBezueger = familiensituation.sozialhilfeBezueger;\n            restFamiliensituation.verguenstigungGewuenscht = familiensituation.verguenstigungGewuenscht;\n            return restFamiliensituation;\n        }\n        return undefined;\n    };\n    EbeguRestUtil.prototype.einkommensverschlechterungInfoContainerToRestObject = function (restEinkommensverschlechterungInfoContainer, einkommensverschlechterungInfoContainer) {\n        if (einkommensverschlechterungInfoContainer) {\n            this.abstractEntityToRestObject(restEinkommensverschlechterungInfoContainer, einkommensverschlechterungInfoContainer);\n            if (einkommensverschlechterungInfoContainer.einkommensverschlechterungInfoGS) {\n                restEinkommensverschlechterungInfoContainer.einkommensverschlechterungInfoGS =\n                    this.einkommensverschlechterungInfoToRestObject({}, einkommensverschlechterungInfoContainer.einkommensverschlechterungInfoGS);\n            }\n            if (einkommensverschlechterungInfoContainer.einkommensverschlechterungInfoJA) {\n                restEinkommensverschlechterungInfoContainer.einkommensverschlechterungInfoJA =\n                    this.einkommensverschlechterungInfoToRestObject({}, einkommensverschlechterungInfoContainer.einkommensverschlechterungInfoJA);\n            }\n            return restEinkommensverschlechterungInfoContainer;\n        }\n        return undefined;\n    };\n    EbeguRestUtil.prototype.einkommensverschlechterungInfoToRestObject = function (restEinkommensverschlechterungInfo, einkommensverschlechterungInfo) {\n        if (einkommensverschlechterungInfo) {\n            this.abstractEntityToRestObject(restEinkommensverschlechterungInfo, einkommensverschlechterungInfo);\n            restEinkommensverschlechterungInfo.einkommensverschlechterung = einkommensverschlechterungInfo.einkommensverschlechterung;\n            restEinkommensverschlechterungInfo.ekvFuerBasisJahrPlus1 = einkommensverschlechterungInfo.ekvFuerBasisJahrPlus1;\n            restEinkommensverschlechterungInfo.ekvFuerBasisJahrPlus2 = einkommensverschlechterungInfo.ekvFuerBasisJahrPlus2;\n            restEinkommensverschlechterungInfo.grundFuerBasisJahrPlus1 = einkommensverschlechterungInfo.grundFuerBasisJahrPlus1;\n            restEinkommensverschlechterungInfo.grundFuerBasisJahrPlus2 = einkommensverschlechterungInfo.grundFuerBasisJahrPlus2;\n            restEinkommensverschlechterungInfo.stichtagFuerBasisJahrPlus1 = DateUtil_1.default.momentToLocalDate(einkommensverschlechterungInfo.stichtagFuerBasisJahrPlus1);\n            restEinkommensverschlechterungInfo.stichtagFuerBasisJahrPlus2 = DateUtil_1.default.momentToLocalDate(einkommensverschlechterungInfo.stichtagFuerBasisJahrPlus2);\n            restEinkommensverschlechterungInfo.gemeinsameSteuererklaerung_BjP1 = einkommensverschlechterungInfo.gemeinsameSteuererklaerung_BjP1;\n            restEinkommensverschlechterungInfo.gemeinsameSteuererklaerung_BjP2 = einkommensverschlechterungInfo.gemeinsameSteuererklaerung_BjP2;\n            restEinkommensverschlechterungInfo.ekvBasisJahrPlus1Annulliert = einkommensverschlechterungInfo.ekvBasisJahrPlus1Annulliert;\n            restEinkommensverschlechterungInfo.ekvBasisJahrPlus2Annulliert = einkommensverschlechterungInfo.ekvBasisJahrPlus2Annulliert;\n            return restEinkommensverschlechterungInfo;\n        }\n        return undefined;\n    };\n    EbeguRestUtil.prototype.parseFamiliensituation = function (familiensituation, familiensituationFromServer) {\n        if (familiensituationFromServer) {\n            this.parseAbstractEntity(familiensituation, familiensituationFromServer);\n            familiensituation.familienstatus = familiensituationFromServer.familienstatus;\n            familiensituation.gesuchstellerKardinalitaet = familiensituationFromServer.gesuchstellerKardinalitaet;\n            familiensituation.gemeinsameSteuererklaerung = familiensituationFromServer.gemeinsameSteuererklaerung;\n            familiensituation.aenderungPer = DateUtil_1.default.localDateToMoment(familiensituationFromServer.aenderungPer);\n            familiensituation.sozialhilfeBezueger = familiensituationFromServer.sozialhilfeBezueger;\n            familiensituation.verguenstigungGewuenscht = familiensituationFromServer.verguenstigungGewuenscht;\n            return familiensituation;\n        }\n        return undefined;\n    };\n    EbeguRestUtil.prototype.parseFamiliensituationContainer = function (containerTS, containerFromServer) {\n        if (containerFromServer) {\n            this.parseAbstractEntity(containerTS, containerFromServer);\n            containerTS.familiensituationGS = this.parseFamiliensituation(containerTS.familiensituationGS\n                || new TSFamiliensituation_1.default(), containerFromServer.familiensituationGS);\n            containerTS.familiensituationJA = this.parseFamiliensituation(containerTS.familiensituationJA\n                || new TSFamiliensituation_1.default(), containerFromServer.familiensituationJA);\n            containerTS.familiensituationErstgesuch = this.parseFamiliensituation(containerTS.familiensituationErstgesuch\n                || new TSFamiliensituation_1.default(), containerFromServer.familiensituationErstgesuch);\n            return containerTS;\n        }\n        return undefined;\n    };\n    EbeguRestUtil.prototype.familiensituationContainerToRestObject = function (restFamiliensituationContainer, familiensituationContainer) {\n        if (familiensituationContainer) {\n            this.abstractEntityToRestObject(restFamiliensituationContainer, familiensituationContainer);\n            if (familiensituationContainer.familiensituationJA) {\n                restFamiliensituationContainer.familiensituationJA =\n                    this.familiensituationToRestObject({}, familiensituationContainer.familiensituationJA);\n            }\n            if (familiensituationContainer.familiensituationErstgesuch) {\n                restFamiliensituationContainer.familiensituationErstgesuch =\n                    this.familiensituationToRestObject({}, familiensituationContainer.familiensituationErstgesuch);\n            }\n            if (familiensituationContainer.familiensituationGS) {\n                restFamiliensituationContainer.familiensituationGS =\n                    this.familiensituationToRestObject({}, familiensituationContainer.familiensituationGS);\n            }\n            return restFamiliensituationContainer;\n        }\n        return undefined;\n    };\n    EbeguRestUtil.prototype.parseEinkommensverschlechterungInfo = function (einkommensverschlechterungInfo, einkommensverschlechterungInfoFromServer) {\n        if (einkommensverschlechterungInfoFromServer) {\n            this.parseAbstractEntity(einkommensverschlechterungInfo, einkommensverschlechterungInfoFromServer);\n            einkommensverschlechterungInfo.einkommensverschlechterung = einkommensverschlechterungInfoFromServer.einkommensverschlechterung;\n            einkommensverschlechterungInfo.ekvFuerBasisJahrPlus1 = einkommensverschlechterungInfoFromServer.ekvFuerBasisJahrPlus1;\n            einkommensverschlechterungInfo.ekvFuerBasisJahrPlus2 = einkommensverschlechterungInfoFromServer.ekvFuerBasisJahrPlus2;\n            einkommensverschlechterungInfo.grundFuerBasisJahrPlus1 = einkommensverschlechterungInfoFromServer.grundFuerBasisJahrPlus1;\n            einkommensverschlechterungInfo.grundFuerBasisJahrPlus2 = einkommensverschlechterungInfoFromServer.grundFuerBasisJahrPlus2;\n            einkommensverschlechterungInfo.stichtagFuerBasisJahrPlus1 = DateUtil_1.default.localDateToMoment(einkommensverschlechterungInfoFromServer.stichtagFuerBasisJahrPlus1);\n            einkommensverschlechterungInfo.stichtagFuerBasisJahrPlus2 = DateUtil_1.default.localDateToMoment(einkommensverschlechterungInfoFromServer.stichtagFuerBasisJahrPlus2);\n            einkommensverschlechterungInfo.gemeinsameSteuererklaerung_BjP1 = einkommensverschlechterungInfoFromServer.gemeinsameSteuererklaerung_BjP1;\n            einkommensverschlechterungInfo.gemeinsameSteuererklaerung_BjP2 = einkommensverschlechterungInfoFromServer.gemeinsameSteuererklaerung_BjP2;\n            einkommensverschlechterungInfo.ekvBasisJahrPlus1Annulliert = einkommensverschlechterungInfoFromServer.ekvBasisJahrPlus1Annulliert;\n            einkommensverschlechterungInfo.ekvBasisJahrPlus2Annulliert = einkommensverschlechterungInfoFromServer.ekvBasisJahrPlus2Annulliert;\n            return einkommensverschlechterungInfo;\n        }\n        return undefined;\n    };\n    EbeguRestUtil.prototype.parseEinkommensverschlechterungInfoContainer = function (containerTS, containerFromServer) {\n        if (containerFromServer) {\n            this.parseAbstractEntity(containerTS, containerFromServer);\n            containerTS.einkommensverschlechterungInfoGS = this.parseEinkommensverschlechterungInfo(containerTS.einkommensverschlechterungInfoGS\n                || new TSEinkommensverschlechterungInfo_1.default(), containerFromServer.einkommensverschlechterungInfoGS);\n            containerTS.einkommensverschlechterungInfoJA = this.parseEinkommensverschlechterungInfo(containerTS.einkommensverschlechterungInfoJA\n                || new TSEinkommensverschlechterungInfo_1.default(), containerFromServer.einkommensverschlechterungInfoJA);\n            return containerTS;\n        }\n        return undefined;\n    };\n    EbeguRestUtil.prototype.fallToRestObject = function (restFall, fall) {\n        if (fall) {\n            this.abstractEntityToRestObject(restFall, fall);\n            restFall.fallNummer = fall.fallNummer;\n            restFall.verantwortlicher = this.userToRestObject({}, fall.verantwortlicher);\n            restFall.verantwortlicherSCH = this.userToRestObject({}, fall.verantwortlicherSCH);\n            restFall.nextNumberKind = fall.nextNumberKind;\n            restFall.besitzer = this.userToRestObject({}, fall.besitzer);\n            return restFall;\n        }\n        return undefined;\n    };\n    EbeguRestUtil.prototype.parseFall = function (fallTS, fallFromServer) {\n        if (fallFromServer) {\n            this.parseAbstractEntity(fallTS, fallFromServer);\n            fallTS.fallNummer = fallFromServer.fallNummer;\n            fallTS.verantwortlicher = this.parseUser(new TSUser_1.default(), fallFromServer.verantwortlicher);\n            fallTS.verantwortlicherSCH = this.parseUser(new TSUser_1.default(), fallFromServer.verantwortlicherSCH);\n            fallTS.nextNumberKind = fallFromServer.nextNumberKind;\n            fallTS.besitzer = this.parseUser(new TSUser_1.default(), fallFromServer.besitzer);\n            return fallTS;\n        }\n        return undefined;\n    };\n    EbeguRestUtil.prototype.gesuchToRestObject = function (restGesuch, gesuch) {\n        this.abstractAntragEntityToRestObject(restGesuch, gesuch);\n        restGesuch.einkommensverschlechterungInfoContainer = this.einkommensverschlechterungInfoContainerToRestObject({}, gesuch.einkommensverschlechterungInfoContainer);\n        restGesuch.gesuchsteller1 = this.gesuchstellerContainerToRestObject({}, gesuch.gesuchsteller1);\n        restGesuch.gesuchsteller2 = this.gesuchstellerContainerToRestObject({}, gesuch.gesuchsteller2);\n        restGesuch.familiensituationContainer = this.familiensituationContainerToRestObject({}, gesuch.familiensituationContainer);\n        restGesuch.bemerkungen = gesuch.bemerkungen;\n        restGesuch.bemerkungenSTV = gesuch.bemerkungenSTV;\n        restGesuch.bemerkungenPruefungSTV = gesuch.bemerkungenPruefungSTV;\n        restGesuch.laufnummer = gesuch.laufnummer;\n        restGesuch.gesuchBetreuungenStatus = gesuch.gesuchBetreuungenStatus;\n        restGesuch.geprueftSTV = gesuch.geprueftSTV;\n        restGesuch.hasFSDokument = gesuch.hasFSDokument;\n        restGesuch.gesperrtWegenBeschwerde = gesuch.gesperrtWegenBeschwerde;\n        restGesuch.datumGewarntNichtFreigegeben = DateUtil_1.default.momentToLocalDate(gesuch.datumGewarntNichtFreigegeben);\n        restGesuch.datumGewarntFehlendeQuittung = DateUtil_1.default.momentToLocalDate(gesuch.datumGewarntFehlendeQuittung);\n        restGesuch.timestampVerfuegt = DateUtil_1.default.momentToLocalDateTime(gesuch.timestampVerfuegt);\n        restGesuch.gueltig = gesuch.gueltig;\n        restGesuch.dokumenteHochgeladen = gesuch.dokumenteHochgeladen;\n        restGesuch.finSitStatus = gesuch.finSitStatus;\n        return restGesuch;\n    };\n    EbeguRestUtil.prototype.parseGesuch = function (gesuchTS, gesuchFromServer) {\n        if (gesuchFromServer) {\n            this.parseAbstractAntragEntity(gesuchTS, gesuchFromServer);\n            gesuchTS.einkommensverschlechterungInfoContainer = this.parseEinkommensverschlechterungInfoContainer(new TSEinkommensverschlechterungInfoContainer_1.default(), gesuchFromServer.einkommensverschlechterungInfoContainer);\n            gesuchTS.gesuchsteller1 = this.parseGesuchstellerContainer(new TSGesuchstellerContainer_1.default(), gesuchFromServer.gesuchsteller1);\n            gesuchTS.gesuchsteller2 = this.parseGesuchstellerContainer(new TSGesuchstellerContainer_1.default(), gesuchFromServer.gesuchsteller2);\n            gesuchTS.familiensituationContainer = this.parseFamiliensituationContainer(new TSFamiliensituationContainer_1.default(), gesuchFromServer.familiensituationContainer);\n            gesuchTS.kindContainers = this.parseKindContainerList(gesuchFromServer.kindContainers);\n            gesuchTS.bemerkungen = gesuchFromServer.bemerkungen;\n            gesuchTS.bemerkungenSTV = gesuchFromServer.bemerkungenSTV;\n            gesuchTS.bemerkungenPruefungSTV = gesuchFromServer.bemerkungenPruefungSTV;\n            gesuchTS.laufnummer = gesuchFromServer.laufnummer;\n            gesuchTS.gesuchBetreuungenStatus = gesuchFromServer.gesuchBetreuungenStatus;\n            gesuchTS.geprueftSTV = gesuchFromServer.geprueftSTV;\n            gesuchTS.hasFSDokument = gesuchFromServer.hasFSDokument;\n            gesuchTS.gesperrtWegenBeschwerde = gesuchFromServer.gesperrtWegenBeschwerde;\n            gesuchTS.datumGewarntNichtFreigegeben = DateUtil_1.default.localDateToMoment(gesuchFromServer.datumGewarntNichtFreigegeben);\n            gesuchTS.datumGewarntFehlendeQuittung = DateUtil_1.default.localDateToMoment(gesuchFromServer.datumGewarntFehlendeQuittung);\n            gesuchTS.timestampVerfuegt = DateUtil_1.default.localDateTimeToMoment(gesuchFromServer.timestampVerfuegt);\n            gesuchTS.gueltig = gesuchFromServer.gueltig;\n            gesuchTS.dokumenteHochgeladen = gesuchFromServer.dokumenteHochgeladen;\n            gesuchTS.finSitStatus = gesuchFromServer.finSitStatus;\n            return gesuchTS;\n        }\n        return undefined;\n    };\n    EbeguRestUtil.prototype.fachstelleToRestObject = function (restFachstelle, fachstelle) {\n        this.abstractEntityToRestObject(restFachstelle, fachstelle);\n        restFachstelle.name = fachstelle.name;\n        restFachstelle.beschreibung = fachstelle.beschreibung;\n        restFachstelle.behinderungsbestaetigung = fachstelle.behinderungsbestaetigung;\n        return restFachstelle;\n    };\n    EbeguRestUtil.prototype.parseFachstellen = function (data) {\n        var fachstellen = [];\n        if (data && Array.isArray(data)) {\n            for (var i = 0; i < data.length; i++) {\n                fachstellen[i] = this.parseFachstelle(new TSFachstelle_1.TSFachstelle(), data[i]);\n            }\n        }\n        else {\n            fachstellen[0] = this.parseFachstelle(new TSFachstelle_1.TSFachstelle(), data);\n        }\n        return fachstellen;\n    };\n    EbeguRestUtil.prototype.parseFachstelle = function (parsedFachstelle, receivedFachstelle) {\n        this.parseAbstractEntity(parsedFachstelle, receivedFachstelle);\n        parsedFachstelle.name = receivedFachstelle.name;\n        parsedFachstelle.beschreibung = receivedFachstelle.beschreibung;\n        parsedFachstelle.behinderungsbestaetigung = receivedFachstelle.behinderungsbestaetigung;\n        return parsedFachstelle;\n    };\n    EbeguRestUtil.prototype.mandantToRestObject = function (restMandant, mandant) {\n        if (mandant) {\n            this.abstractEntityToRestObject(restMandant, mandant);\n            restMandant.name = mandant.name;\n            return restMandant;\n        }\n        return undefined;\n    };\n    EbeguRestUtil.prototype.parseMandant = function (mandantTS, mandantFromServer) {\n        if (mandantFromServer) {\n            this.parseAbstractEntity(mandantTS, mandantFromServer);\n            mandantTS.name = mandantFromServer.name;\n            return mandantTS;\n        }\n        return undefined;\n    };\n    EbeguRestUtil.prototype.traegerschaftToRestObject = function (restTragerschaft, traegerschaft) {\n        if (traegerschaft) {\n            this.abstractEntityToRestObject(restTragerschaft, traegerschaft);\n            restTragerschaft.name = traegerschaft.name;\n            restTragerschaft.active = traegerschaft.active;\n            restTragerschaft.mail = traegerschaft.mail;\n            return restTragerschaft;\n        }\n        return undefined;\n    };\n    EbeguRestUtil.prototype.parseTraegerschaften = function (data) {\n        var traegerschaftenen = [];\n        if (data && Array.isArray(data)) {\n            for (var i = 0; i < data.length; i++) {\n                traegerschaftenen[i] = this.parseTraegerschaft(new TSTraegerschaft_1.TSTraegerschaft(), data[i]);\n            }\n        }\n        else {\n            traegerschaftenen[0] = this.parseTraegerschaft(new TSTraegerschaft_1.TSTraegerschaft(), data);\n        }\n        return traegerschaftenen;\n    };\n    EbeguRestUtil.prototype.parseTraegerschaft = function (traegerschaftTS, traegerschaftFromServer) {\n        if (traegerschaftFromServer) {\n            this.parseAbstractEntity(traegerschaftTS, traegerschaftFromServer);\n            traegerschaftTS.name = traegerschaftFromServer.name;\n            traegerschaftTS.active = traegerschaftFromServer.active;\n            traegerschaftTS.synchronizedWithOpenIdm = traegerschaftFromServer.synchronizedWithOpenIdm;\n            traegerschaftTS.mail = traegerschaftFromServer.mail;\n            return traegerschaftTS;\n        }\n        return undefined;\n    };\n    EbeguRestUtil.prototype.institutionToRestObject = function (restInstitution, institution) {\n        if (institution) {\n            this.abstractEntityToRestObject(restInstitution, institution);\n            restInstitution.name = institution.name;\n            restInstitution.mandant = this.mandantToRestObject({}, institution.mandant);\n            restInstitution.traegerschaft = this.traegerschaftToRestObject({}, institution.traegerschaft);\n            restInstitution.mail = institution.mail;\n            return restInstitution;\n        }\n        return undefined;\n    };\n    EbeguRestUtil.prototype.parseInstitution = function (institutionTS, institutionFromServer) {\n        if (institutionFromServer) {\n            this.parseAbstractEntity(institutionTS, institutionFromServer);\n            institutionTS.name = institutionFromServer.name;\n            institutionTS.mandant = this.parseMandant(new TSMandant_1.TSMandant(), institutionFromServer.mandant);\n            institutionTS.traegerschaft = this.parseTraegerschaft(new TSTraegerschaft_1.TSTraegerschaft(), institutionFromServer.traegerschaft);\n            institutionTS.synchronizedWithOpenIdm = institutionFromServer.synchronizedWithOpenIdm;\n            institutionTS.mail = institutionFromServer.mail;\n            return institutionTS;\n        }\n        return undefined;\n    };\n    EbeguRestUtil.prototype.parseInstitutionen = function (data) {\n        var institutionen = [];\n        if (data && Array.isArray(data)) {\n            for (var i = 0; i < data.length; i++) {\n                institutionen[i] = this.parseInstitution(new TSInstitution_1.default(), data[i]);\n            }\n        }\n        else {\n            institutionen[0] = this.parseInstitution(new TSInstitution_1.default(), data);\n        }\n        return institutionen;\n    };\n    EbeguRestUtil.prototype.institutionStammdatenToRestObject = function (restInstitutionStammdaten, institutionStammdaten) {\n        if (institutionStammdaten) {\n            this.abstractDateRangeEntityToRestObject(restInstitutionStammdaten, institutionStammdaten);\n            restInstitutionStammdaten.iban = institutionStammdaten.iban;\n            restInstitutionStammdaten.oeffnungsstunden = institutionStammdaten.oeffnungsstunden;\n            restInstitutionStammdaten.oeffnungstage = institutionStammdaten.oeffnungstage;\n            restInstitutionStammdaten.betreuungsangebotTyp = institutionStammdaten.betreuungsangebotTyp;\n            restInstitutionStammdaten.institution = this.institutionToRestObject({}, institutionStammdaten.institution);\n            restInstitutionStammdaten.adresse = this.adresseToRestObject({}, institutionStammdaten.adresse);\n            restInstitutionStammdaten.kontoinhaber = institutionStammdaten.kontoinhaber;\n            restInstitutionStammdaten.adresseKontoinhaber = this.adresseToRestObject({}, institutionStammdaten.adresseKontoinhaber);\n            restInstitutionStammdaten.institutionStammdatenTagesschule = this.institutionStammdatenTagesschuleToRestObject({}, institutionStammdaten.institutionStammdatenTagesschule);\n            return restInstitutionStammdaten;\n        }\n        return undefined;\n    };\n    EbeguRestUtil.prototype.parseInstitutionStammdaten = function (institutionStammdatenTS, institutionStammdatenFromServer) {\n        if (institutionStammdatenFromServer) {\n            this.parseDateRangeEntity(institutionStammdatenTS, institutionStammdatenFromServer);\n            institutionStammdatenTS.iban = institutionStammdatenFromServer.iban;\n            institutionStammdatenTS.oeffnungsstunden = institutionStammdatenFromServer.oeffnungsstunden;\n            institutionStammdatenTS.oeffnungstage = institutionStammdatenFromServer.oeffnungstage;\n            institutionStammdatenTS.betreuungsangebotTyp = institutionStammdatenFromServer.betreuungsangebotTyp;\n            institutionStammdatenTS.institution = this.parseInstitution(new TSInstitution_1.default(), institutionStammdatenFromServer.institution);\n            institutionStammdatenTS.adresse = this.parseAdresse(new TSAdresse_1.default(), institutionStammdatenFromServer.adresse);\n            institutionStammdatenTS.kontoinhaber = institutionStammdatenFromServer.kontoinhaber;\n            institutionStammdatenTS.adresseKontoinhaber = this.parseAdresse(new TSAdresse_1.default(), institutionStammdatenFromServer.adresseKontoinhaber);\n            institutionStammdatenTS.institutionStammdatenTagesschule = this.parseInstitutionStammdatenTagesschule(new TSInstitutionStammdatenTagesschule_1.default(), institutionStammdatenFromServer.institutionStammdatenTagesschule);\n            return institutionStammdatenTS;\n        }\n        return undefined;\n    };\n    EbeguRestUtil.prototype.parseInstitutionStammdatenArray = function (data) {\n        var institutionStammdaten = [];\n        if (data && Array.isArray(data)) {\n            for (var i = 0; i < data.length; i++) {\n                institutionStammdaten[i] = this.parseInstitutionStammdaten(new TSInstitutionStammdaten_1.default(), data[i]);\n            }\n        }\n        else {\n            institutionStammdaten[0] = this.parseInstitutionStammdaten(new TSInstitutionStammdaten_1.default(), data);\n        }\n        return institutionStammdaten;\n    };\n    EbeguRestUtil.prototype.institutionStammdatenTagesschuleToRestObject = function (restInstitutionStammdatenTagesschule, institutionStammdatenTagesschule) {\n        if (institutionStammdatenTagesschule) {\n            this.abstractEntityToRestObject(restInstitutionStammdatenTagesschule, institutionStammdatenTagesschule);\n            restInstitutionStammdatenTagesschule.moduleTagesschule = this.moduleTagesschuleArrayToRestObject(institutionStammdatenTagesschule.moduleTagesschule);\n            return restInstitutionStammdatenTagesschule;\n        }\n        return undefined;\n    };\n    EbeguRestUtil.prototype.parseInstitutionStammdatenTagesschule = function (institutionStammdatenTagesschuleTS, institutionStammdatenTagesschuleFromServer) {\n        if (institutionStammdatenTagesschuleFromServer) {\n            this.parseAbstractEntity(institutionStammdatenTagesschuleTS, institutionStammdatenTagesschuleFromServer);\n            institutionStammdatenTagesschuleTS.moduleTagesschule = this.parseModuleTagesschuleArray(institutionStammdatenTagesschuleFromServer.moduleTagesschule);\n            return institutionStammdatenTagesschuleTS;\n        }\n        return undefined;\n    };\n    EbeguRestUtil.prototype.finanzielleSituationContainerToRestObject = function (restFinanzielleSituationContainer, finanzielleSituationContainer) {\n        this.abstractEntityToRestObject(restFinanzielleSituationContainer, finanzielleSituationContainer);\n        restFinanzielleSituationContainer.jahr = finanzielleSituationContainer.jahr;\n        if (finanzielleSituationContainer.finanzielleSituationGS) {\n            restFinanzielleSituationContainer.finanzielleSituationGS = this.finanzielleSituationToRestObject({}, finanzielleSituationContainer.finanzielleSituationGS);\n        }\n        if (finanzielleSituationContainer.finanzielleSituationJA) {\n            restFinanzielleSituationContainer.finanzielleSituationJA = this.finanzielleSituationToRestObject({}, finanzielleSituationContainer.finanzielleSituationJA);\n        }\n        return restFinanzielleSituationContainer;\n    };\n    EbeguRestUtil.prototype.parseFinanzielleSituationContainer = function (containerTS, containerFromServer) {\n        if (containerFromServer) {\n            this.parseAbstractEntity(containerTS, containerFromServer);\n            containerTS.jahr = containerFromServer.jahr;\n            containerTS.finanzielleSituationGS = this.parseFinanzielleSituation(containerTS.finanzielleSituationGS || new TSFinanzielleSituation_1.default(), containerFromServer.finanzielleSituationGS);\n            containerTS.finanzielleSituationJA = this.parseFinanzielleSituation(containerTS.finanzielleSituationJA || new TSFinanzielleSituation_1.default(), containerFromServer.finanzielleSituationJA);\n            return containerTS;\n        }\n        return undefined;\n    };\n    EbeguRestUtil.prototype.finanzielleSituationToRestObject = function (restFinanzielleSituation, finanzielleSituation) {\n        this.abstractfinanzielleSituationToRestObject(restFinanzielleSituation, finanzielleSituation);\n        restFinanzielleSituation.nettolohn = finanzielleSituation.nettolohn;\n        restFinanzielleSituation.geschaeftsgewinnBasisjahrMinus2 = finanzielleSituation.geschaeftsgewinnBasisjahrMinus2;\n        restFinanzielleSituation.geschaeftsgewinnBasisjahrMinus1 = finanzielleSituation.geschaeftsgewinnBasisjahrMinus1;\n        return restFinanzielleSituation;\n    };\n    EbeguRestUtil.prototype.abstractfinanzielleSituationToRestObject = function (restAbstractFinanzielleSituation, abstractFinanzielleSituation) {\n        this.abstractEntityToRestObject(restAbstractFinanzielleSituation, abstractFinanzielleSituation);\n        restAbstractFinanzielleSituation.steuerveranlagungErhalten = abstractFinanzielleSituation.steuerveranlagungErhalten;\n        restAbstractFinanzielleSituation.steuererklaerungAusgefuellt = abstractFinanzielleSituation.steuererklaerungAusgefuellt || false;\n        restAbstractFinanzielleSituation.familienzulage = abstractFinanzielleSituation.familienzulage;\n        restAbstractFinanzielleSituation.ersatzeinkommen = abstractFinanzielleSituation.ersatzeinkommen;\n        restAbstractFinanzielleSituation.erhalteneAlimente = abstractFinanzielleSituation.erhalteneAlimente;\n        restAbstractFinanzielleSituation.bruttovermoegen = abstractFinanzielleSituation.bruttovermoegen;\n        restAbstractFinanzielleSituation.schulden = abstractFinanzielleSituation.schulden;\n        restAbstractFinanzielleSituation.geschaeftsgewinnBasisjahr = abstractFinanzielleSituation.geschaeftsgewinnBasisjahr;\n        restAbstractFinanzielleSituation.geleisteteAlimente = abstractFinanzielleSituation.geleisteteAlimente;\n        return restAbstractFinanzielleSituation;\n    };\n    EbeguRestUtil.prototype.parseAbstractFinanzielleSituation = function (abstractFinanzielleSituationTS, abstractFinanzielleSituationFromServer) {\n        if (abstractFinanzielleSituationFromServer) {\n            this.parseAbstractEntity(abstractFinanzielleSituationTS, abstractFinanzielleSituationFromServer);\n            abstractFinanzielleSituationTS.steuerveranlagungErhalten = abstractFinanzielleSituationFromServer.steuerveranlagungErhalten;\n            abstractFinanzielleSituationTS.steuererklaerungAusgefuellt = abstractFinanzielleSituationFromServer.steuererklaerungAusgefuellt;\n            abstractFinanzielleSituationTS.familienzulage = abstractFinanzielleSituationFromServer.familienzulage;\n            abstractFinanzielleSituationTS.ersatzeinkommen = abstractFinanzielleSituationFromServer.ersatzeinkommen;\n            abstractFinanzielleSituationTS.erhalteneAlimente = abstractFinanzielleSituationFromServer.erhalteneAlimente;\n            abstractFinanzielleSituationTS.bruttovermoegen = abstractFinanzielleSituationFromServer.bruttovermoegen;\n            abstractFinanzielleSituationTS.schulden = abstractFinanzielleSituationFromServer.schulden;\n            abstractFinanzielleSituationTS.geschaeftsgewinnBasisjahr = abstractFinanzielleSituationFromServer.geschaeftsgewinnBasisjahr;\n            abstractFinanzielleSituationTS.geleisteteAlimente = abstractFinanzielleSituationFromServer.geleisteteAlimente;\n            return abstractFinanzielleSituationTS;\n        }\n        return undefined;\n    };\n    EbeguRestUtil.prototype.parseFinanzielleSituation = function (finanzielleSituationTS, finanzielleSituationFromServer) {\n        if (finanzielleSituationFromServer) {\n            this.parseAbstractFinanzielleSituation(finanzielleSituationTS, finanzielleSituationFromServer);\n            finanzielleSituationTS.nettolohn = finanzielleSituationFromServer.nettolohn;\n            finanzielleSituationTS.geschaeftsgewinnBasisjahrMinus2 = finanzielleSituationFromServer.geschaeftsgewinnBasisjahrMinus2;\n            finanzielleSituationTS.geschaeftsgewinnBasisjahrMinus1 = finanzielleSituationFromServer.geschaeftsgewinnBasisjahrMinus1;\n            return finanzielleSituationTS;\n        }\n        return undefined;\n    };\n    EbeguRestUtil.prototype.finanzielleSituationResultateToRestObject = function (restFinanzielleSituationResultate, finanzielleSituationResultateDTO) {\n        restFinanzielleSituationResultate.geschaeftsgewinnDurchschnittGesuchsteller1 = finanzielleSituationResultateDTO.geschaeftsgewinnDurchschnittGesuchsteller1;\n        restFinanzielleSituationResultate.geschaeftsgewinnDurchschnittGesuchsteller2 = finanzielleSituationResultateDTO.geschaeftsgewinnDurchschnittGesuchsteller2;\n        restFinanzielleSituationResultate.einkommenBeiderGesuchsteller = finanzielleSituationResultateDTO.einkommenBeiderGesuchsteller;\n        restFinanzielleSituationResultate.nettovermoegenFuenfProzent = finanzielleSituationResultateDTO.nettovermoegenFuenfProzent;\n        restFinanzielleSituationResultate.anrechenbaresEinkommen = finanzielleSituationResultateDTO.anrechenbaresEinkommen;\n        restFinanzielleSituationResultate.abzuegeBeiderGesuchsteller = finanzielleSituationResultateDTO.abzuegeBeiderGesuchsteller;\n        restFinanzielleSituationResultate.massgebendesEinkVorAbzFamGr = finanzielleSituationResultateDTO.massgebendesEinkVorAbzFamGr;\n        return restFinanzielleSituationResultate;\n    };\n    EbeguRestUtil.prototype.parseFinanzielleSituationResultate = function (finanzielleSituationResultateDTO, finanzielleSituationResultateFromServer) {\n        if (finanzielleSituationResultateFromServer) {\n            finanzielleSituationResultateDTO.geschaeftsgewinnDurchschnittGesuchsteller1 = finanzielleSituationResultateFromServer.geschaeftsgewinnDurchschnittGesuchsteller1;\n            finanzielleSituationResultateDTO.geschaeftsgewinnDurchschnittGesuchsteller2 = finanzielleSituationResultateFromServer.geschaeftsgewinnDurchschnittGesuchsteller2;\n            finanzielleSituationResultateDTO.einkommenBeiderGesuchsteller = finanzielleSituationResultateFromServer.einkommenBeiderGesuchsteller;\n            finanzielleSituationResultateDTO.nettovermoegenFuenfProzent = finanzielleSituationResultateFromServer.nettovermoegenFuenfProzent;\n            finanzielleSituationResultateDTO.anrechenbaresEinkommen = finanzielleSituationResultateFromServer.anrechenbaresEinkommen;\n            finanzielleSituationResultateDTO.abzuegeBeiderGesuchsteller = finanzielleSituationResultateFromServer.abzuegeBeiderGesuchsteller;\n            finanzielleSituationResultateDTO.massgebendesEinkVorAbzFamGr = finanzielleSituationResultateFromServer.massgebendesEinkVorAbzFamGr;\n            return finanzielleSituationResultateDTO;\n        }\n        return undefined;\n    };\n    EbeguRestUtil.prototype.einkommensverschlechterungContainerToRestObject = function (restEinkommensverschlechterungContainer, einkommensverschlechterungContainer) {\n        this.abstractEntityToRestObject(restEinkommensverschlechterungContainer, einkommensverschlechterungContainer);\n        if (einkommensverschlechterungContainer.ekvGSBasisJahrPlus1) {\n            restEinkommensverschlechterungContainer.ekvGSBasisJahrPlus1 =\n                this.einkommensverschlechterungToRestObject({}, einkommensverschlechterungContainer.ekvGSBasisJahrPlus1);\n        }\n        if (einkommensverschlechterungContainer.ekvGSBasisJahrPlus2) {\n            restEinkommensverschlechterungContainer.ekvGSBasisJahrPlus2 =\n                this.einkommensverschlechterungToRestObject({}, einkommensverschlechterungContainer.ekvGSBasisJahrPlus2);\n        }\n        if (einkommensverschlechterungContainer.ekvJABasisJahrPlus1) {\n            restEinkommensverschlechterungContainer.ekvJABasisJahrPlus1 =\n                this.einkommensverschlechterungToRestObject({}, einkommensverschlechterungContainer.ekvJABasisJahrPlus1);\n        }\n        if (einkommensverschlechterungContainer.ekvJABasisJahrPlus2) {\n            restEinkommensverschlechterungContainer.ekvJABasisJahrPlus2 =\n                this.einkommensverschlechterungToRestObject({}, einkommensverschlechterungContainer.ekvJABasisJahrPlus2);\n        }\n        return restEinkommensverschlechterungContainer;\n    };\n    EbeguRestUtil.prototype.einkommensverschlechterungToRestObject = function (restEinkommensverschlechterung, einkommensverschlechterung) {\n        this.abstractfinanzielleSituationToRestObject(restEinkommensverschlechterung, einkommensverschlechterung);\n        restEinkommensverschlechterung.nettolohnJan = einkommensverschlechterung.nettolohnJan;\n        restEinkommensverschlechterung.nettolohnFeb = einkommensverschlechterung.nettolohnFeb;\n        restEinkommensverschlechterung.nettolohnMrz = einkommensverschlechterung.nettolohnMrz;\n        restEinkommensverschlechterung.nettolohnApr = einkommensverschlechterung.nettolohnApr;\n        restEinkommensverschlechterung.nettolohnMai = einkommensverschlechterung.nettolohnMai;\n        restEinkommensverschlechterung.nettolohnJun = einkommensverschlechterung.nettolohnJun;\n        restEinkommensverschlechterung.nettolohnJul = einkommensverschlechterung.nettolohnJul;\n        restEinkommensverschlechterung.nettolohnAug = einkommensverschlechterung.nettolohnAug;\n        restEinkommensverschlechterung.nettolohnSep = einkommensverschlechterung.nettolohnSep;\n        restEinkommensverschlechterung.nettolohnOkt = einkommensverschlechterung.nettolohnOkt;\n        restEinkommensverschlechterung.nettolohnNov = einkommensverschlechterung.nettolohnNov;\n        restEinkommensverschlechterung.nettolohnDez = einkommensverschlechterung.nettolohnDez;\n        restEinkommensverschlechterung.nettolohnZus = einkommensverschlechterung.nettolohnZus;\n        restEinkommensverschlechterung.geschaeftsgewinnBasisjahrMinus1 = einkommensverschlechterung.geschaeftsgewinnBasisjahrMinus1;\n        return restEinkommensverschlechterung;\n    };\n    EbeguRestUtil.prototype.parseEinkommensverschlechterungContainer = function (containerTS, containerFromServer) {\n        if (containerFromServer) {\n            this.parseAbstractEntity(containerTS, containerFromServer);\n            containerTS.ekvGSBasisJahrPlus1 = this.parseEinkommensverschlechterung(containerTS.ekvGSBasisJahrPlus1 || new TSEinkommensverschlechterung_1.default(), containerFromServer.ekvGSBasisJahrPlus1);\n            containerTS.ekvGSBasisJahrPlus2 = this.parseEinkommensverschlechterung(containerTS.ekvGSBasisJahrPlus2 || new TSEinkommensverschlechterung_1.default(), containerFromServer.ekvGSBasisJahrPlus2);\n            containerTS.ekvJABasisJahrPlus1 = this.parseEinkommensverschlechterung(containerTS.ekvJABasisJahrPlus1 || new TSEinkommensverschlechterung_1.default(), containerFromServer.ekvJABasisJahrPlus1);\n            containerTS.ekvJABasisJahrPlus2 = this.parseEinkommensverschlechterung(containerTS.ekvJABasisJahrPlus2 || new TSEinkommensverschlechterung_1.default(), containerFromServer.ekvJABasisJahrPlus2);\n            return containerTS;\n        }\n        return undefined;\n    };\n    EbeguRestUtil.prototype.parseEinkommensverschlechterung = function (einkommensverschlechterungTS, einkommensverschlechterungFromServer) {\n        if (einkommensverschlechterungFromServer) {\n            this.parseAbstractFinanzielleSituation(einkommensverschlechterungTS, einkommensverschlechterungFromServer);\n            einkommensverschlechterungTS.nettolohnJan = einkommensverschlechterungFromServer.nettolohnJan;\n            einkommensverschlechterungTS.nettolohnFeb = einkommensverschlechterungFromServer.nettolohnFeb;\n            einkommensverschlechterungTS.nettolohnMrz = einkommensverschlechterungFromServer.nettolohnMrz;\n            einkommensverschlechterungTS.nettolohnApr = einkommensverschlechterungFromServer.nettolohnApr;\n            einkommensverschlechterungTS.nettolohnMai = einkommensverschlechterungFromServer.nettolohnMai;\n            einkommensverschlechterungTS.nettolohnJun = einkommensverschlechterungFromServer.nettolohnJun;\n            einkommensverschlechterungTS.nettolohnJul = einkommensverschlechterungFromServer.nettolohnJul;\n            einkommensverschlechterungTS.nettolohnAug = einkommensverschlechterungFromServer.nettolohnAug;\n            einkommensverschlechterungTS.nettolohnSep = einkommensverschlechterungFromServer.nettolohnSep;\n            einkommensverschlechterungTS.nettolohnOkt = einkommensverschlechterungFromServer.nettolohnOkt;\n            einkommensverschlechterungTS.nettolohnNov = einkommensverschlechterungFromServer.nettolohnNov;\n            einkommensverschlechterungTS.nettolohnDez = einkommensverschlechterungFromServer.nettolohnDez;\n            einkommensverschlechterungTS.nettolohnZus = einkommensverschlechterungFromServer.nettolohnZus;\n            einkommensverschlechterungTS.geschaeftsgewinnBasisjahrMinus1 = einkommensverschlechterungFromServer.geschaeftsgewinnBasisjahrMinus1;\n            return einkommensverschlechterungTS;\n        }\n        return undefined;\n    };\n    EbeguRestUtil.prototype.kindContainerToRestObject = function (restKindContainer, kindContainer) {\n        this.abstractEntityToRestObject(restKindContainer, kindContainer);\n        if (kindContainer.kindGS) {\n            restKindContainer.kindGS = this.kindToRestObject({}, kindContainer.kindGS);\n        }\n        if (kindContainer.kindJA) {\n            restKindContainer.kindJA = this.kindToRestObject({}, kindContainer.kindJA);\n        }\n        restKindContainer.betreuungen = this.betreuungListToRestObject(kindContainer.betreuungen);\n        restKindContainer.kindNummer = kindContainer.kindNummer;\n        restKindContainer.nextNumberBetreuung = kindContainer.nextNumberBetreuung;\n        restKindContainer.kindMutiert = kindContainer.kindMutiert;\n        return restKindContainer;\n    };\n    EbeguRestUtil.prototype.kindToRestObject = function (restKind, kind) {\n        this.abstractPersonEntitytoRestObject(restKind, kind);\n        restKind.wohnhaftImGleichenHaushalt = kind.wohnhaftImGleichenHaushalt;\n        restKind.kinderabzug = kind.kinderabzug;\n        restKind.mutterspracheDeutsch = kind.mutterspracheDeutsch;\n        restKind.einschulung = kind.einschulung;\n        restKind.familienErgaenzendeBetreuung = kind.familienErgaenzendeBetreuung;\n        if (kind.pensumFachstelle) {\n            restKind.pensumFachstelle = this.pensumFachstelleToRestObject({}, kind.pensumFachstelle);\n        }\n        return restKind;\n    };\n    EbeguRestUtil.prototype.parseKindDubletteList = function (data) {\n        var kindContainerList = [];\n        if (data && Array.isArray(data)) {\n            for (var i = 0; i < data.length; i++) {\n                kindContainerList[i] = this.parseKindDublette(new TSKindDublette_1.default(), data[i]);\n            }\n        }\n        else {\n            kindContainerList[0] = this.parseKindDublette(new TSKindDublette_1.default(), data);\n        }\n        return kindContainerList;\n    };\n    EbeguRestUtil.prototype.parseKindDublette = function (kindContainerTS, kindContainerFromServer) {\n        if (kindContainerFromServer) {\n            kindContainerTS.gesuchId = kindContainerFromServer.gesuchId;\n            kindContainerTS.fallNummer = kindContainerFromServer.fallNummer;\n            kindContainerTS.kindNummerOriginal = kindContainerFromServer.kindNummerOriginal;\n            kindContainerTS.kindNummerDublette = kindContainerFromServer.kindNummerDublette;\n            return kindContainerTS;\n        }\n        return undefined;\n    };\n    EbeguRestUtil.prototype.parseKindContainerList = function (data) {\n        var kindContainerList = [];\n        if (data && Array.isArray(data)) {\n            for (var i = 0; i < data.length; i++) {\n                kindContainerList[i] = this.parseKindContainer(new TSKindContainer_1.default(), data[i]);\n            }\n        }\n        else {\n            kindContainerList[0] = this.parseKindContainer(new TSKindContainer_1.default(), data);\n        }\n        return kindContainerList;\n    };\n    EbeguRestUtil.prototype.parseKindContainer = function (kindContainerTS, kindContainerFromServer) {\n        if (kindContainerFromServer) {\n            this.parseAbstractEntity(kindContainerTS, kindContainerFromServer);\n            kindContainerTS.kindGS = this.parseKind(new TSKind_1.default(), kindContainerFromServer.kindGS);\n            kindContainerTS.kindJA = this.parseKind(new TSKind_1.default(), kindContainerFromServer.kindJA);\n            kindContainerTS.betreuungen = this.parseBetreuungList(kindContainerFromServer.betreuungen);\n            kindContainerTS.kindNummer = kindContainerFromServer.kindNummer;\n            kindContainerTS.nextNumberBetreuung = kindContainerFromServer.nextNumberBetreuung;\n            kindContainerTS.kindMutiert = kindContainerFromServer.kindMutiert;\n            return kindContainerTS;\n        }\n        return undefined;\n    };\n    EbeguRestUtil.prototype.parseKind = function (kindTS, kindFromServer) {\n        if (kindFromServer) {\n            this.parseAbstractPersonEntity(kindTS, kindFromServer);\n            kindTS.wohnhaftImGleichenHaushalt = kindFromServer.wohnhaftImGleichenHaushalt;\n            kindTS.kinderabzug = kindFromServer.kinderabzug;\n            kindTS.mutterspracheDeutsch = kindFromServer.mutterspracheDeutsch;\n            kindTS.einschulung = kindFromServer.einschulung;\n            kindTS.familienErgaenzendeBetreuung = kindFromServer.familienErgaenzendeBetreuung;\n            if (kindFromServer.pensumFachstelle) {\n                kindTS.pensumFachstelle = this.parsePensumFachstelle(new TSPensumFachstelle_1.TSPensumFachstelle(), kindFromServer.pensumFachstelle);\n            }\n            return kindTS;\n        }\n        return undefined;\n    };\n    EbeguRestUtil.prototype.pensumFachstelleToRestObject = function (restPensumFachstelle, pensumFachstelle) {\n        this.abstractDateRangeEntityToRestObject(restPensumFachstelle, pensumFachstelle);\n        restPensumFachstelle.pensum = pensumFachstelle.pensum;\n        if (pensumFachstelle.fachstelle) {\n            restPensumFachstelle.fachstelle = this.fachstelleToRestObject({}, pensumFachstelle.fachstelle);\n        }\n        return restPensumFachstelle;\n    };\n    EbeguRestUtil.prototype.parsePensumFachstelle = function (pensumFachstelleTS, pensumFachstelleFromServer) {\n        if (pensumFachstelleFromServer) {\n            this.parseDateRangeEntity(pensumFachstelleTS, pensumFachstelleFromServer);\n            pensumFachstelleTS.pensum = pensumFachstelleFromServer.pensum;\n            if (pensumFachstelleFromServer.fachstelle) {\n                pensumFachstelleTS.fachstelle = this.parseFachstelle(new TSFachstelle_1.TSFachstelle(), pensumFachstelleFromServer.fachstelle);\n            }\n            return pensumFachstelleTS;\n        }\n        return undefined;\n    };\n    EbeguRestUtil.prototype.betreuungListToRestObject = function (betreuungen) {\n        var list = [];\n        if (betreuungen) {\n            for (var i = 0; i < betreuungen.length; i++) {\n                list[i] = this.betreuungToRestObject({}, betreuungen[i]);\n            }\n        }\n        return list;\n    };\n    EbeguRestUtil.prototype.betreuungToRestObject = function (restBetreuung, betreuung) {\n        var _this = this;\n        this.abstractEntityToRestObject(restBetreuung, betreuung);\n        restBetreuung.betreuungsstatus = betreuung.betreuungsstatus;\n        restBetreuung.grundAblehnung = betreuung.grundAblehnung;\n        restBetreuung.datumAblehnung = DateUtil_1.default.momentToLocalDate(betreuung.datumAblehnung);\n        restBetreuung.datumBestaetigung = DateUtil_1.default.momentToLocalDate(betreuung.datumBestaetigung);\n        restBetreuung.vertrag = betreuung.vertrag;\n        restBetreuung.erweiterteBeduerfnisse = betreuung.erweiterteBeduerfnisse;\n        if (betreuung.institutionStammdaten) {\n            restBetreuung.institutionStammdaten = this.institutionStammdatenToRestObject({}, betreuung.institutionStammdaten);\n        }\n        if (betreuung.betreuungspensumContainers) {\n            restBetreuung.betreuungspensumContainers = [];\n            betreuung.betreuungspensumContainers.forEach(function (betPensCont) {\n                restBetreuung.betreuungspensumContainers.push(_this.betreuungspensumContainerToRestObject({}, betPensCont));\n            });\n        }\n        if (betreuung.abwesenheitContainers) {\n            restBetreuung.abwesenheitContainers = [];\n            betreuung.abwesenheitContainers.forEach(function (abwesenheitCont) {\n                restBetreuung.abwesenheitContainers.push(_this.abwesenheitContainerToRestObject({}, abwesenheitCont));\n            });\n        }\n        restBetreuung.kindFullname = betreuung.kindFullname;\n        restBetreuung.kindNummer = betreuung.kindNummer;\n        restBetreuung.gesuchId = betreuung.gesuchId;\n        restBetreuung.gesuchsperiode = this.gesuchsperiodeToRestObject({}, betreuung.gesuchsperiode);\n        restBetreuung.betreuungNummer = betreuung.betreuungNummer;\n        restBetreuung.betreuungMutiert = betreuung.betreuungMutiert;\n        restBetreuung.abwesenheitMutiert = betreuung.abwesenheitMutiert;\n        restBetreuung.gueltig = betreuung.gueltig;\n        restBetreuung.belegungTagesschule = this.belegungTagesschuleToRestObject({}, betreuung.belegungTagesschule);\n        restBetreuung.belegungFerieninsel = this.belegungFerieninselToRestObject({}, betreuung.belegungFerieninsel);\n        restBetreuung.anmeldungMutationZustand = betreuung.anmeldungMutationZustand;\n        return restBetreuung;\n    };\n    EbeguRestUtil.prototype.anmeldungDTOToRestObject = function (restAngebot, angebotDTO) {\n        restAngebot.betreuung = this.betreuungToRestObject({}, angebotDTO.betreuung);\n        restAngebot.additionalKindQuestions = angebotDTO.additionalKindQuestions;\n        restAngebot.einschulung = angebotDTO.einschulung;\n        restAngebot.kindContainerId = angebotDTO.kindContainerId;\n        restAngebot.mutterspracheDeutsch = angebotDTO.mutterspracheDeutsch;\n        restAngebot.wohnhaftImGleichenHaushalt = angebotDTO.wohnhaftImGleichenHaushalt;\n        return restAngebot;\n    };\n    EbeguRestUtil.prototype.betreuungspensumContainerToRestObject = function (restBetPensCont, betPensCont) {\n        this.abstractEntityToRestObject(restBetPensCont, betPensCont);\n        if (betPensCont.betreuungspensumGS) {\n            restBetPensCont.betreuungspensumGS = this.betreuungspensumToRestObject({}, betPensCont.betreuungspensumGS);\n        }\n        if (betPensCont.betreuungspensumJA) {\n            restBetPensCont.betreuungspensumJA = this.betreuungspensumToRestObject({}, betPensCont.betreuungspensumJA);\n        }\n        return restBetPensCont;\n    };\n    EbeguRestUtil.prototype.abwesenheitContainerToRestObject = function (restAbwesenheitCont, abwesenheitCont) {\n        this.abstractEntityToRestObject(restAbwesenheitCont, abwesenheitCont);\n        if (abwesenheitCont.abwesenheitGS) {\n            restAbwesenheitCont.abwesenheitGS = this.abwesenheitToRestObject({}, abwesenheitCont.abwesenheitGS);\n        }\n        if (abwesenheitCont.abwesenheitJA) {\n            restAbwesenheitCont.abwesenheitJA = this.abwesenheitToRestObject({}, abwesenheitCont.abwesenheitJA);\n        }\n        return restAbwesenheitCont;\n    };\n    EbeguRestUtil.prototype.betreuungspensumToRestObject = function (restBetreuungspensum, betreuungspensum) {\n        this.abstractPensumEntityToRestObject(restBetreuungspensum, betreuungspensum);\n        if (betreuungspensum.nichtEingetreten !== null) {\n            restBetreuungspensum.nichtEingetreten = betreuungspensum.nichtEingetreten;\n        }\n        return restBetreuungspensum;\n    };\n    EbeguRestUtil.prototype.betreuungsmitteilungPensumToRestObject = function (restBetreuungspensum, betreuungspensum) {\n        this.abstractPensumEntityToRestObject(restBetreuungspensum, betreuungspensum);\n        return restBetreuungspensum;\n    };\n    EbeguRestUtil.prototype.abwesenheitToRestObject = function (restAbwesenheit, abwesenheit) {\n        this.abstractDateRangeEntityToRestObject(restAbwesenheit, abwesenheit);\n        return restAbwesenheit;\n    };\n    EbeguRestUtil.prototype.parseBetreuungList = function (betreuungen) {\n        var resultList = [];\n        if (betreuungen && Array.isArray(betreuungen)) {\n            for (var i = 0; i < betreuungen.length; i++) {\n                resultList[i] = this.parseBetreuung(new TSBetreuung_1.default(), betreuungen[i]);\n            }\n        }\n        else {\n            resultList[0] = this.parseBetreuung(new TSBetreuung_1.default(), betreuungen);\n        }\n        return resultList;\n    };\n    EbeguRestUtil.prototype.parseBetreuung = function (betreuungTS, betreuungFromServer) {\n        if (betreuungFromServer) {\n            this.parseAbstractEntity(betreuungTS, betreuungFromServer);\n            betreuungTS.grundAblehnung = betreuungFromServer.grundAblehnung;\n            betreuungTS.datumAblehnung = DateUtil_1.default.localDateToMoment(betreuungFromServer.datumAblehnung);\n            betreuungTS.datumBestaetigung = DateUtil_1.default.localDateToMoment(betreuungFromServer.datumBestaetigung);\n            betreuungTS.vertrag = betreuungFromServer.vertrag;\n            betreuungTS.erweiterteBeduerfnisse = betreuungFromServer.erweiterteBeduerfnisse;\n            betreuungTS.betreuungsstatus = betreuungFromServer.betreuungsstatus;\n            betreuungTS.institutionStammdaten = this.parseInstitutionStammdaten(new TSInstitutionStammdaten_1.default(), betreuungFromServer.institutionStammdaten);\n            betreuungTS.betreuungspensumContainers = this.parseBetreuungspensumContainers(betreuungFromServer.betreuungspensumContainers);\n            betreuungTS.abwesenheitContainers = this.parseAbwesenheitContainers(betreuungFromServer.abwesenheitContainers);\n            betreuungTS.betreuungNummer = betreuungFromServer.betreuungNummer;\n            betreuungTS.verfuegung = this.parseVerfuegung(new TSVerfuegung_1.default(), betreuungFromServer.verfuegung);\n            betreuungTS.kindFullname = betreuungFromServer.kindFullname;\n            betreuungTS.kindNummer = betreuungFromServer.kindNummer;\n            betreuungTS.gesuchId = betreuungFromServer.gesuchId;\n            betreuungTS.gesuchsperiode = this.parseGesuchsperiode(new TSGesuchsperiode_1.default(), betreuungFromServer.gesuchsperiode);\n            betreuungTS.betreuungMutiert = betreuungFromServer.betreuungMutiert;\n            betreuungTS.abwesenheitMutiert = betreuungFromServer.abwesenheitMutiert;\n            betreuungTS.gueltig = betreuungFromServer.gueltig;\n            betreuungTS.belegungTagesschule = this.parseBelegungTagesschule(new TSBelegungTagesschule_1.default(), betreuungFromServer.belegungTagesschule);\n            betreuungTS.belegungFerieninsel = this.parseBelegungFerieninsel(new TSBelegungFerieninsel_1.default(), betreuungFromServer.belegungFerieninsel);\n            betreuungTS.anmeldungMutationZustand = betreuungFromServer.anmeldungMutationZustand;\n            betreuungTS.bgNummer = betreuungFromServer.bgNummer;\n            return betreuungTS;\n        }\n        return undefined;\n    };\n    EbeguRestUtil.prototype.parseBetreuungspensumContainers = function (data) {\n        var betPensContainers = [];\n        if (data && Array.isArray(data)) {\n            for (var i = 0; i < data.length; i++) {\n                betPensContainers[i] = this.parseBetreuungspensumContainer(new TSBetreuungspensumContainer_1.default(), data[i]);\n            }\n        }\n        else {\n            betPensContainers[0] = this.parseBetreuungspensumContainer(new TSBetreuungspensumContainer_1.default(), data);\n        }\n        return betPensContainers;\n    };\n    EbeguRestUtil.prototype.parseAbwesenheitContainers = function (data) {\n        var abwesenheitContainers = [];\n        if (data && Array.isArray(data)) {\n            for (var i = 0; i < data.length; i++) {\n                abwesenheitContainers[i] = this.parseAbwesenheitContainer(new TSAbwesenheitContainer_1.default(), data[i]);\n            }\n        }\n        else if (data) {\n            abwesenheitContainers[0] = this.parseAbwesenheitContainer(new TSAbwesenheitContainer_1.default(), data);\n        }\n        return abwesenheitContainers;\n    };\n    EbeguRestUtil.prototype.parseBetreuungspensumContainer = function (betPensContainerTS, betPensContFromServer) {\n        if (betPensContFromServer) {\n            this.parseAbstractEntity(betPensContainerTS, betPensContFromServer);\n            if (betPensContFromServer.betreuungspensumGS) {\n                betPensContainerTS.betreuungspensumGS = this.parseBetreuungspensum(new TSBetreuungspensum_1.default(), betPensContFromServer.betreuungspensumGS);\n            }\n            if (betPensContFromServer.betreuungspensumJA) {\n                betPensContainerTS.betreuungspensumJA = this.parseBetreuungspensum(new TSBetreuungspensum_1.default(), betPensContFromServer.betreuungspensumJA);\n            }\n            return betPensContainerTS;\n        }\n        return undefined;\n    };\n    EbeguRestUtil.prototype.parseAbwesenheitContainer = function (abwesenheitContainerTS, abwesenheitContFromServer) {\n        if (abwesenheitContFromServer) {\n            this.parseAbstractEntity(abwesenheitContainerTS, abwesenheitContFromServer);\n            if (abwesenheitContFromServer.abwesenheitGS) {\n                abwesenheitContainerTS.abwesenheitGS = this.parseAbwesenheit(new TSAbwesenheit_1.default(), abwesenheitContFromServer.abwesenheitGS);\n            }\n            if (abwesenheitContFromServer.abwesenheitJA) {\n                abwesenheitContainerTS.abwesenheitJA = this.parseAbwesenheit(new TSAbwesenheit_1.default(), abwesenheitContFromServer.abwesenheitJA);\n            }\n            return abwesenheitContainerTS;\n        }\n        return undefined;\n    };\n    EbeguRestUtil.prototype.parseBetreuungspensum = function (betreuungspensumTS, betreuungspensumFromServer) {\n        if (betreuungspensumFromServer) {\n            this.parseAbstractPensumEntity(betreuungspensumTS, betreuungspensumFromServer);\n            betreuungspensumTS.nichtEingetreten = betreuungspensumFromServer.nichtEingetreten;\n            return betreuungspensumTS;\n        }\n        return undefined;\n    };\n    EbeguRestUtil.prototype.parseBetreuungsmitteilungPensum = function (betreuungspensumTS, betreuungspensumFromServer) {\n        if (betreuungspensumFromServer) {\n            this.parseAbstractPensumEntity(betreuungspensumTS, betreuungspensumFromServer);\n            return betreuungspensumTS;\n        }\n        return undefined;\n    };\n    EbeguRestUtil.prototype.parseAbwesenheit = function (abwesenheitTS, abwesenheitFromServer) {\n        if (abwesenheitFromServer) {\n            this.parseDateRangeEntity(abwesenheitTS, abwesenheitFromServer);\n            return abwesenheitTS;\n        }\n        return undefined;\n    };\n    EbeguRestUtil.prototype.parseErwerbspensenContainers = function (data) {\n        var erwerbspensen = [];\n        if (data !== null && data !== undefined) {\n            if (Array.isArray(data)) {\n                for (var i = 0; i < data.length; i++) {\n                    erwerbspensen[i] = this.parseErwerbspensumContainer(new TSErwerbspensumContainer_1.default(), data[i]);\n                }\n            }\n            else {\n                erwerbspensen[0] = this.parseErwerbspensumContainer(new TSErwerbspensumContainer_1.default(), data);\n            }\n        }\n        return erwerbspensen;\n    };\n    EbeguRestUtil.prototype.gesuchsperiodeToRestObject = function (restGesuchsperiode, gesuchsperiode) {\n        if (gesuchsperiode) {\n            this.abstractDateRangeEntityToRestObject(restGesuchsperiode, gesuchsperiode);\n            restGesuchsperiode.status = gesuchsperiode.status;\n            restGesuchsperiode.datumFreischaltungTagesschule = DateUtil_1.default.momentToLocalDate(gesuchsperiode.datumFreischaltungTagesschule);\n            restGesuchsperiode.datumErsterSchultag = DateUtil_1.default.momentToLocalDate(gesuchsperiode.datumErsterSchultag);\n            return restGesuchsperiode;\n        }\n        return undefined;\n    };\n    EbeguRestUtil.prototype.parseGesuchsperiode = function (gesuchsperiodeTS, gesuchsperiodeFromServer) {\n        if (gesuchsperiodeFromServer) {\n            this.parseDateRangeEntity(gesuchsperiodeTS, gesuchsperiodeFromServer);\n            gesuchsperiodeTS.status = gesuchsperiodeFromServer.status;\n            gesuchsperiodeTS.datumFreischaltungTagesschule = DateUtil_1.default.localDateToMoment(gesuchsperiodeFromServer.datumFreischaltungTagesschule);\n            gesuchsperiodeTS.datumErsterSchultag = DateUtil_1.default.localDateToMoment(gesuchsperiodeFromServer.datumErsterSchultag);\n            return gesuchsperiodeTS;\n        }\n        return undefined;\n    };\n    EbeguRestUtil.prototype.parseGesuchsperioden = function (data) {\n        var gesuchsperioden = [];\n        if (data && Array.isArray(data)) {\n            for (var i = 0; i < data.length; i++) {\n                gesuchsperioden[i] = this.parseGesuchsperiode(new TSGesuchsperiode_1.default(), data[i]);\n            }\n        }\n        else {\n            gesuchsperioden[0] = this.parseGesuchsperiode(new TSGesuchsperiode_1.default(), data);\n        }\n        return gesuchsperioden;\n    };\n    EbeguRestUtil.prototype.antragDTOToRestObject = function (restPendenz, pendenz) {\n        restPendenz.antragId = pendenz.antragId;\n        restPendenz.fallNummer = pendenz.fallNummer;\n        restPendenz.familienName = pendenz.familienName;\n        restPendenz.angebote = pendenz.angebote;\n        restPendenz.antragTyp = pendenz.antragTyp;\n        restPendenz.eingangsdatum = DateUtil_1.default.momentToLocalDate(pendenz.eingangsdatum);\n        restPendenz.eingangsdatumSTV = DateUtil_1.default.momentToLocalDate(pendenz.eingangsdatumSTV);\n        restPendenz.aenderungsdatum = DateUtil_1.default.momentToLocalDateTime(pendenz.aenderungsdatum);\n        restPendenz.gesuchsperiodeGueltigAb = DateUtil_1.default.momentToLocalDate(pendenz.gesuchsperiodeGueltigAb);\n        restPendenz.gesuchsperiodeGueltigBis = DateUtil_1.default.momentToLocalDate(pendenz.gesuchsperiodeGueltigBis);\n        restPendenz.institutionen = pendenz.institutionen;\n        restPendenz.kinder = pendenz.kinder;\n        restPendenz.verantwortlicher = pendenz.verantwortlicher;\n        restPendenz.verantwortlicherSCH = pendenz.verantwortlicherSCH;\n        restPendenz.verantwortlicherUsernameJA = pendenz.verantwortlicherUsernameJA;\n        restPendenz.verantwortlicherUsernameSCH = pendenz.verantwortlicherUsernameSCH;\n        restPendenz.status = pendenz.status;\n        restPendenz.verfuegt = pendenz.verfuegt;\n        restPendenz.beschwerdeHaengig = pendenz.beschwerdeHaengig;\n        restPendenz.laufnummer = pendenz.laufnummer;\n        restPendenz.gesuchBetreuungenStatus = pendenz.gesuchBetreuungenStatus;\n        restPendenz.eingangsart = pendenz.eingangsart;\n        restPendenz.besitzerUsername = pendenz.besitzerUsername;\n        restPendenz.dokumenteHochgeladen = pendenz.dokumenteHochgeladen;\n        return restPendenz;\n    };\n    EbeguRestUtil.prototype.parseAntragDTO = function (antragTS, antragFromServer) {\n        antragTS.antragId = antragFromServer.antragId;\n        antragTS.fallNummer = antragFromServer.fallNummer;\n        antragTS.familienName = antragFromServer.familienName;\n        antragTS.angebote = antragFromServer.angebote;\n        antragTS.kinder = antragFromServer.kinder;\n        antragTS.antragTyp = antragFromServer.antragTyp;\n        antragTS.eingangsdatum = DateUtil_1.default.localDateToMoment(antragFromServer.eingangsdatum);\n        antragTS.eingangsdatumSTV = DateUtil_1.default.localDateToMoment(antragFromServer.eingangsdatumSTV);\n        antragTS.aenderungsdatum = DateUtil_1.default.localDateTimeToMoment(antragFromServer.aenderungsdatum);\n        antragTS.gesuchsperiodeGueltigAb = DateUtil_1.default.localDateToMoment(antragFromServer.gesuchsperiodeGueltigAb);\n        antragTS.gesuchsperiodeGueltigBis = DateUtil_1.default.localDateToMoment(antragFromServer.gesuchsperiodeGueltigBis);\n        antragTS.institutionen = antragFromServer.institutionen;\n        antragTS.verantwortlicher = antragFromServer.verantwortlicher;\n        antragTS.verantwortlicherSCH = antragFromServer.verantwortlicherSCH;\n        antragTS.verantwortlicherUsernameJA = antragFromServer.verantwortlicherUsernameJA;\n        antragTS.verantwortlicherUsernameSCH = antragFromServer.verantwortlicherUsernameSCH;\n        antragTS.status = antragFromServer.status;\n        antragTS.verfuegt = antragFromServer.verfuegt;\n        antragTS.beschwerdeHaengig = antragFromServer.beschwerdeHaengig;\n        antragTS.laufnummer = antragFromServer.laufnummer;\n        antragTS.gesuchBetreuungenStatus = antragFromServer.gesuchBetreuungenStatus;\n        antragTS.eingangsart = antragFromServer.eingangsart;\n        antragTS.besitzerUsername = antragFromServer.besitzerUsername;\n        antragTS.dokumenteHochgeladen = antragFromServer.dokumenteHochgeladen;\n        return antragTS;\n    };\n    EbeguRestUtil.prototype.parseFallAntragDTO = function (fallAntragTS, antragFromServer) {\n        fallAntragTS.fallID = antragFromServer.fallID;\n        fallAntragTS.fallNummer = antragFromServer.fallNummer;\n        fallAntragTS.familienName = antragFromServer.familienName;\n        return fallAntragTS;\n    };\n    EbeguRestUtil.prototype.parseAntragDTOs = function (data) {\n        var pendenzen = [];\n        if (data && Array.isArray(data)) {\n            for (var i = 0; i < data.length; i++) {\n                pendenzen[i] = this.parseAntragDTO(new TSAntragDTO_1.default(), data[i]);\n            }\n        }\n        else {\n            pendenzen[0] = this.parseAntragDTO(new TSAntragDTO_1.default(), data);\n        }\n        return pendenzen;\n    };\n    EbeguRestUtil.prototype.parseQuickSearchResult = function (dataFromServer) {\n        if (dataFromServer) {\n            var resultEntries = this.parseSearchResultEntries(dataFromServer.resultEntities);\n            return new TSQuickSearchResult_1.default(resultEntries, dataFromServer.numberOfResults);\n        }\n        return undefined;\n    };\n    EbeguRestUtil.prototype.parseSearchResultEntries = function (entries) {\n        var searchResultEntries = [];\n        if (entries && Array.isArray(entries)) {\n            for (var i = 0; i < entries.length; i++) {\n                searchResultEntries[i] = this.parseSearchResultEntry(new TSSearchResultEntry_1.default(), entries[i]);\n            }\n        }\n        return searchResultEntries;\n    };\n    EbeguRestUtil.prototype.parseSearchResultEntry = function (entry, dataFromServer) {\n        entry.additionalInformation = dataFromServer.additionalInformation;\n        entry.gesuchID = dataFromServer.gesuchID;\n        entry.fallID = dataFromServer.fallID;\n        entry.resultId = dataFromServer.resultId;\n        entry.text = dataFromServer.text;\n        entry.entity = dataFromServer.entity;\n        if (dataFromServer.antragDTO) {\n            //dataFromServer.antragDTO.typ === TSAntragDTO\n            if (this.isFallAntragDTO(dataFromServer.antragDTO)) {\n                entry.antragDTO = this.parseFallAntragDTO(new TSFallAntragDTO_1.default(), dataFromServer.antragDTO);\n            }\n            else {\n                entry.antragDTO = this.parseAntragDTO(new TSAntragDTO_1.default(), dataFromServer.antragDTO);\n            }\n        }\n        return entry;\n    };\n    EbeguRestUtil.prototype.isFallAntragDTO = function (antragRestObj) {\n        if (antragRestObj) {\n            return antragRestObj.clazz === TSFallAntragDTO_1.default.serverClassName;\n        }\n        return false;\n    };\n    EbeguRestUtil.prototype.pendenzBetreuungenToRestObject = function (restPendenz, pendenz) {\n        restPendenz.betreuungsNummer = pendenz.betreuungsNummer;\n        restPendenz.betreuungsId = pendenz.betreuungsId;\n        restPendenz.gesuchId = pendenz.gesuchId;\n        restPendenz.kindId = pendenz.kindId;\n        restPendenz.name = pendenz.name;\n        restPendenz.vorname = pendenz.vorname;\n        restPendenz.geburtsdatum = DateUtil_1.default.momentToLocalDate(pendenz.geburtsdatum);\n        restPendenz.typ = pendenz.typ;\n        restPendenz.gesuchsperiode = this.gesuchsperiodeToRestObject({}, pendenz.gesuchsperiode);\n        restPendenz.eingangsdatum = DateUtil_1.default.momentToLocalDate(pendenz.eingangsdatum);\n        restPendenz.eingangsdatumSTV = DateUtil_1.default.momentToLocalDate(pendenz.eingangsdatumSTV);\n        restPendenz.betreuungsangebotTyp = pendenz.betreuungsangebotTyp;\n        restPendenz.institution = pendenz.institution;\n        return restPendenz;\n    };\n    EbeguRestUtil.prototype.parsePendenzBetreuungen = function (pendenzTS, pendenzFromServer) {\n        pendenzTS.betreuungsNummer = pendenzFromServer.betreuungsNummer;\n        pendenzTS.betreuungsId = pendenzFromServer.betreuungsId;\n        pendenzTS.gesuchId = pendenzFromServer.gesuchId;\n        pendenzTS.kindId = pendenzFromServer.kindId;\n        pendenzTS.name = pendenzFromServer.name;\n        pendenzTS.vorname = pendenzFromServer.vorname;\n        pendenzTS.geburtsdatum = pendenzFromServer.geburtsdatum;\n        pendenzTS.typ = pendenzFromServer.typ;\n        pendenzTS.gesuchsperiode = this.parseGesuchsperiode(new TSGesuchsperiode_1.default(), pendenzFromServer.gesuchsperiode);\n        pendenzTS.eingangsdatum = DateUtil_1.default.localDateToMoment(pendenzFromServer.eingangsdatum);\n        pendenzTS.eingangsdatumSTV = DateUtil_1.default.localDateToMoment(pendenzFromServer.eingangsdatumSTV);\n        pendenzTS.betreuungsangebotTyp = pendenzFromServer.betreuungsangebotTyp;\n        pendenzTS.institution = pendenzFromServer.institution;\n        return pendenzTS;\n    };\n    EbeguRestUtil.prototype.parsePendenzBetreuungenList = function (data) {\n        var pendenzen = [];\n        if (data && Array.isArray(data)) {\n            for (var i = 0; i < data.length; i++) {\n                pendenzen[i] = this.parsePendenzBetreuungen(new TSPendenzBetreuung_1.default(), data[i]);\n            }\n        }\n        else {\n            pendenzen[0] = this.parsePendenzBetreuungen(new TSPendenzBetreuung_1.default(), data);\n        }\n        return pendenzen;\n    };\n    EbeguRestUtil.prototype.userToRestObject = function (user, userTS) {\n        if (userTS) {\n            user.username = userTS.username;\n            user.password = userTS.password;\n            user.nachname = userTS.nachname;\n            user.vorname = userTS.vorname;\n            user.email = userTS.email;\n            user.role = userTS.role;\n            user.mandant = this.mandantToRestObject({}, userTS.mandant);\n            user.traegerschaft = this.traegerschaftToRestObject({}, userTS.traegerschaft);\n            user.institution = this.institutionToRestObject({}, userTS.institution);\n            return user;\n        }\n        return undefined;\n    };\n    EbeguRestUtil.prototype.parseUser = function (userTS, userFromServer) {\n        if (userFromServer) {\n            userTS.username = userFromServer.username;\n            userTS.password = userFromServer.password;\n            userTS.nachname = userFromServer.nachname;\n            userTS.vorname = userFromServer.vorname;\n            userTS.email = userFromServer.email;\n            userTS.role = userFromServer.role;\n            userTS.mandant = this.parseMandant(new TSMandant_1.TSMandant(), userFromServer.mandant);\n            userTS.traegerschaft = this.parseTraegerschaft(new TSTraegerschaft_1.TSTraegerschaft(), userFromServer.traegerschaft);\n            userTS.institution = this.parseInstitution(new TSInstitution_1.default(), userFromServer.institution);\n            userTS.amt = userFromServer.amt;\n            return userTS;\n        }\n        return undefined;\n    };\n    EbeguRestUtil.prototype.parseUserList = function (data) {\n        var users = [];\n        if (data && Array.isArray(data)) {\n            for (var i = 0; i < data.length; i++) {\n                users[i] = this.parseUser(new TSUser_1.default(), data[i]);\n            }\n        }\n        else {\n            users[0] = this.parseUser(new TSUser_1.default(), data);\n        }\n        return users;\n    };\n    EbeguRestUtil.prototype.parseDokumenteDTO = function (dokumenteDTO, dokumenteFromServer) {\n        if (dokumenteFromServer) {\n            dokumenteDTO.dokumentGruende = this.parseDokumentGruende(dokumenteFromServer.dokumentGruende);\n            return dokumenteDTO;\n        }\n        return undefined;\n    };\n    EbeguRestUtil.prototype.parseDokumentGruende = function (dokumentGruende) {\n        var resultList = [];\n        if (dokumentGruende && Array.isArray(dokumentGruende)) {\n            for (var i = 0; i < dokumentGruende.length; i++) {\n                resultList[i] = this.parseDokumentGrund(new TSDokumentGrund_1.default(), dokumentGruende[i]);\n            }\n        }\n        else {\n            resultList[0] = this.parseDokumentGrund(new TSDokumentGrund_1.default(), dokumentGruende);\n        }\n        return resultList;\n    };\n    EbeguRestUtil.prototype.parseDokumentGrund = function (dokumentGrund, dokumentGrundFromServer) {\n        if (dokumentGrundFromServer) {\n            this.parseAbstractEntity(dokumentGrund, dokumentGrundFromServer);\n            dokumentGrund.dokumentGrundTyp = dokumentGrundFromServer.dokumentGrundTyp;\n            dokumentGrund.fullName = dokumentGrundFromServer.fullName;\n            dokumentGrund.tag = dokumentGrundFromServer.tag;\n            dokumentGrund.personNumber = dokumentGrundFromServer.personNumber;\n            dokumentGrund.personType = dokumentGrundFromServer.personType;\n            dokumentGrund.dokumentTyp = dokumentGrundFromServer.dokumentTyp;\n            dokumentGrund.needed = dokumentGrundFromServer.needed;\n            dokumentGrund.dokumente = this.parseDokumente(dokumentGrundFromServer.dokumente);\n            return dokumentGrund;\n        }\n        return undefined;\n    };\n    EbeguRestUtil.prototype.parseDokumente = function (dokumente) {\n        var resultList = [];\n        if (dokumente && Array.isArray(dokumente)) {\n            for (var i = 0; i < dokumente.length; i++) {\n                resultList[i] = this.parseDokument(new TSDokument_1.default(), dokumente[i]);\n            }\n        }\n        else {\n            resultList[0] = this.parseDokument(new TSDokument_1.default(), dokumente);\n        }\n        return resultList;\n    };\n    EbeguRestUtil.prototype.parseDokument = function (dokument, dokumentFromServer) {\n        if (dokumentFromServer) {\n            this.parseAbstractEntity(dokument, dokumentFromServer);\n            dokument.filename = dokumentFromServer.filename;\n            dokument.filepfad = dokumentFromServer.filepfad;\n            dokument.filesize = dokumentFromServer.filesize;\n            dokument.timestampUpload = DateUtil_1.default.localDateTimeToMoment(dokumentFromServer.timestampUpload);\n            dokument.userUploaded = this.parseUser(new TSUser_1.default(), dokumentFromServer.userUploaded);\n            return dokument;\n        }\n        return undefined;\n    };\n    EbeguRestUtil.prototype.dokumentGrundToRestObject = function (restDokumentGrund, dokumentGrundTS) {\n        if (dokumentGrundTS) {\n            this.abstractEntityToRestObject(restDokumentGrund, dokumentGrundTS);\n            restDokumentGrund.tag = dokumentGrundTS.tag;\n            restDokumentGrund.fullName = dokumentGrundTS.fullName;\n            restDokumentGrund.personNumber = dokumentGrundTS.personNumber;\n            restDokumentGrund.personType = dokumentGrundTS.personType;\n            restDokumentGrund.dokumentGrundTyp = dokumentGrundTS.dokumentGrundTyp;\n            restDokumentGrund.dokumentTyp = dokumentGrundTS.dokumentTyp;\n            restDokumentGrund.needed = dokumentGrundTS.needed;\n            restDokumentGrund.dokumente = this.dokumenteToRestObject(dokumentGrundTS.dokumente);\n            return restDokumentGrund;\n        }\n        return undefined;\n    };\n    EbeguRestUtil.prototype.dokumenteToRestObject = function (dokumente) {\n        var list = [];\n        if (dokumente) {\n            for (var i = 0; i < dokumente.length; i++) {\n                list[i] = this.dokumentToRestObject({}, dokumente[i]);\n            }\n        }\n        return list;\n    };\n    EbeguRestUtil.prototype.dokumentToRestObject = function (dokument, dokumentTS) {\n        if (dokumentTS) {\n            this.abstractEntityToRestObject(dokument, dokumentTS);\n            dokument.filename = dokumentTS.filename;\n            dokument.filepfad = dokumentTS.filepfad;\n            dokument.filesize = dokumentTS.filesize;\n            dokument.timestampUpload = DateUtil_1.default.momentToLocalDateTime(dokumentTS.timestampUpload);\n            return dokument;\n        }\n        return undefined;\n    };\n    EbeguRestUtil.prototype.parseVerfuegung = function (verfuegungTS, verfuegungFromServer) {\n        if (verfuegungFromServer) {\n            this.parseAbstractEntity(verfuegungTS, verfuegungFromServer);\n            verfuegungTS.generatedBemerkungen = verfuegungFromServer.generatedBemerkungen;\n            verfuegungTS.manuelleBemerkungen = verfuegungFromServer.manuelleBemerkungen;\n            verfuegungTS.zeitabschnitte = this.parseVerfuegungZeitabschnitte(verfuegungFromServer.zeitabschnitte);\n            verfuegungTS.kategorieKeinPensum = verfuegungFromServer.kategorieKeinPensum;\n            verfuegungTS.kategorieMaxEinkommen = verfuegungFromServer.kategorieMaxEinkommen;\n            verfuegungTS.kategorieNichtEintreten = verfuegungFromServer.kategorieNichtEintreten;\n            verfuegungTS.kategorieNormal = verfuegungFromServer.kategorieNormal;\n            verfuegungTS.kategorieZuschlagZumErwerbspensum = verfuegungFromServer.kategorieZuschlagZumErwerbspensum;\n            return verfuegungTS;\n        }\n        return undefined;\n    };\n    EbeguRestUtil.prototype.verfuegungToRestObject = function (verfuegung, verfuegungTS) {\n        if (verfuegungTS) {\n            this.abstractEntityToRestObject(verfuegung, verfuegungTS);\n            verfuegung.generatedBemerkungen = verfuegungTS.generatedBemerkungen;\n            verfuegung.manuelleBemerkungen = verfuegungTS.manuelleBemerkungen;\n            verfuegung.zeitabschnitte = this.zeitabschnittListToRestObject(verfuegungTS.zeitabschnitte);\n            verfuegung.kategorieKeinPensum = verfuegungTS.kategorieKeinPensum;\n            verfuegung.kategorieMaxEinkommen = verfuegungTS.kategorieMaxEinkommen;\n            verfuegung.kategorieNichtEintreten = verfuegungTS.kategorieNichtEintreten;\n            verfuegung.kategorieNormal = verfuegungTS.kategorieNormal;\n            verfuegung.kategorieZuschlagZumErwerbspensum = verfuegungTS.kategorieZuschlagZumErwerbspensum;\n            return verfuegung;\n        }\n        return undefined;\n    };\n    EbeguRestUtil.prototype.zeitabschnittListToRestObject = function (zeitabschnitte) {\n        var list = [];\n        if (zeitabschnitte) {\n            for (var i = 0; i < zeitabschnitte.length; i++) {\n                list[i] = this.zeitabschnittToRestObject({}, zeitabschnitte[i]);\n            }\n        }\n        return list;\n    };\n    EbeguRestUtil.prototype.parseVerfuegungZeitabschnitte = function (zeitabschnitte) {\n        var resultList = [];\n        if (zeitabschnitte && Array.isArray(zeitabschnitte)) {\n            for (var i = 0; i < zeitabschnitte.length; i++) {\n                resultList[i] = this.parseVerfuegungZeitabschnitt(new TSVerfuegungZeitabschnitt_1.default(), zeitabschnitte[i]);\n            }\n        }\n        else {\n            resultList[0] = this.parseVerfuegungZeitabschnitt(new TSVerfuegungZeitabschnitt_1.default(), zeitabschnitte);\n        }\n        return resultList;\n    };\n    EbeguRestUtil.prototype.zeitabschnittToRestObject = function (zeitabschnitt, zeitabschnittTS) {\n        if (zeitabschnittTS) {\n            this.abstractDateRangeEntityToRestObject(zeitabschnitt, zeitabschnittTS);\n            zeitabschnitt.abzugFamGroesse = zeitabschnittTS.abzugFamGroesse;\n            zeitabschnitt.anspruchberechtigtesPensum = zeitabschnittTS.anspruchberechtigtesPensum;\n            zeitabschnitt.bgPensum = zeitabschnittTS.bgPensum;\n            zeitabschnitt.anspruchspensumRest = zeitabschnittTS.anspruchspensumRest;\n            zeitabschnitt.bemerkungen = zeitabschnittTS.bemerkungen;\n            zeitabschnitt.betreuungspensum = zeitabschnittTS.betreuungspensum;\n            zeitabschnitt.betreuungsstunden = zeitabschnittTS.betreuungsstunden;\n            zeitabschnitt.elternbeitrag = zeitabschnittTS.elternbeitrag;\n            zeitabschnitt.erwerbspensumGS1 = zeitabschnittTS.erwerbspensumGS1;\n            zeitabschnitt.erwerbspensumGS2 = zeitabschnittTS.erwerbspensumGS2;\n            zeitabschnitt.fachstellenpensum = zeitabschnittTS.fachstellenpensum;\n            zeitabschnitt.massgebendesEinkommenVorAbzugFamgr = zeitabschnittTS.massgebendesEinkommenVorAbzugFamgr;\n            zeitabschnitt.famGroesse = zeitabschnittTS.famGroesse;\n            zeitabschnitt.zahlungsstatus = zeitabschnittTS.zahlungsstatus;\n            zeitabschnitt.vollkosten = zeitabschnittTS.vollkosten;\n            zeitabschnitt.einkommensjahr = zeitabschnittTS.einkommensjahr;\n            zeitabschnitt.kategorieZuschlagZumErwerbspensum = zeitabschnittTS.kategorieZuschlagZumErwerbspensum;\n            zeitabschnitt.kategorieMaxEinkommen = zeitabschnittTS.kategorieMaxEinkommen;\n            zeitabschnitt.kategorieKeinPensum = zeitabschnittTS.kategorieKeinPensum;\n            zeitabschnitt.zuSpaetEingereicht = zeitabschnittTS.zuSpaetEingereicht;\n            zeitabschnitt.sameVerfuegungsdaten = zeitabschnittTS.sameVerfuegungsdaten;\n            zeitabschnitt.sameVerguenstigung = zeitabschnittTS.sameVerguenstigung;\n            return zeitabschnitt;\n        }\n        return undefined;\n    };\n    EbeguRestUtil.prototype.parseVerfuegungZeitabschnitt = function (verfuegungZeitabschnittTS, zeitabschnittFromServer) {\n        if (zeitabschnittFromServer) {\n            this.parseDateRangeEntity(verfuegungZeitabschnittTS, zeitabschnittFromServer);\n            verfuegungZeitabschnittTS.abzugFamGroesse = zeitabschnittFromServer.abzugFamGroesse;\n            verfuegungZeitabschnittTS.anspruchberechtigtesPensum = zeitabschnittFromServer.anspruchberechtigtesPensum;\n            verfuegungZeitabschnittTS.bgPensum = zeitabschnittFromServer.bgPensum;\n            verfuegungZeitabschnittTS.anspruchspensumRest = zeitabschnittFromServer.anspruchspensumRest;\n            verfuegungZeitabschnittTS.bemerkungen = zeitabschnittFromServer.bemerkungen;\n            verfuegungZeitabschnittTS.betreuungspensum = zeitabschnittFromServer.betreuungspensum;\n            verfuegungZeitabschnittTS.betreuungsstunden = zeitabschnittFromServer.betreuungsstunden;\n            verfuegungZeitabschnittTS.elternbeitrag = zeitabschnittFromServer.elternbeitrag;\n            verfuegungZeitabschnittTS.erwerbspensumGS1 = zeitabschnittFromServer.erwerbspensumGS1;\n            verfuegungZeitabschnittTS.erwerbspensumGS2 = zeitabschnittFromServer.erwerbspensumGS2;\n            verfuegungZeitabschnittTS.fachstellenpensum = zeitabschnittFromServer.fachstellenpensum;\n            verfuegungZeitabschnittTS.massgebendesEinkommenVorAbzugFamgr = zeitabschnittFromServer.massgebendesEinkommenVorAbzugFamgr;\n            verfuegungZeitabschnittTS.famGroesse = zeitabschnittFromServer.famGroesse;\n            verfuegungZeitabschnittTS.zahlungsstatus = zeitabschnittFromServer.zahlungsstatus;\n            verfuegungZeitabschnittTS.vollkosten = zeitabschnittFromServer.vollkosten;\n            verfuegungZeitabschnittTS.einkommensjahr = zeitabschnittFromServer.einkommensjahr;\n            verfuegungZeitabschnittTS.kategorieZuschlagZumErwerbspensum = zeitabschnittFromServer.kategorieZuschlagZumErwerbspensum;\n            verfuegungZeitabschnittTS.kategorieMaxEinkommen = zeitabschnittFromServer.kategorieMaxEinkommen;\n            verfuegungZeitabschnittTS.kategorieKeinPensum = zeitabschnittFromServer.kategorieKeinPensum;\n            verfuegungZeitabschnittTS.zuSpaetEingereicht = zeitabschnittFromServer.zuSpaetEingereicht;\n            verfuegungZeitabschnittTS.sameVerfuegungsdaten = zeitabschnittFromServer.sameVerfuegungsdaten;\n            verfuegungZeitabschnittTS.sameVerguenstigung = zeitabschnittFromServer.sameVerguenstigung;\n            return verfuegungZeitabschnittTS;\n        }\n        return undefined;\n    };\n    EbeguRestUtil.prototype.parseDownloadFile = function (tsDownloadFile, downloadFileFromServer) {\n        if (downloadFileFromServer) {\n            this.parseAbstractFileEntity(tsDownloadFile, downloadFileFromServer);\n            tsDownloadFile.accessToken = downloadFileFromServer.accessToken;\n            return tsDownloadFile;\n        }\n        return undefined;\n    };\n    EbeguRestUtil.prototype.parseWizardStep = function (wizardStepTS, wizardStepFromServer) {\n        this.parseAbstractEntity(wizardStepTS, wizardStepFromServer);\n        wizardStepTS.gesuchId = wizardStepFromServer.gesuchId;\n        wizardStepTS.wizardStepName = wizardStepFromServer.wizardStepName;\n        wizardStepTS.verfuegbar = wizardStepFromServer.verfuegbar;\n        wizardStepTS.wizardStepStatus = wizardStepFromServer.wizardStepStatus;\n        wizardStepTS.bemerkungen = wizardStepFromServer.bemerkungen;\n        return wizardStepTS;\n    };\n    EbeguRestUtil.prototype.wizardStepToRestObject = function (restWizardStep, wizardStep) {\n        this.abstractEntityToRestObject(restWizardStep, wizardStep);\n        restWizardStep.gesuchId = wizardStep.gesuchId;\n        restWizardStep.verfuegbar = wizardStep.verfuegbar;\n        restWizardStep.wizardStepName = wizardStep.wizardStepName;\n        restWizardStep.wizardStepStatus = wizardStep.wizardStepStatus;\n        restWizardStep.bemerkungen = wizardStep.bemerkungen;\n        return restWizardStep;\n    };\n    EbeguRestUtil.prototype.parseWizardStepList = function (data) {\n        var wizardSteps = [];\n        if (data && Array.isArray(data)) {\n            for (var i = 0; i < data.length; i++) {\n                wizardSteps[i] = this.parseWizardStep(new TSWizardStep_1.default(), data[i]);\n            }\n        }\n        else {\n            wizardSteps[0] = this.parseWizardStep(new TSWizardStep_1.default(), data);\n        }\n        return wizardSteps;\n    };\n    EbeguRestUtil.prototype.parseAntragStatusHistoryCollection = function (antragStatusHistoryCollection) {\n        var resultList = [];\n        if (antragStatusHistoryCollection && Array.isArray(antragStatusHistoryCollection)) {\n            for (var i = 0; i < antragStatusHistoryCollection.length; i++) {\n                resultList[i] = this.parseAntragStatusHistory(new TSAntragStatusHistory_1.default(), antragStatusHistoryCollection[i]);\n            }\n        }\n        else {\n            resultList[0] = this.parseAntragStatusHistory(new TSAntragStatusHistory_1.default(), antragStatusHistoryCollection);\n        }\n        return resultList;\n    };\n    EbeguRestUtil.prototype.parseAntragStatusHistory = function (antragStatusHistoryTS, antragStatusHistoryFromServer) {\n        this.parseAbstractEntity(antragStatusHistoryTS, antragStatusHistoryFromServer);\n        antragStatusHistoryTS.gesuchId = antragStatusHistoryFromServer.gesuchId;\n        antragStatusHistoryTS.benutzer = this.parseUser(new TSUser_1.default(), antragStatusHistoryFromServer.benutzer);\n        antragStatusHistoryTS.timestampVon = DateUtil_1.default.localDateTimeToMoment(antragStatusHistoryFromServer.timestampVon);\n        antragStatusHistoryTS.timestampBis = DateUtil_1.default.localDateTimeToMoment(antragStatusHistoryFromServer.timestampBis);\n        antragStatusHistoryTS.status = antragStatusHistoryFromServer.status;\n        return antragStatusHistoryTS;\n    };\n    EbeguRestUtil.prototype.antragStatusHistoryToRestObject = function (restAntragStatusHistory, antragStatusHistory) {\n        this.abstractEntityToRestObject(restAntragStatusHistory, antragStatusHistory);\n        restAntragStatusHistory.gesuchId = antragStatusHistory.gesuchId;\n        restAntragStatusHistory.benutzer = this.userToRestObject({}, antragStatusHistory.benutzer);\n        restAntragStatusHistory.timestampVon = DateUtil_1.default.momentToLocalDateTime(antragStatusHistory.timestampVon);\n        restAntragStatusHistory.timestampBis = DateUtil_1.default.momentToLocalDateTime(antragStatusHistory.timestampBis);\n        restAntragStatusHistory.status = antragStatusHistory.status;\n        return restAntragStatusHistory;\n    };\n    EbeguRestUtil.prototype.mahnungToRestObject = function (restMahnung, tsMahnung) {\n        if (tsMahnung) {\n            this.abstractEntityToRestObject(restMahnung, tsMahnung);\n            restMahnung.gesuch = this.gesuchToRestObject({}, tsMahnung.gesuch);\n            restMahnung.mahnungTyp = tsMahnung.mahnungTyp;\n            restMahnung.datumFristablauf = DateUtil_1.default.momentToLocalDate(tsMahnung.datumFristablauf);\n            restMahnung.bemerkungen = tsMahnung.bemerkungen;\n            restMahnung.timestampAbgeschlossen = DateUtil_1.default.momentToLocalDateTime(tsMahnung.timestampAbgeschlossen);\n            restMahnung.abgelaufen = tsMahnung.abgelaufen;\n            return restMahnung;\n        }\n        return undefined;\n    };\n    EbeguRestUtil.prototype.parseMahnungen = function (data) {\n        var mahnungen = [];\n        if (data && Array.isArray(data)) {\n            for (var i = 0; i < data.length; i++) {\n                mahnungen[i] = this.parseMahnung(new TSMahnung_1.default(), data[i]);\n            }\n        }\n        else {\n            mahnungen[0] = this.parseMahnung(new TSMahnung_1.default(), data);\n        }\n        return mahnungen;\n    };\n    EbeguRestUtil.prototype.parseMahnung = function (tsMahnung, mahnungFromServer) {\n        if (mahnungFromServer) {\n            this.parseAbstractEntity(tsMahnung, mahnungFromServer);\n            tsMahnung.gesuch = this.parseGesuch(new TSGesuch_1.default(), mahnungFromServer.gesuch);\n            tsMahnung.mahnungTyp = mahnungFromServer.mahnungTyp;\n            tsMahnung.datumFristablauf = DateUtil_1.default.localDateToMoment(mahnungFromServer.datumFristablauf);\n            tsMahnung.bemerkungen = mahnungFromServer.bemerkungen;\n            tsMahnung.timestampAbgeschlossen = DateUtil_1.default.localDateTimeToMoment(mahnungFromServer.timestampAbgeschlossen);\n            tsMahnung.abgelaufen = mahnungFromServer.abgelaufen;\n            return tsMahnung;\n        }\n        return undefined;\n    };\n    EbeguRestUtil.prototype.finanzModelToRestObject = function (restFinSitModel, finSitModel) {\n        if (finSitModel) {\n            if (finSitModel.finanzielleSituationContainerGS1) {\n                restFinSitModel.finanzielleSituationContainerGS1 = this.finanzielleSituationContainerToRestObject({}, finSitModel.finanzielleSituationContainerGS1);\n            }\n            if (finSitModel.finanzielleSituationContainerGS2) {\n                restFinSitModel.finanzielleSituationContainerGS2 = this.finanzielleSituationContainerToRestObject({}, finSitModel.finanzielleSituationContainerGS2);\n            }\n            if (finSitModel.einkommensverschlechterungContainerGS1) {\n                restFinSitModel.einkommensverschlechterungContainerGS1 = this.einkommensverschlechterungContainerToRestObject({}, finSitModel.einkommensverschlechterungContainerGS1);\n            }\n            if (finSitModel.einkommensverschlechterungContainerGS2) {\n                restFinSitModel.einkommensverschlechterungContainerGS2 = this.einkommensverschlechterungContainerToRestObject({}, finSitModel.einkommensverschlechterungContainerGS2);\n            }\n            if (finSitModel.einkommensverschlechterungInfoContainer) {\n                restFinSitModel.einkommensverschlechterungInfoContainer = this.einkommensverschlechterungInfoContainerToRestObject({}, finSitModel.einkommensverschlechterungInfoContainer);\n            }\n            restFinSitModel.gemeinsameSteuererklaerung = finSitModel.gemeinsameSteuererklaerung;\n            return restFinSitModel;\n        }\n        return undefined;\n    };\n    EbeguRestUtil.prototype.gesuchstellerContainerToRestObject = function (restGSCont, gesuchstellerCont) {\n        if (gesuchstellerCont) {\n            this.abstractEntityToRestObject(restGSCont, gesuchstellerCont);\n            restGSCont.adressen = this.adressenContainerListToRestObject(gesuchstellerCont.adressen);\n            restGSCont.alternativeAdresse = this.adresseContainerToRestObject({}, gesuchstellerCont.korrespondenzAdresse);\n            restGSCont.rechnungsAdresse = this.adresseContainerToRestObject({}, gesuchstellerCont.rechnungsAdresse);\n            if (gesuchstellerCont.gesuchstellerGS) {\n                restGSCont.gesuchstellerGS = this.gesuchstellerToRestObject({}, gesuchstellerCont.gesuchstellerGS);\n            }\n            if (gesuchstellerCont.gesuchstellerJA) {\n                restGSCont.gesuchstellerJA = this.gesuchstellerToRestObject({}, gesuchstellerCont.gesuchstellerJA);\n            }\n            if (gesuchstellerCont.finanzielleSituationContainer) {\n                restGSCont.finanzielleSituationContainer = this.finanzielleSituationContainerToRestObject({}, gesuchstellerCont.finanzielleSituationContainer);\n            }\n            if (gesuchstellerCont.einkommensverschlechterungContainer) {\n                restGSCont.einkommensverschlechterungContainer = this.einkommensverschlechterungContainerToRestObject({}, gesuchstellerCont.einkommensverschlechterungContainer);\n            }\n            if (gesuchstellerCont.erwerbspensenContainer) {\n                var erwPensenCont = [];\n                for (var i = 0; i < gesuchstellerCont.erwerbspensenContainer.length; i++) {\n                    erwPensenCont.push(this.erwerbspensumContainerToRestObject({}, gesuchstellerCont.erwerbspensenContainer[i]));\n                }\n                restGSCont.erwerbspensenContainers = erwPensenCont;\n            }\n            return restGSCont;\n        }\n        return undefined;\n    };\n    EbeguRestUtil.prototype.parseGesuchstellerContainer = function (gesuchstellerContTS, gesuchstellerContFromServer) {\n        if (gesuchstellerContFromServer) {\n            this.parseAbstractEntity(gesuchstellerContTS, gesuchstellerContFromServer);\n            gesuchstellerContTS.gesuchstellerJA = this.parseGesuchsteller(new TSGesuchsteller_1.default(), gesuchstellerContFromServer.gesuchstellerJA);\n            gesuchstellerContTS.gesuchstellerGS = this.parseGesuchsteller(new TSGesuchsteller_1.default(), gesuchstellerContFromServer.gesuchstellerGS);\n            gesuchstellerContTS.adressen = this.parseAdressenContainerList(gesuchstellerContFromServer.adressen);\n            gesuchstellerContTS.korrespondenzAdresse = this.parseAdresseContainer(new TSAdresseContainer_1.default(), gesuchstellerContFromServer.alternativeAdresse);\n            gesuchstellerContTS.rechnungsAdresse = this.parseAdresseContainer(new TSAdresseContainer_1.default(), gesuchstellerContFromServer.rechnungsAdresse);\n            gesuchstellerContTS.finanzielleSituationContainer = this.parseFinanzielleSituationContainer(new TSFinanzielleSituationContainer_1.default(), gesuchstellerContFromServer.finanzielleSituationContainer);\n            gesuchstellerContTS.einkommensverschlechterungContainer = this.parseEinkommensverschlechterungContainer(new TSEinkommensverschlechterungContainer_1.default(), gesuchstellerContFromServer.einkommensverschlechterungContainer);\n            gesuchstellerContTS.erwerbspensenContainer = this.parseErwerbspensenContainers(gesuchstellerContFromServer.erwerbspensenContainers);\n            return gesuchstellerContTS;\n        }\n        return undefined;\n    };\n    EbeguRestUtil.prototype.adressenContainerListToRestObject = function (adressen) {\n        var list = [];\n        if (adressen) {\n            for (var i = 0; i < adressen.length; i++) {\n                list[i] = this.adresseContainerToRestObject({}, adressen[i]);\n            }\n        }\n        return list;\n    };\n    EbeguRestUtil.prototype.adresseContainerToRestObject = function (restAddresseCont, adresseContTS) {\n        if (adresseContTS) {\n            this.abstractEntityToRestObject(restAddresseCont, adresseContTS);\n            restAddresseCont.adresseGS = this.adresseToRestObject({}, adresseContTS.adresseGS);\n            restAddresseCont.adresseJA = this.adresseToRestObject({}, adresseContTS.adresseJA);\n            return restAddresseCont;\n        }\n        return undefined;\n    };\n    EbeguRestUtil.prototype.parseAdressenContainerList = function (adressen) {\n        var adressenList = [];\n        if (adressen) {\n            for (var i = 0; i < adressen.length; i++) {\n                adressenList.push(this.parseAdresseContainer(new TSAdresseContainer_1.default(), adressen[i]));\n            }\n        }\n        return adressenList;\n    };\n    EbeguRestUtil.prototype.parseAdresseContainer = function (adresseContainerTS, adresseFromServer) {\n        if (adresseFromServer) {\n            this.parseAbstractEntity(adresseContainerTS, adresseFromServer);\n            adresseContainerTS.adresseGS = this.parseAdresse(new TSAdresse_1.default(), adresseFromServer.adresseGS);\n            adresseContainerTS.adresseJA = this.parseAdresse(new TSAdresse_1.default(), adresseFromServer.adresseJA);\n            return adresseContainerTS;\n        }\n        return undefined;\n    };\n    EbeguRestUtil.prototype.parseWorkJobList = function (jobWrapper) {\n        var workJobList = [];\n        if (jobWrapper && jobWrapper.jobs) {\n            for (var i = 0; i < jobWrapper.jobs.length; i++) {\n                workJobList.push(this.parseWorkJob(new TSWorkJob_1.default, jobWrapper.jobs[i]));\n            }\n        }\n        return workJobList;\n    };\n    EbeguRestUtil.prototype.parseWorkJob = function (tsWorkJob, workjobFromServer) {\n        if (workjobFromServer) {\n            this.parseAbstractEntity(tsWorkJob, workjobFromServer);\n            tsWorkJob.startinguser = workjobFromServer.startinguser;\n            tsWorkJob.batchJobStatus = workjobFromServer.batchJobStatus;\n            tsWorkJob.executionId = workjobFromServer.executionId;\n            tsWorkJob.params = workjobFromServer.params;\n            tsWorkJob.workJobType = workjobFromServer.workJobType;\n            tsWorkJob.resultData = workjobFromServer.resultData;\n            tsWorkJob.requestURI = workjobFromServer.requestURI;\n            tsWorkJob.execution = this.parseBatchJobInformation(new TSBatchJobInformation_1.default(), workjobFromServer.execution);\n            return tsWorkJob;\n        }\n        return undefined;\n    };\n    EbeguRestUtil.prototype.parseBatchJobInformation = function (testBatchJobInfo, batchJobInfoFromServer) {\n        if (batchJobInfoFromServer) {\n            testBatchJobInfo.batchStatus = batchJobInfoFromServer.batchStatus;\n            testBatchJobInfo.createTime = batchJobInfoFromServer.createTime;\n            testBatchJobInfo.endTime = batchJobInfoFromServer.endTime;\n            testBatchJobInfo.executionId = batchJobInfoFromServer.executionId;\n            testBatchJobInfo.executionId = batchJobInfoFromServer.executionId;\n            testBatchJobInfo.jobName = batchJobInfoFromServer.jobName;\n            testBatchJobInfo.lastUpdatedTime = batchJobInfoFromServer.lastUpdatedTime;\n            testBatchJobInfo.startTime = batchJobInfoFromServer.startTime;\n            return testBatchJobInfo;\n        }\n        return undefined;\n    };\n    EbeguRestUtil.prototype.parseMitteilung = function (tsMitteilung, mitteilungFromServer) {\n        if (mitteilungFromServer) {\n            this.parseAbstractEntity(tsMitteilung, mitteilungFromServer);\n            tsMitteilung.fall = this.parseFall(new TSFall_1.default(), mitteilungFromServer.fall);\n            if (mitteilungFromServer.betreuung) {\n                tsMitteilung.betreuung = this.parseBetreuung(new TSBetreuung_1.default(), mitteilungFromServer.betreuung);\n            }\n            tsMitteilung.senderTyp = mitteilungFromServer.senderTyp;\n            tsMitteilung.empfaengerTyp = mitteilungFromServer.empfaengerTyp;\n            tsMitteilung.sender = this.parseUser(new TSUser_1.default(), mitteilungFromServer.sender);\n            tsMitteilung.empfaenger = this.parseUser(new TSUser_1.default(), mitteilungFromServer.empfaenger);\n            tsMitteilung.subject = mitteilungFromServer.subject;\n            tsMitteilung.message = mitteilungFromServer.message;\n            tsMitteilung.mitteilungStatus = mitteilungFromServer.mitteilungStatus;\n            tsMitteilung.sentDatum = DateUtil_1.default.localDateTimeToMoment(mitteilungFromServer.sentDatum);\n            return tsMitteilung;\n        }\n        return undefined;\n    };\n    EbeguRestUtil.prototype.mitteilungToRestObject = function (restMitteilung, tsMitteilung) {\n        if (tsMitteilung) {\n            this.abstractEntityToRestObject(restMitteilung, tsMitteilung);\n            restMitteilung.fall = this.fallToRestObject({}, tsMitteilung.fall);\n            if (tsMitteilung.betreuung) {\n                restMitteilung.betreuung = this.betreuungToRestObject({}, tsMitteilung.betreuung);\n            }\n            restMitteilung.senderTyp = tsMitteilung.senderTyp;\n            restMitteilung.empfaengerTyp = tsMitteilung.empfaengerTyp;\n            restMitteilung.sender = this.userToRestObject({}, tsMitteilung.sender);\n            restMitteilung.empfaenger = this.userToRestObject({}, tsMitteilung.empfaenger);\n            restMitteilung.subject = tsMitteilung.subject;\n            restMitteilung.message = tsMitteilung.message;\n            restMitteilung.mitteilungStatus = tsMitteilung.mitteilungStatus;\n            restMitteilung.sentDatum = DateUtil_1.default.momentToLocalDateTime(tsMitteilung.sentDatum);\n            return restMitteilung;\n        }\n        return undefined;\n    };\n    EbeguRestUtil.prototype.parseMitteilungen = function (mitteilungen) {\n        var mitteilungenList = [];\n        if (mitteilungen) {\n            for (var i = 0; i < mitteilungen.length; i++) {\n                if (this.isBetreuungsmitteilung(mitteilungen[i])) {\n                    mitteilungenList.push(this.parseBetreuungsmitteilung(new TSBetreuungsmitteilung_1.default(), mitteilungen[i]));\n                }\n                else {\n                    mitteilungenList.push(this.parseMitteilung(new TSMitteilung_1.default(), mitteilungen[i]));\n                }\n            }\n        }\n        return mitteilungenList;\n    };\n    EbeguRestUtil.prototype.betreuungsmitteilungToRestObject = function (restBetreuungsmitteilung, tsBetreuungsmitteilung) {\n        var _this = this;\n        if (tsBetreuungsmitteilung) {\n            this.mitteilungToRestObject(restBetreuungsmitteilung, tsBetreuungsmitteilung);\n            restBetreuungsmitteilung.applied = tsBetreuungsmitteilung.applied;\n            if (tsBetreuungsmitteilung.betreuungspensen) {\n                restBetreuungsmitteilung.betreuungspensen = [];\n                tsBetreuungsmitteilung.betreuungspensen.forEach(function (betreuungspensum) {\n                    restBetreuungsmitteilung.betreuungspensen.push(_this.betreuungsmitteilungPensumToRestObject({}, betreuungspensum));\n                });\n            }\n        }\n        return restBetreuungsmitteilung;\n    };\n    EbeguRestUtil.prototype.parseBetreuungsmitteilung = function (tsBetreuungsmitteilung, betreuungsmitteilungFromServer) {\n        if (betreuungsmitteilungFromServer) {\n            this.parseMitteilung(tsBetreuungsmitteilung, betreuungsmitteilungFromServer);\n            tsBetreuungsmitteilung.applied = betreuungsmitteilungFromServer.applied;\n            if (betreuungsmitteilungFromServer.betreuungspensen) {\n                tsBetreuungsmitteilung.betreuungspensen = [];\n                for (var i = 0; i < betreuungsmitteilungFromServer.betreuungspensen.length; i++) {\n                    tsBetreuungsmitteilung.betreuungspensen.push(this.parseBetreuungsmitteilungPensum(new TSBetreuungsmitteilungPensum_1.default(), betreuungsmitteilungFromServer.betreuungspensen[i]));\n                }\n            }\n        }\n        return tsBetreuungsmitteilung;\n    };\n    EbeguRestUtil.prototype.isBetreuungsmitteilung = function (mitteilung) {\n        return mitteilung.betreuungspensen !== undefined;\n    };\n    EbeguRestUtil.prototype.parseZahlungsauftragList = function (data) {\n        var zahlungsauftrag = [];\n        if (data) {\n            for (var i = 0; i < data.length; i++) {\n                zahlungsauftrag[i] = this.parseZahlungsauftrag(new TSZahlungsauftrag_1.default(), data[i]);\n            }\n        }\n        return zahlungsauftrag;\n    };\n    EbeguRestUtil.prototype.parseZahlungsauftrag = function (tsZahlungsauftrag, zahlungsauftragFromServer) {\n        if (zahlungsauftragFromServer) {\n            this.parseDateRangeEntity(tsZahlungsauftrag, zahlungsauftragFromServer);\n            tsZahlungsauftrag.status = zahlungsauftragFromServer.status;\n            tsZahlungsauftrag.beschrieb = zahlungsauftragFromServer.beschrieb;\n            tsZahlungsauftrag.datumFaellig = DateUtil_1.default.localDateToMoment(zahlungsauftragFromServer.datumFaellig);\n            tsZahlungsauftrag.datumGeneriert = DateUtil_1.default.localDateTimeToMoment(zahlungsauftragFromServer.datumGeneriert);\n            tsZahlungsauftrag.betragTotalAuftrag = zahlungsauftragFromServer.betragTotalAuftrag;\n            tsZahlungsauftrag.zahlungen = this.parseZahlungen(zahlungsauftragFromServer.zahlungen);\n            return tsZahlungsauftrag;\n        }\n        return undefined;\n    };\n    EbeguRestUtil.prototype.parseZahlungen = function (data) {\n        var zahlungen = [];\n        if (data) {\n            for (var i = 0; i < data.length; i++) {\n                zahlungen[i] = this.parseZahlung(new TSZahlung_1.default(), data[i]);\n            }\n        }\n        return zahlungen;\n    };\n    EbeguRestUtil.prototype.parseZahlung = function (tsZahlung, zahlungFromServer) {\n        if (zahlungFromServer) {\n            this.parseAbstractEntity(tsZahlung, zahlungFromServer);\n            tsZahlung.betragTotalZahlung = zahlungFromServer.betragTotalZahlung;\n            tsZahlung.institutionsName = zahlungFromServer.institutionsName;\n            tsZahlung.status = zahlungFromServer.status;\n            return tsZahlung;\n        }\n        return undefined;\n    };\n    EbeguRestUtil.prototype.parseEWKResultat = function (ewkResultatTS, ewkResultatFromServer) {\n        if (ewkResultatFromServer) {\n            ewkResultatTS.maxResultate = ewkResultatFromServer.maxResultate;\n            ewkResultatTS.anzahlResultate = ewkResultatFromServer.anzahlResultate;\n            ewkResultatTS.personen = this.parseEWKPersonList(ewkResultatFromServer.personen);\n            return ewkResultatTS;\n        }\n        return undefined;\n    };\n    EbeguRestUtil.prototype.parseEWKPersonList = function (data) {\n        var personen = [];\n        if (data) {\n            for (var i = 0; i < data.length; i++) {\n                personen[i] = this.parseEWKPerson(new TSEWKPerson_1.default(), data[i]);\n            }\n        }\n        return personen;\n    };\n    EbeguRestUtil.prototype.parseEWKPerson = function (tsEWKPerson, ewkPersonFromServer) {\n        if (ewkPersonFromServer) {\n            tsEWKPerson.personID = ewkPersonFromServer.personID;\n            tsEWKPerson.einwohnercodes = this.parseEWKEinwohnercodeList(ewkPersonFromServer.einwohnercodes);\n            tsEWKPerson.nachname = ewkPersonFromServer.nachname;\n            tsEWKPerson.ledigname = ewkPersonFromServer.ledigname;\n            tsEWKPerson.vorname = ewkPersonFromServer.vorname;\n            tsEWKPerson.rufname = ewkPersonFromServer.rufname;\n            tsEWKPerson.geburtsdatum = DateUtil_1.default.localDateToMoment(ewkPersonFromServer.geburtsdatum);\n            tsEWKPerson.zuzugsdatum = DateUtil_1.default.localDateToMoment(ewkPersonFromServer.zuzugsdatum);\n            tsEWKPerson.nationalitaet = ewkPersonFromServer.nationalitaet;\n            tsEWKPerson.zivilstand = ewkPersonFromServer.zivilstand;\n            tsEWKPerson.zivilstandTxt = ewkPersonFromServer.zivilstandTxt;\n            tsEWKPerson.zivilstandsdatum = DateUtil_1.default.localDateToMoment(ewkPersonFromServer.zivilstandsdatum);\n            tsEWKPerson.geschlecht = ewkPersonFromServer.geschlecht;\n            tsEWKPerson.bewilligungsart = ewkPersonFromServer.bewilligungsart;\n            tsEWKPerson.bewilligungsartTxt = ewkPersonFromServer.bewilligungsartTxt;\n            tsEWKPerson.bewilligungBis = DateUtil_1.default.localDateToMoment(ewkPersonFromServer.bewilligungBis);\n            tsEWKPerson.adressen = this.parseEWKAdresseList(ewkPersonFromServer.adressen);\n            tsEWKPerson.beziehungen = this.parseEWKBeziehungList(ewkPersonFromServer.beziehungen);\n            return tsEWKPerson;\n        }\n        return undefined;\n    };\n    EbeguRestUtil.prototype.parseEWKEinwohnercodeList = function (data) {\n        var codes = [];\n        if (data) {\n            for (var i = 0; i < data.length; i++) {\n                codes[i] = this.parseEWKEinwohnercode(new TSEWKEinwohnercode_1.default(), data[i]);\n            }\n        }\n        return codes;\n    };\n    EbeguRestUtil.prototype.parseEWKEinwohnercode = function (tsEWKEinwohnercode, ewkEinwohnercodeFromServer) {\n        if (ewkEinwohnercodeFromServer) {\n            tsEWKEinwohnercode.code = ewkEinwohnercodeFromServer.code;\n            tsEWKEinwohnercode.codeTxt = ewkEinwohnercodeFromServer.codeTxt;\n            tsEWKEinwohnercode.gueltigVon = DateUtil_1.default.localDateToMoment(ewkEinwohnercodeFromServer.gueltigVon);\n            tsEWKEinwohnercode.gueltigBis = DateUtil_1.default.localDateToMoment(ewkEinwohnercodeFromServer.gueltigBis);\n            return tsEWKEinwohnercode;\n        }\n        return undefined;\n    };\n    EbeguRestUtil.prototype.parseEWKAdresseList = function (data) {\n        var adressen = [];\n        if (data) {\n            for (var i = 0; i < data.length; i++) {\n                adressen[i] = this.parseEWKAdresse(new TSEWKAdresse_1.default(), data[i]);\n            }\n        }\n        return adressen;\n    };\n    EbeguRestUtil.prototype.parseEWKAdresse = function (tsEWKAdresse, ewkAdresseFromServer) {\n        if (ewkAdresseFromServer) {\n            tsEWKAdresse.adresstyp = ewkAdresseFromServer.adresstyp;\n            tsEWKAdresse.adresstypTxt = ewkAdresseFromServer.adresstypTxt;\n            tsEWKAdresse.gueltigVon = DateUtil_1.default.localDateToMoment(ewkAdresseFromServer.gueltigVon);\n            tsEWKAdresse.gueltigBis = DateUtil_1.default.localDateToMoment(ewkAdresseFromServer.gueltigBis);\n            tsEWKAdresse.coName = ewkAdresseFromServer.coName;\n            tsEWKAdresse.postfach = ewkAdresseFromServer.postfach;\n            tsEWKAdresse.bfSGemeinde = ewkAdresseFromServer.bfSGemeinde;\n            tsEWKAdresse.strasse = ewkAdresseFromServer.strasse;\n            tsEWKAdresse.hausnummer = ewkAdresseFromServer.hausnummer;\n            tsEWKAdresse.postleitzahl = ewkAdresseFromServer.postleitzahl;\n            tsEWKAdresse.ort = ewkAdresseFromServer.ort;\n            tsEWKAdresse.kanton = ewkAdresseFromServer.kanton;\n            tsEWKAdresse.land = ewkAdresseFromServer.land;\n            return tsEWKAdresse;\n        }\n        return undefined;\n    };\n    EbeguRestUtil.prototype.parseEWKBeziehungList = function (data) {\n        var beziehungen = [];\n        if (data) {\n            for (var i = 0; i < data.length; i++) {\n                beziehungen[i] = this.parseEWKBeziehung(new TSEWKBeziehung_1.default(), data[i]);\n            }\n        }\n        return beziehungen;\n    };\n    EbeguRestUtil.prototype.parseEWKBeziehung = function (tsEWKBeziehung, ewkBeziehungFromServer) {\n        if (ewkBeziehungFromServer) {\n            tsEWKBeziehung.beziehungstyp = ewkBeziehungFromServer.beziehungstyp;\n            tsEWKBeziehung.beziehungstypTxt = ewkBeziehungFromServer.beziehungstypTxt;\n            tsEWKBeziehung.personID = ewkBeziehungFromServer.personID;\n            tsEWKBeziehung.nachname = ewkBeziehungFromServer.nachname;\n            tsEWKBeziehung.ledigname = ewkBeziehungFromServer.ledigname;\n            tsEWKBeziehung.vorname = ewkBeziehungFromServer.vorname;\n            tsEWKBeziehung.rufname = ewkBeziehungFromServer.rufname;\n            tsEWKBeziehung.geburtsdatum = DateUtil_1.default.localDateToMoment(ewkBeziehungFromServer.geburtsdatum);\n            tsEWKBeziehung.adresse = this.parseEWKAdresse(new TSEWKAdresse_1.default(), ewkBeziehungFromServer.adresse);\n            return tsEWKBeziehung;\n        }\n        return undefined;\n    };\n    EbeguRestUtil.prototype.parseModuleTagesschuleArray = function (data) {\n        var moduleTagesschule = [];\n        if (data && Array.isArray(data)) {\n            for (var i = 0; i < data.length; i++) {\n                moduleTagesschule[i] = this.parseModulTagesschule(new TSModulTagesschule_1.default(), data[i]);\n            }\n        }\n        else {\n            moduleTagesschule[0] = this.parseModulTagesschule(new TSModulTagesschule_1.default(), data);\n        }\n        return moduleTagesschule;\n    };\n    EbeguRestUtil.prototype.parseModulTagesschule = function (modulTagesschuleTS, modulFromServer) {\n        if (modulFromServer) {\n            this.parseAbstractEntity(modulTagesschuleTS, modulFromServer);\n            modulTagesschuleTS.modulTagesschuleName = modulFromServer.modulTagesschuleName;\n            modulTagesschuleTS.wochentag = modulFromServer.wochentag;\n            modulTagesschuleTS.zeitVon = DateUtil_1.default.localDateTimeToMoment(modulFromServer.zeitVon);\n            modulTagesschuleTS.zeitBis = DateUtil_1.default.localDateTimeToMoment(modulFromServer.zeitBis);\n            return modulTagesschuleTS;\n        }\n        return undefined;\n    };\n    EbeguRestUtil.prototype.moduleTagesschuleArrayToRestObject = function (moduleTagesschule) {\n        var list = [];\n        if (moduleTagesschule) {\n            for (var i = 0; i < moduleTagesschule.length; i++) {\n                list[i] = this.modulTagesschuleToRestObject({}, moduleTagesschule[i]);\n            }\n        }\n        return list;\n    };\n    EbeguRestUtil.prototype.modulTagesschuleToRestObject = function (restModul, modulTagesschuleTS) {\n        if (modulTagesschuleTS) {\n            this.abstractEntityToRestObject(restModul, modulTagesschuleTS);\n            restModul.modulTagesschuleName = modulTagesschuleTS.modulTagesschuleName;\n            restModul.wochentag = modulTagesschuleTS.wochentag;\n            restModul.zeitVon = DateUtil_1.default.momentToLocalDateTime(modulTagesschuleTS.zeitVon);\n            restModul.zeitBis = DateUtil_1.default.momentToLocalDateTime(modulTagesschuleTS.zeitBis);\n            return restModul;\n        }\n        return undefined;\n    };\n    EbeguRestUtil.prototype.parseBelegungTagesschule = function (belegungTS, belegungFromServer) {\n        if (belegungFromServer) {\n            this.parseAbstractEntity(belegungTS, belegungFromServer);\n            belegungTS.moduleTagesschule = this.parseModuleTagesschuleArray(belegungFromServer.moduleTagesschule);\n            belegungTS.eintrittsdatum = DateUtil_1.default.localDateToMoment(belegungFromServer.eintrittsdatum);\n            return belegungTS;\n        }\n        return undefined;\n    };\n    EbeguRestUtil.prototype.belegungTagesschuleToRestObject = function (restBelegung, belegungTS) {\n        if (belegungTS) {\n            this.abstractEntityToRestObject(restBelegung, belegungTS);\n            restBelegung.moduleTagesschule = this.moduleTagesschuleArrayToRestObject(belegungTS.moduleTagesschule);\n            restBelegung.eintrittsdatum = DateUtil_1.default.momentToLocalDate(belegungTS.eintrittsdatum);\n            return restBelegung;\n        }\n        return undefined;\n    };\n    EbeguRestUtil.prototype.parseFerieninselStammdatenList = function (data) {\n        var ferieninselStammdatenList = [];\n        if (data && Array.isArray(data)) {\n            for (var i = 0; i < data.length; i++) {\n                ferieninselStammdatenList[i] = this.parseFerieninselStammdaten(new TSFerieninselStammdaten_1.default(), data[i]);\n            }\n        }\n        else {\n            ferieninselStammdatenList[0] = this.parseFerieninselStammdaten(new TSFerieninselStammdaten_1.default(), data);\n        }\n        return ferieninselStammdatenList;\n    };\n    EbeguRestUtil.prototype.parseFerieninselStammdaten = function (ferieninselStammdatenTS, receivedFerieninselStammdaten) {\n        if (receivedFerieninselStammdaten) {\n            this.parseAbstractEntity(ferieninselStammdatenTS, receivedFerieninselStammdaten);\n            ferieninselStammdatenTS.ferienname = receivedFerieninselStammdaten.ferienname;\n            ferieninselStammdatenTS.anmeldeschluss = DateUtil_1.default.localDateToMoment(receivedFerieninselStammdaten.anmeldeschluss);\n            ferieninselStammdatenTS.gesuchsperiode = this.parseGesuchsperiode(new TSGesuchsperiode_1.default(), receivedFerieninselStammdaten.gesuchsperiode);\n            if (receivedFerieninselStammdaten.zeitraumList[0]) {\n                var firstZeitraum = new TSFerieninselZeitraum_1.default();\n                this.parseDateRangeEntity(firstZeitraum, receivedFerieninselStammdaten.zeitraumList[0]);\n                ferieninselStammdatenTS.zeitraum = firstZeitraum;\n            }\n            ferieninselStammdatenTS.zeitraumList = [];\n            for (var i = 1; i < receivedFerieninselStammdaten.zeitraumList.length; i++) {\n                var zeitraum = new TSFerieninselZeitraum_1.default();\n                this.parseDateRangeEntity(zeitraum, receivedFerieninselStammdaten.zeitraumList[i]);\n                ferieninselStammdatenTS.zeitraumList.push(zeitraum);\n            }\n            if (receivedFerieninselStammdaten.potenzielleFerieninselTageFuerBelegung) {\n                ferieninselStammdatenTS.potenzielleFerieninselTageFuerBelegung = this.parseBelegungFerieninselTagList(receivedFerieninselStammdaten.potenzielleFerieninselTageFuerBelegung);\n            }\n            return ferieninselStammdatenTS;\n        }\n        return undefined;\n    };\n    EbeguRestUtil.prototype.ferieninselStammdatenToRestObject = function (restFerieninselStammdaten, ferieninselStammdatenTS) {\n        if (ferieninselStammdatenTS) {\n            this.abstractEntityToRestObject(restFerieninselStammdaten, ferieninselStammdatenTS);\n            restFerieninselStammdaten.ferienname = ferieninselStammdatenTS.ferienname;\n            restFerieninselStammdaten.anmeldeschluss = DateUtil_1.default.momentToLocalDate(ferieninselStammdatenTS.anmeldeschluss);\n            restFerieninselStammdaten.gesuchsperiode = this.gesuchsperiodeToRestObject({}, ferieninselStammdatenTS.gesuchsperiode);\n            if (ferieninselStammdatenTS.zeitraum) {\n                var firstZeitraum = {};\n                this.abstractDateRangeEntityToRestObject(firstZeitraum, ferieninselStammdatenTS.zeitraum);\n                restFerieninselStammdaten.zeitraumList = [];\n                restFerieninselStammdaten.zeitraumList[0] = firstZeitraum;\n            }\n            if (ferieninselStammdatenTS.zeitraumList) {\n                for (var i = 0; i < ferieninselStammdatenTS.zeitraumList.length; i++) {\n                    var zeitraum = {};\n                    this.abstractDateRangeEntityToRestObject(zeitraum, ferieninselStammdatenTS.zeitraumList[i]);\n                    restFerieninselStammdaten.zeitraumList[i + 1] = zeitraum;\n                }\n            }\n            return restFerieninselStammdaten;\n        }\n        return undefined;\n    };\n    EbeguRestUtil.prototype.parseBelegungFerieninselList = function (data) {\n        var belegungFerieninselList = [];\n        if (data && Array.isArray(data)) {\n            for (var i = 0; i < data.length; i++) {\n                belegungFerieninselList[i] = this.parseBelegungFerieninsel(new TSBelegungFerieninsel_1.default(), data[i]);\n            }\n        }\n        else {\n            belegungFerieninselList[0] = this.parseBelegungFerieninsel(new TSBelegungFerieninsel_1.default(), data);\n        }\n        return belegungFerieninselList;\n    };\n    EbeguRestUtil.prototype.parseBelegungFerieninsel = function (belegungFerieninselTS, receivedBelegungFerieninsel) {\n        if (receivedBelegungFerieninsel) {\n            this.parseAbstractEntity(belegungFerieninselTS, receivedBelegungFerieninsel);\n            belegungFerieninselTS.ferienname = receivedBelegungFerieninsel.ferienname;\n            belegungFerieninselTS.tage = this.parseBelegungFerieninselTagList(receivedBelegungFerieninsel.tage);\n            return belegungFerieninselTS;\n        }\n        return undefined;\n    };\n    EbeguRestUtil.prototype.parseBelegungFerieninselTagList = function (data) {\n        var belegungFerieninselTagList = [];\n        if (data && Array.isArray(data)) {\n            for (var i = 0; i < data.length; i++) {\n                belegungFerieninselTagList[i] = this.parseBelegungFerieninselTag(new TSBelegungFerieninselTag_1.default(), data[i]);\n            }\n        }\n        else {\n            belegungFerieninselTagList[0] = this.parseBelegungFerieninselTag(new TSBelegungFerieninselTag_1.default(), data);\n        }\n        return belegungFerieninselTagList;\n    };\n    EbeguRestUtil.prototype.parseBelegungFerieninselTag = function (belegungFerieninselTagTS, receivedBelegungFerieninselTag) {\n        if (receivedBelegungFerieninselTag) {\n            this.parseAbstractEntity(belegungFerieninselTagTS, receivedBelegungFerieninselTag);\n            belegungFerieninselTagTS.tag = DateUtil_1.default.localDateToMoment(receivedBelegungFerieninselTag.tag);\n            return belegungFerieninselTagTS;\n        }\n        return undefined;\n    };\n    EbeguRestUtil.prototype.belegungFerieninselToRestObject = function (restBelegungFerieninsel, belegungFerieninselTS) {\n        if (belegungFerieninselTS) {\n            this.abstractEntityToRestObject(restBelegungFerieninsel, belegungFerieninselTS);\n            restBelegungFerieninsel.ferienname = belegungFerieninselTS.ferienname;\n            restBelegungFerieninsel.tage = [];\n            if (belegungFerieninselTS.tage) {\n                for (var i = 0; i < belegungFerieninselTS.tage.length; i++) {\n                    var tagRest = {};\n                    this.abstractEntityToRestObject(tagRest, belegungFerieninselTS.tage[i]);\n                    tagRest.tag = DateUtil_1.default.momentToLocalDate(belegungFerieninselTS.tage[i].tag);\n                    restBelegungFerieninsel.tage.push(tagRest);\n                }\n            }\n            return restBelegungFerieninsel;\n        }\n        return undefined;\n    };\n    EbeguRestUtil.$inject = ['EbeguUtil'];\n    return EbeguRestUtil;\n}());\nexports.default = EbeguRestUtil;\n",{"version":3,"file":"/home/imanol/projects/ebegu/ebegu-web/src/utils/EbeguRestUtil.ts","sourceRoot":"","sources":["/home/imanol/projects/ebegu/ebegu-web/src/utils/EbeguRestUtil.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Ki-Tax: System for the management of external childcare subsidies\n * Copyright (C) 2017 City of Bern Switzerland\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport TSDokumenteDTO from '../models/dto/TSDokumenteDTO';\nimport TSFinanzielleSituationResultateDTO from '../models/dto/TSFinanzielleSituationResultateDTO';\nimport TSQuickSearchResult from '../models/dto/TSQuickSearchResult';\nimport TSSearchResultEntry from '../models/dto/TSSearchResultEntry';\nimport {TSAdressetyp} from '../models/enums/TSAdressetyp';\nimport TSAbstractAntragEntity from '../models/TSAbstractAntragEntity';\nimport {TSAbstractDateRangedEntity} from '../models/TSAbstractDateRangedEntity';\nimport TSAbstractEntity from '../models/TSAbstractEntity';\nimport TSAbstractFinanzielleSituation from '../models/TSAbstractFinanzielleSituation';\nimport {TSAbstractPensumEntity} from '../models/TSAbstractPensumEntity';\nimport TSAbstractPersonEntity from '../models/TSAbstractPersonEntity';\nimport TSAbwesenheit from '../models/TSAbwesenheit';\nimport TSAbwesenheitContainer from '../models/TSAbwesenheitContainer';\nimport TSAdresse from '../models/TSAdresse';\nimport TSAdresseContainer from '../models/TSAdresseContainer';\nimport TSAntragDTO from '../models/TSAntragDTO';\nimport TSAntragStatusHistory from '../models/TSAntragStatusHistory';\nimport TSApplicationProperty from '../models/TSApplicationProperty';\nimport TSBelegungFerieninsel from '../models/TSBelegungFerieninsel';\nimport TSBelegungFerieninselTag from '../models/TSBelegungFerieninselTag';\nimport TSBelegungTagesschule from '../models/TSBelegungTagesschule';\nimport TSBetreuung from '../models/TSBetreuung';\nimport TSBetreuungsmitteilung from '../models/TSBetreuungsmitteilung';\nimport TSBetreuungsmitteilungPensum from '../models/TSBetreuungsmitteilungPensum';\nimport TSBetreuungspensum from '../models/TSBetreuungspensum';\nimport TSBetreuungspensumContainer from '../models/TSBetreuungspensumContainer';\nimport TSDokument from '../models/TSDokument';\nimport TSDokumentGrund from '../models/TSDokumentGrund';\nimport TSDownloadFile from '../models/TSDownloadFile';\nimport TSEbeguParameter from '../models/TSEbeguParameter';\nimport TSEbeguVorlage from '../models/TSEbeguVorlage';\nimport TSEinkommensverschlechterung from '../models/TSEinkommensverschlechterung';\nimport TSEinkommensverschlechterungContainer from '../models/TSEinkommensverschlechterungContainer';\nimport TSEinkommensverschlechterungInfo from '../models/TSEinkommensverschlechterungInfo';\nimport TSEinkommensverschlechterungInfoContainer from '../models/TSEinkommensverschlechterungInfoContainer';\nimport TSErwerbspensum from '../models/TSErwerbspensum';\nimport TSErwerbspensumContainer from '../models/TSErwerbspensumContainer';\nimport TSEWKAdresse from '../models/TSEWKAdresse';\nimport TSEWKBeziehung from '../models/TSEWKBeziehung';\nimport TSEWKEinwohnercode from '../models/TSEWKEinwohnercode';\nimport TSEWKPerson from '../models/TSEWKPerson';\nimport TSEWKResultat from '../models/TSEWKResultat';\nimport {TSFachstelle} from '../models/TSFachstelle';\nimport TSFall from '../models/TSFall';\nimport TSFallAntragDTO from '../models/TSFallAntragDTO';\nimport TSFamiliensituation from '../models/TSFamiliensituation';\nimport TSFamiliensituationContainer from '../models/TSFamiliensituationContainer';\nimport TSFerieninselStammdaten from '../models/TSFerieninselStammdaten';\nimport TSFerieninselZeitraum from '../models/TSFerieninselZeitraum';\nimport TSFile from '../models/TSFile';\nimport TSFinanzielleSituation from '../models/TSFinanzielleSituation';\nimport TSFinanzielleSituationContainer from '../models/TSFinanzielleSituationContainer';\nimport TSFinanzModel from '../models/TSFinanzModel';\nimport TSGesuch from '../models/TSGesuch';\nimport TSGesuchsperiode from '../models/TSGesuchsperiode';\nimport TSGesuchsteller from '../models/TSGesuchsteller';\nimport TSGesuchstellerContainer from '../models/TSGesuchstellerContainer';\nimport TSInstitution from '../models/TSInstitution';\nimport TSInstitutionStammdaten from '../models/TSInstitutionStammdaten';\nimport TSInstitutionStammdatenTagesschule from '../models/TSInstitutionStammdatenTagesschule';\nimport TSKind from '../models/TSKind';\nimport TSKindContainer from '../models/TSKindContainer';\nimport TSKindDublette from '../models/TSKindDublette';\nimport TSMahnung from '../models/TSMahnung';\nimport {TSMandant} from '../models/TSMandant';\nimport TSMitteilung from '../models/TSMitteilung';\nimport TSModulTagesschule from '../models/TSModulTagesschule';\nimport TSPendenzBetreuung from '../models/TSPendenzBetreuung';\nimport {TSPensumFachstelle} from '../models/TSPensumFachstelle';\nimport {TSTraegerschaft} from '../models/TSTraegerschaft';\nimport TSUser from '../models/TSUser';\nimport TSVerfuegung from '../models/TSVerfuegung';\nimport TSVerfuegungZeitabschnitt from '../models/TSVerfuegungZeitabschnitt';\nimport TSVorlage from '../models/TSVorlage';\nimport TSWizardStep from '../models/TSWizardStep';\nimport TSZahlung from '../models/TSZahlung';\nimport TSZahlungsauftrag from '../models/TSZahlungsauftrag';\nimport {TSDateRange} from '../models/types/TSDateRange';\nimport TSLand from '../models/types/TSLand';\nimport DateUtil from './DateUtil';\nimport EbeguUtil from './EbeguUtil';\nimport TSAnmeldungDTO from '../models/TSAnmeldungDTO';\nimport TSWorkJob from '../models/TSWorkJob';\nimport TSBatchJobInformation from '../models/TSBatchJobInformation';\n\nexport default class EbeguRestUtil {\n    static $inject = ['EbeguUtil'];\n\n    /* @ngInject */\n    constructor(private ebeguUtil: EbeguUtil) {\n    }\n\n    /**\n     * Wandelt Data in einen TSApplicationProperty Array um, welches danach zurueckgeliefert wird\n     * @param data\n     * @returns {TSApplicationProperty[]}\n     */\n    public parseApplicationProperties(data: any): TSApplicationProperty[] {\n        let appProperties: TSApplicationProperty[] = [];\n        if (data && Array.isArray(data)) {\n            for (let i = 0; i < data.length; i++) {\n                appProperties[i] = this.parseApplicationProperty(new TSApplicationProperty('', ''), data[i]);\n            }\n        } else {\n            appProperties[0] = this.parseApplicationProperty(new TSApplicationProperty('', ''), data);\n        }\n        return appProperties;\n    }\n\n    /**\n     * Wandelt die receivedAppProperty in einem parsedAppProperty um.\n     * @param parsedAppProperty\n     * @param receivedAppProperty\n     * @returns {TSApplicationProperty}\n     */\n    public parseApplicationProperty(parsedAppProperty: TSApplicationProperty, receivedAppProperty: any): TSApplicationProperty {\n        this.parseAbstractEntity(parsedAppProperty, receivedAppProperty);\n        parsedAppProperty.name = receivedAppProperty.name;\n        parsedAppProperty.value = receivedAppProperty.value;\n        return parsedAppProperty;\n    }\n\n    public parseEbeguParameters(data: any): TSEbeguParameter[] {\n        let ebeguParameters: TSEbeguParameter[] = [];\n        if (data && Array.isArray(data)) {\n            for (let i = 0; i < data.length; i++) {\n                ebeguParameters[i] = this.parseEbeguParameter(new TSEbeguParameter(), data[i]);\n            }\n        } else {\n            ebeguParameters[0] = this.parseEbeguParameter(new TSEbeguParameter(), data);\n        }\n        return ebeguParameters;\n    }\n\n    public parseEbeguParameter(ebeguParameterTS: TSEbeguParameter, receivedEbeguParameter: any): TSEbeguParameter {\n        if (receivedEbeguParameter) {\n            this.parseDateRangeEntity(ebeguParameterTS, receivedEbeguParameter);\n            ebeguParameterTS.name = receivedEbeguParameter.name;\n            ebeguParameterTS.value = receivedEbeguParameter.value;\n            ebeguParameterTS.proGesuchsperiode = receivedEbeguParameter.proGesuchsperiode;\n            return ebeguParameterTS;\n        }\n        return undefined;\n    }\n\n    public ebeguParameterToRestObject(restEbeguParameter: any, ebeguParameter: TSEbeguParameter): TSEbeguParameter {\n        if (ebeguParameter) {\n            this.abstractDateRangeEntityToRestObject(restEbeguParameter, ebeguParameter);\n            restEbeguParameter.name = ebeguParameter.name;\n            restEbeguParameter.value = ebeguParameter.value;\n            return restEbeguParameter;\n        }\n        return undefined;\n    }\n\n    public parseEbeguVorlages(data: any): TSEbeguVorlage[] {\n        let ebeguVorlages: TSEbeguVorlage[] = [];\n        if (data && Array.isArray(data)) {\n            for (let i = 0; i < data.length; i++) {\n                ebeguVorlages[i] = this.parseEbeguVorlage(new TSEbeguVorlage(), data[i]);\n            }\n        } else {\n            ebeguVorlages[0] = this.parseEbeguVorlage(new TSEbeguVorlage(), data);\n        }\n        return ebeguVorlages;\n    }\n\n    public parseEbeguVorlage(ebeguVorlageTS: TSEbeguVorlage, receivedEbeguVorlage: any): TSEbeguVorlage {\n        if (receivedEbeguVorlage) {\n            this.parseDateRangeEntity(ebeguVorlageTS, receivedEbeguVorlage);\n            ebeguVorlageTS.name = receivedEbeguVorlage.name;\n            ebeguVorlageTS.vorlage = this.parseVorlage(new TSVorlage, receivedEbeguVorlage.vorlage);\n            ebeguVorlageTS.proGesuchsperiode = receivedEbeguVorlage.proGesuchsperiode;\n            return ebeguVorlageTS;\n        }\n        return undefined;\n    }\n\n    public parseVorlage(vorlageTS: TSVorlage, receivedVorlage: any): TSVorlage {\n        if (receivedVorlage) {\n            this.parseAbstractFileEntity(vorlageTS, receivedVorlage);\n            return vorlageTS;\n        }\n        return undefined;\n    }\n\n    public ebeguVorlageToRestObject(restEbeguVorlage: any, ebeguVorlage: TSEbeguVorlage): TSEbeguVorlage {\n        if (ebeguVorlage) {\n            this.abstractDateRangeEntityToRestObject(restEbeguVorlage, ebeguVorlage);\n            restEbeguVorlage.name = ebeguVorlage.name;\n            restEbeguVorlage.value = this.vorlageToRestObject({}, ebeguVorlage.vorlage);\n            return restEbeguVorlage;\n        }\n        return undefined;\n    }\n\n    public vorlageToRestObject(restVorlage: any, vorlage: TSVorlage): TSVorlage {\n        if (vorlage) {\n            this.abstractFileEntityToRestObject(restVorlage, vorlage);\n            return restVorlage;\n        }\n        return undefined;\n    }\n\n    private parseAbstractFileEntity(fileTS: TSFile, fileFromServer: any) {\n        this.parseAbstractEntity(fileTS, fileFromServer);\n        fileTS.filename = fileFromServer.filename;\n        fileTS.filepfad = fileFromServer.filepfad;\n        fileTS.filesize = fileFromServer.filesize;\n        return fileTS;\n    }\n\n    private abstractFileEntityToRestObject(restObject: any, typescriptObject: TSFile) {\n        this.abstractEntityToRestObject(restObject, typescriptObject);\n        restObject.filename = typescriptObject.filename;\n        restObject.filepfad = typescriptObject.filepfad;\n        restObject.filesize = typescriptObject.filesize;\n        return restObject;\n    }\n\n    private parseAbstractEntity(parsedAbstractEntity: TSAbstractEntity, receivedAbstractEntity: any): void {\n        parsedAbstractEntity.id = receivedAbstractEntity.id;\n        parsedAbstractEntity.timestampErstellt = DateUtil.localDateTimeToMoment(receivedAbstractEntity.timestampErstellt);\n        parsedAbstractEntity.timestampMutiert = DateUtil.localDateTimeToMoment(receivedAbstractEntity.timestampMutiert);\n        parsedAbstractEntity.vorgaengerId = receivedAbstractEntity.vorgaengerId;\n    }\n\n    private abstractEntityToRestObject(restObject: any, typescriptObject: TSAbstractEntity) {\n        restObject.id = typescriptObject.id;\n        restObject.vorgaengerId = typescriptObject.vorgaengerId;\n        if (typescriptObject.timestampErstellt) {\n            restObject.timestampErstellt = DateUtil.momentToLocalDateTime(typescriptObject.timestampErstellt);\n        }\n        if (typescriptObject.timestampMutiert) {\n            restObject.timestampMutiert = DateUtil.momentToLocalDateTime(typescriptObject.timestampMutiert);\n        }\n    }\n\n    private parseAbstractPersonEntity(personObjectTS: TSAbstractPersonEntity, receivedPersonObject: any): void {\n        this.parseAbstractEntity(personObjectTS, receivedPersonObject);\n        personObjectTS.vorname = receivedPersonObject.vorname;\n        personObjectTS.nachname = receivedPersonObject.nachname;\n        personObjectTS.geburtsdatum = DateUtil.localDateToMoment(receivedPersonObject.geburtsdatum);\n        personObjectTS.geschlecht = receivedPersonObject.geschlecht;\n    }\n\n    private abstractPersonEntitytoRestObject(restPersonObject: any, personObject: TSAbstractPersonEntity): void {\n        this.abstractEntityToRestObject(restPersonObject, personObject);\n        restPersonObject.vorname = personObject.vorname;\n        restPersonObject.nachname = personObject.nachname;\n        restPersonObject.geburtsdatum = DateUtil.momentToLocalDate(personObject.geburtsdatum);\n        restPersonObject.geschlecht = personObject.geschlecht;\n    }\n\n    private abstractDateRangeEntityToRestObject(restObj: any, dateRangedEntity: TSAbstractDateRangedEntity) {\n        this.abstractEntityToRestObject(restObj, dateRangedEntity);\n        if (dateRangedEntity && dateRangedEntity.gueltigkeit) {\n            restObj.gueltigAb = DateUtil.momentToLocalDate(dateRangedEntity.gueltigkeit.gueltigAb);\n            restObj.gueltigBis = DateUtil.momentToLocalDate(dateRangedEntity.gueltigkeit.gueltigBis);\n        }\n    }\n\n    private parseDateRangeEntity(parsedObject: TSAbstractDateRangedEntity, receivedAppProperty: any) {\n        this.parseAbstractEntity(parsedObject, receivedAppProperty);\n        parsedObject.gueltigkeit = new TSDateRange(DateUtil.localDateToMoment(receivedAppProperty.gueltigAb), DateUtil.localDateToMoment(receivedAppProperty.gueltigBis));\n    }\n\n    private abstractPensumEntityToRestObject(restObj: any, pensumEntity: TSAbstractPensumEntity) {\n        this.abstractDateRangeEntityToRestObject(restObj, pensumEntity);\n        restObj.pensum = pensumEntity.pensum;\n    }\n\n    private parseAbstractPensumEntity(betreuungspensumTS: TSAbstractPensumEntity, betreuungspensumFromServer: any) {\n        this.parseDateRangeEntity(betreuungspensumTS, betreuungspensumFromServer);\n        betreuungspensumTS.pensum = betreuungspensumFromServer.pensum;\n    }\n\n    private abstractAntragEntityToRestObject(restObj: any, antragEntity: TSAbstractAntragEntity) {\n        this.abstractEntityToRestObject(restObj, antragEntity);\n        restObj.fall = this.fallToRestObject({}, antragEntity.fall);\n        restObj.gesuchsperiode = this.gesuchsperiodeToRestObject({}, antragEntity.gesuchsperiode);\n        restObj.eingangsdatum = DateUtil.momentToLocalDate(antragEntity.eingangsdatum);\n        restObj.freigabeDatum = DateUtil.momentToLocalDate(antragEntity.freigabeDatum);\n        restObj.status = antragEntity.status;\n        restObj.typ = antragEntity.typ;\n        restObj.eingangsart = antragEntity.eingangsart;\n    }\n\n    private parseAbstractAntragEntity(antragTS: TSAbstractAntragEntity, antragFromServer: any) {\n        this.parseAbstractEntity(antragTS, antragFromServer);\n        antragTS.fall = this.parseFall(new TSFall(), antragFromServer.fall);\n        antragTS.gesuchsperiode = this.parseGesuchsperiode(new TSGesuchsperiode(), antragFromServer.gesuchsperiode);\n        antragTS.eingangsdatum = DateUtil.localDateToMoment(antragFromServer.eingangsdatum);\n        antragTS.freigabeDatum = DateUtil.localDateToMoment(antragFromServer.freigabeDatum);\n        antragTS.status = antragFromServer.status;\n        antragTS.typ = antragFromServer.typ;\n        antragTS.eingangsart = antragFromServer.eingangsart;\n    }\n\n    private adressenListToRestObject(adressen: Array<TSAdresse>): Array<any> {\n        let restAdressenList: Array<any> = [];\n        if (adressen) {\n            for (let i = 0; i < adressen.length; i++) {\n                restAdressenList.push(this.adresseToRestObject({}, adressen[i]));\n            }\n        }\n        return restAdressenList;\n    }\n\n    public adresseToRestObject(restAdresse: any, adresse: TSAdresse): TSAdresse {\n        if (adresse) {\n            this.abstractDateRangeEntityToRestObject(restAdresse, adresse);\n            restAdresse.strasse = adresse.strasse;\n            restAdresse.hausnummer = adresse.hausnummer;\n            restAdresse.zusatzzeile = adresse.zusatzzeile;\n            restAdresse.plz = adresse.plz;\n            restAdresse.ort = adresse.ort;\n            restAdresse.land = adresse.land;\n            restAdresse.gemeinde = adresse.gemeinde;\n            restAdresse.adresseTyp = TSAdressetyp[adresse.adresseTyp];\n            restAdresse.nichtInGemeinde = adresse.nichtInGemeinde;\n            restAdresse.organisation = adresse.organisation;\n            return restAdresse;\n        }\n        return undefined;\n\n    }\n\n    private parseAdressenList(adressen: Array<any>): Array<TSAdresse> {\n        let adressenList: Array<TSAdresse> = [];\n        if (adressen) {\n            for (let i = 0; i < adressen.length; i++) {\n                adressenList.push(this.parseAdresse(new TSAdresse(), adressen[i]));\n            }\n        }\n        return adressenList;\n    }\n\n    public parseAdresse(adresseTS: TSAdresse, receivedAdresse: any): TSAdresse {\n        if (receivedAdresse) {\n            this.parseDateRangeEntity(adresseTS, receivedAdresse);\n            adresseTS.strasse = receivedAdresse.strasse;\n            adresseTS.hausnummer = receivedAdresse.hausnummer;\n            adresseTS.zusatzzeile = receivedAdresse.zusatzzeile;\n            adresseTS.plz = receivedAdresse.plz;\n            adresseTS.ort = receivedAdresse.ort;\n            adresseTS.land = (this.landCodeToTSLand(receivedAdresse.land)) ? this.landCodeToTSLand(receivedAdresse.land).code : undefined;\n            adresseTS.gemeinde = receivedAdresse.gemeinde;\n            adresseTS.adresseTyp = receivedAdresse.adresseTyp;\n            adresseTS.nichtInGemeinde = receivedAdresse.nichtInGemeinde;\n            adresseTS.organisation = receivedAdresse.organisation;\n            return adresseTS;\n        }\n        return undefined;\n    }\n\n    /**\n     * Nimmt den eingegebenen Code und erzeugt ein TSLand Objekt mit dem Code und\n     * seine Uebersetzung.\n     * @param landCode\n     * @returns {any}\n     */\n    public landCodeToTSLand(landCode: string): TSLand {\n        if (landCode) {\n            let translationKey = this.landCodeToTSLandCode(landCode);\n            return new TSLand(landCode, this.ebeguUtil.translateString(translationKey));\n        }\n        return undefined;\n    }\n\n    /**\n     * Fügt das 'Land_' dem eingegebenen Landcode hinzu.\n     * @param landCode\n     * @returns {any}\n     */\n    public landCodeToTSLandCode(landCode: string): string {\n        if (landCode) {\n            if (landCode.lastIndexOf('Land_', 0) !== 0) {\n                return 'Land_' + landCode;\n            }\n        }\n        return undefined;\n    }\n\n    public gesuchstellerToRestObject(restGesuchsteller: any, gesuchsteller: TSGesuchsteller): any {\n        if (gesuchsteller) {\n            this.abstractPersonEntitytoRestObject(restGesuchsteller, gesuchsteller);\n            restGesuchsteller.mail = gesuchsteller.mail;\n            restGesuchsteller.mobile = gesuchsteller.mobile || undefined;\n            restGesuchsteller.telefon = gesuchsteller.telefon || undefined;\n            restGesuchsteller.telefonAusland = gesuchsteller.telefonAusland || undefined;\n            restGesuchsteller.diplomatenstatus = gesuchsteller.diplomatenstatus;\n            restGesuchsteller.ewkPersonId = gesuchsteller.ewkPersonId;\n            restGesuchsteller.ewkAbfrageDatum = DateUtil.momentToLocalDate(gesuchsteller.ewkAbfrageDatum);\n            return restGesuchsteller;\n        }\n        return undefined;\n    }\n\n    public parseGesuchsteller(gesuchstellerTS: TSGesuchsteller, gesuchstellerFromServer: any): TSGesuchsteller {\n        if (gesuchstellerFromServer) {\n            this.parseAbstractPersonEntity(gesuchstellerTS, gesuchstellerFromServer);\n            gesuchstellerTS.mail = gesuchstellerFromServer.mail;\n            gesuchstellerTS.mobile = gesuchstellerFromServer.mobile;\n            gesuchstellerTS.telefon = gesuchstellerFromServer.telefon;\n            gesuchstellerTS.telefonAusland = gesuchstellerFromServer.telefonAusland;\n            gesuchstellerTS.diplomatenstatus = gesuchstellerFromServer.diplomatenstatus;\n            gesuchstellerTS.ewkPersonId = gesuchstellerFromServer.ewkPersonId;\n            gesuchstellerTS.ewkAbfrageDatum = DateUtil.localDateToMoment(gesuchstellerFromServer.ewkAbfrageDatum);\n            return gesuchstellerTS;\n        }\n        return undefined;\n    }\n\n    public parseErwerbspensumContainer(erwerbspensumContainer: TSErwerbspensumContainer, ewpContFromServer: any): TSErwerbspensumContainer {\n        if (ewpContFromServer) {\n            this.parseAbstractEntity(erwerbspensumContainer, ewpContFromServer);\n            erwerbspensumContainer.erwerbspensumGS = this.parseErwerbspensum(erwerbspensumContainer.erwerbspensumGS || new TSErwerbspensum(), ewpContFromServer.erwerbspensumGS);\n            erwerbspensumContainer.erwerbspensumJA = this.parseErwerbspensum(erwerbspensumContainer.erwerbspensumJA || new TSErwerbspensum(), ewpContFromServer.erwerbspensumJA);\n            return erwerbspensumContainer;\n        }\n        return undefined;\n    }\n\n    public erwerbspensumContainerToRestObject(restEwpContainer: any, erwerbspensumContainer: TSErwerbspensumContainer): any {\n        if (erwerbspensumContainer) {\n            this.abstractEntityToRestObject(restEwpContainer, erwerbspensumContainer);\n            restEwpContainer.erwerbspensumGS = this.erwerbspensumToRestObject({}, erwerbspensumContainer.erwerbspensumGS);\n            restEwpContainer.erwerbspensumJA = this.erwerbspensumToRestObject({}, erwerbspensumContainer.erwerbspensumJA);\n            return restEwpContainer;\n        }\n        return undefined;\n    }\n\n    public parseErwerbspensum(erwerbspensum: TSErwerbspensum, erwerbspensumFromServer: any): TSErwerbspensum {\n        if (erwerbspensumFromServer) {\n            this.parseAbstractPensumEntity(erwerbspensum, erwerbspensumFromServer);\n            erwerbspensum.taetigkeit = erwerbspensumFromServer.taetigkeit;\n            erwerbspensum.zuschlagsgrund = erwerbspensumFromServer.zuschlagsgrund;\n            erwerbspensum.zuschlagsprozent = erwerbspensumFromServer.zuschlagsprozent;\n            erwerbspensum.zuschlagZuErwerbspensum = erwerbspensumFromServer.zuschlagZuErwerbspensum;\n            erwerbspensum.bezeichnung = erwerbspensumFromServer.bezeichnung;\n            return erwerbspensum;\n        } else {\n            return undefined;\n        }\n    }\n\n    public erwerbspensumToRestObject(restErwerbspensum: any, erwerbspensum: TSErwerbspensum): any {\n        if (erwerbspensum) {\n            this.abstractPensumEntityToRestObject(restErwerbspensum, erwerbspensum);\n            restErwerbspensum.taetigkeit = erwerbspensum.taetigkeit;\n            restErwerbspensum.zuschlagsgrund = erwerbspensum.zuschlagsgrund;\n            restErwerbspensum.zuschlagsprozent = erwerbspensum.zuschlagsprozent;\n            restErwerbspensum.zuschlagZuErwerbspensum = erwerbspensum.zuschlagZuErwerbspensum;\n            restErwerbspensum.bezeichnung = erwerbspensum.bezeichnung;\n            return restErwerbspensum;\n        }\n        return undefined;\n    }\n\n    public familiensituationToRestObject(restFamiliensituation: any, familiensituation: TSFamiliensituation): TSFamiliensituation {\n        if (familiensituation) {\n            this.abstractEntityToRestObject(restFamiliensituation, familiensituation);\n            restFamiliensituation.familienstatus = familiensituation.familienstatus;\n            restFamiliensituation.gesuchstellerKardinalitaet = familiensituation.gesuchstellerKardinalitaet;\n            restFamiliensituation.gemeinsameSteuererklaerung = familiensituation.gemeinsameSteuererklaerung;\n            restFamiliensituation.aenderungPer = DateUtil.momentToLocalDate(familiensituation.aenderungPer);\n            restFamiliensituation.sozialhilfeBezueger = familiensituation.sozialhilfeBezueger;\n            restFamiliensituation.verguenstigungGewuenscht = familiensituation.verguenstigungGewuenscht;\n            return restFamiliensituation;\n        }\n        return undefined;\n    }\n\n    public einkommensverschlechterungInfoContainerToRestObject(restEinkommensverschlechterungInfoContainer: any,\n        einkommensverschlechterungInfoContainer: TSEinkommensverschlechterungInfoContainer): TSEinkommensverschlechterungInfoContainer {\n        if (einkommensverschlechterungInfoContainer) {\n            this.abstractEntityToRestObject(restEinkommensverschlechterungInfoContainer, einkommensverschlechterungInfoContainer);\n            if (einkommensverschlechterungInfoContainer.einkommensverschlechterungInfoGS) {\n                restEinkommensverschlechterungInfoContainer.einkommensverschlechterungInfoGS =\n                    this.einkommensverschlechterungInfoToRestObject({}, einkommensverschlechterungInfoContainer.einkommensverschlechterungInfoGS);\n            }\n            if (einkommensverschlechterungInfoContainer.einkommensverschlechterungInfoJA) {\n                restEinkommensverschlechterungInfoContainer.einkommensverschlechterungInfoJA =\n                    this.einkommensverschlechterungInfoToRestObject({}, einkommensverschlechterungInfoContainer.einkommensverschlechterungInfoJA);\n            }\n            return restEinkommensverschlechterungInfoContainer;\n        }\n        return undefined;\n    }\n\n    public einkommensverschlechterungInfoToRestObject(restEinkommensverschlechterungInfo: any,\n        einkommensverschlechterungInfo: TSEinkommensverschlechterungInfo): TSEinkommensverschlechterungInfo {\n        if (einkommensverschlechterungInfo) {\n            this.abstractEntityToRestObject(restEinkommensverschlechterungInfo, einkommensverschlechterungInfo);\n            restEinkommensverschlechterungInfo.einkommensverschlechterung = einkommensverschlechterungInfo.einkommensverschlechterung;\n            restEinkommensverschlechterungInfo.ekvFuerBasisJahrPlus1 = einkommensverschlechterungInfo.ekvFuerBasisJahrPlus1;\n            restEinkommensverschlechterungInfo.ekvFuerBasisJahrPlus2 = einkommensverschlechterungInfo.ekvFuerBasisJahrPlus2;\n            restEinkommensverschlechterungInfo.grundFuerBasisJahrPlus1 = einkommensverschlechterungInfo.grundFuerBasisJahrPlus1;\n            restEinkommensverschlechterungInfo.grundFuerBasisJahrPlus2 = einkommensverschlechterungInfo.grundFuerBasisJahrPlus2;\n            restEinkommensverschlechterungInfo.stichtagFuerBasisJahrPlus1 = DateUtil.momentToLocalDate(einkommensverschlechterungInfo.stichtagFuerBasisJahrPlus1);\n            restEinkommensverschlechterungInfo.stichtagFuerBasisJahrPlus2 = DateUtil.momentToLocalDate(einkommensverschlechterungInfo.stichtagFuerBasisJahrPlus2);\n            restEinkommensverschlechterungInfo.gemeinsameSteuererklaerung_BjP1 = einkommensverschlechterungInfo.gemeinsameSteuererklaerung_BjP1;\n            restEinkommensverschlechterungInfo.gemeinsameSteuererklaerung_BjP2 = einkommensverschlechterungInfo.gemeinsameSteuererklaerung_BjP2;\n            restEinkommensverschlechterungInfo.ekvBasisJahrPlus1Annulliert = einkommensverschlechterungInfo.ekvBasisJahrPlus1Annulliert;\n            restEinkommensverschlechterungInfo.ekvBasisJahrPlus2Annulliert = einkommensverschlechterungInfo.ekvBasisJahrPlus2Annulliert;\n            return restEinkommensverschlechterungInfo;\n        }\n        return undefined;\n    }\n\n    public parseFamiliensituation(familiensituation: TSFamiliensituation, familiensituationFromServer: any): TSFamiliensituation {\n        if (familiensituationFromServer) {\n            this.parseAbstractEntity(familiensituation, familiensituationFromServer);\n            familiensituation.familienstatus = familiensituationFromServer.familienstatus;\n            familiensituation.gesuchstellerKardinalitaet = familiensituationFromServer.gesuchstellerKardinalitaet;\n            familiensituation.gemeinsameSteuererklaerung = familiensituationFromServer.gemeinsameSteuererklaerung;\n            familiensituation.aenderungPer = DateUtil.localDateToMoment(familiensituationFromServer.aenderungPer);\n            familiensituation.sozialhilfeBezueger = familiensituationFromServer.sozialhilfeBezueger;\n            familiensituation.verguenstigungGewuenscht = familiensituationFromServer.verguenstigungGewuenscht;\n            return familiensituation;\n        }\n        return undefined;\n    }\n\n    public parseFamiliensituationContainer(containerTS: TSFamiliensituationContainer, containerFromServer: any): TSFamiliensituationContainer {\n        if (containerFromServer) {\n            this.parseAbstractEntity(containerTS, containerFromServer);\n\n            containerTS.familiensituationGS = this.parseFamiliensituation(containerTS.familiensituationGS\n                || new TSFamiliensituation(), containerFromServer.familiensituationGS);\n            containerTS.familiensituationJA = this.parseFamiliensituation(containerTS.familiensituationJA\n                || new TSFamiliensituation(), containerFromServer.familiensituationJA);\n            containerTS.familiensituationErstgesuch = this.parseFamiliensituation(containerTS.familiensituationErstgesuch\n                || new TSFamiliensituation(), containerFromServer.familiensituationErstgesuch);\n            return containerTS;\n        }\n        return undefined;\n    }\n\n    public familiensituationContainerToRestObject(restFamiliensituationContainer: any,\n        familiensituationContainer: TSFamiliensituationContainer): TSFamiliensituationContainer {\n        if (familiensituationContainer) {\n            this.abstractEntityToRestObject(restFamiliensituationContainer, familiensituationContainer);\n\n            if (familiensituationContainer.familiensituationJA) {\n                restFamiliensituationContainer.familiensituationJA =\n                    this.familiensituationToRestObject({}, familiensituationContainer.familiensituationJA);\n            }\n            if (familiensituationContainer.familiensituationErstgesuch) {\n                restFamiliensituationContainer.familiensituationErstgesuch =\n                    this.familiensituationToRestObject({}, familiensituationContainer.familiensituationErstgesuch);\n            }\n            if (familiensituationContainer.familiensituationGS) {\n                restFamiliensituationContainer.familiensituationGS =\n                    this.familiensituationToRestObject({}, familiensituationContainer.familiensituationGS);\n            }\n\n            return restFamiliensituationContainer;\n        }\n        return undefined;\n    }\n\n    public parseEinkommensverschlechterungInfo(einkommensverschlechterungInfo: TSEinkommensverschlechterungInfo,\n        einkommensverschlechterungInfoFromServer: any): TSEinkommensverschlechterungInfo {\n        if (einkommensverschlechterungInfoFromServer) {\n            this.parseAbstractEntity(einkommensverschlechterungInfo, einkommensverschlechterungInfoFromServer);\n            einkommensverschlechterungInfo.einkommensverschlechterung = einkommensverschlechterungInfoFromServer.einkommensverschlechterung;\n            einkommensverschlechterungInfo.ekvFuerBasisJahrPlus1 = einkommensverschlechterungInfoFromServer.ekvFuerBasisJahrPlus1;\n            einkommensverschlechterungInfo.ekvFuerBasisJahrPlus2 = einkommensverschlechterungInfoFromServer.ekvFuerBasisJahrPlus2;\n            einkommensverschlechterungInfo.grundFuerBasisJahrPlus1 = einkommensverschlechterungInfoFromServer.grundFuerBasisJahrPlus1;\n            einkommensverschlechterungInfo.grundFuerBasisJahrPlus2 = einkommensverschlechterungInfoFromServer.grundFuerBasisJahrPlus2;\n            einkommensverschlechterungInfo.stichtagFuerBasisJahrPlus1 = DateUtil.localDateToMoment(einkommensverschlechterungInfoFromServer.stichtagFuerBasisJahrPlus1);\n            einkommensverschlechterungInfo.stichtagFuerBasisJahrPlus2 = DateUtil.localDateToMoment(einkommensverschlechterungInfoFromServer.stichtagFuerBasisJahrPlus2);\n            einkommensverschlechterungInfo.gemeinsameSteuererklaerung_BjP1 = einkommensverschlechterungInfoFromServer.gemeinsameSteuererklaerung_BjP1;\n            einkommensverschlechterungInfo.gemeinsameSteuererklaerung_BjP2 = einkommensverschlechterungInfoFromServer.gemeinsameSteuererklaerung_BjP2;\n            einkommensverschlechterungInfo.ekvBasisJahrPlus1Annulliert = einkommensverschlechterungInfoFromServer.ekvBasisJahrPlus1Annulliert;\n            einkommensverschlechterungInfo.ekvBasisJahrPlus2Annulliert = einkommensverschlechterungInfoFromServer.ekvBasisJahrPlus2Annulliert;\n            return einkommensverschlechterungInfo;\n        }\n        return undefined;\n    }\n\n    public parseEinkommensverschlechterungInfoContainer(containerTS: TSEinkommensverschlechterungInfoContainer,\n        containerFromServer: any): TSEinkommensverschlechterungInfoContainer {\n        if (containerFromServer) {\n            this.parseAbstractEntity(containerTS, containerFromServer);\n\n            containerTS.einkommensverschlechterungInfoGS = this.parseEinkommensverschlechterungInfo(containerTS.einkommensverschlechterungInfoGS\n                || new TSEinkommensverschlechterungInfo(), containerFromServer.einkommensverschlechterungInfoGS);\n            containerTS.einkommensverschlechterungInfoJA = this.parseEinkommensverschlechterungInfo(containerTS.einkommensverschlechterungInfoJA\n                || new TSEinkommensverschlechterungInfo(), containerFromServer.einkommensverschlechterungInfoJA);\n            return containerTS;\n        }\n        return undefined;\n    }\n\n    public fallToRestObject(restFall: any, fall: TSFall): TSFall {\n        if (fall) {\n            this.abstractEntityToRestObject(restFall, fall);\n            restFall.fallNummer = fall.fallNummer;\n            restFall.verantwortlicher = this.userToRestObject({}, fall.verantwortlicher);\n            restFall.verantwortlicherSCH = this.userToRestObject({}, fall.verantwortlicherSCH);\n            restFall.nextNumberKind = fall.nextNumberKind;\n            restFall.besitzer = this.userToRestObject({}, fall.besitzer);\n            return restFall;\n        }\n        return undefined;\n\n    }\n\n    public parseFall(fallTS: TSFall, fallFromServer: any): TSFall {\n        if (fallFromServer) {\n            this.parseAbstractEntity(fallTS, fallFromServer);\n            fallTS.fallNummer = fallFromServer.fallNummer;\n            fallTS.verantwortlicher = this.parseUser(new TSUser(), fallFromServer.verantwortlicher);\n            fallTS.verantwortlicherSCH = this.parseUser(new TSUser(), fallFromServer.verantwortlicherSCH);\n            fallTS.nextNumberKind = fallFromServer.nextNumberKind;\n            fallTS.besitzer = this.parseUser(new TSUser(), fallFromServer.besitzer);\n            return fallTS;\n        }\n        return undefined;\n    }\n\n    public gesuchToRestObject(restGesuch: any, gesuch: TSGesuch): TSGesuch {\n        this.abstractAntragEntityToRestObject(restGesuch, gesuch);\n        restGesuch.einkommensverschlechterungInfoContainer = this.einkommensverschlechterungInfoContainerToRestObject({}, gesuch.einkommensverschlechterungInfoContainer);\n        restGesuch.gesuchsteller1 = this.gesuchstellerContainerToRestObject({}, gesuch.gesuchsteller1);\n        restGesuch.gesuchsteller2 = this.gesuchstellerContainerToRestObject({}, gesuch.gesuchsteller2);\n        restGesuch.familiensituationContainer = this.familiensituationContainerToRestObject({}, gesuch.familiensituationContainer);\n        restGesuch.bemerkungen = gesuch.bemerkungen;\n        restGesuch.bemerkungenSTV = gesuch.bemerkungenSTV;\n        restGesuch.bemerkungenPruefungSTV = gesuch.bemerkungenPruefungSTV;\n        restGesuch.laufnummer = gesuch.laufnummer;\n        restGesuch.gesuchBetreuungenStatus = gesuch.gesuchBetreuungenStatus;\n        restGesuch.geprueftSTV = gesuch.geprueftSTV;\n        restGesuch.hasFSDokument = gesuch.hasFSDokument;\n        restGesuch.gesperrtWegenBeschwerde = gesuch.gesperrtWegenBeschwerde;\n        restGesuch.datumGewarntNichtFreigegeben = DateUtil.momentToLocalDate(gesuch.datumGewarntNichtFreigegeben);\n        restGesuch.datumGewarntFehlendeQuittung = DateUtil.momentToLocalDate(gesuch.datumGewarntFehlendeQuittung);\n        restGesuch.timestampVerfuegt = DateUtil.momentToLocalDateTime(gesuch.timestampVerfuegt);\n        restGesuch.gueltig = gesuch.gueltig;\n        restGesuch.dokumenteHochgeladen = gesuch.dokumenteHochgeladen;\n        restGesuch.finSitStatus = gesuch.finSitStatus;\n        return restGesuch;\n    }\n\n    public parseGesuch(gesuchTS: TSGesuch, gesuchFromServer: any): TSGesuch {\n        if (gesuchFromServer) {\n            this.parseAbstractAntragEntity(gesuchTS, gesuchFromServer);\n            gesuchTS.einkommensverschlechterungInfoContainer = this.parseEinkommensverschlechterungInfoContainer(\n                new TSEinkommensverschlechterungInfoContainer(), gesuchFromServer.einkommensverschlechterungInfoContainer);\n            gesuchTS.gesuchsteller1 = this.parseGesuchstellerContainer(new TSGesuchstellerContainer(), gesuchFromServer.gesuchsteller1);\n            gesuchTS.gesuchsteller2 = this.parseGesuchstellerContainer(new TSGesuchstellerContainer(), gesuchFromServer.gesuchsteller2);\n            gesuchTS.familiensituationContainer = this.parseFamiliensituationContainer(new TSFamiliensituationContainer(), gesuchFromServer.familiensituationContainer);\n            gesuchTS.kindContainers = this.parseKindContainerList(gesuchFromServer.kindContainers);\n            gesuchTS.bemerkungen = gesuchFromServer.bemerkungen;\n            gesuchTS.bemerkungenSTV = gesuchFromServer.bemerkungenSTV;\n            gesuchTS.bemerkungenPruefungSTV = gesuchFromServer.bemerkungenPruefungSTV;\n            gesuchTS.laufnummer = gesuchFromServer.laufnummer;\n            gesuchTS.gesuchBetreuungenStatus = gesuchFromServer.gesuchBetreuungenStatus;\n            gesuchTS.geprueftSTV = gesuchFromServer.geprueftSTV;\n            gesuchTS.hasFSDokument = gesuchFromServer.hasFSDokument;\n            gesuchTS.gesperrtWegenBeschwerde = gesuchFromServer.gesperrtWegenBeschwerde;\n            gesuchTS.datumGewarntNichtFreigegeben = DateUtil.localDateToMoment(gesuchFromServer.datumGewarntNichtFreigegeben);\n            gesuchTS.datumGewarntFehlendeQuittung = DateUtil.localDateToMoment(gesuchFromServer.datumGewarntFehlendeQuittung);\n            gesuchTS.timestampVerfuegt = DateUtil.localDateTimeToMoment(gesuchFromServer.timestampVerfuegt);\n            gesuchTS.gueltig = gesuchFromServer.gueltig;\n            gesuchTS.dokumenteHochgeladen = gesuchFromServer.dokumenteHochgeladen;\n            gesuchTS.finSitStatus = gesuchFromServer.finSitStatus;\n            return gesuchTS;\n        }\n        return undefined;\n    }\n\n    public fachstelleToRestObject(restFachstelle: any, fachstelle: TSFachstelle): any {\n        this.abstractEntityToRestObject(restFachstelle, fachstelle);\n        restFachstelle.name = fachstelle.name;\n        restFachstelle.beschreibung = fachstelle.beschreibung;\n        restFachstelle.behinderungsbestaetigung = fachstelle.behinderungsbestaetigung;\n        return restFachstelle;\n    }\n\n    public parseFachstellen(data: any): TSFachstelle[] {\n        let fachstellen: TSFachstelle[] = [];\n        if (data && Array.isArray(data)) {\n            for (let i = 0; i < data.length; i++) {\n                fachstellen[i] = this.parseFachstelle(new TSFachstelle(), data[i]);\n            }\n        } else {\n            fachstellen[0] = this.parseFachstelle(new TSFachstelle(), data);\n        }\n        return fachstellen;\n    }\n\n    public parseFachstelle(parsedFachstelle: TSFachstelle, receivedFachstelle: any): TSFachstelle {\n        this.parseAbstractEntity(parsedFachstelle, receivedFachstelle);\n        parsedFachstelle.name = receivedFachstelle.name;\n        parsedFachstelle.beschreibung = receivedFachstelle.beschreibung;\n        parsedFachstelle.behinderungsbestaetigung = receivedFachstelle.behinderungsbestaetigung;\n        return parsedFachstelle;\n    }\n\n    public mandantToRestObject(restMandant: any, mandant: TSMandant): any {\n        if (mandant) {\n            this.abstractEntityToRestObject(restMandant, mandant);\n            restMandant.name = mandant.name;\n            return restMandant;\n        }\n        return undefined;\n    }\n\n    public parseMandant(mandantTS: TSMandant, mandantFromServer: any): TSMandant {\n        if (mandantFromServer) {\n            this.parseAbstractEntity(mandantTS, mandantFromServer);\n            mandantTS.name = mandantFromServer.name;\n            return mandantTS;\n        }\n        return undefined;\n    }\n\n    public traegerschaftToRestObject(restTragerschaft: any, traegerschaft: TSTraegerschaft): any {\n        if (traegerschaft) {\n            this.abstractEntityToRestObject(restTragerschaft, traegerschaft);\n            restTragerschaft.name = traegerschaft.name;\n            restTragerschaft.active = traegerschaft.active;\n            restTragerschaft.mail = traegerschaft.mail;\n            return restTragerschaft;\n        }\n        return undefined;\n    }\n\n    public parseTraegerschaften(data: Array<any>): TSTraegerschaft[] {\n        let traegerschaftenen: TSTraegerschaft[] = [];\n        if (data && Array.isArray(data)) {\n            for (let i = 0; i < data.length; i++) {\n                traegerschaftenen[i] = this.parseTraegerschaft(new TSTraegerschaft(), data[i]);\n            }\n        } else {\n            traegerschaftenen[0] = this.parseTraegerschaft(new TSTraegerschaft(), data);\n        }\n        return traegerschaftenen;\n    }\n\n    public parseTraegerschaft(traegerschaftTS: TSTraegerschaft, traegerschaftFromServer: any): TSTraegerschaft {\n        if (traegerschaftFromServer) {\n            this.parseAbstractEntity(traegerschaftTS, traegerschaftFromServer);\n            traegerschaftTS.name = traegerschaftFromServer.name;\n            traegerschaftTS.active = traegerschaftFromServer.active;\n            traegerschaftTS.synchronizedWithOpenIdm = traegerschaftFromServer.synchronizedWithOpenIdm;\n            traegerschaftTS.mail = traegerschaftFromServer.mail;\n            return traegerschaftTS;\n        }\n        return undefined;\n    }\n\n    public institutionToRestObject(restInstitution: any, institution: TSInstitution): any {\n        if (institution) {\n            this.abstractEntityToRestObject(restInstitution, institution);\n            restInstitution.name = institution.name;\n            restInstitution.mandant = this.mandantToRestObject({}, institution.mandant);\n            restInstitution.traegerschaft = this.traegerschaftToRestObject({}, institution.traegerschaft);\n            restInstitution.mail = institution.mail;\n            return restInstitution;\n        }\n        return undefined;\n    }\n\n    public parseInstitution(institutionTS: TSInstitution, institutionFromServer: any): TSInstitution {\n        if (institutionFromServer) {\n            this.parseAbstractEntity(institutionTS, institutionFromServer);\n            institutionTS.name = institutionFromServer.name;\n            institutionTS.mandant = this.parseMandant(new TSMandant(), institutionFromServer.mandant);\n            institutionTS.traegerschaft = this.parseTraegerschaft(new TSTraegerschaft(), institutionFromServer.traegerschaft);\n            institutionTS.synchronizedWithOpenIdm = institutionFromServer.synchronizedWithOpenIdm;\n            institutionTS.mail = institutionFromServer.mail;\n            return institutionTS;\n        }\n        return undefined;\n    }\n\n    public parseInstitutionen(data: Array<any>): TSInstitution[] {\n        let institutionen: TSInstitution[] = [];\n        if (data && Array.isArray(data)) {\n            for (let i = 0; i < data.length; i++) {\n                institutionen[i] = this.parseInstitution(new TSInstitution(), data[i]);\n            }\n        } else {\n            institutionen[0] = this.parseInstitution(new TSInstitution(), data);\n        }\n        return institutionen;\n    }\n\n    public institutionStammdatenToRestObject(restInstitutionStammdaten: any, institutionStammdaten: TSInstitutionStammdaten): any {\n        if (institutionStammdaten) {\n            this.abstractDateRangeEntityToRestObject(restInstitutionStammdaten, institutionStammdaten);\n            restInstitutionStammdaten.iban = institutionStammdaten.iban;\n            restInstitutionStammdaten.oeffnungsstunden = institutionStammdaten.oeffnungsstunden;\n            restInstitutionStammdaten.oeffnungstage = institutionStammdaten.oeffnungstage;\n            restInstitutionStammdaten.betreuungsangebotTyp = institutionStammdaten.betreuungsangebotTyp;\n            restInstitutionStammdaten.institution = this.institutionToRestObject({}, institutionStammdaten.institution);\n            restInstitutionStammdaten.adresse = this.adresseToRestObject({}, institutionStammdaten.adresse);\n            restInstitutionStammdaten.kontoinhaber = institutionStammdaten.kontoinhaber;\n            restInstitutionStammdaten.adresseKontoinhaber = this.adresseToRestObject({}, institutionStammdaten.adresseKontoinhaber);\n            restInstitutionStammdaten.institutionStammdatenTagesschule = this.institutionStammdatenTagesschuleToRestObject({}, institutionStammdaten.institutionStammdatenTagesschule);\n            return restInstitutionStammdaten;\n        }\n        return undefined;\n    }\n\n    public parseInstitutionStammdaten(institutionStammdatenTS: TSInstitutionStammdaten, institutionStammdatenFromServer: any): TSInstitutionStammdaten {\n        if (institutionStammdatenFromServer) {\n            this.parseDateRangeEntity(institutionStammdatenTS, institutionStammdatenFromServer);\n            institutionStammdatenTS.iban = institutionStammdatenFromServer.iban;\n            institutionStammdatenTS.oeffnungsstunden = institutionStammdatenFromServer.oeffnungsstunden;\n            institutionStammdatenTS.oeffnungstage = institutionStammdatenFromServer.oeffnungstage;\n            institutionStammdatenTS.betreuungsangebotTyp = institutionStammdatenFromServer.betreuungsangebotTyp;\n            institutionStammdatenTS.institution = this.parseInstitution(new TSInstitution(), institutionStammdatenFromServer.institution);\n            institutionStammdatenTS.adresse = this.parseAdresse(new TSAdresse(), institutionStammdatenFromServer.adresse);\n            institutionStammdatenTS.kontoinhaber = institutionStammdatenFromServer.kontoinhaber;\n            institutionStammdatenTS.adresseKontoinhaber = this.parseAdresse(new TSAdresse(), institutionStammdatenFromServer.adresseKontoinhaber);\n            institutionStammdatenTS.institutionStammdatenTagesschule = this.parseInstitutionStammdatenTagesschule(new TSInstitutionStammdatenTagesschule(),\n                institutionStammdatenFromServer.institutionStammdatenTagesschule);\n            return institutionStammdatenTS;\n        }\n        return undefined;\n    }\n\n    public parseInstitutionStammdatenArray(data: Array<any>): TSInstitutionStammdaten[] {\n        let institutionStammdaten: TSInstitutionStammdaten[] = [];\n        if (data && Array.isArray(data)) {\n            for (let i = 0; i < data.length; i++) {\n                institutionStammdaten[i] = this.parseInstitutionStammdaten(new TSInstitutionStammdaten(), data[i]);\n            }\n        } else {\n            institutionStammdaten[0] = this.parseInstitutionStammdaten(new TSInstitutionStammdaten(), data);\n        }\n        return institutionStammdaten;\n    }\n\n    public institutionStammdatenTagesschuleToRestObject(restInstitutionStammdatenTagesschule: any,\n        institutionStammdatenTagesschule: TSInstitutionStammdatenTagesschule): any {\n        if (institutionStammdatenTagesschule) {\n            this.abstractEntityToRestObject(restInstitutionStammdatenTagesschule, institutionStammdatenTagesschule);\n            restInstitutionStammdatenTagesschule.moduleTagesschule = this.moduleTagesschuleArrayToRestObject(institutionStammdatenTagesschule.moduleTagesschule);\n            return restInstitutionStammdatenTagesschule;\n        }\n        return undefined;\n    }\n\n    public parseInstitutionStammdatenTagesschule(institutionStammdatenTagesschuleTS: TSInstitutionStammdatenTagesschule,\n        institutionStammdatenTagesschuleFromServer: any): TSInstitutionStammdatenTagesschule {\n        if (institutionStammdatenTagesschuleFromServer) {\n            this.parseAbstractEntity(institutionStammdatenTagesschuleTS, institutionStammdatenTagesschuleFromServer);\n            institutionStammdatenTagesschuleTS.moduleTagesschule = this.parseModuleTagesschuleArray(institutionStammdatenTagesschuleFromServer.moduleTagesschule);\n            return institutionStammdatenTagesschuleTS;\n        }\n        return undefined;\n    }\n\n    public finanzielleSituationContainerToRestObject(restFinanzielleSituationContainer: any,\n        finanzielleSituationContainer: TSFinanzielleSituationContainer): TSFinanzielleSituationContainer {\n        this.abstractEntityToRestObject(restFinanzielleSituationContainer, finanzielleSituationContainer);\n        restFinanzielleSituationContainer.jahr = finanzielleSituationContainer.jahr;\n        if (finanzielleSituationContainer.finanzielleSituationGS) {\n            restFinanzielleSituationContainer.finanzielleSituationGS = this.finanzielleSituationToRestObject({}, finanzielleSituationContainer.finanzielleSituationGS);\n        }\n        if (finanzielleSituationContainer.finanzielleSituationJA) {\n            restFinanzielleSituationContainer.finanzielleSituationJA = this.finanzielleSituationToRestObject({}, finanzielleSituationContainer.finanzielleSituationJA);\n        }\n        return restFinanzielleSituationContainer;\n    }\n\n    public parseFinanzielleSituationContainer(containerTS: TSFinanzielleSituationContainer, containerFromServer: any): TSFinanzielleSituationContainer {\n        if (containerFromServer) {\n            this.parseAbstractEntity(containerTS, containerFromServer);\n            containerTS.jahr = containerFromServer.jahr;\n            containerTS.finanzielleSituationGS = this.parseFinanzielleSituation(containerTS.finanzielleSituationGS || new TSFinanzielleSituation(), containerFromServer.finanzielleSituationGS);\n            containerTS.finanzielleSituationJA = this.parseFinanzielleSituation(containerTS.finanzielleSituationJA || new TSFinanzielleSituation(), containerFromServer.finanzielleSituationJA);\n            return containerTS;\n        }\n        return undefined;\n    }\n\n    public finanzielleSituationToRestObject(restFinanzielleSituation: any, finanzielleSituation: TSFinanzielleSituation): TSFinanzielleSituation {\n        this.abstractfinanzielleSituationToRestObject(restFinanzielleSituation, finanzielleSituation);\n        restFinanzielleSituation.nettolohn = finanzielleSituation.nettolohn;\n        restFinanzielleSituation.geschaeftsgewinnBasisjahrMinus2 = finanzielleSituation.geschaeftsgewinnBasisjahrMinus2;\n        restFinanzielleSituation.geschaeftsgewinnBasisjahrMinus1 = finanzielleSituation.geschaeftsgewinnBasisjahrMinus1;\n        return restFinanzielleSituation;\n    }\n\n    private abstractfinanzielleSituationToRestObject(restAbstractFinanzielleSituation: any,\n        abstractFinanzielleSituation: TSAbstractFinanzielleSituation): TSAbstractFinanzielleSituation {\n        this.abstractEntityToRestObject(restAbstractFinanzielleSituation, abstractFinanzielleSituation);\n        restAbstractFinanzielleSituation.steuerveranlagungErhalten = abstractFinanzielleSituation.steuerveranlagungErhalten;\n        restAbstractFinanzielleSituation.steuererklaerungAusgefuellt = abstractFinanzielleSituation.steuererklaerungAusgefuellt || false;\n        restAbstractFinanzielleSituation.familienzulage = abstractFinanzielleSituation.familienzulage;\n        restAbstractFinanzielleSituation.ersatzeinkommen = abstractFinanzielleSituation.ersatzeinkommen;\n        restAbstractFinanzielleSituation.erhalteneAlimente = abstractFinanzielleSituation.erhalteneAlimente;\n        restAbstractFinanzielleSituation.bruttovermoegen = abstractFinanzielleSituation.bruttovermoegen;\n        restAbstractFinanzielleSituation.schulden = abstractFinanzielleSituation.schulden;\n        restAbstractFinanzielleSituation.geschaeftsgewinnBasisjahr = abstractFinanzielleSituation.geschaeftsgewinnBasisjahr;\n        restAbstractFinanzielleSituation.geleisteteAlimente = abstractFinanzielleSituation.geleisteteAlimente;\n        return restAbstractFinanzielleSituation;\n    }\n\n    public parseAbstractFinanzielleSituation(abstractFinanzielleSituationTS: TSAbstractFinanzielleSituation,\n        abstractFinanzielleSituationFromServer: any): TSAbstractFinanzielleSituation {\n        if (abstractFinanzielleSituationFromServer) {\n            this.parseAbstractEntity(abstractFinanzielleSituationTS, abstractFinanzielleSituationFromServer);\n            abstractFinanzielleSituationTS.steuerveranlagungErhalten = abstractFinanzielleSituationFromServer.steuerveranlagungErhalten;\n            abstractFinanzielleSituationTS.steuererklaerungAusgefuellt = abstractFinanzielleSituationFromServer.steuererklaerungAusgefuellt;\n            abstractFinanzielleSituationTS.familienzulage = abstractFinanzielleSituationFromServer.familienzulage;\n            abstractFinanzielleSituationTS.ersatzeinkommen = abstractFinanzielleSituationFromServer.ersatzeinkommen;\n            abstractFinanzielleSituationTS.erhalteneAlimente = abstractFinanzielleSituationFromServer.erhalteneAlimente;\n            abstractFinanzielleSituationTS.bruttovermoegen = abstractFinanzielleSituationFromServer.bruttovermoegen;\n            abstractFinanzielleSituationTS.schulden = abstractFinanzielleSituationFromServer.schulden;\n            abstractFinanzielleSituationTS.geschaeftsgewinnBasisjahr = abstractFinanzielleSituationFromServer.geschaeftsgewinnBasisjahr;\n            abstractFinanzielleSituationTS.geleisteteAlimente = abstractFinanzielleSituationFromServer.geleisteteAlimente;\n            return abstractFinanzielleSituationTS;\n        }\n        return undefined;\n    }\n\n    public parseFinanzielleSituation(finanzielleSituationTS: TSFinanzielleSituation, finanzielleSituationFromServer: any): TSFinanzielleSituation {\n        if (finanzielleSituationFromServer) {\n            this.parseAbstractFinanzielleSituation(finanzielleSituationTS, finanzielleSituationFromServer);\n            finanzielleSituationTS.nettolohn = finanzielleSituationFromServer.nettolohn;\n            finanzielleSituationTS.geschaeftsgewinnBasisjahrMinus2 = finanzielleSituationFromServer.geschaeftsgewinnBasisjahrMinus2;\n            finanzielleSituationTS.geschaeftsgewinnBasisjahrMinus1 = finanzielleSituationFromServer.geschaeftsgewinnBasisjahrMinus1;\n            return finanzielleSituationTS;\n        }\n        return undefined;\n    }\n\n    public finanzielleSituationResultateToRestObject(restFinanzielleSituationResultate: any,\n        finanzielleSituationResultateDTO: TSFinanzielleSituationResultateDTO): TSFinanzielleSituationResultateDTO {\n        restFinanzielleSituationResultate.geschaeftsgewinnDurchschnittGesuchsteller1 = finanzielleSituationResultateDTO.geschaeftsgewinnDurchschnittGesuchsteller1;\n        restFinanzielleSituationResultate.geschaeftsgewinnDurchschnittGesuchsteller2 = finanzielleSituationResultateDTO.geschaeftsgewinnDurchschnittGesuchsteller2;\n        restFinanzielleSituationResultate.einkommenBeiderGesuchsteller = finanzielleSituationResultateDTO.einkommenBeiderGesuchsteller;\n        restFinanzielleSituationResultate.nettovermoegenFuenfProzent = finanzielleSituationResultateDTO.nettovermoegenFuenfProzent;\n        restFinanzielleSituationResultate.anrechenbaresEinkommen = finanzielleSituationResultateDTO.anrechenbaresEinkommen;\n        restFinanzielleSituationResultate.abzuegeBeiderGesuchsteller = finanzielleSituationResultateDTO.abzuegeBeiderGesuchsteller;\n        restFinanzielleSituationResultate.massgebendesEinkVorAbzFamGr = finanzielleSituationResultateDTO.massgebendesEinkVorAbzFamGr;\n        return restFinanzielleSituationResultate;\n    }\n\n    public parseFinanzielleSituationResultate(finanzielleSituationResultateDTO: TSFinanzielleSituationResultateDTO,\n        finanzielleSituationResultateFromServer: any): TSFinanzielleSituationResultateDTO {\n        if (finanzielleSituationResultateFromServer) {\n            finanzielleSituationResultateDTO.geschaeftsgewinnDurchschnittGesuchsteller1 = finanzielleSituationResultateFromServer.geschaeftsgewinnDurchschnittGesuchsteller1;\n            finanzielleSituationResultateDTO.geschaeftsgewinnDurchschnittGesuchsteller2 = finanzielleSituationResultateFromServer.geschaeftsgewinnDurchschnittGesuchsteller2;\n            finanzielleSituationResultateDTO.einkommenBeiderGesuchsteller = finanzielleSituationResultateFromServer.einkommenBeiderGesuchsteller;\n            finanzielleSituationResultateDTO.nettovermoegenFuenfProzent = finanzielleSituationResultateFromServer.nettovermoegenFuenfProzent;\n            finanzielleSituationResultateDTO.anrechenbaresEinkommen = finanzielleSituationResultateFromServer.anrechenbaresEinkommen;\n            finanzielleSituationResultateDTO.abzuegeBeiderGesuchsteller = finanzielleSituationResultateFromServer.abzuegeBeiderGesuchsteller;\n            finanzielleSituationResultateDTO.massgebendesEinkVorAbzFamGr = finanzielleSituationResultateFromServer.massgebendesEinkVorAbzFamGr;\n            return finanzielleSituationResultateDTO;\n        }\n        return undefined;\n    }\n\n    public einkommensverschlechterungContainerToRestObject(restEinkommensverschlechterungContainer: any,\n        einkommensverschlechterungContainer: TSEinkommensverschlechterungContainer): TSEinkommensverschlechterungContainer {\n        this.abstractEntityToRestObject(restEinkommensverschlechterungContainer, einkommensverschlechterungContainer);\n\n        if (einkommensverschlechterungContainer.ekvGSBasisJahrPlus1) {\n            restEinkommensverschlechterungContainer.ekvGSBasisJahrPlus1 =\n                this.einkommensverschlechterungToRestObject({}, einkommensverschlechterungContainer.ekvGSBasisJahrPlus1);\n        }\n        if (einkommensverschlechterungContainer.ekvGSBasisJahrPlus2) {\n            restEinkommensverschlechterungContainer.ekvGSBasisJahrPlus2 =\n                this.einkommensverschlechterungToRestObject({}, einkommensverschlechterungContainer.ekvGSBasisJahrPlus2);\n        }\n        if (einkommensverschlechterungContainer.ekvJABasisJahrPlus1) {\n            restEinkommensverschlechterungContainer.ekvJABasisJahrPlus1 =\n                this.einkommensverschlechterungToRestObject({}, einkommensverschlechterungContainer.ekvJABasisJahrPlus1);\n        }\n        if (einkommensverschlechterungContainer.ekvJABasisJahrPlus2) {\n            restEinkommensverschlechterungContainer.ekvJABasisJahrPlus2 =\n                this.einkommensverschlechterungToRestObject({}, einkommensverschlechterungContainer.ekvJABasisJahrPlus2);\n        }\n\n        return restEinkommensverschlechterungContainer;\n    }\n\n    public einkommensverschlechterungToRestObject(restEinkommensverschlechterung: any,\n        einkommensverschlechterung: TSEinkommensverschlechterung): TSEinkommensverschlechterung {\n        this.abstractfinanzielleSituationToRestObject(restEinkommensverschlechterung, einkommensverschlechterung);\n        restEinkommensverschlechterung.nettolohnJan = einkommensverschlechterung.nettolohnJan;\n        restEinkommensverschlechterung.nettolohnFeb = einkommensverschlechterung.nettolohnFeb;\n        restEinkommensverschlechterung.nettolohnMrz = einkommensverschlechterung.nettolohnMrz;\n        restEinkommensverschlechterung.nettolohnApr = einkommensverschlechterung.nettolohnApr;\n        restEinkommensverschlechterung.nettolohnMai = einkommensverschlechterung.nettolohnMai;\n        restEinkommensverschlechterung.nettolohnJun = einkommensverschlechterung.nettolohnJun;\n        restEinkommensverschlechterung.nettolohnJul = einkommensverschlechterung.nettolohnJul;\n        restEinkommensverschlechterung.nettolohnAug = einkommensverschlechterung.nettolohnAug;\n        restEinkommensverschlechterung.nettolohnSep = einkommensverschlechterung.nettolohnSep;\n        restEinkommensverschlechterung.nettolohnOkt = einkommensverschlechterung.nettolohnOkt;\n        restEinkommensverschlechterung.nettolohnNov = einkommensverschlechterung.nettolohnNov;\n        restEinkommensverschlechterung.nettolohnDez = einkommensverschlechterung.nettolohnDez;\n        restEinkommensverschlechterung.nettolohnZus = einkommensverschlechterung.nettolohnZus;\n        restEinkommensverschlechterung.geschaeftsgewinnBasisjahrMinus1 = einkommensverschlechterung.geschaeftsgewinnBasisjahrMinus1;\n        return restEinkommensverschlechterung;\n    }\n\n    public parseEinkommensverschlechterungContainer(containerTS: TSEinkommensverschlechterungContainer,\n        containerFromServer: any): TSEinkommensverschlechterungContainer {\n        if (containerFromServer) {\n            this.parseAbstractEntity(containerTS, containerFromServer);\n\n            containerTS.ekvGSBasisJahrPlus1 = this.parseEinkommensverschlechterung(containerTS.ekvGSBasisJahrPlus1 || new TSEinkommensverschlechterung(), containerFromServer.ekvGSBasisJahrPlus1);\n            containerTS.ekvGSBasisJahrPlus2 = this.parseEinkommensverschlechterung(containerTS.ekvGSBasisJahrPlus2 || new TSEinkommensverschlechterung(), containerFromServer.ekvGSBasisJahrPlus2);\n            containerTS.ekvJABasisJahrPlus1 = this.parseEinkommensverschlechterung(containerTS.ekvJABasisJahrPlus1 || new TSEinkommensverschlechterung(), containerFromServer.ekvJABasisJahrPlus1);\n            containerTS.ekvJABasisJahrPlus2 = this.parseEinkommensverschlechterung(containerTS.ekvJABasisJahrPlus2 || new TSEinkommensverschlechterung(), containerFromServer.ekvJABasisJahrPlus2);\n\n            return containerTS;\n        }\n        return undefined;\n    }\n\n    public parseEinkommensverschlechterung(einkommensverschlechterungTS: TSEinkommensverschlechterung,\n        einkommensverschlechterungFromServer: any): TSEinkommensverschlechterung {\n        if (einkommensverschlechterungFromServer) {\n            this.parseAbstractFinanzielleSituation(einkommensverschlechterungTS, einkommensverschlechterungFromServer);\n            einkommensverschlechterungTS.nettolohnJan = einkommensverschlechterungFromServer.nettolohnJan;\n            einkommensverschlechterungTS.nettolohnFeb = einkommensverschlechterungFromServer.nettolohnFeb;\n            einkommensverschlechterungTS.nettolohnMrz = einkommensverschlechterungFromServer.nettolohnMrz;\n            einkommensverschlechterungTS.nettolohnApr = einkommensverschlechterungFromServer.nettolohnApr;\n            einkommensverschlechterungTS.nettolohnMai = einkommensverschlechterungFromServer.nettolohnMai;\n            einkommensverschlechterungTS.nettolohnJun = einkommensverschlechterungFromServer.nettolohnJun;\n            einkommensverschlechterungTS.nettolohnJul = einkommensverschlechterungFromServer.nettolohnJul;\n            einkommensverschlechterungTS.nettolohnAug = einkommensverschlechterungFromServer.nettolohnAug;\n            einkommensverschlechterungTS.nettolohnSep = einkommensverschlechterungFromServer.nettolohnSep;\n            einkommensverschlechterungTS.nettolohnOkt = einkommensverschlechterungFromServer.nettolohnOkt;\n            einkommensverschlechterungTS.nettolohnNov = einkommensverschlechterungFromServer.nettolohnNov;\n            einkommensverschlechterungTS.nettolohnDez = einkommensverschlechterungFromServer.nettolohnDez;\n            einkommensverschlechterungTS.nettolohnZus = einkommensverschlechterungFromServer.nettolohnZus;\n            einkommensverschlechterungTS.geschaeftsgewinnBasisjahrMinus1 = einkommensverschlechterungFromServer.geschaeftsgewinnBasisjahrMinus1;\n\n            return einkommensverschlechterungTS;\n        }\n        return undefined;\n    }\n\n    public kindContainerToRestObject(restKindContainer: any, kindContainer: TSKindContainer): any {\n        this.abstractEntityToRestObject(restKindContainer, kindContainer);\n        if (kindContainer.kindGS) {\n            restKindContainer.kindGS = this.kindToRestObject({}, kindContainer.kindGS);\n        }\n        if (kindContainer.kindJA) {\n            restKindContainer.kindJA = this.kindToRestObject({}, kindContainer.kindJA);\n        }\n        restKindContainer.betreuungen = this.betreuungListToRestObject(kindContainer.betreuungen);\n        restKindContainer.kindNummer = kindContainer.kindNummer;\n        restKindContainer.nextNumberBetreuung = kindContainer.nextNumberBetreuung;\n        restKindContainer.kindMutiert = kindContainer.kindMutiert;\n        return restKindContainer;\n    }\n\n    private kindToRestObject(restKind: any, kind: TSKind): any {\n        this.abstractPersonEntitytoRestObject(restKind, kind);\n        restKind.wohnhaftImGleichenHaushalt = kind.wohnhaftImGleichenHaushalt;\n        restKind.kinderabzug = kind.kinderabzug;\n        restKind.mutterspracheDeutsch = kind.mutterspracheDeutsch;\n        restKind.einschulung = kind.einschulung;\n        restKind.familienErgaenzendeBetreuung = kind.familienErgaenzendeBetreuung;\n        if (kind.pensumFachstelle) {\n            restKind.pensumFachstelle = this.pensumFachstelleToRestObject({}, kind.pensumFachstelle);\n        }\n        return restKind;\n    }\n\n    public parseKindDubletteList(data: Array<any>): TSKindDublette[] {\n        let kindContainerList: TSKindDublette[] = [];\n        if (data && Array.isArray(data)) {\n            for (let i = 0; i < data.length; i++) {\n                kindContainerList[i] = this.parseKindDublette(new TSKindDublette(), data[i]);\n            }\n        } else {\n            kindContainerList[0] = this.parseKindDublette(new TSKindDublette(), data);\n        }\n        return kindContainerList;\n    }\n\n    public parseKindDublette(kindContainerTS: TSKindDublette, kindContainerFromServer: any): TSKindDublette {\n        if (kindContainerFromServer) {\n            kindContainerTS.gesuchId = kindContainerFromServer.gesuchId;\n            kindContainerTS.fallNummer = kindContainerFromServer.fallNummer;\n            kindContainerTS.kindNummerOriginal = kindContainerFromServer.kindNummerOriginal;\n            kindContainerTS.kindNummerDublette = kindContainerFromServer.kindNummerDublette;\n            return kindContainerTS;\n        }\n        return undefined;\n    }\n\n    public parseKindContainerList(data: Array<any>): TSKindContainer[] {\n        let kindContainerList: TSKindContainer[] = [];\n        if (data && Array.isArray(data)) {\n            for (let i = 0; i < data.length; i++) {\n                kindContainerList[i] = this.parseKindContainer(new TSKindContainer(), data[i]);\n            }\n        } else {\n            kindContainerList[0] = this.parseKindContainer(new TSKindContainer(), data);\n        }\n        return kindContainerList;\n    }\n\n    public parseKindContainer(kindContainerTS: TSKindContainer, kindContainerFromServer: any): TSKindContainer {\n        if (kindContainerFromServer) {\n            this.parseAbstractEntity(kindContainerTS, kindContainerFromServer);\n            kindContainerTS.kindGS = this.parseKind(new TSKind(), kindContainerFromServer.kindGS);\n            kindContainerTS.kindJA = this.parseKind(new TSKind(), kindContainerFromServer.kindJA);\n            kindContainerTS.betreuungen = this.parseBetreuungList(kindContainerFromServer.betreuungen);\n            kindContainerTS.kindNummer = kindContainerFromServer.kindNummer;\n            kindContainerTS.nextNumberBetreuung = kindContainerFromServer.nextNumberBetreuung;\n            kindContainerTS.kindMutiert = kindContainerFromServer.kindMutiert;\n            return kindContainerTS;\n        }\n        return undefined;\n    }\n\n    private parseKind(kindTS: TSKind, kindFromServer: any): TSKind {\n        if (kindFromServer) {\n            this.parseAbstractPersonEntity(kindTS, kindFromServer);\n            kindTS.wohnhaftImGleichenHaushalt = kindFromServer.wohnhaftImGleichenHaushalt;\n            kindTS.kinderabzug = kindFromServer.kinderabzug;\n            kindTS.mutterspracheDeutsch = kindFromServer.mutterspracheDeutsch;\n            kindTS.einschulung = kindFromServer.einschulung;\n            kindTS.familienErgaenzendeBetreuung = kindFromServer.familienErgaenzendeBetreuung;\n            if (kindFromServer.pensumFachstelle) {\n                kindTS.pensumFachstelle = this.parsePensumFachstelle(new TSPensumFachstelle(), kindFromServer.pensumFachstelle);\n            }\n            return kindTS;\n        }\n        return undefined;\n    }\n\n    private pensumFachstelleToRestObject(restPensumFachstelle: any, pensumFachstelle: TSPensumFachstelle): any {\n        this.abstractDateRangeEntityToRestObject(restPensumFachstelle, pensumFachstelle);\n        restPensumFachstelle.pensum = pensumFachstelle.pensum;\n        if (pensumFachstelle.fachstelle) {\n            restPensumFachstelle.fachstelle = this.fachstelleToRestObject({}, pensumFachstelle.fachstelle);\n        }\n        return restPensumFachstelle;\n    }\n\n    private parsePensumFachstelle(pensumFachstelleTS: TSPensumFachstelle, pensumFachstelleFromServer: any): TSPensumFachstelle {\n        if (pensumFachstelleFromServer) {\n            this.parseDateRangeEntity(pensumFachstelleTS, pensumFachstelleFromServer);\n            pensumFachstelleTS.pensum = pensumFachstelleFromServer.pensum;\n            if (pensumFachstelleFromServer.fachstelle) {\n                pensumFachstelleTS.fachstelle = this.parseFachstelle(new TSFachstelle(), pensumFachstelleFromServer.fachstelle);\n            }\n            return pensumFachstelleTS;\n        }\n        return undefined;\n    }\n\n    private betreuungListToRestObject(betreuungen: Array<TSBetreuung>): Array<any> {\n        let list: any[] = [];\n        if (betreuungen) {\n            for (let i = 0; i < betreuungen.length; i++) {\n                list[i] = this.betreuungToRestObject({}, betreuungen[i]);\n            }\n        }\n        return list;\n    }\n\n    public betreuungToRestObject(restBetreuung: any, betreuung: TSBetreuung): any {\n        this.abstractEntityToRestObject(restBetreuung, betreuung);\n        restBetreuung.betreuungsstatus = betreuung.betreuungsstatus;\n        restBetreuung.grundAblehnung = betreuung.grundAblehnung;\n        restBetreuung.datumAblehnung = DateUtil.momentToLocalDate(betreuung.datumAblehnung);\n        restBetreuung.datumBestaetigung = DateUtil.momentToLocalDate(betreuung.datumBestaetigung);\n        restBetreuung.vertrag = betreuung.vertrag;\n        restBetreuung.erweiterteBeduerfnisse = betreuung.erweiterteBeduerfnisse;\n        if (betreuung.institutionStammdaten) {\n            restBetreuung.institutionStammdaten = this.institutionStammdatenToRestObject({}, betreuung.institutionStammdaten);\n        }\n        if (betreuung.betreuungspensumContainers) {\n            restBetreuung.betreuungspensumContainers = [];\n            betreuung.betreuungspensumContainers.forEach((betPensCont: TSBetreuungspensumContainer) => {\n                restBetreuung.betreuungspensumContainers.push(this.betreuungspensumContainerToRestObject({}, betPensCont));\n            });\n        }\n        if (betreuung.abwesenheitContainers) {\n            restBetreuung.abwesenheitContainers = [];\n            betreuung.abwesenheitContainers.forEach((abwesenheitCont: TSAbwesenheitContainer) => {\n                restBetreuung.abwesenheitContainers.push(this.abwesenheitContainerToRestObject({}, abwesenheitCont));\n            });\n        }\n        restBetreuung.kindFullname = betreuung.kindFullname;\n        restBetreuung.kindNummer = betreuung.kindNummer;\n        restBetreuung.gesuchId = betreuung.gesuchId;\n        restBetreuung.gesuchsperiode = this.gesuchsperiodeToRestObject({}, betreuung.gesuchsperiode);\n        restBetreuung.betreuungNummer = betreuung.betreuungNummer;\n        restBetreuung.betreuungMutiert = betreuung.betreuungMutiert;\n        restBetreuung.abwesenheitMutiert = betreuung.abwesenheitMutiert;\n        restBetreuung.gueltig = betreuung.gueltig;\n        restBetreuung.belegungTagesschule = this.belegungTagesschuleToRestObject({}, betreuung.belegungTagesschule);\n        restBetreuung.belegungFerieninsel = this.belegungFerieninselToRestObject({}, betreuung.belegungFerieninsel);\n        restBetreuung.anmeldungMutationZustand = betreuung.anmeldungMutationZustand;\n        return restBetreuung;\n    }\n\n    public anmeldungDTOToRestObject(restAngebot: any, angebotDTO: TSAnmeldungDTO): any {\n        restAngebot.betreuung = this.betreuungToRestObject({}, angebotDTO.betreuung);\n        restAngebot.additionalKindQuestions = angebotDTO.additionalKindQuestions;\n        restAngebot.einschulung = angebotDTO.einschulung;\n        restAngebot.kindContainerId = angebotDTO.kindContainerId;\n        restAngebot.mutterspracheDeutsch = angebotDTO.mutterspracheDeutsch;\n        restAngebot.wohnhaftImGleichenHaushalt = angebotDTO.wohnhaftImGleichenHaushalt;\n        return restAngebot;\n\n    }\n\n    public betreuungspensumContainerToRestObject(restBetPensCont: any, betPensCont: TSBetreuungspensumContainer): any {\n        this.abstractEntityToRestObject(restBetPensCont, betPensCont);\n        if (betPensCont.betreuungspensumGS) {\n            restBetPensCont.betreuungspensumGS = this.betreuungspensumToRestObject({}, betPensCont.betreuungspensumGS);\n        }\n        if (betPensCont.betreuungspensumJA) {\n            restBetPensCont.betreuungspensumJA = this.betreuungspensumToRestObject({}, betPensCont.betreuungspensumJA);\n        }\n        return restBetPensCont;\n    }\n\n    public abwesenheitContainerToRestObject(restAbwesenheitCont: any, abwesenheitCont: TSAbwesenheitContainer): any {\n        this.abstractEntityToRestObject(restAbwesenheitCont, abwesenheitCont);\n        if (abwesenheitCont.abwesenheitGS) {\n            restAbwesenheitCont.abwesenheitGS = this.abwesenheitToRestObject({}, abwesenheitCont.abwesenheitGS);\n        }\n        if (abwesenheitCont.abwesenheitJA) {\n            restAbwesenheitCont.abwesenheitJA = this.abwesenheitToRestObject({}, abwesenheitCont.abwesenheitJA);\n        }\n        return restAbwesenheitCont;\n    }\n\n    public betreuungspensumToRestObject(restBetreuungspensum: any, betreuungspensum: TSBetreuungspensum): any {\n        this.abstractPensumEntityToRestObject(restBetreuungspensum, betreuungspensum);\n        if (betreuungspensum.nichtEingetreten !== null) { // wenn es null ist, wird es als null zum Server geschickt und der Server versucht, es zu validieren und wirft eine NPE\n            restBetreuungspensum.nichtEingetreten = betreuungspensum.nichtEingetreten;\n        }\n        return restBetreuungspensum;\n    }\n\n    public betreuungsmitteilungPensumToRestObject(restBetreuungspensum: any, betreuungspensum: TSBetreuungsmitteilungPensum): any {\n        this.abstractPensumEntityToRestObject(restBetreuungspensum, betreuungspensum);\n        return restBetreuungspensum;\n    }\n\n    public abwesenheitToRestObject(restAbwesenheit: any, abwesenheit: TSAbwesenheit): any {\n        this.abstractDateRangeEntityToRestObject(restAbwesenheit, abwesenheit);\n        return restAbwesenheit;\n    }\n\n    public parseBetreuungList(betreuungen: Array<any>): TSBetreuung[] {\n        let resultList: TSBetreuung[] = [];\n        if (betreuungen && Array.isArray(betreuungen)) {\n            for (let i = 0; i < betreuungen.length; i++) {\n                resultList[i] = this.parseBetreuung(new TSBetreuung(), betreuungen[i]);\n            }\n        } else {\n            resultList[0] = this.parseBetreuung(new TSBetreuung(), betreuungen);\n        }\n        return resultList;\n    }\n\n    public parseBetreuung(betreuungTS: TSBetreuung, betreuungFromServer: any): TSBetreuung {\n        if (betreuungFromServer) {\n            this.parseAbstractEntity(betreuungTS, betreuungFromServer);\n            betreuungTS.grundAblehnung = betreuungFromServer.grundAblehnung;\n            betreuungTS.datumAblehnung = DateUtil.localDateToMoment(betreuungFromServer.datumAblehnung);\n            betreuungTS.datumBestaetigung = DateUtil.localDateToMoment(betreuungFromServer.datumBestaetigung);\n            betreuungTS.vertrag = betreuungFromServer.vertrag;\n            betreuungTS.erweiterteBeduerfnisse = betreuungFromServer.erweiterteBeduerfnisse;\n            betreuungTS.betreuungsstatus = betreuungFromServer.betreuungsstatus;\n            betreuungTS.institutionStammdaten = this.parseInstitutionStammdaten(new TSInstitutionStammdaten(), betreuungFromServer.institutionStammdaten);\n            betreuungTS.betreuungspensumContainers = this.parseBetreuungspensumContainers(betreuungFromServer.betreuungspensumContainers);\n            betreuungTS.abwesenheitContainers = this.parseAbwesenheitContainers(betreuungFromServer.abwesenheitContainers);\n            betreuungTS.betreuungNummer = betreuungFromServer.betreuungNummer;\n            betreuungTS.verfuegung = this.parseVerfuegung(new TSVerfuegung(), betreuungFromServer.verfuegung);\n            betreuungTS.kindFullname = betreuungFromServer.kindFullname;\n            betreuungTS.kindNummer = betreuungFromServer.kindNummer;\n            betreuungTS.gesuchId = betreuungFromServer.gesuchId;\n            betreuungTS.gesuchsperiode = this.parseGesuchsperiode(new TSGesuchsperiode(), betreuungFromServer.gesuchsperiode);\n            betreuungTS.betreuungMutiert = betreuungFromServer.betreuungMutiert;\n            betreuungTS.abwesenheitMutiert = betreuungFromServer.abwesenheitMutiert;\n            betreuungTS.gueltig = betreuungFromServer.gueltig;\n            betreuungTS.belegungTagesschule = this.parseBelegungTagesschule(new TSBelegungTagesschule(), betreuungFromServer.belegungTagesschule);\n            betreuungTS.belegungFerieninsel = this.parseBelegungFerieninsel(new TSBelegungFerieninsel(), betreuungFromServer.belegungFerieninsel);\n            betreuungTS.anmeldungMutationZustand = betreuungFromServer.anmeldungMutationZustand;\n            betreuungTS.bgNummer = betreuungFromServer.bgNummer;\n            return betreuungTS;\n        }\n        return undefined;\n    }\n\n    public parseBetreuungspensumContainers(data: Array<any>): TSBetreuungspensumContainer[] {\n        let betPensContainers: TSBetreuungspensumContainer[] = [];\n        if (data && Array.isArray(data)) {\n            for (let i = 0; i < data.length; i++) {\n                betPensContainers[i] = this.parseBetreuungspensumContainer(new TSBetreuungspensumContainer(), data[i]);\n            }\n        } else {\n            betPensContainers[0] = this.parseBetreuungspensumContainer(new TSBetreuungspensumContainer(), data);\n        }\n        return betPensContainers;\n    }\n\n    public parseAbwesenheitContainers(data: Array<any>): TSAbwesenheitContainer[] {\n        let abwesenheitContainers: TSAbwesenheitContainer[] = [];\n        if (data && Array.isArray(data)) {\n            for (let i = 0; i < data.length; i++) {\n                abwesenheitContainers[i] = this.parseAbwesenheitContainer(new TSAbwesenheitContainer(), data[i]);\n            }\n        } else if (data) {\n            abwesenheitContainers[0] = this.parseAbwesenheitContainer(new TSAbwesenheitContainer(), data);\n        }\n        return abwesenheitContainers;\n    }\n\n    public parseBetreuungspensumContainer(betPensContainerTS: TSBetreuungspensumContainer, betPensContFromServer: any): TSBetreuungspensumContainer {\n        if (betPensContFromServer) {\n            this.parseAbstractEntity(betPensContainerTS, betPensContFromServer);\n            if (betPensContFromServer.betreuungspensumGS) {\n                betPensContainerTS.betreuungspensumGS = this.parseBetreuungspensum(new TSBetreuungspensum(), betPensContFromServer.betreuungspensumGS);\n            }\n            if (betPensContFromServer.betreuungspensumJA) {\n                betPensContainerTS.betreuungspensumJA = this.parseBetreuungspensum(new TSBetreuungspensum(), betPensContFromServer.betreuungspensumJA);\n            }\n            return betPensContainerTS;\n        }\n        return undefined;\n    }\n\n    public parseAbwesenheitContainer(abwesenheitContainerTS: TSAbwesenheitContainer, abwesenheitContFromServer: any): TSAbwesenheitContainer {\n        if (abwesenheitContFromServer) {\n            this.parseAbstractEntity(abwesenheitContainerTS, abwesenheitContFromServer);\n            if (abwesenheitContFromServer.abwesenheitGS) {\n                abwesenheitContainerTS.abwesenheitGS = this.parseAbwesenheit(new TSAbwesenheit(), abwesenheitContFromServer.abwesenheitGS);\n            }\n            if (abwesenheitContFromServer.abwesenheitJA) {\n                abwesenheitContainerTS.abwesenheitJA = this.parseAbwesenheit(new TSAbwesenheit(), abwesenheitContFromServer.abwesenheitJA);\n            }\n            return abwesenheitContainerTS;\n        }\n        return undefined;\n    }\n\n    public parseBetreuungspensum(betreuungspensumTS: TSBetreuungspensum, betreuungspensumFromServer: any): TSBetreuungspensum {\n        if (betreuungspensumFromServer) {\n            this.parseAbstractPensumEntity(betreuungspensumTS, betreuungspensumFromServer);\n            betreuungspensumTS.nichtEingetreten = betreuungspensumFromServer.nichtEingetreten;\n            return betreuungspensumTS;\n        }\n        return undefined;\n    }\n\n    public parseBetreuungsmitteilungPensum(betreuungspensumTS: TSBetreuungsmitteilungPensum, betreuungspensumFromServer: any): TSBetreuungsmitteilungPensum {\n        if (betreuungspensumFromServer) {\n            this.parseAbstractPensumEntity(betreuungspensumTS, betreuungspensumFromServer);\n            return betreuungspensumTS;\n        }\n        return undefined;\n    }\n\n    public parseAbwesenheit(abwesenheitTS: TSAbwesenheit, abwesenheitFromServer: any): TSAbwesenheit {\n        if (abwesenheitFromServer) {\n            this.parseDateRangeEntity(abwesenheitTS, abwesenheitFromServer);\n            return abwesenheitTS;\n        }\n        return undefined;\n    }\n\n    private parseErwerbspensenContainers(data: Array<any>): TSErwerbspensumContainer[] {\n        let erwerbspensen: TSErwerbspensumContainer[] = [];\n        if (data !== null && data !== undefined) {\n            if (Array.isArray(data)) {\n                for (let i = 0; i < data.length; i++) {\n                    erwerbspensen[i] = this.parseErwerbspensumContainer(new TSErwerbspensumContainer(), data[i]);\n                }\n            } else {\n                erwerbspensen[0] = this.parseErwerbspensumContainer(new TSErwerbspensumContainer(), data);\n            }\n        }\n        return erwerbspensen;\n    }\n\n    public gesuchsperiodeToRestObject(restGesuchsperiode: any, gesuchsperiode: TSGesuchsperiode): any {\n        if (gesuchsperiode) {\n            this.abstractDateRangeEntityToRestObject(restGesuchsperiode, gesuchsperiode);\n            restGesuchsperiode.status = gesuchsperiode.status;\n            restGesuchsperiode.datumFreischaltungTagesschule = DateUtil.momentToLocalDate(gesuchsperiode.datumFreischaltungTagesschule);\n            restGesuchsperiode.datumErsterSchultag = DateUtil.momentToLocalDate(gesuchsperiode.datumErsterSchultag);\n            return restGesuchsperiode;\n        }\n        return undefined;\n    }\n\n    public parseGesuchsperiode(gesuchsperiodeTS: TSGesuchsperiode, gesuchsperiodeFromServer: any): TSGesuchsperiode {\n        if (gesuchsperiodeFromServer) {\n            this.parseDateRangeEntity(gesuchsperiodeTS, gesuchsperiodeFromServer);\n            gesuchsperiodeTS.status = gesuchsperiodeFromServer.status;\n            gesuchsperiodeTS.datumFreischaltungTagesschule = DateUtil.localDateToMoment(gesuchsperiodeFromServer.datumFreischaltungTagesschule);\n            gesuchsperiodeTS.datumErsterSchultag = DateUtil.localDateToMoment(gesuchsperiodeFromServer.datumErsterSchultag);\n            return gesuchsperiodeTS;\n        }\n        return undefined;\n    }\n\n    public parseGesuchsperioden(data: any): TSGesuchsperiode[] {\n        let gesuchsperioden: TSGesuchsperiode[] = [];\n        if (data && Array.isArray(data)) {\n            for (let i = 0; i < data.length; i++) {\n                gesuchsperioden[i] = this.parseGesuchsperiode(new TSGesuchsperiode(), data[i]);\n            }\n        } else {\n            gesuchsperioden[0] = this.parseGesuchsperiode(new TSGesuchsperiode(), data);\n        }\n        return gesuchsperioden;\n    }\n\n    public antragDTOToRestObject(restPendenz: any, pendenz: TSAntragDTO): any {\n        restPendenz.antragId = pendenz.antragId;\n        restPendenz.fallNummer = pendenz.fallNummer;\n        restPendenz.familienName = pendenz.familienName;\n        restPendenz.angebote = pendenz.angebote;\n        restPendenz.antragTyp = pendenz.antragTyp;\n        restPendenz.eingangsdatum = DateUtil.momentToLocalDate(pendenz.eingangsdatum);\n        restPendenz.eingangsdatumSTV = DateUtil.momentToLocalDate(pendenz.eingangsdatumSTV);\n        restPendenz.aenderungsdatum = DateUtil.momentToLocalDateTime(pendenz.aenderungsdatum);\n        restPendenz.gesuchsperiodeGueltigAb = DateUtil.momentToLocalDate(pendenz.gesuchsperiodeGueltigAb);\n        restPendenz.gesuchsperiodeGueltigBis = DateUtil.momentToLocalDate(pendenz.gesuchsperiodeGueltigBis);\n        restPendenz.institutionen = pendenz.institutionen;\n        restPendenz.kinder = pendenz.kinder;\n        restPendenz.verantwortlicher = pendenz.verantwortlicher;\n        restPendenz.verantwortlicherSCH = pendenz.verantwortlicherSCH;\n        restPendenz.verantwortlicherUsernameJA = pendenz.verantwortlicherUsernameJA;\n        restPendenz.verantwortlicherUsernameSCH = pendenz.verantwortlicherUsernameSCH;\n        restPendenz.status = pendenz.status;\n        restPendenz.verfuegt = pendenz.verfuegt;\n        restPendenz.beschwerdeHaengig = pendenz.beschwerdeHaengig;\n        restPendenz.laufnummer = pendenz.laufnummer;\n        restPendenz.gesuchBetreuungenStatus = pendenz.gesuchBetreuungenStatus;\n        restPendenz.eingangsart = pendenz.eingangsart;\n        restPendenz.besitzerUsername = pendenz.besitzerUsername;\n        restPendenz.dokumenteHochgeladen = pendenz.dokumenteHochgeladen;\n        return restPendenz;\n    }\n\n    public parseAntragDTO(antragTS: TSAntragDTO, antragFromServer: any): TSAntragDTO {\n        antragTS.antragId = antragFromServer.antragId;\n        antragTS.fallNummer = antragFromServer.fallNummer;\n        antragTS.familienName = antragFromServer.familienName;\n        antragTS.angebote = antragFromServer.angebote;\n        antragTS.kinder = antragFromServer.kinder;\n        antragTS.antragTyp = antragFromServer.antragTyp;\n        antragTS.eingangsdatum = DateUtil.localDateToMoment(antragFromServer.eingangsdatum);\n        antragTS.eingangsdatumSTV = DateUtil.localDateToMoment(antragFromServer.eingangsdatumSTV);\n        antragTS.aenderungsdatum = DateUtil.localDateTimeToMoment(antragFromServer.aenderungsdatum);\n        antragTS.gesuchsperiodeGueltigAb = DateUtil.localDateToMoment(antragFromServer.gesuchsperiodeGueltigAb);\n        antragTS.gesuchsperiodeGueltigBis = DateUtil.localDateToMoment(antragFromServer.gesuchsperiodeGueltigBis);\n        antragTS.institutionen = antragFromServer.institutionen;\n        antragTS.verantwortlicher = antragFromServer.verantwortlicher;\n        antragTS.verantwortlicherSCH = antragFromServer.verantwortlicherSCH;\n        antragTS.verantwortlicherUsernameJA = antragFromServer.verantwortlicherUsernameJA;\n        antragTS.verantwortlicherUsernameSCH = antragFromServer.verantwortlicherUsernameSCH;\n        antragTS.status = antragFromServer.status;\n        antragTS.verfuegt = antragFromServer.verfuegt;\n        antragTS.beschwerdeHaengig = antragFromServer.beschwerdeHaengig;\n        antragTS.laufnummer = antragFromServer.laufnummer;\n        antragTS.gesuchBetreuungenStatus = antragFromServer.gesuchBetreuungenStatus;\n        antragTS.eingangsart = antragFromServer.eingangsart;\n        antragTS.besitzerUsername = antragFromServer.besitzerUsername;\n        antragTS.dokumenteHochgeladen = antragFromServer.dokumenteHochgeladen;\n        return antragTS;\n    }\n\n    public parseFallAntragDTO(fallAntragTS: TSFallAntragDTO, antragFromServer: any): TSFallAntragDTO {\n        fallAntragTS.fallID = antragFromServer.fallID;\n        fallAntragTS.fallNummer = antragFromServer.fallNummer;\n        fallAntragTS.familienName = antragFromServer.familienName;\n        return fallAntragTS;\n    }\n\n    public parseAntragDTOs(data: any): TSAntragDTO[] {\n        let pendenzen: TSAntragDTO[] = [];\n        if (data && Array.isArray(data)) {\n            for (let i = 0; i < data.length; i++) {\n                pendenzen[i] = this.parseAntragDTO(new TSAntragDTO(), data[i]);\n            }\n        } else {\n            pendenzen[0] = this.parseAntragDTO(new TSAntragDTO(), data);\n        }\n        return pendenzen;\n    }\n\n    public parseQuickSearchResult(dataFromServer: any): TSQuickSearchResult {\n        if (dataFromServer) {\n            let resultEntries: Array<TSSearchResultEntry> = this.parseSearchResultEntries(dataFromServer.resultEntities);\n            return new TSQuickSearchResult(resultEntries, dataFromServer.numberOfResults);\n        }\n        return undefined;\n    }\n\n    private parseSearchResultEntries(entries: Array<any>): Array<TSSearchResultEntry> {\n        let searchResultEntries: TSSearchResultEntry[] = [];\n        if (entries && Array.isArray(entries)) {\n            for (let i = 0; i < entries.length; i++) {\n                searchResultEntries[i] = this.parseSearchResultEntry(new TSSearchResultEntry(), entries[i]);\n            }\n        }\n        return searchResultEntries;\n    }\n\n    private parseSearchResultEntry(entry: TSSearchResultEntry, dataFromServer: any): TSSearchResultEntry {\n        entry.additionalInformation = dataFromServer.additionalInformation;\n        entry.gesuchID = dataFromServer.gesuchID;\n        entry.fallID = dataFromServer.fallID;\n        entry.resultId = dataFromServer.resultId;\n        entry.text = dataFromServer.text;\n        entry.entity = dataFromServer.entity;\n        if (dataFromServer.antragDTO) {\n            //dataFromServer.antragDTO.typ === TSAntragDTO\n            if (this.isFallAntragDTO(dataFromServer.antragDTO)) {\n                entry.antragDTO = this.parseFallAntragDTO(new TSFallAntragDTO(), dataFromServer.antragDTO);\n            } else {\n                entry.antragDTO = this.parseAntragDTO(new TSAntragDTO(), dataFromServer.antragDTO);\n            }\n        }\n        return entry;\n    }\n\n    private isFallAntragDTO(antragRestObj: any): boolean {\n        if (antragRestObj) {\n            return antragRestObj.clazz === TSFallAntragDTO.serverClassName;\n        }\n        return false;\n    }\n\n    public pendenzBetreuungenToRestObject(restPendenz: any, pendenz: TSPendenzBetreuung): any {\n        restPendenz.betreuungsNummer = pendenz.betreuungsNummer;\n        restPendenz.betreuungsId = pendenz.betreuungsId;\n        restPendenz.gesuchId = pendenz.gesuchId;\n        restPendenz.kindId = pendenz.kindId;\n        restPendenz.name = pendenz.name;\n        restPendenz.vorname = pendenz.vorname;\n        restPendenz.geburtsdatum = DateUtil.momentToLocalDate(pendenz.geburtsdatum);\n        restPendenz.typ = pendenz.typ;\n        restPendenz.gesuchsperiode = this.gesuchsperiodeToRestObject({}, pendenz.gesuchsperiode);\n        restPendenz.eingangsdatum = DateUtil.momentToLocalDate(pendenz.eingangsdatum);\n        restPendenz.eingangsdatumSTV = DateUtil.momentToLocalDate(pendenz.eingangsdatumSTV);\n        restPendenz.betreuungsangebotTyp = pendenz.betreuungsangebotTyp;\n        restPendenz.institution = pendenz.institution;\n        return restPendenz;\n    }\n\n    public parsePendenzBetreuungen(pendenzTS: TSPendenzBetreuung, pendenzFromServer: any): TSPendenzBetreuung {\n        pendenzTS.betreuungsNummer = pendenzFromServer.betreuungsNummer;\n        pendenzTS.betreuungsId = pendenzFromServer.betreuungsId;\n        pendenzTS.gesuchId = pendenzFromServer.gesuchId;\n        pendenzTS.kindId = pendenzFromServer.kindId;\n        pendenzTS.name = pendenzFromServer.name;\n        pendenzTS.vorname = pendenzFromServer.vorname;\n        pendenzTS.geburtsdatum = pendenzFromServer.geburtsdatum;\n        pendenzTS.typ = pendenzFromServer.typ;\n        pendenzTS.gesuchsperiode = this.parseGesuchsperiode(new TSGesuchsperiode(), pendenzFromServer.gesuchsperiode);\n        pendenzTS.eingangsdatum = DateUtil.localDateToMoment(pendenzFromServer.eingangsdatum);\n        pendenzTS.eingangsdatumSTV = DateUtil.localDateToMoment(pendenzFromServer.eingangsdatumSTV);\n        pendenzTS.betreuungsangebotTyp = pendenzFromServer.betreuungsangebotTyp;\n        pendenzTS.institution = pendenzFromServer.institution;\n        return pendenzTS;\n    }\n\n    public parsePendenzBetreuungenList(data: any): TSPendenzBetreuung[] {\n        let pendenzen: TSPendenzBetreuung[] = [];\n        if (data && Array.isArray(data)) {\n            for (let i = 0; i < data.length; i++) {\n                pendenzen[i] = this.parsePendenzBetreuungen(new TSPendenzBetreuung(), data[i]);\n            }\n        } else {\n            pendenzen[0] = this.parsePendenzBetreuungen(new TSPendenzBetreuung(), data);\n        }\n        return pendenzen;\n    }\n\n    public userToRestObject(user: any, userTS: TSUser): any {\n        if (userTS) {\n            user.username = userTS.username;\n            user.password = userTS.password;\n            user.nachname = userTS.nachname;\n            user.vorname = userTS.vorname;\n            user.email = userTS.email;\n            user.role = userTS.role;\n            user.mandant = this.mandantToRestObject({}, userTS.mandant);\n            user.traegerschaft = this.traegerschaftToRestObject({}, userTS.traegerschaft);\n            user.institution = this.institutionToRestObject({}, userTS.institution);\n            return user;\n        }\n        return undefined;\n    }\n\n    public parseUser(userTS: TSUser, userFromServer: any): TSUser {\n        if (userFromServer) {\n            userTS.username = userFromServer.username;\n            userTS.password = userFromServer.password;\n            userTS.nachname = userFromServer.nachname;\n            userTS.vorname = userFromServer.vorname;\n            userTS.email = userFromServer.email;\n            userTS.role = userFromServer.role;\n            userTS.mandant = this.parseMandant(new TSMandant(), userFromServer.mandant);\n            userTS.traegerschaft = this.parseTraegerschaft(new TSTraegerschaft(), userFromServer.traegerschaft);\n            userTS.institution = this.parseInstitution(new TSInstitution(), userFromServer.institution);\n            userTS.amt = userFromServer.amt;\n            return userTS;\n        }\n        return undefined;\n    }\n\n    public parseUserList(data: any): TSUser[] {\n        let users: TSUser[] = [];\n        if (data && Array.isArray(data)) {\n            for (let i = 0; i < data.length; i++) {\n                users[i] = this.parseUser(new TSUser(), data[i]);\n            }\n        } else {\n            users[0] = this.parseUser(new TSUser(), data);\n        }\n        return users;\n    }\n\n    parseDokumenteDTO(dokumenteDTO: TSDokumenteDTO, dokumenteFromServer: any): TSDokumenteDTO {\n        if (dokumenteFromServer) {\n            dokumenteDTO.dokumentGruende = this.parseDokumentGruende(dokumenteFromServer.dokumentGruende);\n            return dokumenteDTO;\n        }\n        return undefined;\n    }\n\n    private parseDokumentGruende(dokumentGruende: Array<any>): TSDokumentGrund[] {\n        let resultList: TSDokumentGrund[] = [];\n        if (dokumentGruende && Array.isArray(dokumentGruende)) {\n            for (let i = 0; i < dokumentGruende.length; i++) {\n                resultList[i] = this.parseDokumentGrund(new TSDokumentGrund(), dokumentGruende[i]);\n            }\n        } else {\n            resultList[0] = this.parseDokumentGrund(new TSDokumentGrund(), dokumentGruende);\n        }\n        return resultList;\n    }\n\n    parseDokumentGrund(dokumentGrund: TSDokumentGrund, dokumentGrundFromServer: any): TSDokumentGrund {\n        if (dokumentGrundFromServer) {\n            this.parseAbstractEntity(dokumentGrund, dokumentGrundFromServer);\n            dokumentGrund.dokumentGrundTyp = dokumentGrundFromServer.dokumentGrundTyp;\n            dokumentGrund.fullName = dokumentGrundFromServer.fullName;\n            dokumentGrund.tag = dokumentGrundFromServer.tag;\n            dokumentGrund.personNumber = dokumentGrundFromServer.personNumber;\n            dokumentGrund.personType = dokumentGrundFromServer.personType;\n            dokumentGrund.dokumentTyp = dokumentGrundFromServer.dokumentTyp;\n            dokumentGrund.needed = dokumentGrundFromServer.needed;\n            dokumentGrund.dokumente = this.parseDokumente(dokumentGrundFromServer.dokumente);\n            return dokumentGrund;\n        }\n        return undefined;\n    }\n\n    private parseDokumente(dokumente: Array<any>): TSDokument[] {\n        let resultList: TSDokument[] = [];\n        if (dokumente && Array.isArray(dokumente)) {\n            for (let i = 0; i < dokumente.length; i++) {\n                resultList[i] = this.parseDokument(new TSDokument(), dokumente[i]);\n            }\n        } else {\n            resultList[0] = this.parseDokument(new TSDokument(), dokumente);\n        }\n        return resultList;\n    }\n\n    private parseDokument(dokument: TSDokument, dokumentFromServer: any): TSDokument {\n        if (dokumentFromServer) {\n            this.parseAbstractEntity(dokument, dokumentFromServer);\n            dokument.filename = dokumentFromServer.filename;\n            dokument.filepfad = dokumentFromServer.filepfad;\n            dokument.filesize = dokumentFromServer.filesize;\n            dokument.timestampUpload = DateUtil.localDateTimeToMoment(dokumentFromServer.timestampUpload);\n            dokument.userUploaded = this.parseUser(new TSUser(), dokumentFromServer.userUploaded);\n            return dokument;\n        }\n        return undefined;\n    }\n\n    public dokumentGrundToRestObject(restDokumentGrund: any, dokumentGrundTS: TSDokumentGrund): any {\n        if (dokumentGrundTS) {\n            this.abstractEntityToRestObject(restDokumentGrund, dokumentGrundTS);\n            restDokumentGrund.tag = dokumentGrundTS.tag;\n            restDokumentGrund.fullName = dokumentGrundTS.fullName;\n            restDokumentGrund.personNumber = dokumentGrundTS.personNumber;\n            restDokumentGrund.personType = dokumentGrundTS.personType;\n            restDokumentGrund.dokumentGrundTyp = dokumentGrundTS.dokumentGrundTyp;\n            restDokumentGrund.dokumentTyp = dokumentGrundTS.dokumentTyp;\n            restDokumentGrund.needed = dokumentGrundTS.needed;\n            restDokumentGrund.dokumente = this.dokumenteToRestObject(dokumentGrundTS.dokumente);\n\n            return restDokumentGrund;\n        }\n        return undefined;\n    }\n\n    private dokumenteToRestObject(dokumente: Array<TSDokument>): Array<any> {\n        let list: any[] = [];\n        if (dokumente) {\n            for (let i = 0; i < dokumente.length; i++) {\n                list[i] = this.dokumentToRestObject({}, dokumente[i]);\n            }\n        }\n        return list;\n    }\n\n    private dokumentToRestObject(dokument: any, dokumentTS: TSDokument): any {\n        if (dokumentTS) {\n            this.abstractEntityToRestObject(dokument, dokumentTS);\n            dokument.filename = dokumentTS.filename;\n            dokument.filepfad = dokumentTS.filepfad;\n            dokument.filesize = dokumentTS.filesize;\n            dokument.timestampUpload = DateUtil.momentToLocalDateTime(dokumentTS.timestampUpload);\n            return dokument;\n        }\n        return undefined;\n    }\n\n    public parseVerfuegung(verfuegungTS: TSVerfuegung, verfuegungFromServer: any): TSVerfuegung {\n        if (verfuegungFromServer) {\n            this.parseAbstractEntity(verfuegungTS, verfuegungFromServer);\n            verfuegungTS.generatedBemerkungen = verfuegungFromServer.generatedBemerkungen;\n            verfuegungTS.manuelleBemerkungen = verfuegungFromServer.manuelleBemerkungen;\n            verfuegungTS.zeitabschnitte = this.parseVerfuegungZeitabschnitte(verfuegungFromServer.zeitabschnitte);\n            verfuegungTS.kategorieKeinPensum = verfuegungFromServer.kategorieKeinPensum;\n            verfuegungTS.kategorieMaxEinkommen = verfuegungFromServer.kategorieMaxEinkommen;\n            verfuegungTS.kategorieNichtEintreten = verfuegungFromServer.kategorieNichtEintreten;\n            verfuegungTS.kategorieNormal = verfuegungFromServer.kategorieNormal;\n            verfuegungTS.kategorieZuschlagZumErwerbspensum = verfuegungFromServer.kategorieZuschlagZumErwerbspensum;\n            return verfuegungTS;\n        }\n        return undefined;\n    }\n\n    public verfuegungToRestObject(verfuegung: any, verfuegungTS: TSVerfuegung): any {\n        if (verfuegungTS) {\n            this.abstractEntityToRestObject(verfuegung, verfuegungTS);\n            verfuegung.generatedBemerkungen = verfuegungTS.generatedBemerkungen;\n            verfuegung.manuelleBemerkungen = verfuegungTS.manuelleBemerkungen;\n            verfuegung.zeitabschnitte = this.zeitabschnittListToRestObject(verfuegungTS.zeitabschnitte);\n            verfuegung.kategorieKeinPensum = verfuegungTS.kategorieKeinPensum;\n            verfuegung.kategorieMaxEinkommen = verfuegungTS.kategorieMaxEinkommen;\n            verfuegung.kategorieNichtEintreten = verfuegungTS.kategorieNichtEintreten;\n            verfuegung.kategorieNormal = verfuegungTS.kategorieNormal;\n            verfuegung.kategorieZuschlagZumErwerbspensum = verfuegungTS.kategorieZuschlagZumErwerbspensum;\n            return verfuegung;\n        }\n        return undefined;\n    }\n\n    private zeitabschnittListToRestObject(zeitabschnitte: Array<TSVerfuegungZeitabschnitt>): Array<any> {\n        let list: any[] = [];\n        if (zeitabschnitte) {\n            for (let i = 0; i < zeitabschnitte.length; i++) {\n                list[i] = this.zeitabschnittToRestObject({}, zeitabschnitte[i]);\n            }\n        }\n        return list;\n    }\n\n    private parseVerfuegungZeitabschnitte(zeitabschnitte: Array<any>): TSVerfuegungZeitabschnitt[] {\n        let resultList: TSVerfuegungZeitabschnitt[] = [];\n        if (zeitabschnitte && Array.isArray(zeitabschnitte)) {\n            for (let i = 0; i < zeitabschnitte.length; i++) {\n                resultList[i] = this.parseVerfuegungZeitabschnitt(new TSVerfuegungZeitabschnitt(), zeitabschnitte[i]);\n            }\n        } else {\n            resultList[0] = this.parseVerfuegungZeitabschnitt(new TSVerfuegungZeitabschnitt(), zeitabschnitte);\n        }\n        return resultList;\n    }\n\n    public zeitabschnittToRestObject(zeitabschnitt: any, zeitabschnittTS: TSVerfuegungZeitabschnitt): any {\n        if (zeitabschnittTS) {\n            this.abstractDateRangeEntityToRestObject(zeitabschnitt, zeitabschnittTS);\n            zeitabschnitt.abzugFamGroesse = zeitabschnittTS.abzugFamGroesse;\n            zeitabschnitt.anspruchberechtigtesPensum = zeitabschnittTS.anspruchberechtigtesPensum;\n            zeitabschnitt.bgPensum = zeitabschnittTS.bgPensum;\n            zeitabschnitt.anspruchspensumRest = zeitabschnittTS.anspruchspensumRest;\n            zeitabschnitt.bemerkungen = zeitabschnittTS.bemerkungen;\n            zeitabschnitt.betreuungspensum = zeitabschnittTS.betreuungspensum;\n            zeitabschnitt.betreuungsstunden = zeitabschnittTS.betreuungsstunden;\n            zeitabschnitt.elternbeitrag = zeitabschnittTS.elternbeitrag;\n            zeitabschnitt.erwerbspensumGS1 = zeitabschnittTS.erwerbspensumGS1;\n            zeitabschnitt.erwerbspensumGS2 = zeitabschnittTS.erwerbspensumGS2;\n            zeitabschnitt.fachstellenpensum = zeitabschnittTS.fachstellenpensum;\n            zeitabschnitt.massgebendesEinkommenVorAbzugFamgr = zeitabschnittTS.massgebendesEinkommenVorAbzugFamgr;\n            zeitabschnitt.famGroesse = zeitabschnittTS.famGroesse;\n            zeitabschnitt.zahlungsstatus = zeitabschnittTS.zahlungsstatus;\n            zeitabschnitt.vollkosten = zeitabschnittTS.vollkosten;\n            zeitabschnitt.einkommensjahr = zeitabschnittTS.einkommensjahr;\n            zeitabschnitt.kategorieZuschlagZumErwerbspensum = zeitabschnittTS.kategorieZuschlagZumErwerbspensum;\n            zeitabschnitt.kategorieMaxEinkommen = zeitabschnittTS.kategorieMaxEinkommen;\n            zeitabschnitt.kategorieKeinPensum = zeitabschnittTS.kategorieKeinPensum;\n            zeitabschnitt.zuSpaetEingereicht = zeitabschnittTS.zuSpaetEingereicht;\n            zeitabschnitt.sameVerfuegungsdaten = zeitabschnittTS.sameVerfuegungsdaten;\n            zeitabschnitt.sameVerguenstigung = zeitabschnittTS.sameVerguenstigung;\n            return zeitabschnitt;\n        }\n        return undefined;\n    }\n\n    public parseVerfuegungZeitabschnitt(verfuegungZeitabschnittTS: TSVerfuegungZeitabschnitt, zeitabschnittFromServer: any): TSVerfuegungZeitabschnitt {\n        if (zeitabschnittFromServer) {\n            this.parseDateRangeEntity(verfuegungZeitabschnittTS, zeitabschnittFromServer);\n            verfuegungZeitabschnittTS.abzugFamGroesse = zeitabschnittFromServer.abzugFamGroesse;\n            verfuegungZeitabschnittTS.anspruchberechtigtesPensum = zeitabschnittFromServer.anspruchberechtigtesPensum;\n            verfuegungZeitabschnittTS.bgPensum = zeitabschnittFromServer.bgPensum;\n            verfuegungZeitabschnittTS.anspruchspensumRest = zeitabschnittFromServer.anspruchspensumRest;\n            verfuegungZeitabschnittTS.bemerkungen = zeitabschnittFromServer.bemerkungen;\n            verfuegungZeitabschnittTS.betreuungspensum = zeitabschnittFromServer.betreuungspensum;\n            verfuegungZeitabschnittTS.betreuungsstunden = zeitabschnittFromServer.betreuungsstunden;\n            verfuegungZeitabschnittTS.elternbeitrag = zeitabschnittFromServer.elternbeitrag;\n            verfuegungZeitabschnittTS.erwerbspensumGS1 = zeitabschnittFromServer.erwerbspensumGS1;\n            verfuegungZeitabschnittTS.erwerbspensumGS2 = zeitabschnittFromServer.erwerbspensumGS2;\n            verfuegungZeitabschnittTS.fachstellenpensum = zeitabschnittFromServer.fachstellenpensum;\n            verfuegungZeitabschnittTS.massgebendesEinkommenVorAbzugFamgr = zeitabschnittFromServer.massgebendesEinkommenVorAbzugFamgr;\n            verfuegungZeitabschnittTS.famGroesse = zeitabschnittFromServer.famGroesse;\n            verfuegungZeitabschnittTS.zahlungsstatus = zeitabschnittFromServer.zahlungsstatus;\n            verfuegungZeitabschnittTS.vollkosten = zeitabschnittFromServer.vollkosten;\n            verfuegungZeitabschnittTS.einkommensjahr = zeitabschnittFromServer.einkommensjahr;\n            verfuegungZeitabschnittTS.kategorieZuschlagZumErwerbspensum = zeitabschnittFromServer.kategorieZuschlagZumErwerbspensum;\n            verfuegungZeitabschnittTS.kategorieMaxEinkommen = zeitabschnittFromServer.kategorieMaxEinkommen;\n            verfuegungZeitabschnittTS.kategorieKeinPensum = zeitabschnittFromServer.kategorieKeinPensum;\n            verfuegungZeitabschnittTS.zuSpaetEingereicht = zeitabschnittFromServer.zuSpaetEingereicht;\n            verfuegungZeitabschnittTS.sameVerfuegungsdaten = zeitabschnittFromServer.sameVerfuegungsdaten;\n            verfuegungZeitabschnittTS.sameVerguenstigung = zeitabschnittFromServer.sameVerguenstigung;\n            return verfuegungZeitabschnittTS;\n        }\n        return undefined;\n    }\n\n    public parseDownloadFile(tsDownloadFile: TSDownloadFile, downloadFileFromServer: any) {\n        if (downloadFileFromServer) {\n            this.parseAbstractFileEntity(tsDownloadFile, downloadFileFromServer);\n            tsDownloadFile.accessToken = downloadFileFromServer.accessToken;\n            return tsDownloadFile;\n        }\n        return undefined;\n    }\n\n    public parseWizardStep(wizardStepTS: TSWizardStep, wizardStepFromServer: any): TSWizardStep {\n        this.parseAbstractEntity(wizardStepTS, wizardStepFromServer);\n        wizardStepTS.gesuchId = wizardStepFromServer.gesuchId;\n        wizardStepTS.wizardStepName = wizardStepFromServer.wizardStepName;\n        wizardStepTS.verfuegbar = wizardStepFromServer.verfuegbar;\n        wizardStepTS.wizardStepStatus = wizardStepFromServer.wizardStepStatus;\n        wizardStepTS.bemerkungen = wizardStepFromServer.bemerkungen;\n        return wizardStepTS;\n    }\n\n    public wizardStepToRestObject(restWizardStep: any, wizardStep: TSWizardStep): any {\n        this.abstractEntityToRestObject(restWizardStep, wizardStep);\n        restWizardStep.gesuchId = wizardStep.gesuchId;\n        restWizardStep.verfuegbar = wizardStep.verfuegbar;\n        restWizardStep.wizardStepName = wizardStep.wizardStepName;\n        restWizardStep.wizardStepStatus = wizardStep.wizardStepStatus;\n        restWizardStep.bemerkungen = wizardStep.bemerkungen;\n        return restWizardStep;\n    }\n\n    public parseWizardStepList(data: any): TSWizardStep[] {\n        let wizardSteps: TSWizardStep[] = [];\n        if (data && Array.isArray(data)) {\n            for (let i = 0; i < data.length; i++) {\n                wizardSteps[i] = this.parseWizardStep(new TSWizardStep(), data[i]);\n            }\n        } else {\n            wizardSteps[0] = this.parseWizardStep(new TSWizardStep(), data);\n        }\n        return wizardSteps;\n    }\n\n    public parseAntragStatusHistoryCollection(antragStatusHistoryCollection: Array<any>): TSAntragStatusHistory[] {\n        let resultList: TSAntragStatusHistory[] = [];\n        if (antragStatusHistoryCollection && Array.isArray(antragStatusHistoryCollection)) {\n            for (let i = 0; i < antragStatusHistoryCollection.length; i++) {\n                resultList[i] = this.parseAntragStatusHistory(new TSAntragStatusHistory(), antragStatusHistoryCollection[i]);\n            }\n        } else {\n            resultList[0] = this.parseAntragStatusHistory(new TSAntragStatusHistory(), antragStatusHistoryCollection);\n        }\n        return resultList;\n    }\n\n    public parseAntragStatusHistory(antragStatusHistoryTS: TSAntragStatusHistory, antragStatusHistoryFromServer: any): TSAntragStatusHistory {\n        this.parseAbstractEntity(antragStatusHistoryTS, antragStatusHistoryFromServer);\n        antragStatusHistoryTS.gesuchId = antragStatusHistoryFromServer.gesuchId;\n        antragStatusHistoryTS.benutzer = this.parseUser(new TSUser(), antragStatusHistoryFromServer.benutzer);\n        antragStatusHistoryTS.timestampVon = DateUtil.localDateTimeToMoment(antragStatusHistoryFromServer.timestampVon);\n        antragStatusHistoryTS.timestampBis = DateUtil.localDateTimeToMoment(antragStatusHistoryFromServer.timestampBis);\n        antragStatusHistoryTS.status = antragStatusHistoryFromServer.status;\n        return antragStatusHistoryTS;\n    }\n\n    public antragStatusHistoryToRestObject(restAntragStatusHistory: any, antragStatusHistory: TSAntragStatusHistory): any {\n        this.abstractEntityToRestObject(restAntragStatusHistory, antragStatusHistory);\n        restAntragStatusHistory.gesuchId = antragStatusHistory.gesuchId;\n        restAntragStatusHistory.benutzer = this.userToRestObject({}, antragStatusHistory.benutzer);\n        restAntragStatusHistory.timestampVon = DateUtil.momentToLocalDateTime(antragStatusHistory.timestampVon);\n        restAntragStatusHistory.timestampBis = DateUtil.momentToLocalDateTime(antragStatusHistory.timestampBis);\n        restAntragStatusHistory.status = antragStatusHistory.status;\n        return restAntragStatusHistory;\n    }\n\n    public mahnungToRestObject(restMahnung: any, tsMahnung: TSMahnung): any {\n        if (tsMahnung) {\n            this.abstractEntityToRestObject(restMahnung, tsMahnung);\n            restMahnung.gesuch = this.gesuchToRestObject({}, tsMahnung.gesuch);\n            restMahnung.mahnungTyp = tsMahnung.mahnungTyp;\n            restMahnung.datumFristablauf = DateUtil.momentToLocalDate(tsMahnung.datumFristablauf);\n            restMahnung.bemerkungen = tsMahnung.bemerkungen;\n            restMahnung.timestampAbgeschlossen = DateUtil.momentToLocalDateTime(tsMahnung.timestampAbgeschlossen);\n            restMahnung.abgelaufen = tsMahnung.abgelaufen;\n            return restMahnung;\n        }\n        return undefined;\n    }\n\n    public parseMahnungen(data: Array<any>): TSMahnung[] {\n        let mahnungen: TSMahnung[] = [];\n        if (data && Array.isArray(data)) {\n            for (let i = 0; i < data.length; i++) {\n                mahnungen[i] = this.parseMahnung(new TSMahnung(), data[i]);\n            }\n        } else {\n            mahnungen[0] = this.parseMahnung(new TSMahnung(), data);\n        }\n        return mahnungen;\n    }\n\n    public parseMahnung(tsMahnung: TSMahnung, mahnungFromServer: any): TSMahnung {\n        if (mahnungFromServer) {\n            this.parseAbstractEntity(tsMahnung, mahnungFromServer);\n\n            tsMahnung.gesuch = this.parseGesuch(new TSGesuch(), mahnungFromServer.gesuch);\n            tsMahnung.mahnungTyp = mahnungFromServer.mahnungTyp;\n            tsMahnung.datumFristablauf = DateUtil.localDateToMoment(mahnungFromServer.datumFristablauf);\n            tsMahnung.bemerkungen = mahnungFromServer.bemerkungen;\n            tsMahnung.timestampAbgeschlossen = DateUtil.localDateTimeToMoment(mahnungFromServer.timestampAbgeschlossen);\n            tsMahnung.abgelaufen = mahnungFromServer.abgelaufen;\n            return tsMahnung;\n        }\n        return undefined;\n    }\n\n    finanzModelToRestObject(restFinSitModel: any, finSitModel: TSFinanzModel) {\n        if (finSitModel) {\n            if (finSitModel.finanzielleSituationContainerGS1) {\n                restFinSitModel.finanzielleSituationContainerGS1 = this.finanzielleSituationContainerToRestObject({}, finSitModel.finanzielleSituationContainerGS1);\n            }\n            if (finSitModel.finanzielleSituationContainerGS2) {\n                restFinSitModel.finanzielleSituationContainerGS2 = this.finanzielleSituationContainerToRestObject({}, finSitModel.finanzielleSituationContainerGS2);\n            }\n            if (finSitModel.einkommensverschlechterungContainerGS1) {\n                restFinSitModel.einkommensverschlechterungContainerGS1 = this.einkommensverschlechterungContainerToRestObject({}, finSitModel.einkommensverschlechterungContainerGS1);\n            }\n            if (finSitModel.einkommensverschlechterungContainerGS2) {\n                restFinSitModel.einkommensverschlechterungContainerGS2 = this.einkommensverschlechterungContainerToRestObject({}, finSitModel.einkommensverschlechterungContainerGS2);\n            }\n            if (finSitModel.einkommensverschlechterungInfoContainer) {\n                restFinSitModel.einkommensverschlechterungInfoContainer = this.einkommensverschlechterungInfoContainerToRestObject({}, finSitModel.einkommensverschlechterungInfoContainer);\n            }\n            restFinSitModel.gemeinsameSteuererklaerung = finSitModel.gemeinsameSteuererklaerung;\n            return restFinSitModel;\n        }\n        return undefined;\n\n    }\n\n    public gesuchstellerContainerToRestObject(restGSCont: any, gesuchstellerCont: TSGesuchstellerContainer): any {\n        if (gesuchstellerCont) {\n            this.abstractEntityToRestObject(restGSCont, gesuchstellerCont);\n            restGSCont.adressen = this.adressenContainerListToRestObject(gesuchstellerCont.adressen);\n            restGSCont.alternativeAdresse = this.adresseContainerToRestObject({}, gesuchstellerCont.korrespondenzAdresse);\n            restGSCont.rechnungsAdresse = this.adresseContainerToRestObject({}, gesuchstellerCont.rechnungsAdresse);\n            if (gesuchstellerCont.gesuchstellerGS) {\n                restGSCont.gesuchstellerGS = this.gesuchstellerToRestObject({}, gesuchstellerCont.gesuchstellerGS);\n            }\n            if (gesuchstellerCont.gesuchstellerJA) {\n                restGSCont.gesuchstellerJA = this.gesuchstellerToRestObject({}, gesuchstellerCont.gesuchstellerJA);\n            }\n            if (gesuchstellerCont.finanzielleSituationContainer) {\n                restGSCont.finanzielleSituationContainer = this.finanzielleSituationContainerToRestObject({}, gesuchstellerCont.finanzielleSituationContainer);\n            }\n            if (gesuchstellerCont.einkommensverschlechterungContainer) {\n                restGSCont.einkommensverschlechterungContainer = this.einkommensverschlechterungContainerToRestObject({}, gesuchstellerCont.einkommensverschlechterungContainer);\n            }\n            if (gesuchstellerCont.erwerbspensenContainer) {\n                let erwPensenCont: Array<any> = [];\n                for (let i = 0; i < gesuchstellerCont.erwerbspensenContainer.length; i++) {\n                    erwPensenCont.push(this.erwerbspensumContainerToRestObject({}, gesuchstellerCont.erwerbspensenContainer[i]));\n                }\n                restGSCont.erwerbspensenContainers = erwPensenCont;\n            }\n            return restGSCont;\n        }\n        return undefined;\n    }\n\n    public parseGesuchstellerContainer(gesuchstellerContTS: TSGesuchstellerContainer, gesuchstellerContFromServer: any) {\n        if (gesuchstellerContFromServer) {\n            this.parseAbstractEntity(gesuchstellerContTS, gesuchstellerContFromServer);\n            gesuchstellerContTS.gesuchstellerJA = this.parseGesuchsteller(new TSGesuchsteller(), gesuchstellerContFromServer.gesuchstellerJA);\n            gesuchstellerContTS.gesuchstellerGS = this.parseGesuchsteller(new TSGesuchsteller(), gesuchstellerContFromServer.gesuchstellerGS);\n            gesuchstellerContTS.adressen = this.parseAdressenContainerList(gesuchstellerContFromServer.adressen);\n            gesuchstellerContTS.korrespondenzAdresse = this.parseAdresseContainer(\n                new TSAdresseContainer(), gesuchstellerContFromServer.alternativeAdresse);\n            gesuchstellerContTS.rechnungsAdresse = this.parseAdresseContainer(\n                new TSAdresseContainer(), gesuchstellerContFromServer.rechnungsAdresse);\n            gesuchstellerContTS.finanzielleSituationContainer = this.parseFinanzielleSituationContainer(\n                new TSFinanzielleSituationContainer(), gesuchstellerContFromServer.finanzielleSituationContainer);\n            gesuchstellerContTS.einkommensverschlechterungContainer = this.parseEinkommensverschlechterungContainer(\n                new TSEinkommensverschlechterungContainer(), gesuchstellerContFromServer.einkommensverschlechterungContainer);\n            gesuchstellerContTS.erwerbspensenContainer = this.parseErwerbspensenContainers(gesuchstellerContFromServer.erwerbspensenContainers);\n            return gesuchstellerContTS;\n        }\n        return undefined;\n    }\n\n    private adressenContainerListToRestObject(adressen: Array<TSAdresseContainer>) {\n        let list: any[] = [];\n        if (adressen) {\n            for (let i = 0; i < adressen.length; i++) {\n                list[i] = this.adresseContainerToRestObject({}, adressen[i]);\n            }\n        }\n        return list;\n    }\n\n    private adresseContainerToRestObject(restAddresseCont: any, adresseContTS: TSAdresseContainer): any {\n        if (adresseContTS) {\n            this.abstractEntityToRestObject(restAddresseCont, adresseContTS);\n            restAddresseCont.adresseGS = this.adresseToRestObject({}, adresseContTS.adresseGS);\n            restAddresseCont.adresseJA = this.adresseToRestObject({}, adresseContTS.adresseJA);\n            return restAddresseCont;\n        }\n        return undefined;\n    }\n\n    private parseAdressenContainerList(adressen: any): Array<TSAdresseContainer> {\n        let adressenList: Array<TSAdresseContainer> = [];\n        if (adressen) {\n            for (let i = 0; i < adressen.length; i++) {\n                adressenList.push(this.parseAdresseContainer(new TSAdresseContainer(), adressen[i]));\n            }\n        }\n        return adressenList;\n    }\n\n    private parseAdresseContainer(adresseContainerTS: TSAdresseContainer, adresseFromServer: any): TSAdresseContainer {\n        if (adresseFromServer) {\n            this.parseAbstractEntity(adresseContainerTS, adresseFromServer);\n            adresseContainerTS.adresseGS = this.parseAdresse(new TSAdresse(), adresseFromServer.adresseGS);\n            adresseContainerTS.adresseJA = this.parseAdresse(new TSAdresse(), adresseFromServer.adresseJA);\n            return adresseContainerTS;\n        }\n        return undefined;\n    }\n\n    public parseWorkJobList(jobWrapper: any): Array<TSWorkJob> {\n        let workJobList: Array<TSWorkJob> = [];\n        if (jobWrapper && jobWrapper.jobs) {    //wrapped jobs\n            for (let i = 0; i < jobWrapper.jobs.length; i++) {\n                workJobList.push(this.parseWorkJob(new TSWorkJob, jobWrapper.jobs[i]));\n            }\n        }\n        return workJobList;\n    }\n\n    private parseWorkJob(tsWorkJob: TSWorkJob, workjobFromServer: any): TSWorkJob {\n        if (workjobFromServer) {\n            this.parseAbstractEntity(tsWorkJob, workjobFromServer);\n            tsWorkJob.startinguser = workjobFromServer.startinguser;\n            tsWorkJob.batchJobStatus = workjobFromServer.batchJobStatus;\n            tsWorkJob.executionId = workjobFromServer.executionId;\n            tsWorkJob.params = workjobFromServer.params;\n            tsWorkJob.workJobType = workjobFromServer.workJobType;\n            tsWorkJob.resultData = workjobFromServer.resultData;\n            tsWorkJob.requestURI = workjobFromServer.requestURI;\n            tsWorkJob.execution =  this.parseBatchJobInformation(new TSBatchJobInformation(), workjobFromServer.execution);\n            return tsWorkJob;\n        }\n        return undefined;\n    }\n\n    private parseBatchJobInformation(testBatchJobInfo: TSBatchJobInformation, batchJobInfoFromServer: any): TSBatchJobInformation {\n        if (batchJobInfoFromServer) {\n            testBatchJobInfo.batchStatus = batchJobInfoFromServer.batchStatus;\n            testBatchJobInfo.createTime = batchJobInfoFromServer.createTime;\n            testBatchJobInfo.endTime = batchJobInfoFromServer.endTime;\n            testBatchJobInfo.executionId = batchJobInfoFromServer.executionId;\n            testBatchJobInfo.executionId = batchJobInfoFromServer.executionId;\n            testBatchJobInfo.jobName = batchJobInfoFromServer.jobName;\n            testBatchJobInfo.lastUpdatedTime = batchJobInfoFromServer.lastUpdatedTime;\n            testBatchJobInfo.startTime = batchJobInfoFromServer.startTime;\n            return testBatchJobInfo;\n        }\n        return undefined;\n    }\n\n    public parseMitteilung(tsMitteilung: TSMitteilung, mitteilungFromServer: any): TSMitteilung {\n        if (mitteilungFromServer) {\n            this.parseAbstractEntity(tsMitteilung, mitteilungFromServer);\n            tsMitteilung.fall = this.parseFall(new TSFall(), mitteilungFromServer.fall);\n            if (mitteilungFromServer.betreuung) {\n                tsMitteilung.betreuung = this.parseBetreuung(new TSBetreuung(), mitteilungFromServer.betreuung);\n            }\n            tsMitteilung.senderTyp = mitteilungFromServer.senderTyp;\n            tsMitteilung.empfaengerTyp = mitteilungFromServer.empfaengerTyp;\n            tsMitteilung.sender = this.parseUser(new TSUser(), mitteilungFromServer.sender);\n            tsMitteilung.empfaenger = this.parseUser(new TSUser(), mitteilungFromServer.empfaenger);\n            tsMitteilung.subject = mitteilungFromServer.subject;\n            tsMitteilung.message = mitteilungFromServer.message;\n            tsMitteilung.mitteilungStatus = mitteilungFromServer.mitteilungStatus;\n            tsMitteilung.sentDatum = DateUtil.localDateTimeToMoment(mitteilungFromServer.sentDatum);\n            return tsMitteilung;\n        }\n        return undefined;\n    }\n\n    public mitteilungToRestObject(restMitteilung: any, tsMitteilung: TSMitteilung): any {\n        if (tsMitteilung) {\n            this.abstractEntityToRestObject(restMitteilung, tsMitteilung);\n            restMitteilung.fall = this.fallToRestObject({}, tsMitteilung.fall);\n            if (tsMitteilung.betreuung) {\n                restMitteilung.betreuung = this.betreuungToRestObject({}, tsMitteilung.betreuung);\n            }\n            restMitteilung.senderTyp = tsMitteilung.senderTyp;\n            restMitteilung.empfaengerTyp = tsMitteilung.empfaengerTyp;\n            restMitteilung.sender = this.userToRestObject({}, tsMitteilung.sender);\n            restMitteilung.empfaenger = this.userToRestObject({}, tsMitteilung.empfaenger);\n            restMitteilung.subject = tsMitteilung.subject;\n            restMitteilung.message = tsMitteilung.message;\n            restMitteilung.mitteilungStatus = tsMitteilung.mitteilungStatus;\n            restMitteilung.sentDatum = DateUtil.momentToLocalDateTime(tsMitteilung.sentDatum);\n            return restMitteilung;\n        }\n        return undefined;\n    }\n\n    public parseMitteilungen(mitteilungen: any): Array<TSMitteilung> {\n        let mitteilungenList: Array<TSMitteilung> = [];\n        if (mitteilungen) {\n            for (let i = 0; i < mitteilungen.length; i++) {\n                if (this.isBetreuungsmitteilung(mitteilungen[i])) {\n                    mitteilungenList.push(this.parseBetreuungsmitteilung(new TSBetreuungsmitteilung(), mitteilungen[i]));\n\n                } else { // by default normal Mitteilung\n                    mitteilungenList.push(this.parseMitteilung(new TSMitteilung(), mitteilungen[i]));\n                }\n            }\n        }\n        return mitteilungenList;\n    }\n\n    public betreuungsmitteilungToRestObject(restBetreuungsmitteilung: any, tsBetreuungsmitteilung: TSBetreuungsmitteilung): any {\n        if (tsBetreuungsmitteilung) {\n            this.mitteilungToRestObject(restBetreuungsmitteilung, tsBetreuungsmitteilung);\n            restBetreuungsmitteilung.applied = tsBetreuungsmitteilung.applied;\n            if (tsBetreuungsmitteilung.betreuungspensen) {\n                restBetreuungsmitteilung.betreuungspensen = [];\n                tsBetreuungsmitteilung.betreuungspensen.forEach(betreuungspensum => {\n                    restBetreuungsmitteilung.betreuungspensen.push(\n                        this.betreuungsmitteilungPensumToRestObject({}, betreuungspensum));\n                });\n\n            }\n        }\n        return restBetreuungsmitteilung;\n    }\n\n    public parseBetreuungsmitteilung(tsBetreuungsmitteilung: TSBetreuungsmitteilung, betreuungsmitteilungFromServer: any): TSBetreuungsmitteilung {\n        if (betreuungsmitteilungFromServer) {\n            this.parseMitteilung(tsBetreuungsmitteilung, betreuungsmitteilungFromServer);\n            tsBetreuungsmitteilung.applied = betreuungsmitteilungFromServer.applied;\n            if (betreuungsmitteilungFromServer.betreuungspensen) {\n                tsBetreuungsmitteilung.betreuungspensen = [];\n                for (let i = 0; i < betreuungsmitteilungFromServer.betreuungspensen.length; i++) {\n                    tsBetreuungsmitteilung.betreuungspensen.push(\n                        this.parseBetreuungsmitteilungPensum(new TSBetreuungsmitteilungPensum(), betreuungsmitteilungFromServer.betreuungspensen[i]));\n                }\n\n            }\n        }\n        return tsBetreuungsmitteilung;\n    }\n\n    private isBetreuungsmitteilung(mitteilung: any): boolean {\n        return mitteilung.betreuungspensen !== undefined;\n    }\n\n    public parseZahlungsauftragList(data: any): TSZahlungsauftrag[] {\n        let zahlungsauftrag: TSZahlungsauftrag[] = [];\n        if (data) {\n            for (let i = 0; i < data.length; i++) {\n                zahlungsauftrag[i] = this.parseZahlungsauftrag(new TSZahlungsauftrag(), data[i]);\n            }\n        }\n        return zahlungsauftrag;\n    }\n\n    public parseZahlungsauftrag(tsZahlungsauftrag: TSZahlungsauftrag, zahlungsauftragFromServer: any): TSZahlungsauftrag {\n        if (zahlungsauftragFromServer) {\n            this.parseDateRangeEntity(tsZahlungsauftrag, zahlungsauftragFromServer);\n\n            tsZahlungsauftrag.status = zahlungsauftragFromServer.status;\n            tsZahlungsauftrag.beschrieb = zahlungsauftragFromServer.beschrieb;\n            tsZahlungsauftrag.datumFaellig = DateUtil.localDateToMoment(zahlungsauftragFromServer.datumFaellig);\n            tsZahlungsauftrag.datumGeneriert = DateUtil.localDateTimeToMoment(zahlungsauftragFromServer.datumGeneriert);\n            tsZahlungsauftrag.betragTotalAuftrag = zahlungsauftragFromServer.betragTotalAuftrag;\n            tsZahlungsauftrag.zahlungen = this.parseZahlungen(zahlungsauftragFromServer.zahlungen);\n\n            return tsZahlungsauftrag;\n        }\n        return undefined;\n    }\n\n    public parseZahlungen(data: any): TSZahlung[] {\n        let zahlungen: TSZahlung[] = [];\n        if (data) {\n            for (let i = 0; i < data.length; i++) {\n                zahlungen[i] = this.parseZahlung(new TSZahlung(), data[i]);\n            }\n        }\n        return zahlungen;\n    }\n\n    public parseZahlung(tsZahlung: TSZahlung, zahlungFromServer: any): TSZahlung {\n        if (zahlungFromServer) {\n            this.parseAbstractEntity(tsZahlung, zahlungFromServer);\n\n            tsZahlung.betragTotalZahlung = zahlungFromServer.betragTotalZahlung;\n            tsZahlung.institutionsName = zahlungFromServer.institutionsName;\n            tsZahlung.status = zahlungFromServer.status;\n\n            return tsZahlung;\n        }\n        return undefined;\n    }\n\n    public parseEWKResultat(ewkResultatTS: TSEWKResultat, ewkResultatFromServer: any) {\n        if (ewkResultatFromServer) {\n            ewkResultatTS.maxResultate = ewkResultatFromServer.maxResultate;\n            ewkResultatTS.anzahlResultate = ewkResultatFromServer.anzahlResultate;\n            ewkResultatTS.personen = this.parseEWKPersonList(ewkResultatFromServer.personen);\n            return ewkResultatTS;\n        }\n        return undefined;\n    }\n\n    private parseEWKPersonList(data: any): TSEWKPerson[] {\n        let personen: TSEWKPerson[] = [];\n        if (data) {\n            for (let i = 0; i < data.length; i++) {\n                personen[i] = this.parseEWKPerson(new TSEWKPerson(), data[i]);\n            }\n        }\n        return personen;\n    }\n\n    private parseEWKPerson(tsEWKPerson: TSEWKPerson, ewkPersonFromServer: any): TSEWKPerson {\n        if (ewkPersonFromServer) {\n            tsEWKPerson.personID = ewkPersonFromServer.personID;\n            tsEWKPerson.einwohnercodes = this.parseEWKEinwohnercodeList(ewkPersonFromServer.einwohnercodes);\n            tsEWKPerson.nachname = ewkPersonFromServer.nachname;\n            tsEWKPerson.ledigname = ewkPersonFromServer.ledigname;\n            tsEWKPerson.vorname = ewkPersonFromServer.vorname;\n            tsEWKPerson.rufname = ewkPersonFromServer.rufname;\n            tsEWKPerson.geburtsdatum = DateUtil.localDateToMoment(ewkPersonFromServer.geburtsdatum);\n            tsEWKPerson.zuzugsdatum = DateUtil.localDateToMoment(ewkPersonFromServer.zuzugsdatum);\n            tsEWKPerson.nationalitaet = ewkPersonFromServer.nationalitaet;\n            tsEWKPerson.zivilstand = ewkPersonFromServer.zivilstand;\n            tsEWKPerson.zivilstandTxt = ewkPersonFromServer.zivilstandTxt;\n            tsEWKPerson.zivilstandsdatum = DateUtil.localDateToMoment(ewkPersonFromServer.zivilstandsdatum);\n            tsEWKPerson.geschlecht = ewkPersonFromServer.geschlecht;\n            tsEWKPerson.bewilligungsart = ewkPersonFromServer.bewilligungsart;\n            tsEWKPerson.bewilligungsartTxt = ewkPersonFromServer.bewilligungsartTxt;\n            tsEWKPerson.bewilligungBis = DateUtil.localDateToMoment(ewkPersonFromServer.bewilligungBis);\n            tsEWKPerson.adressen = this.parseEWKAdresseList(ewkPersonFromServer.adressen);\n            tsEWKPerson.beziehungen = this.parseEWKBeziehungList(ewkPersonFromServer.beziehungen);\n            return tsEWKPerson;\n        }\n        return undefined;\n    }\n\n    private parseEWKEinwohnercodeList(data: any): TSEWKEinwohnercode[] {\n        let codes: TSEWKEinwohnercode[] = [];\n        if (data) {\n            for (let i = 0; i < data.length; i++) {\n                codes[i] = this.parseEWKEinwohnercode(new TSEWKEinwohnercode(), data[i]);\n            }\n        }\n        return codes;\n    }\n\n    private parseEWKEinwohnercode(tsEWKEinwohnercode: TSEWKEinwohnercode, ewkEinwohnercodeFromServer: any): TSEWKEinwohnercode {\n        if (ewkEinwohnercodeFromServer) {\n            tsEWKEinwohnercode.code = ewkEinwohnercodeFromServer.code;\n            tsEWKEinwohnercode.codeTxt = ewkEinwohnercodeFromServer.codeTxt;\n            tsEWKEinwohnercode.gueltigVon = DateUtil.localDateToMoment(ewkEinwohnercodeFromServer.gueltigVon);\n            tsEWKEinwohnercode.gueltigBis = DateUtil.localDateToMoment(ewkEinwohnercodeFromServer.gueltigBis);\n            return tsEWKEinwohnercode;\n        }\n        return undefined;\n    }\n\n    private parseEWKAdresseList(data: any): TSEWKAdresse[] {\n        let adressen: TSEWKAdresse[] = [];\n        if (data) {\n            for (let i = 0; i < data.length; i++) {\n                adressen[i] = this.parseEWKAdresse(new TSEWKAdresse(), data[i]);\n            }\n        }\n        return adressen;\n    }\n\n    private parseEWKAdresse(tsEWKAdresse: TSEWKAdresse, ewkAdresseFromServer: any): TSEWKAdresse {\n        if (ewkAdresseFromServer) {\n            tsEWKAdresse.adresstyp = ewkAdresseFromServer.adresstyp;\n            tsEWKAdresse.adresstypTxt = ewkAdresseFromServer.adresstypTxt;\n            tsEWKAdresse.gueltigVon = DateUtil.localDateToMoment(ewkAdresseFromServer.gueltigVon);\n            tsEWKAdresse.gueltigBis = DateUtil.localDateToMoment(ewkAdresseFromServer.gueltigBis);\n            tsEWKAdresse.coName = ewkAdresseFromServer.coName;\n            tsEWKAdresse.postfach = ewkAdresseFromServer.postfach;\n            tsEWKAdresse.bfSGemeinde = ewkAdresseFromServer.bfSGemeinde;\n            tsEWKAdresse.strasse = ewkAdresseFromServer.strasse;\n            tsEWKAdresse.hausnummer = ewkAdresseFromServer.hausnummer;\n            tsEWKAdresse.postleitzahl = ewkAdresseFromServer.postleitzahl;\n            tsEWKAdresse.ort = ewkAdresseFromServer.ort;\n            tsEWKAdresse.kanton = ewkAdresseFromServer.kanton;\n            tsEWKAdresse.land = ewkAdresseFromServer.land;\n            return tsEWKAdresse;\n        }\n        return undefined;\n    }\n\n    private parseEWKBeziehungList(data: any): TSEWKBeziehung[] {\n        let beziehungen: TSEWKBeziehung[] = [];\n        if (data) {\n            for (let i = 0; i < data.length; i++) {\n                beziehungen[i] = this.parseEWKBeziehung(new TSEWKBeziehung(), data[i]);\n            }\n        }\n        return beziehungen;\n    }\n\n    private parseEWKBeziehung(tsEWKBeziehung: TSEWKBeziehung, ewkBeziehungFromServer: any): TSEWKBeziehung {\n        if (ewkBeziehungFromServer) {\n            tsEWKBeziehung.beziehungstyp = ewkBeziehungFromServer.beziehungstyp;\n            tsEWKBeziehung.beziehungstypTxt = ewkBeziehungFromServer.beziehungstypTxt;\n            tsEWKBeziehung.personID = ewkBeziehungFromServer.personID;\n            tsEWKBeziehung.nachname = ewkBeziehungFromServer.nachname;\n            tsEWKBeziehung.ledigname = ewkBeziehungFromServer.ledigname;\n            tsEWKBeziehung.vorname = ewkBeziehungFromServer.vorname;\n            tsEWKBeziehung.rufname = ewkBeziehungFromServer.rufname;\n            tsEWKBeziehung.geburtsdatum = DateUtil.localDateToMoment(ewkBeziehungFromServer.geburtsdatum);\n            tsEWKBeziehung.adresse = this.parseEWKAdresse(new TSEWKAdresse(), ewkBeziehungFromServer.adresse);\n            return tsEWKBeziehung;\n        }\n        return undefined;\n    }\n\n    public parseModuleTagesschuleArray(data: Array<any>): TSModulTagesschule[] {\n        let moduleTagesschule: TSModulTagesschule[] = [];\n        if (data && Array.isArray(data)) {\n            for (let i = 0; i < data.length; i++) {\n                moduleTagesschule[i] = this.parseModulTagesschule(new TSModulTagesschule(), data[i]);\n            }\n        } else {\n            moduleTagesschule[0] = this.parseModulTagesschule(new TSModulTagesschule(), data);\n        }\n        return moduleTagesschule;\n    }\n\n    private parseModulTagesschule(modulTagesschuleTS: TSModulTagesschule, modulFromServer: any): TSModulTagesschule {\n        if (modulFromServer) {\n            this.parseAbstractEntity(modulTagesschuleTS, modulFromServer);\n            modulTagesschuleTS.modulTagesschuleName = modulFromServer.modulTagesschuleName;\n            modulTagesschuleTS.wochentag = modulFromServer.wochentag;\n            modulTagesschuleTS.zeitVon = DateUtil.localDateTimeToMoment(modulFromServer.zeitVon);\n            modulTagesschuleTS.zeitBis = DateUtil.localDateTimeToMoment(modulFromServer.zeitBis);\n            return modulTagesschuleTS;\n        }\n        return undefined;\n    }\n\n    private moduleTagesschuleArrayToRestObject(moduleTagesschule: Array<TSModulTagesschule>): any[] {\n        let list: any[] = [];\n        if (moduleTagesschule) {\n            for (let i = 0; i < moduleTagesschule.length; i++) {\n                list[i] = this.modulTagesschuleToRestObject({}, moduleTagesschule[i]);\n            }\n        }\n        return list;\n    }\n\n    private modulTagesschuleToRestObject(restModul: any, modulTagesschuleTS: TSModulTagesschule): any {\n        if (modulTagesschuleTS) {\n            this.abstractEntityToRestObject(restModul, modulTagesschuleTS);\n            restModul.modulTagesschuleName = modulTagesschuleTS.modulTagesschuleName;\n            restModul.wochentag = modulTagesschuleTS.wochentag;\n            restModul.zeitVon = DateUtil.momentToLocalDateTime(modulTagesschuleTS.zeitVon);\n            restModul.zeitBis = DateUtil.momentToLocalDateTime(modulTagesschuleTS.zeitBis);\n            return restModul;\n        }\n        return undefined;\n    }\n\n    private parseBelegungTagesschule(belegungTS: TSBelegungTagesschule, belegungFromServer: any): TSBelegungTagesschule {\n        if (belegungFromServer) {\n            this.parseAbstractEntity(belegungTS, belegungFromServer);\n            belegungTS.moduleTagesschule = this.parseModuleTagesschuleArray(belegungFromServer.moduleTagesschule);\n            belegungTS.eintrittsdatum = DateUtil.localDateToMoment(belegungFromServer.eintrittsdatum);\n            return belegungTS;\n        }\n        return undefined;\n    }\n\n    private belegungTagesschuleToRestObject(restBelegung: any, belegungTS: TSBelegungTagesschule): any {\n        if (belegungTS) {\n            this.abstractEntityToRestObject(restBelegung, belegungTS);\n            restBelegung.moduleTagesschule = this.moduleTagesschuleArrayToRestObject(belegungTS.moduleTagesschule);\n            restBelegung.eintrittsdatum = DateUtil.momentToLocalDate(belegungTS.eintrittsdatum);\n            return restBelegung;\n        }\n        return undefined;\n    }\n\n    public parseFerieninselStammdatenList(data: any): TSFerieninselStammdaten[] {\n        let ferieninselStammdatenList: TSFerieninselStammdaten[] = [];\n        if (data && Array.isArray(data)) {\n            for (let i = 0; i < data.length; i++) {\n                ferieninselStammdatenList[i] = this.parseFerieninselStammdaten(new TSFerieninselStammdaten(), data[i]);\n            }\n        } else {\n            ferieninselStammdatenList[0] = this.parseFerieninselStammdaten(new TSFerieninselStammdaten(), data);\n        }\n        return ferieninselStammdatenList;\n    }\n\n    public parseFerieninselStammdaten(ferieninselStammdatenTS: TSFerieninselStammdaten, receivedFerieninselStammdaten: any): TSFerieninselStammdaten {\n        if (receivedFerieninselStammdaten) {\n            this.parseAbstractEntity(ferieninselStammdatenTS, receivedFerieninselStammdaten);\n            ferieninselStammdatenTS.ferienname = receivedFerieninselStammdaten.ferienname;\n            ferieninselStammdatenTS.anmeldeschluss = DateUtil.localDateToMoment(receivedFerieninselStammdaten.anmeldeschluss);\n            ferieninselStammdatenTS.gesuchsperiode = this.parseGesuchsperiode(new TSGesuchsperiode(), receivedFerieninselStammdaten.gesuchsperiode);\n            if (receivedFerieninselStammdaten.zeitraumList[0]) {\n                let firstZeitraum: TSFerieninselZeitraum = new TSFerieninselZeitraum();\n                this.parseDateRangeEntity(firstZeitraum, receivedFerieninselStammdaten.zeitraumList[0]);\n                ferieninselStammdatenTS.zeitraum = firstZeitraum;\n            }\n            ferieninselStammdatenTS.zeitraumList = [];\n            for (let i = 1; i < receivedFerieninselStammdaten.zeitraumList.length; i++) {\n                let zeitraum: TSFerieninselZeitraum = new TSFerieninselZeitraum();\n                this.parseDateRangeEntity(zeitraum, receivedFerieninselStammdaten.zeitraumList[i]);\n                ferieninselStammdatenTS.zeitraumList.push(zeitraum);\n            }\n            if (receivedFerieninselStammdaten.potenzielleFerieninselTageFuerBelegung) {\n                ferieninselStammdatenTS.potenzielleFerieninselTageFuerBelegung = this.parseBelegungFerieninselTagList(receivedFerieninselStammdaten.potenzielleFerieninselTageFuerBelegung);\n            }\n            return ferieninselStammdatenTS;\n        }\n        return undefined;\n    }\n\n    public ferieninselStammdatenToRestObject(restFerieninselStammdaten: any, ferieninselStammdatenTS: TSFerieninselStammdaten): any {\n        if (ferieninselStammdatenTS) {\n            this.abstractEntityToRestObject(restFerieninselStammdaten, ferieninselStammdatenTS);\n            restFerieninselStammdaten.ferienname = ferieninselStammdatenTS.ferienname;\n            restFerieninselStammdaten.anmeldeschluss = DateUtil.momentToLocalDate(ferieninselStammdatenTS.anmeldeschluss);\n            restFerieninselStammdaten.gesuchsperiode = this.gesuchsperiodeToRestObject({}, ferieninselStammdatenTS.gesuchsperiode);\n            if (ferieninselStammdatenTS.zeitraum) {\n                let firstZeitraum: any = {};\n                this.abstractDateRangeEntityToRestObject(firstZeitraum, ferieninselStammdatenTS.zeitraum);\n                restFerieninselStammdaten.zeitraumList = [];\n                restFerieninselStammdaten.zeitraumList[0] = firstZeitraum;\n            }\n            if (ferieninselStammdatenTS.zeitraumList) {\n                for (let i = 0; i < ferieninselStammdatenTS.zeitraumList.length; i++) {\n                    let zeitraum: any = {};\n                    this.abstractDateRangeEntityToRestObject(zeitraum, ferieninselStammdatenTS.zeitraumList[i]);\n                    restFerieninselStammdaten.zeitraumList[i + 1] = zeitraum;\n                }\n            }\n            return restFerieninselStammdaten;\n        }\n        return undefined;\n    }\n\n    public parseBelegungFerieninselList(data: any): TSBelegungFerieninsel[] {\n        let belegungFerieninselList: TSBelegungFerieninsel[] = [];\n        if (data && Array.isArray(data)) {\n            for (let i = 0; i < data.length; i++) {\n                belegungFerieninselList[i] = this.parseBelegungFerieninsel(new TSBelegungFerieninsel(), data[i]);\n            }\n        } else {\n            belegungFerieninselList[0] = this.parseBelegungFerieninsel(new TSBelegungFerieninsel(), data);\n        }\n        return belegungFerieninselList;\n    }\n\n    public parseBelegungFerieninsel(belegungFerieninselTS: TSBelegungFerieninsel, receivedBelegungFerieninsel: any): TSBelegungFerieninsel {\n        if (receivedBelegungFerieninsel) {\n            this.parseAbstractEntity(belegungFerieninselTS, receivedBelegungFerieninsel);\n            belegungFerieninselTS.ferienname = receivedBelegungFerieninsel.ferienname;\n            belegungFerieninselTS.tage = this.parseBelegungFerieninselTagList(receivedBelegungFerieninsel.tage);\n            return belegungFerieninselTS;\n        }\n        return undefined;\n    }\n\n    private parseBelegungFerieninselTagList(data: any): TSBelegungFerieninselTag[] {\n        let belegungFerieninselTagList: TSBelegungFerieninselTag[] = [];\n        if (data && Array.isArray(data)) {\n            for (let i = 0; i < data.length; i++) {\n                belegungFerieninselTagList[i] = this.parseBelegungFerieninselTag(new TSBelegungFerieninselTag(), data[i]);\n            }\n        } else {\n            belegungFerieninselTagList[0] = this.parseBelegungFerieninselTag(new TSBelegungFerieninselTag(), data);\n        }\n        return belegungFerieninselTagList;\n    }\n\n    private parseBelegungFerieninselTag(belegungFerieninselTagTS: TSBelegungFerieninselTag, receivedBelegungFerieninselTag: any): TSBelegungFerieninselTag {\n        if (receivedBelegungFerieninselTag) {\n            this.parseAbstractEntity(belegungFerieninselTagTS, receivedBelegungFerieninselTag);\n            belegungFerieninselTagTS.tag = DateUtil.localDateToMoment(receivedBelegungFerieninselTag.tag);\n            return belegungFerieninselTagTS;\n        }\n        return undefined;\n    }\n\n    public belegungFerieninselToRestObject(restBelegungFerieninsel: any, belegungFerieninselTS: TSBelegungFerieninsel): any {\n        if (belegungFerieninselTS) {\n            this.abstractEntityToRestObject(restBelegungFerieninsel, belegungFerieninselTS);\n            restBelegungFerieninsel.ferienname = belegungFerieninselTS.ferienname;\n            restBelegungFerieninsel.tage = [];\n            if (belegungFerieninselTS.tage) {\n                for (let i = 0; i < belegungFerieninselTS.tage.length; i++) {\n                    let tagRest: any = {};\n                    this.abstractEntityToRestObject(tagRest, belegungFerieninselTS.tage[i]);\n                    tagRest.tag = DateUtil.momentToLocalDate(belegungFerieninselTS.tage[i].tag);\n                    restBelegungFerieninsel.tage.push(tagRest);\n                }\n            }\n            return restBelegungFerieninsel;\n        }\n        return undefined;\n    }\n}\n"]}]}