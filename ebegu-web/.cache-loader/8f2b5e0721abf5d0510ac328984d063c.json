{"remainingRequest":"/home/imanol/projects/ebegu/ebegu-web/node_modules/thread-loader/dist/cjs.js??ref--0-1!/home/imanol/projects/ebegu/ebegu-web/node_modules/ts-loader/index.js??ref--0-2!/home/imanol/projects/ebegu/ebegu-web/src/core/component/dv-antrag-list/dv-antrag-list.ts","cacheIdentifier":"cache-loader:1.1.0 test","dependencies":[{"path":"/home/imanol/projects/ebegu/ebegu-web/src/core/component/dv-antrag-list/dv-antrag-list.ts","mtime":1518612532786},{"path":"/home/imanol/projects/ebegu/ebegu-web/node_modules/cache-loader/dist/cjs.js","mtime":1507514019000},{"path":"/home/imanol/projects/ebegu/ebegu-web/node_modules/thread-loader/dist/cjs.js","mtime":1507523420000},{"path":"/home/imanol/projects/ebegu/ebegu-web/node_modules/ts-loader/index.js","mtime":1508488471000}],"contextDependencies":[],"result":["\"use strict\";\n/*\n * Ki-Tax: System for the management of external childcare subsidies\n * Copyright (C) 2017 City of Bern Switzerland\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar TSAntragTyp_1 = require(\"../../../models/enums/TSAntragTyp\");\nvar TSAntragStatus_1 = require(\"../../../models/enums/TSAntragStatus\");\nvar TSBetreuungsangebotTyp_1 = require(\"../../../models/enums/TSBetreuungsangebotTyp\");\nvar TSRoleUtil_1 = require(\"../../../utils/TSRoleUtil\");\nvar template = require('./dv-antrag-list.html');\nrequire('./dv-antrag-list.less');\nvar DVAntragListConfig = /** @class */ (function () {\n    function DVAntragListConfig() {\n        this.transclude = false;\n        this.bindings = {\n            onRemove: '&',\n            onAdd: '&',\n            onEdit: '&',\n            onFilterChange: '&',\n            totalResultCount: '<',\n            tableId: '@',\n            tableTitle: '@',\n            actionVisible: '@',\n            addButtonVisible: '@',\n            addButtonText: '@',\n            pendenz: '='\n        };\n        this.template = template;\n        this.controller = DVAntragListController;\n        this.controllerAs = 'vm';\n    }\n    return DVAntragListConfig;\n}());\nexports.DVAntragListConfig = DVAntragListConfig;\nvar DVAntragListController = /** @class */ (function () {\n    /* @ngInject */\n    function DVAntragListController(ebeguUtil, $filter, $log, institutionRS, gesuchsperiodeRS, CONSTANTS, authServiceRS, $window) {\n        var _this = this;\n        this.ebeguUtil = ebeguUtil;\n        this.$filter = $filter;\n        this.$log = $log;\n        this.institutionRS = institutionRS;\n        this.gesuchsperiodeRS = gesuchsperiodeRS;\n        this.CONSTANTS = CONSTANTS;\n        this.authServiceRS = authServiceRS;\n        this.$window = $window;\n        this.displayedCollection = []; //Liste die im Gui angezeigt wird\n        this.addButtonVisible = 'false';\n        this.callServer = function (tableFilterState) {\n            var pagination = tableFilterState.pagination;\n            _this.pagination = pagination;\n            // this.displaydAntraege = this.antraege;\n            if (_this.onFilterChange && angular.isFunction(_this.onFilterChange)) {\n                _this.onFilterChange({ tableState: tableFilterState }).then(function (result) {\n                    // this.pagination.totalItemCount = result.totalResultSize;\n                    if (result) {\n                        pagination.totalItemCount = result.totalResultSize;\n                        pagination.numberOfPages = Math.ceil(result.totalResultSize / pagination.number);\n                        _this.displayedCollection = [].concat(result.antragDTOs);\n                    }\n                });\n            }\n            else {\n                _this.$log.info('no callback function spcified for filtering');\n            }\n        };\n        this.initViewModel();\n        this.TSRoleUtil = TSRoleUtil_1.TSRoleUtil;\n    }\n    DVAntragListController.prototype.initViewModel = function () {\n        //statt diese Listen zu laden koenne man sie auch von aussen setzen\n        this.updateInstitutionenList();\n        this.updateGesuchsperiodenList();\n    };\n    DVAntragListController.prototype.$onInit = function () {\n        if (!this.addButtonText) {\n            this.addButtonText = 'add item';\n        }\n        if (this.pendenz === null || this.pendenz === undefined) {\n            this.pendenz = false;\n        }\n        if (this.addButtonVisible === undefined) {\n            this.addButtonVisible = 'false';\n        }\n    };\n    DVAntragListController.prototype.updateInstitutionenList = function () {\n        var _this = this;\n        this.institutionRS.getInstitutionenForCurrentBenutzer().then(function (response) {\n            _this.institutionenList = angular.copy(response);\n        });\n    };\n    DVAntragListController.prototype.updateGesuchsperiodenList = function () {\n        var _this = this;\n        this.gesuchsperiodeRS.getAllGesuchsperioden().then(function (response) {\n            _this.gesuchsperiodenList = [];\n            response.forEach(function (gesuchsperiode) {\n                _this.gesuchsperiodenList.push(gesuchsperiode.gesuchsperiodeString);\n            });\n        });\n    };\n    DVAntragListController.prototype.removeClicked = function (antragToRemove) {\n        this.onRemove({ antrag: antragToRemove });\n    };\n    DVAntragListController.prototype.editClicked = function (antragToEdit, event) {\n        this.onEdit({ antrag: antragToEdit, event: event });\n    };\n    DVAntragListController.prototype.addClicked = function () {\n        this.onAdd();\n    };\n    DVAntragListController.prototype.getAntragTypen = function () {\n        return TSAntragTyp_1.getNormalizedTSAntragTypValues();\n    };\n    /**\n     * Alle TSAntragStatus fuer das Filterdropdown\n     * @returns {Array<TSAntragStatus>}\n     */\n    DVAntragListController.prototype.getAntragStatus = function () {\n        if (this.pendenz) {\n            return TSAntragStatus_1.getTSAntragStatusPendenzValues(this.authServiceRS.getPrincipalRole());\n        }\n        else {\n            return TSAntragStatus_1.getTSAntragStatusValuesByRole(this.authServiceRS.getPrincipalRole());\n        }\n    };\n    /**\n     * Alle Betreuungsangebot typen fuer das Filterdropdown\n     * @returns {Array<TSBetreuungsangebotTyp>}\n     */\n    DVAntragListController.prototype.getBetreuungsangebotTypen = function () {\n        return TSBetreuungsangebotTyp_1.getTSBetreuungsangebotTypValues();\n    };\n    /**\n     * Fallnummer muss 6-stellig dargestellt werden. Deshalb muessen so viele 0s am Anfang hinzugefuegt werden\n     * bis die Fallnummer ein 6-stelliges String ist\n     * @param fallnummer\n     */\n    DVAntragListController.prototype.addZerosToFallnummer = function (fallnummer) {\n        return this.ebeguUtil.addZerosToNumber(fallnummer, this.CONSTANTS.FALLNUMMER_LENGTH);\n    };\n    DVAntragListController.prototype.translateBetreuungsangebotTypList = function (betreuungsangebotTypList) {\n        var result = '';\n        if (betreuungsangebotTypList) {\n            var prefix = '';\n            if (betreuungsangebotTypList && Array.isArray(betreuungsangebotTypList)) {\n                for (var i = 0; i < betreuungsangebotTypList.length; i++) {\n                    var tsBetreuungsangebotTyp = TSBetreuungsangebotTyp_1.TSBetreuungsangebotTyp[betreuungsangebotTypList[i]];\n                    result = result + prefix + this.$filter('translate')(tsBetreuungsangebotTyp).toString();\n                    prefix = ', ';\n                }\n            }\n        }\n        return result;\n    };\n    DVAntragListController.prototype.isAddButtonVisible = function () {\n        return this.addButtonVisible === 'true';\n    };\n    DVAntragListController.prototype.isActionsVisible = function () {\n        return this.actionVisible === 'true';\n    };\n    /**\n     * Provided there is a row with id antraegeHeadRow it will take this row to check how many\n     * columns there are. Therefore this row cannot have any colspan inside any cell and any other\n     * children but td or th\n     */\n    DVAntragListController.prototype.getColumnsNumber = function () {\n        var element = this.$window.document.getElementById('antraegeHeadRow');\n        return element.childElementCount;\n    };\n    DVAntragListController.$inject = ['EbeguUtil', '$filter', '$log', 'InstitutionRS', 'GesuchsperiodeRS', 'CONSTANTS', 'AuthServiceRS',\n        '$window'];\n    return DVAntragListController;\n}());\nexports.DVAntragListController = DVAntragListController;\n",{"version":3,"file":"/home/imanol/projects/ebegu/ebegu-web/src/core/component/dv-antrag-list/dv-antrag-list.ts","sourceRoot":"","sources":["/home/imanol/projects/ebegu/ebegu-web/src/core/component/dv-antrag-list/dv-antrag-list.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Ki-Tax: System for the management of external childcare subsidies\n * Copyright (C) 2017 City of Bern Switzerland\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport {IComponentOptions, IFilterService, ILogService, IPromise} from 'angular';\nimport TSAbstractAntragEntity from '../../../models/TSAbstractAntragEntity';\nimport {getNormalizedTSAntragTypValues, TSAntragTyp} from '../../../models/enums/TSAntragTyp';\nimport {getTSAntragStatusPendenzValues, getTSAntragStatusValuesByRole, TSAntragStatus} from '../../../models/enums/TSAntragStatus';\nimport {getTSBetreuungsangebotTypValues, TSBetreuungsangebotTyp} from '../../../models/enums/TSBetreuungsangebotTyp';\nimport TSInstitution from '../../../models/TSInstitution';\nimport TSAntragDTO from '../../../models/TSAntragDTO';\nimport TSGesuchsperiode from '../../../models/TSGesuchsperiode';\nimport EbeguUtil from '../../../utils/EbeguUtil';\nimport TSAntragSearchresultDTO from '../../../models/TSAntragSearchresultDTO';\nimport {InstitutionRS} from '../../service/institutionRS.rest';\nimport GesuchsperiodeRS from '../../service/gesuchsperiodeRS.rest';\nimport {TSRoleUtil} from '../../../utils/TSRoleUtil';\nimport AuthServiceRS from '../../../authentication/service/AuthServiceRS.rest';\nimport TSUser from '../../../models/TSUser';\n\nlet template = require('./dv-antrag-list.html');\nrequire('./dv-antrag-list.less');\n\nexport class DVAntragListConfig implements IComponentOptions {\n    transclude = false;\n\n    bindings: any = {\n        onRemove: '&',\n        onAdd: '&',\n        onEdit: '&',\n        onFilterChange: '&',\n        totalResultCount: '<',\n        tableId: '@',\n        tableTitle: '@',\n        actionVisible: '@',\n        addButtonVisible: '@',\n        addButtonText: '@',\n        pendenz: '='\n    };\n    template = template;\n    controller = DVAntragListController;\n    controllerAs = 'vm';\n}\n\nexport class DVAntragListController {\n\n    totalResultCount: number;\n    displayedCollection: Array<TSAntragDTO> = []; //Liste die im Gui angezeigt wird\n    pagination: any;\n    gesuchsperiodenList: Array<string>;\n    institutionenList: Array<TSInstitution>;\n\n    selectedBetreuungsangebotTyp: string;\n    selectedAntragTyp: string;\n    selectedAntragStatus: string;\n    selectedInstitution: TSInstitution;\n    selectedGesuchsperiode: string;\n    selectedFallNummer: string;\n    selectedFamilienName: string;\n    selectedKinder: string;\n    selectedAenderungsdatum: string;\n    selectedEingangsdatum: string;\n    selectedEingangsdatumSTV: string;\n    selectedVerantwortlicher: TSUser;\n    selectedVerantwortlicherSCH: TSUser;\n    selectedDokumenteHochgeladen: string;\n    pendenz: boolean;\n\n    tableId: string;\n    tableTitle: string;\n    actionVisible: string;\n\n    addButtonText: string;\n    addButtonVisible: string = 'false';\n    onRemove: (pensumToRemove: any) => void;\n    onFilterChange: (changedTableState: any) => IPromise<any>;\n    onEdit: (pensumToEdit: any) => void;\n    onAdd: () => void;\n    TSRoleUtil: any;\n\n    static $inject: any[] = ['EbeguUtil', '$filter', '$log', 'InstitutionRS', 'GesuchsperiodeRS', 'CONSTANTS', 'AuthServiceRS',\n        '$window'];\n    /* @ngInject */\n    constructor(private ebeguUtil: EbeguUtil, private $filter: IFilterService, private $log: ILogService,\n                private institutionRS: InstitutionRS, private gesuchsperiodeRS: GesuchsperiodeRS,\n                private CONSTANTS: any, private authServiceRS: AuthServiceRS, private $window: ng.IWindowService) {\n\n        this.initViewModel();\n        this.TSRoleUtil = TSRoleUtil;\n    }\n\n    private initViewModel() {\n        //statt diese Listen zu laden koenne man sie auch von aussen setzen\n        this.updateInstitutionenList();\n        this.updateGesuchsperiodenList();\n    }\n\n    $onInit() {\n        if (!this.addButtonText) {\n            this.addButtonText = 'add item';\n        }\n        if (this.pendenz === null || this.pendenz === undefined) {\n            this.pendenz = false;\n        }\n        if (this.addButtonVisible === undefined) {\n            this.addButtonVisible = 'false';\n        }\n    }\n\n    public updateInstitutionenList(): void {\n        this.institutionRS.getInstitutionenForCurrentBenutzer().then((response: any) => {\n            this.institutionenList = angular.copy(response);\n        });\n    }\n\n    public updateGesuchsperiodenList(): void {\n        this.gesuchsperiodeRS.getAllGesuchsperioden().then((response: any) => {\n            this.gesuchsperiodenList = [];\n            response.forEach((gesuchsperiode: TSGesuchsperiode) => {\n                this.gesuchsperiodenList.push(gesuchsperiode.gesuchsperiodeString);\n            });\n        });\n    }\n\n    removeClicked(antragToRemove: TSAbstractAntragEntity) {\n        this.onRemove({antrag: antragToRemove});\n    }\n\n    editClicked(antragToEdit: any, event: any) {\n        this.onEdit({antrag: antragToEdit, event: event});\n    }\n\n    addClicked() {\n        this.onAdd();\n    }\n\n    private callServer = (tableFilterState: any) => {\n        let pagination = tableFilterState.pagination;\n        this.pagination = pagination;\n\n        // this.displaydAntraege = this.antraege;\n\n        if (this.onFilterChange && angular.isFunction(this.onFilterChange)) {\n            this.onFilterChange({tableState: tableFilterState}).then((result: TSAntragSearchresultDTO) => {\n                // this.pagination.totalItemCount = result.totalResultSize;\n                if (result) {\n                    pagination.totalItemCount = result.totalResultSize;\n                    pagination.numberOfPages = Math.ceil(result.totalResultSize / pagination.number);\n                    this.displayedCollection = [].concat(result.antragDTOs);\n                }\n            });\n        } else {\n            this.$log.info('no callback function spcified for filtering');\n        }\n    }\n\n    public getAntragTypen(): Array<TSAntragTyp> {\n        return getNormalizedTSAntragTypValues();\n    }\n\n    /**\n     * Alle TSAntragStatus fuer das Filterdropdown\n     * @returns {Array<TSAntragStatus>}\n     */\n    public getAntragStatus(): Array<TSAntragStatus> {\n        if (this.pendenz) {\n            return getTSAntragStatusPendenzValues(this.authServiceRS.getPrincipalRole());\n        } else {\n            return getTSAntragStatusValuesByRole(this.authServiceRS.getPrincipalRole());\n        }\n    }\n\n    /**\n     * Alle Betreuungsangebot typen fuer das Filterdropdown\n     * @returns {Array<TSBetreuungsangebotTyp>}\n     */\n    public getBetreuungsangebotTypen(): Array<TSBetreuungsangebotTyp> {\n        return getTSBetreuungsangebotTypValues();\n    }\n\n    /**\n     * Fallnummer muss 6-stellig dargestellt werden. Deshalb muessen so viele 0s am Anfang hinzugefuegt werden\n     * bis die Fallnummer ein 6-stelliges String ist\n     * @param fallnummer\n     */\n    public addZerosToFallnummer(fallnummer: number): string {\n        return this.ebeguUtil.addZerosToNumber(fallnummer, this.CONSTANTS.FALLNUMMER_LENGTH);\n    }\n\n    public translateBetreuungsangebotTypList(betreuungsangebotTypList: Array<TSBetreuungsangebotTyp>): string {\n        let result: string = '';\n        if (betreuungsangebotTypList) {\n            let prefix: string = '';\n            if (betreuungsangebotTypList && Array.isArray(betreuungsangebotTypList)) {\n                for (let i = 0; i < betreuungsangebotTypList.length; i++) {\n                    let tsBetreuungsangebotTyp = TSBetreuungsangebotTyp[betreuungsangebotTypList[i]];\n                    result = result + prefix + this.$filter('translate')(tsBetreuungsangebotTyp).toString();\n                    prefix = ', ';\n                }\n            }\n        }\n        return result;\n    }\n\n    public isAddButtonVisible(): boolean {\n        return this.addButtonVisible === 'true';\n    }\n\n    public isActionsVisible() {\n        return this.actionVisible === 'true';\n    }\n\n    /**\n     * Provided there is a row with id antraegeHeadRow it will take this row to check how many\n     * columns there are. Therefore this row cannot have any colspan inside any cell and any other\n     * children but td or th\n     */\n    public getColumnsNumber(): number {\n        let element = this.$window.document.getElementById('antraegeHeadRow');\n        return element.childElementCount;\n    }\n}\n\n\n\n"]}]}