{"remainingRequest":"/home/imanol/projects/ebegu/ebegu-web/node_modules/thread-loader/dist/cjs.js??ref--0-1!/home/imanol/projects/ebegu/ebegu-web/node_modules/ts-loader/index.js??ref--0-2!/home/imanol/projects/ebegu/ebegu-web/src/gesuch/service/globalCacheService.ts","cacheIdentifier":"cache-loader:1.1.0 test","dependencies":[{"path":"/home/imanol/projects/ebegu/ebegu-web/src/gesuch/service/globalCacheService.ts","mtime":1512484412023},{"path":"/home/imanol/projects/ebegu/ebegu-web/node_modules/cache-loader/dist/cjs.js","mtime":1507514019000},{"path":"/home/imanol/projects/ebegu/ebegu-web/node_modules/thread-loader/dist/cjs.js","mtime":1507523420000},{"path":"/home/imanol/projects/ebegu/ebegu-web/node_modules/ts-loader/index.js","mtime":1508488471000}],"contextDependencies":[],"result":["\"use strict\";\n/*\n * Ki-Tax: System for the management of external childcare subsidies\n * Copyright (C) 2017 City of Bern Switzerland\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar TSCacheTyp_1 = require(\"../../models/enums/TSCacheTyp\");\n/**\n * Class to store cache Global\n */\nvar GlobalCacheService = /** @class */ (function () {\n    function GlobalCacheService($cacheFactory) {\n        this.$cacheFactory = $cacheFactory;\n        for (var _i = 0, _a = TSCacheTyp_1.getTSCacheTypValues(); _i < _a.length; _i++) {\n            var cache = _a[_i];\n            $cacheFactory(TSCacheTyp_1.TSCacheTyp[cache]);\n        }\n    }\n    GlobalCacheService.prototype.getCache = function (cacheType) {\n        return this.$cacheFactory.get(TSCacheTyp_1.TSCacheTyp[cacheType]);\n    };\n    GlobalCacheService.$inject = ['$cacheFactory'];\n    return GlobalCacheService;\n}());\nexports.default = GlobalCacheService;\n",{"version":3,"file":"/home/imanol/projects/ebegu/ebegu-web/src/gesuch/service/globalCacheService.ts","sourceRoot":"","sources":["/home/imanol/projects/ebegu/ebegu-web/src/gesuch/service/globalCacheService.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;GAaG;;AAIH,4DAA8E;AAE9E;;GAEG;AACH;IAII,4BAAoB,aAAmC;QAAnC,kBAAa,GAAb,aAAa,CAAsB;QACnD,GAAG,CAAC,CAAc,UAAqB,EAArB,KAAA,gCAAmB,EAAE,EAArB,cAAqB,EAArB,IAAqB;YAAlC,IAAI,KAAK,SAAA;YACV,aAAa,CAAC,uBAAU,CAAC,KAAK,CAAC,CAAC,CAAC;SACpC;IACL,CAAC;IAED,qCAAQ,GAAR,UAAS,SAAqB;QAC1B,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,uBAAU,CAAC,SAAS,CAAC,CAAC,CAAC;IACzD,CAAC;IAVM,0BAAO,GAAG,CAAC,eAAe,CAAC,CAAC;IAYvC,yBAAC;CAAA,AAdD,IAcC;kBAdoB,kBAAkB","sourcesContent":["/*\n * Ki-Tax: System for the management of external childcare subsidies\n * Copyright (C) 2017 City of Bern Switzerland\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport ICacheFactoryService = angular.ICacheFactoryService;\nimport ICacheObject = angular.ICacheObject;\nimport {getTSCacheTypValues, TSCacheTyp} from '../../models/enums/TSCacheTyp';\n\n/**\n * Class to store cache Global\n */\nexport default class GlobalCacheService {\n\n    static $inject = ['$cacheFactory'];\n\n    constructor(private $cacheFactory: ICacheFactoryService) {\n        for (let cache of getTSCacheTypValues()) {\n            $cacheFactory(TSCacheTyp[cache]);\n        }\n    }\n\n    getCache(cacheType: TSCacheTyp): ICacheObject {\n        return this.$cacheFactory.get(TSCacheTyp[cacheType]);\n    }\n\n}\n"]}]}