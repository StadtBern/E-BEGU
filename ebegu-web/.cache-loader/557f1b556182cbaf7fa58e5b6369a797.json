{"remainingRequest":"/home/imanol/projects/ebegu/ebegu-web/node_modules/thread-loader/dist/cjs.js??ref--0-1!/home/imanol/projects/ebegu/ebegu-web/node_modules/ts-loader/index.js??ref--0-2!/home/imanol/projects/ebegu/ebegu-web/src/core/service/traegerschaftRS.rest.ts","cacheIdentifier":"cache-loader:1.1.0 test","dependencies":[{"path":"/home/imanol/projects/ebegu/ebegu-web/src/core/service/traegerschaftRS.rest.ts","mtime":1512484412011},{"path":"/home/imanol/projects/ebegu/ebegu-web/node_modules/cache-loader/dist/cjs.js","mtime":1507514019000},{"path":"/home/imanol/projects/ebegu/ebegu-web/node_modules/thread-loader/dist/cjs.js","mtime":1507523420000},{"path":"/home/imanol/projects/ebegu/ebegu-web/node_modules/ts-loader/index.js","mtime":1508488471000}],"contextDependencies":[],"result":["\"use strict\";\n/*\n * Ki-Tax: System for the management of external childcare subsidies\n * Copyright (C) 2017 City of Bern Switzerland\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar TSTraegerschaft_1 = require(\"../../models/TSTraegerschaft\");\nvar TraegerschaftRS = /** @class */ (function () {\n    /* @ngInject */\n    function TraegerschaftRS($http, REST_API, ebeguRestUtil, $log) {\n        this.serviceURL = REST_API + 'traegerschaften';\n        this.http = $http;\n        this.ebeguRestUtil = ebeguRestUtil;\n        this.log = $log;\n    }\n    TraegerschaftRS.prototype.findTraegerschaft = function (traegerschaftID) {\n        var _this = this;\n        return this.http.get(this.serviceURL + '/id/' + encodeURIComponent(traegerschaftID))\n            .then(function (response) {\n            _this.log.debug('PARSING traegerschaft REST object ', response.data);\n            return _this.ebeguRestUtil.parseTraegerschaft(new TSTraegerschaft_1.TSTraegerschaft(), response.data);\n        });\n    };\n    TraegerschaftRS.prototype.createTraegerschaft = function (traegerschaft) {\n        return this.saveTraegerschaft(traegerschaft);\n    };\n    TraegerschaftRS.prototype.updateTraegerschaft = function (traegerschaft) {\n        return this.saveTraegerschaft(traegerschaft);\n    };\n    TraegerschaftRS.prototype.saveTraegerschaft = function (traegerschaft) {\n        var _this = this;\n        var restTraegerschaft = {};\n        restTraegerschaft = this.ebeguRestUtil.traegerschaftToRestObject(restTraegerschaft, traegerschaft);\n        return this.http.put(this.serviceURL, restTraegerschaft, {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }).then(function (response) {\n            _this.log.debug('PARSING traegerschaft REST object ', response.data);\n            return _this.ebeguRestUtil.parseTraegerschaft(new TSTraegerschaft_1.TSTraegerschaft(), response.data);\n        });\n    };\n    TraegerschaftRS.prototype.synchronizeTraegerschaften = function () {\n        var _this = this;\n        return this.http.post(this.serviceURL + '/' + 'synchronizeWithOpenIdm', null, {\n            headers: {\n                'Content-Type': 'text/plain'\n            }\n        }).then(function (response) {\n            _this.log.debug('synchronizeWithOpenIdm returns: ', response.data);\n            return response;\n        });\n    };\n    TraegerschaftRS.prototype.removeTraegerschaft = function (traegerschaftID) {\n        return this.http.delete(this.serviceURL + '/' + encodeURIComponent(traegerschaftID));\n    };\n    TraegerschaftRS.prototype.getAllTraegerschaften = function () {\n        var _this = this;\n        return this.http.get(this.serviceURL).then(function (response) {\n            _this.log.debug('PARSING traegerschaften REST array object', response.data);\n            return _this.ebeguRestUtil.parseTraegerschaften(response.data);\n        });\n    };\n    TraegerschaftRS.prototype.getAllActiveTraegerschaften = function () {\n        var _this = this;\n        return this.http.get(this.serviceURL + '/' + 'active').then(function (response) {\n            _this.log.debug('PARSING traegerschaften REST array object', response.data);\n            return _this.ebeguRestUtil.parseTraegerschaften(response.data);\n        });\n    };\n    TraegerschaftRS.prototype.getServiceName = function () {\n        return 'TraegerschaftRS';\n    };\n    TraegerschaftRS.$inject = ['$http', 'REST_API', 'EbeguRestUtil', '$log'];\n    return TraegerschaftRS;\n}());\nexports.TraegerschaftRS = TraegerschaftRS;\n",{"version":3,"file":"/home/imanol/projects/ebegu/ebegu-web/src/core/service/traegerschaftRS.rest.ts","sourceRoot":"","sources":["/home/imanol/projects/ebegu/ebegu-web/src/core/service/traegerschaftRS.rest.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Ki-Tax: System for the management of external childcare subsidies\n * Copyright (C) 2017 City of Bern Switzerland\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport {IHttpPromise, IHttpService, ILogService, IPromise} from 'angular';\nimport EbeguRestUtil from '../../utils/EbeguRestUtil';\nimport {TSTraegerschaft} from '../../models/TSTraegerschaft';\n\nexport class TraegerschaftRS {\n    serviceURL: string;\n    http: IHttpService;\n    ebeguRestUtil: EbeguRestUtil;\n    log: ILogService;\n\n    static $inject = ['$http', 'REST_API', 'EbeguRestUtil', '$log'];\n    /* @ngInject */\n    constructor($http: IHttpService, REST_API: string, ebeguRestUtil: EbeguRestUtil, $log: ILogService) {\n        this.serviceURL = REST_API + 'traegerschaften';\n        this.http = $http;\n        this.ebeguRestUtil = ebeguRestUtil;\n        this.log = $log;\n    }\n\n    public findTraegerschaft(traegerschaftID: string): IPromise<TSTraegerschaft> {\n        return this.http.get(this.serviceURL + '/id/' + encodeURIComponent(traegerschaftID))\n            .then((response: any) => {\n                this.log.debug('PARSING traegerschaft REST object ', response.data);\n                return this.ebeguRestUtil.parseTraegerschaft(new TSTraegerschaft(), response.data);\n            });\n    }\n\n    public createTraegerschaft(traegerschaft: TSTraegerschaft): IPromise<TSTraegerschaft> {\n        return this.saveTraegerschaft(traegerschaft);\n    }\n\n    public updateTraegerschaft(traegerschaft: TSTraegerschaft): IPromise<TSTraegerschaft> {\n        return this.saveTraegerschaft(traegerschaft);\n    }\n\n    private saveTraegerschaft(traegerschaft: TSTraegerschaft) {\n        let restTraegerschaft = {};\n        restTraegerschaft = this.ebeguRestUtil.traegerschaftToRestObject(restTraegerschaft, traegerschaft);\n        return this.http.put(this.serviceURL, restTraegerschaft, {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }).then((response: any) => {\n            this.log.debug('PARSING traegerschaft REST object ', response.data);\n            return this.ebeguRestUtil.parseTraegerschaft(new TSTraegerschaft(), response.data);\n        });\n    }\n\n    synchronizeTraegerschaften(): IPromise<any> {\n        return this.http.post(this.serviceURL + '/' + 'synchronizeWithOpenIdm', null, {\n            headers: {\n                'Content-Type': 'text/plain'\n            }\n        }).then((response: any) => {\n            this.log.debug('synchronizeWithOpenIdm returns: ', response.data);\n            return response;\n        });\n    }\n\n    public removeTraegerschaft(traegerschaftID: string): IHttpPromise<TSTraegerschaft> {\n        return this.http.delete(this.serviceURL + '/' + encodeURIComponent(traegerschaftID));\n    }\n\n    public getAllTraegerschaften(): IPromise<TSTraegerschaft[]> {\n        return this.http.get(this.serviceURL).then((response: any) => {\n            this.log.debug('PARSING traegerschaften REST array object', response.data);\n            return this.ebeguRestUtil.parseTraegerschaften(response.data);\n        });\n    }\n\n    public getAllActiveTraegerschaften(): IPromise<TSTraegerschaft[]> {\n        return this.http.get(this.serviceURL + '/' + 'active').then((response: any) => {\n            this.log.debug('PARSING traegerschaften REST array object', response.data);\n            return this.ebeguRestUtil.parseTraegerschaften(response.data);\n        });\n    }\n\n\n    public getServiceName(): string {\n        return 'TraegerschaftRS';\n    }\n\n}\n"]}]}