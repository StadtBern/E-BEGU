{"remainingRequest":"/home/imanol/projects/ebegu/ebegu-web/node_modules/thread-loader/dist/cjs.js??ref--0-1!/home/imanol/projects/ebegu/ebegu-web/node_modules/ts-loader/index.js??ref--0-2!/home/imanol/projects/ebegu/ebegu-web/src/models/TSGesuchstellerContainer.ts","cacheIdentifier":"cache-loader:1.1.0 test","dependencies":[{"path":"/home/imanol/projects/ebegu/ebegu-web/src/models/TSGesuchstellerContainer.ts","mtime":1518535855232},{"path":"/home/imanol/projects/ebegu/ebegu-web/node_modules/cache-loader/dist/cjs.js","mtime":1507514019000},{"path":"/home/imanol/projects/ebegu/ebegu-web/node_modules/thread-loader/dist/cjs.js","mtime":1507523420000},{"path":"/home/imanol/projects/ebegu/ebegu-web/node_modules/ts-loader/index.js","mtime":1508488471000}],"contextDependencies":[],"result":["/*\n * Ki-Tax: System for the management of external childcare subsidies\n * Copyright (C) 2017 City of Bern Switzerland\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\ndefine([\"require\", \"exports\", \"./TSAbstractEntity\"], function (require, exports, TSAbstractEntity_1) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    var TSGesuchstellerContainer = /** @class */ (function (_super) {\n        __extends(TSGesuchstellerContainer, _super);\n        function TSGesuchstellerContainer(gesuchstellerJA, finanzielleSituation, erwerbspensen, einkommensverschlechterungContainer) {\n            var _this = _super.call(this) || this;\n            _this._showUmzug = false;\n            _this._gesuchstellerJA = gesuchstellerJA;\n            _this._finanzielleSituationContainer = finanzielleSituation;\n            _this._erwerbspensenContainer = erwerbspensen ? erwerbspensen : [];\n            _this._einkommensverschlechterungContainer = einkommensverschlechterungContainer;\n            return _this;\n        }\n        Object.defineProperty(TSGesuchstellerContainer.prototype, \"gesuchstellerGS\", {\n            get: function () {\n                return this._gesuchstellerGS;\n            },\n            set: function (value) {\n                this._gesuchstellerGS = value;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(TSGesuchstellerContainer.prototype, \"gesuchstellerJA\", {\n            get: function () {\n                return this._gesuchstellerJA;\n            },\n            set: function (value) {\n                this._gesuchstellerJA = value;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(TSGesuchstellerContainer.prototype, \"adressen\", {\n            get: function () {\n                return this._adressen;\n            },\n            set: function (adr) {\n                this._adressen = adr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        TSGesuchstellerContainer.prototype.addAdresse = function (value) {\n            if (this._adressen) {\n                this._adressen.push(value);\n            }\n        };\n        Object.defineProperty(TSGesuchstellerContainer.prototype, \"korrespondenzAdresse\", {\n            get: function () {\n                return this._korrespondenzAdresse;\n            },\n            set: function (value) {\n                this._korrespondenzAdresse = value;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(TSGesuchstellerContainer.prototype, \"finanzielleSituationContainer\", {\n            get: function () {\n                return this._finanzielleSituationContainer;\n            },\n            set: function (value) {\n                this._finanzielleSituationContainer = value;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(TSGesuchstellerContainer.prototype, \"erwerbspensenContainer\", {\n            get: function () {\n                return this._erwerbspensenContainer;\n            },\n            set: function (value) {\n                this._erwerbspensenContainer = value;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(TSGesuchstellerContainer.prototype, \"einkommensverschlechterungContainer\", {\n            get: function () {\n                return this._einkommensverschlechterungContainer;\n            },\n            set: function (value) {\n                this._einkommensverschlechterungContainer = value;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(TSGesuchstellerContainer.prototype, \"showUmzug\", {\n            get: function () {\n                return this._showUmzug;\n            },\n            set: function (value) {\n                this._showUmzug = value;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Wir gehen davon aus dass die Liste von Adressen aus dem Server sortiert kommt.\n         * Deshalb duerfen wir die erste Adresse der Liste als Wohnadresse nehmen\n         */\n        TSGesuchstellerContainer.prototype.getWohnAdresse = function () {\n            if (this.adressen && this.adressen.length > 0) {\n                return this.adressen[0];\n            }\n            return undefined;\n        };\n        /**\n         * Hier wird eine Kopie der Adressen erstellt und die erste Adresse weggemacht. Damit haben wir nur\n         * die Umzugsadressen\n         */\n        TSGesuchstellerContainer.prototype.getUmzugAdressen = function () {\n            if (this.adressen && this.adressen.length > 0) {\n                var adressenCopy = angular.copy(this.adressen);\n                adressenCopy.splice(0, 1);\n                return adressenCopy;\n            }\n            return [];\n        };\n        /**\n         * Schaut ob der GS1 oder der GS2 mindestens eine umzugsadresse hat\n         */\n        TSGesuchstellerContainer.prototype.isThereAnyUmzug = function () {\n            return this.getUmzugAdressen().length > 0;\n        };\n        TSGesuchstellerContainer.prototype.extractFullName = function () {\n            if (this.gesuchstellerJA) {\n                return this.gesuchstellerJA.getFullName();\n            }\n            return undefined;\n        };\n        TSGesuchstellerContainer.prototype.extractNachname = function () {\n            if (this.gesuchstellerJA) {\n                return this.gesuchstellerJA.nachname;\n            }\n            return undefined;\n        };\n        TSGesuchstellerContainer.prototype.extractMail = function () {\n            if (this.gesuchstellerJA) {\n                return this.gesuchstellerJA.mail;\n            }\n            return undefined;\n        };\n        TSGesuchstellerContainer.prototype.extractPhone = function () {\n            if (this.gesuchstellerJA) {\n                return this.gesuchstellerJA.getPhone();\n            }\n            return undefined;\n        };\n        return TSGesuchstellerContainer;\n    }(TSAbstractEntity_1.default));\n    exports.default = TSGesuchstellerContainer;\n});\n",{"version":3,"file":"/home/imanol/projects/ebegu/ebegu-web/src/models/TSGesuchstellerContainer.ts","sourceRoot":"","sources":["/home/imanol/projects/ebegu/ebegu-web/src/models/TSGesuchstellerContainer.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Ki-Tax: System for the management of external childcare subsidies\n * Copyright (C) 2017 City of Bern Switzerland\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport TSFinanzielleSituationContainer from './TSFinanzielleSituationContainer';\nimport TSErwerbspensumContainer from './TSErwerbspensumContainer';\nimport TSEinkommensverschlechterungContainer from './TSEinkommensverschlechterungContainer';\nimport TSAbstractEntity from './TSAbstractEntity';\nimport TSGesuchsteller from './TSGesuchsteller';\nimport TSAdresseContainer from './TSAdresseContainer';\n\nexport default class TSGesuchstellerContainer extends TSAbstractEntity {\n\n    private _gesuchstellerGS: TSGesuchsteller;\n    private _gesuchstellerJA: TSGesuchsteller;\n    private _adressen: Array<TSAdresseContainer>;\n    private _korrespondenzAdresse: TSAdresseContainer;\n    private _finanzielleSituationContainer: TSFinanzielleSituationContainer;\n    private _erwerbspensenContainer: Array<TSErwerbspensumContainer>;\n    private _einkommensverschlechterungContainer: TSEinkommensverschlechterungContainer;\n    private _showUmzug: boolean = false;\n\n    constructor(gesuchstellerJA?: TSGesuchsteller, finanzielleSituation?: TSFinanzielleSituationContainer,\n                erwerbspensen?: Array<TSErwerbspensumContainer>,\n                einkommensverschlechterungContainer?: TSEinkommensverschlechterungContainer) {\n        super();\n        this._gesuchstellerJA = gesuchstellerJA;\n        this._finanzielleSituationContainer = finanzielleSituation;\n        this._erwerbspensenContainer = erwerbspensen ? erwerbspensen : [];\n        this._einkommensverschlechterungContainer = einkommensverschlechterungContainer;\n    }\n\n    get gesuchstellerGS(): TSGesuchsteller {\n        return this._gesuchstellerGS;\n    }\n\n    set gesuchstellerGS(value: TSGesuchsteller) {\n        this._gesuchstellerGS = value;\n    }\n\n    get gesuchstellerJA(): TSGesuchsteller {\n        return this._gesuchstellerJA;\n    }\n\n    set gesuchstellerJA(value: TSGesuchsteller) {\n        this._gesuchstellerJA = value;\n    }\n\n    public get adressen(): Array<TSAdresseContainer> {\n        return this._adressen;\n    }\n\n    public set adressen(adr: Array<TSAdresseContainer>) {\n        this._adressen = adr;\n    }\n\n    public addAdresse(value: TSAdresseContainer) {\n        if (this._adressen) {\n            this._adressen.push(value);\n        }\n    }\n\n    public get korrespondenzAdresse(): TSAdresseContainer {\n        return this._korrespondenzAdresse;\n    }\n\n    public set korrespondenzAdresse(value: TSAdresseContainer) {\n        this._korrespondenzAdresse = value;\n    }\n\n    public get finanzielleSituationContainer(): TSFinanzielleSituationContainer {\n        return this._finanzielleSituationContainer;\n    }\n\n    public set finanzielleSituationContainer(value: TSFinanzielleSituationContainer) {\n        this._finanzielleSituationContainer = value;\n    }\n\n    get erwerbspensenContainer(): Array<TSErwerbspensumContainer> {\n        return this._erwerbspensenContainer;\n    }\n\n    set erwerbspensenContainer(value: Array<TSErwerbspensumContainer>) {\n        this._erwerbspensenContainer = value;\n    }\n\n    get einkommensverschlechterungContainer(): TSEinkommensverschlechterungContainer {\n        return this._einkommensverschlechterungContainer;\n    }\n\n    set einkommensverschlechterungContainer(value: TSEinkommensverschlechterungContainer) {\n        this._einkommensverschlechterungContainer = value;\n    }\n\n    get showUmzug(): boolean {\n        return this._showUmzug;\n    }\n\n    set showUmzug(value: boolean) {\n        this._showUmzug = value;\n    }\n\n    /**\n     * Wir gehen davon aus dass die Liste von Adressen aus dem Server sortiert kommt.\n     * Deshalb duerfen wir die erste Adresse der Liste als Wohnadresse nehmen\n     */\n    public getWohnAdresse(): TSAdresseContainer {\n        if (this.adressen && this.adressen.length > 0) {\n            return this.adressen[0];\n        }\n        return undefined;\n    }\n\n    /**\n     * Hier wird eine Kopie der Adressen erstellt und die erste Adresse weggemacht. Damit haben wir nur\n     * die Umzugsadressen\n     */\n    public getUmzugAdressen(): Array<TSAdresseContainer> {\n        if (this.adressen && this.adressen.length > 0) {\n            let adressenCopy: Array<TSAdresseContainer> = angular.copy(this.adressen);\n            adressenCopy.splice(0, 1);\n            return adressenCopy;\n        }\n        return [];\n    }\n\n    /**\n     * Schaut ob der GS1 oder der GS2 mindestens eine umzugsadresse hat\n     */\n    public isThereAnyUmzug(): boolean {\n        return this.getUmzugAdressen().length > 0;\n    }\n\n    public extractFullName(): string {\n        if (this.gesuchstellerJA) {\n            return this.gesuchstellerJA.getFullName();\n        }\n        return undefined;\n    }\n\n    public extractNachname(): string {\n        if (this.gesuchstellerJA) {\n            return this.gesuchstellerJA.nachname;\n        }\n        return undefined;\n    }\n\n    public extractMail(): string {\n        if (this.gesuchstellerJA) {\n            return this.gesuchstellerJA.mail;\n        }\n        return undefined;\n    }\n\n    public extractPhone(): string {\n        if (this.gesuchstellerJA) {\n            return this.gesuchstellerJA.getPhone();\n        }\n        return undefined;\n    }\n}\n\n"]}]}