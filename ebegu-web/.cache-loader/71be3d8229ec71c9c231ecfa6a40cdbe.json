{"remainingRequest":"/home/imanol/projects/ebegu/ebegu-web/node_modules/thread-loader/dist/cjs.js??ref--0-1!/home/imanol/projects/ebegu/ebegu-web/node_modules/ts-loader/index.js??ref--0-2!/home/imanol/projects/ebegu/ebegu-web/src/admin/component/ferieninselView/ferieninselView.ts","cacheIdentifier":"cache-loader:1.1.0 test","dependencies":[{"path":"/home/imanol/projects/ebegu/ebegu-web/src/admin/component/ferieninselView/ferieninselView.ts","mtime":1518612532782},{"path":"/home/imanol/projects/ebegu/ebegu-web/node_modules/cache-loader/dist/cjs.js","mtime":1507514019000},{"path":"/home/imanol/projects/ebegu/ebegu-web/node_modules/thread-loader/dist/cjs.js","mtime":1507523420000},{"path":"/home/imanol/projects/ebegu/ebegu-web/node_modules/ts-loader/index.js","mtime":1508488471000}],"contextDependencies":[],"result":["\"use strict\";\n/*\n * Ki-Tax: System for the management of external childcare subsidies\n * Copyright (C) 2017 City of Bern Switzerland\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nrequire(\"./ferieninselView.less\");\nvar TSDateRange_1 = require(\"../../../models/types/TSDateRange\");\nvar abstractAdminView_1 = require(\"../../abstractAdminView\");\nvar TSFerieninselStammdaten_1 = require(\"../../../models/TSFerieninselStammdaten\");\nvar TSFerienname_1 = require(\"../../../models/enums/TSFerienname\");\nvar TSFerieninselZeitraum_1 = require(\"../../../models/TSFerieninselZeitraum\");\nvar EbeguUtil_1 = require(\"../../../utils/EbeguUtil\");\nvar TSRoleUtil_1 = require(\"../../../utils/TSRoleUtil\");\nvar template = require('./ferieninselView.html');\nvar style = require('./ferieninselView.less');\nvar FerieninselViewComponentConfig = /** @class */ (function () {\n    function FerieninselViewComponentConfig() {\n        this.transclude = false;\n        this.template = template;\n        this.controller = FerieninselViewController;\n        this.controllerAs = 'vm';\n    }\n    return FerieninselViewComponentConfig;\n}());\nexports.FerieninselViewComponentConfig = FerieninselViewComponentConfig;\nvar FerieninselViewController = /** @class */ (function (_super) {\n    __extends(FerieninselViewController, _super);\n    /* @ngInject */\n    function FerieninselViewController(gesuchsperiodeRS, ferieninselStammdatenRS, $timeout, authServiceRS) {\n        var _this = _super.call(this, authServiceRS) || this;\n        _this.gesuchsperiodeRS = gesuchsperiodeRS;\n        _this.ferieninselStammdatenRS = ferieninselStammdatenRS;\n        _this.$timeout = $timeout;\n        _this.gesuchsperiodenList = [];\n        _this.ferieninselStammdatenMap = {};\n        _this.TSRoleUtil = TSRoleUtil_1.TSRoleUtil;\n        _this.$timeout(function () {\n            _this.readGesuchsperioden();\n        });\n        return _this;\n    }\n    FerieninselViewController.prototype.readGesuchsperioden = function () {\n        var _this = this;\n        this.gesuchsperiodeRS.getAllGesuchsperioden().then(function (response) {\n            _this.gesuchsperiodenList = response;\n        });\n    };\n    FerieninselViewController.prototype.gesuchsperiodeClicked = function (gesuchsperiode) {\n        if (gesuchsperiode.isSelected) {\n            this.gesuchsperiode = gesuchsperiode;\n            this.readFerieninselStammdatenByGesuchsperiode();\n        }\n        else {\n            this.gesuchsperiode = undefined;\n        }\n    };\n    FerieninselViewController.prototype.readFerieninselStammdatenByGesuchsperiode = function () {\n        var _this = this;\n        this.ferieninselStammdatenMap = {};\n        this.ferieninselStammdatenRS.findFerieninselStammdatenByGesuchsperiode(this.gesuchsperiode.id).then(function (response) {\n            var ferieninselStammdatenList = response;\n            for (var _i = 0, ferieninselStammdatenList_1 = ferieninselStammdatenList; _i < ferieninselStammdatenList_1.length; _i++) {\n                var obj = ferieninselStammdatenList_1[_i];\n                _this.ferieninselStammdatenMap[obj.ferienname] = obj;\n            }\n            _this.resetErrors();\n        });\n    };\n    FerieninselViewController.prototype.getFeriennamen = function () {\n        return TSFerienname_1.getTSFeriennameValues();\n    };\n    FerieninselViewController.prototype.getFerieninselStammdaten = function (ferienname) {\n        var stammdaten = this.ferieninselStammdatenMap[ferienname];\n        if (!stammdaten) {\n            stammdaten = new TSFerieninselStammdaten_1.default();\n            stammdaten.ferienname = ferienname;\n            stammdaten.gesuchsperiode = this.gesuchsperiode;\n            stammdaten.zeitraum = new TSFerieninselZeitraum_1.default();\n            stammdaten.zeitraum.gueltigkeit = new TSDateRange_1.TSDateRange();\n            this.ferieninselStammdatenMap[ferienname] = stammdaten;\n        }\n        return stammdaten;\n    };\n    FerieninselViewController.prototype.saveFerieninselStammdaten = function (ferieninselStammdaten) {\n        var _this = this;\n        if (this.form.$valid && this.isFerieninselStammdatenValid(ferieninselStammdaten)) {\n            this.ferieninselStammdatenRS.saveFerieninselStammdaten(ferieninselStammdaten).then(function (response) {\n                _this.ferieninselStammdatenMap[response.ferienname] = response;\n            });\n        }\n    };\n    FerieninselViewController.prototype.addFerieninselZeitraum = function (ferieninselStammdaten) {\n        if (!ferieninselStammdaten.zeitraumList) {\n            ferieninselStammdaten.zeitraumList = [];\n        }\n        ferieninselStammdaten.zeitraumList.push(new TSFerieninselZeitraum_1.default());\n    };\n    FerieninselViewController.prototype.removeFerieninselZeitraum = function (ferieninselStammdaten, ferieninselZeitraum) {\n        var index = ferieninselStammdaten.zeitraumList.indexOf(ferieninselZeitraum, 0);\n        ferieninselStammdaten.zeitraumList.splice(index, 1);\n    };\n    FerieninselViewController.prototype.isFerieninselStammdatenValid = function (ferieninselStammdaten) {\n        var fiValid = !(EbeguUtil_1.default.isNullOrUndefined(ferieninselStammdaten.anmeldeschluss)\n            || EbeguUtil_1.default.isNullOrUndefined(ferieninselStammdaten.zeitraum.gueltigkeit.gueltigAb)\n            || EbeguUtil_1.default.isNullOrUndefined(ferieninselStammdaten.zeitraum.gueltigkeit.gueltigBis));\n        return fiValid;\n    };\n    FerieninselViewController.prototype.isSaveButtonDisabled = function (ferieninselStammdaten) {\n        // Disabled, solange noch keines der Felder ausgefuellt ist\n        return EbeguUtil_1.default.isNullOrUndefined(ferieninselStammdaten.anmeldeschluss)\n            && EbeguUtil_1.default.isNullOrUndefined(ferieninselStammdaten.zeitraum.gueltigkeit.gueltigAb)\n            && EbeguUtil_1.default.isNullOrUndefined(ferieninselStammdaten.zeitraum.gueltigkeit.gueltigBis);\n    };\n    FerieninselViewController.prototype.isAnmeldeschlussRequired = function (ferieninselStammdaten) {\n        // Wenn mindestens ein Zeitraum erfasst ist\n        return EbeguUtil_1.default.isNotNullOrUndefined(ferieninselStammdaten.zeitraum.gueltigkeit.gueltigAb)\n            || EbeguUtil_1.default.isNotNullOrUndefined(ferieninselStammdaten.zeitraum.gueltigkeit.gueltigBis);\n    };\n    FerieninselViewController.prototype.isDatumAbRequired = function (ferieninselZeitraum, ferieninselStammdaten) {\n        // Wenn entweder der Anmeldeschluss erfasst ist, oder das Datum bis\n        return EbeguUtil_1.default.isNotNullOrUndefined(ferieninselStammdaten.anmeldeschluss)\n            || (EbeguUtil_1.default.isNotNullOrUndefined(ferieninselZeitraum.gueltigkeit)\n                && EbeguUtil_1.default.isNotNullOrUndefined(ferieninselZeitraum.gueltigkeit.gueltigBis));\n    };\n    FerieninselViewController.prototype.isDatumBisRequired = function (ferieninselZeitraum, ferieninselStammdaten) {\n        // Wenn entweder der Anmeldeschluss erfasst ist, oder das Datum ab\n        return EbeguUtil_1.default.isNotNullOrUndefined(ferieninselStammdaten.anmeldeschluss)\n            || (EbeguUtil_1.default.isNotNullOrUndefined(ferieninselZeitraum.gueltigkeit)\n                && EbeguUtil_1.default.isNotNullOrUndefined(ferieninselZeitraum.gueltigkeit.gueltigAb));\n    };\n    /**\n     * Alle errors werden zurueckgesetzt. Dies ist notwendig, weil beim Wechseln zwischen Gesuchsperiode, das Form nicht neugemacht wird.\n     * Deswegen werden alle alten Daten bzw. Errors beibehalten und deshalb falsche Failures gegeben. Ausserdem wird das Form als Pristine gesetzt\n     * damit keine Reste aus den alten Daten uebernommen werden.\n     */\n    FerieninselViewController.prototype.resetErrors = function () {\n        this.form.$setPristine();\n        this.form.$setUntouched();\n        // iterate over all from properties\n        angular.forEach(this.form, function (ctrl, name) {\n            // ignore angular fields and functions\n            if (name.indexOf('$') !== 0) {\n                // iterate over all $errors for each field\n                angular.forEach(ctrl.$error, function (value, name) {\n                    // reset validity\n                    ctrl.$setValidity(name, null);\n                });\n            }\n        });\n    };\n    FerieninselViewController.$inject = ['GesuchsperiodeRS', 'FerieninselStammdatenRS', '$timeout', 'AuthServiceRS'];\n    return FerieninselViewController;\n}(abstractAdminView_1.default));\nexports.FerieninselViewController = FerieninselViewController;\n",{"version":3,"file":"/home/imanol/projects/ebegu/ebegu-web/src/admin/component/ferieninselView/ferieninselView.ts","sourceRoot":"","sources":["/home/imanol/projects/ebegu/ebegu-web/src/admin/component/ferieninselView/ferieninselView.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Ki-Tax: System for the management of external childcare subsidies\n * Copyright (C) 2017 City of Bern Switzerland\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport {IComponentOptions, IFormController} from 'angular';\nimport './ferieninselView.less';\nimport TSGesuchsperiode from '../../../models/TSGesuchsperiode';\nimport GesuchsperiodeRS from '../../../core/service/gesuchsperiodeRS.rest';\nimport {TSDateRange} from '../../../models/types/TSDateRange';\nimport AbstractAdminViewController from '../../abstractAdminView';\nimport AuthServiceRS from '../../../authentication/service/AuthServiceRS.rest';\nimport {FerieninselStammdatenRS} from '../../service/ferieninselStammdatenRS.rest';\nimport TSFerieninselStammdaten from '../../../models/TSFerieninselStammdaten';\nimport {getTSFeriennameValues, TSFerienname} from '../../../models/enums/TSFerienname';\nimport TSFerieninselZeitraum from '../../../models/TSFerieninselZeitraum';\nimport ITimeoutService = angular.ITimeoutService;\nimport EbeguUtil from '../../../utils/EbeguUtil';\nimport {TSRoleUtil} from '../../../utils/TSRoleUtil';\n\nlet template = require('./ferieninselView.html');\nlet style = require('./ferieninselView.less');\n\nexport class FerieninselViewComponentConfig implements IComponentOptions {\n    transclude: boolean = false;\n    template: string = template;\n    controller: any = FerieninselViewController;\n    controllerAs: string = 'vm';\n}\n\nexport class FerieninselViewController extends AbstractAdminViewController {\n    static $inject = ['GesuchsperiodeRS', 'FerieninselStammdatenRS', '$timeout', 'AuthServiceRS'];\n\n    form: IFormController;\n\n    gesuchsperiodenList: Array<TSGesuchsperiode> = [];\n    gesuchsperiode: TSGesuchsperiode;\n\n    ferieninselStammdatenMap: { [key: string]: TSFerieninselStammdaten; } = {};\n\n    TSRoleUtil: TSRoleUtil;\n\n\n    /* @ngInject */\n    constructor(private gesuchsperiodeRS: GesuchsperiodeRS,\n                private ferieninselStammdatenRS: FerieninselStammdatenRS,\n                private $timeout: ITimeoutService, authServiceRS: AuthServiceRS) {\n        super(authServiceRS);\n        this.TSRoleUtil = TSRoleUtil;\n        this.$timeout(() => {\n            this.readGesuchsperioden();\n        });\n    }\n\n    private readGesuchsperioden(): void {\n        this.gesuchsperiodeRS.getAllGesuchsperioden().then((response: Array<TSGesuchsperiode>) => {\n            this.gesuchsperiodenList =  response;\n        });\n    }\n\n    public gesuchsperiodeClicked(gesuchsperiode: any) {\n        if (gesuchsperiode.isSelected) {\n            this.gesuchsperiode = gesuchsperiode;\n            this.readFerieninselStammdatenByGesuchsperiode();\n        } else {\n            this.gesuchsperiode = undefined;\n        }\n    }\n\n    private readFerieninselStammdatenByGesuchsperiode(): void {\n        this.ferieninselStammdatenMap = {};\n        this.ferieninselStammdatenRS.findFerieninselStammdatenByGesuchsperiode(this.gesuchsperiode.id).then((response: TSFerieninselStammdaten[]) => {\n            let ferieninselStammdatenList: TSFerieninselStammdaten[] =  response;\n            for (let obj of ferieninselStammdatenList) {\n                this.ferieninselStammdatenMap[obj.ferienname] = obj;\n            }\n            this.resetErrors();\n        });\n    }\n\n    public getFeriennamen(): TSFerienname[] {\n        return getTSFeriennameValues();\n    }\n\n    public getFerieninselStammdaten(ferienname: TSFerienname): TSFerieninselStammdaten {\n        let stammdaten: TSFerieninselStammdaten = this.ferieninselStammdatenMap[ferienname];\n        if (!stammdaten) {\n            stammdaten = new TSFerieninselStammdaten();\n            stammdaten.ferienname = ferienname;\n            stammdaten.gesuchsperiode = this.gesuchsperiode;\n            stammdaten.zeitraum = new TSFerieninselZeitraum();\n            stammdaten.zeitraum.gueltigkeit = new TSDateRange();\n            this.ferieninselStammdatenMap[ferienname] = stammdaten;\n        }\n        return stammdaten;\n    }\n\n    public saveFerieninselStammdaten(ferieninselStammdaten: TSFerieninselStammdaten): void {\n        if (this.form.$valid && this.isFerieninselStammdatenValid(ferieninselStammdaten)) {\n            this.ferieninselStammdatenRS.saveFerieninselStammdaten(ferieninselStammdaten).then((response: TSFerieninselStammdaten) => {\n                this.ferieninselStammdatenMap[response.ferienname] = response;\n            });\n        }\n    }\n\n    public addFerieninselZeitraum(ferieninselStammdaten: TSFerieninselStammdaten): void {\n        if (!ferieninselStammdaten.zeitraumList) {\n            ferieninselStammdaten.zeitraumList = [];\n        }\n        ferieninselStammdaten.zeitraumList.push(new TSFerieninselZeitraum());\n    }\n\n    public removeFerieninselZeitraum(ferieninselStammdaten: TSFerieninselStammdaten, ferieninselZeitraum: TSFerieninselZeitraum): void {\n        let index: number = ferieninselStammdaten.zeitraumList.indexOf(ferieninselZeitraum, 0);\n        ferieninselStammdaten.zeitraumList.splice(index, 1);\n    }\n\n    public isFerieninselStammdatenValid(ferieninselStammdaten: TSFerieninselStammdaten): boolean {\n        let fiValid: boolean = !(EbeguUtil.isNullOrUndefined(ferieninselStammdaten.anmeldeschluss)\n            || EbeguUtil.isNullOrUndefined(ferieninselStammdaten.zeitraum.gueltigkeit.gueltigAb)\n            || EbeguUtil.isNullOrUndefined(ferieninselStammdaten.zeitraum.gueltigkeit.gueltigBis));\n\n        return fiValid;\n    }\n\n    public isSaveButtonDisabled(ferieninselStammdaten: TSFerieninselStammdaten): boolean {\n        // Disabled, solange noch keines der Felder ausgefuellt ist\n        return EbeguUtil.isNullOrUndefined(ferieninselStammdaten.anmeldeschluss)\n            && EbeguUtil.isNullOrUndefined(ferieninselStammdaten.zeitraum.gueltigkeit.gueltigAb)\n            && EbeguUtil.isNullOrUndefined(ferieninselStammdaten.zeitraum.gueltigkeit.gueltigBis);\n    }\n\n    public isAnmeldeschlussRequired(ferieninselStammdaten: TSFerieninselStammdaten): boolean {\n        // Wenn mindestens ein Zeitraum erfasst ist\n        return EbeguUtil.isNotNullOrUndefined(ferieninselStammdaten.zeitraum.gueltigkeit.gueltigAb)\n            || EbeguUtil.isNotNullOrUndefined(ferieninselStammdaten.zeitraum.gueltigkeit.gueltigBis);\n    }\n\n    public isDatumAbRequired(ferieninselZeitraum: TSFerieninselZeitraum, ferieninselStammdaten: TSFerieninselStammdaten) {\n        // Wenn entweder der Anmeldeschluss erfasst ist, oder das Datum bis\n        return EbeguUtil.isNotNullOrUndefined(ferieninselStammdaten.anmeldeschluss)\n            || (EbeguUtil.isNotNullOrUndefined(ferieninselZeitraum.gueltigkeit)\n                && EbeguUtil.isNotNullOrUndefined(ferieninselZeitraum.gueltigkeit.gueltigBis));\n    }\n\n    public isDatumBisRequired(ferieninselZeitraum: TSFerieninselZeitraum, ferieninselStammdaten: TSFerieninselStammdaten) {\n        // Wenn entweder der Anmeldeschluss erfasst ist, oder das Datum ab\n       return EbeguUtil.isNotNullOrUndefined(ferieninselStammdaten.anmeldeschluss)\n            || (EbeguUtil.isNotNullOrUndefined(ferieninselZeitraum.gueltigkeit)\n               && EbeguUtil.isNotNullOrUndefined(ferieninselZeitraum.gueltigkeit.gueltigAb));\n    }\n\n    /**\n     * Alle errors werden zurueckgesetzt. Dies ist notwendig, weil beim Wechseln zwischen Gesuchsperiode, das Form nicht neugemacht wird.\n     * Deswegen werden alle alten Daten bzw. Errors beibehalten und deshalb falsche Failures gegeben. Ausserdem wird das Form als Pristine gesetzt\n     * damit keine Reste aus den alten Daten uebernommen werden.\n     */\n    private resetErrors() {\n        this.form.$setPristine();\n        this.form.$setUntouched();\n\n        // iterate over all from properties\n        angular.forEach(this.form, (ctrl, name) => {\n            // ignore angular fields and functions\n            if (name.indexOf('$') !== 0) {\n                // iterate over all $errors for each field\n                angular.forEach(ctrl.$error, (value, name) => {\n                    // reset validity\n                    ctrl.$setValidity(name, null);\n                });\n            }\n        });\n    }\n}\n"]}]}