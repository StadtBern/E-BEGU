{"remainingRequest":"/home/imanol/projects/ebegu/ebegu-web/node_modules/thread-loader/dist/cjs.js??ref--0-1!/home/imanol/projects/ebegu/ebegu-web/node_modules/ts-loader/index.js??ref--0-2!/home/imanol/projects/ebegu/ebegu-web/src/gesuch/component/kommentarView/kommentarView.ts","cacheIdentifier":"cache-loader:1.1.0 test","dependencies":[{"path":"/home/imanol/projects/ebegu/ebegu-web/src/gesuch/component/kommentarView/kommentarView.ts","mtime":1518612532802},{"path":"/home/imanol/projects/ebegu/ebegu-web/node_modules/cache-loader/dist/cjs.js","mtime":1507514019000},{"path":"/home/imanol/projects/ebegu/ebegu-web/node_modules/thread-loader/dist/cjs.js","mtime":1507523420000},{"path":"/home/imanol/projects/ebegu/ebegu-web/node_modules/ts-loader/index.js","mtime":1508488471000}],"contextDependencies":[],"result":["\"use strict\";\n/*\n * Ki-Tax: System for the management of external childcare subsidies\n * Copyright (C) 2017 City of Bern Switzerland\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar TSDokumentGrundTyp_1 = require(\"../../../models/enums/TSDokumentGrundTyp\");\nvar OkHtmlDialogController_1 = require(\"../../dialog/OkHtmlDialogController\");\nvar TSCacheTyp_1 = require(\"../../../models/enums/TSCacheTyp\");\nvar TSRoleUtil_1 = require(\"../../../utils/TSRoleUtil\");\nvar TSAntragStatus_1 = require(\"../../../models/enums/TSAntragStatus\");\nvar RemoveDialogController_1 = require(\"../../dialog/RemoveDialogController\");\nvar template = require('./kommentarView.html');\nrequire('./kommentarView.less');\nvar okHtmlDialogTempl = require('../../../gesuch/dialog/okHtmlDialogTemplate.html');\nvar removeDialogTempl = require('../../dialog/removeDialogTemplate.html');\nvar KommentarViewComponentConfig = /** @class */ (function () {\n    function KommentarViewComponentConfig() {\n        this.transclude = false;\n        this.template = template;\n        this.controller = KommentarViewController;\n        this.controllerAs = 'vm';\n    }\n    return KommentarViewComponentConfig;\n}());\nexports.KommentarViewComponentConfig = KommentarViewComponentConfig;\n/**\n * Controller fuer den Kommentare\n */\nvar KommentarViewController = /** @class */ (function () {\n    /* @ngInject */\n    function KommentarViewController($log, gesuchModelManager, gesuchRS, dokumenteRS, downloadRS, $q, uploadRS, wizardStepManager, globalCacheService, dvDialog, $translate, $window, gesuchstellerRS, $rootScope, $state, $mdSidenav) {\n        this.$log = $log;\n        this.gesuchModelManager = gesuchModelManager;\n        this.gesuchRS = gesuchRS;\n        this.dokumenteRS = dokumenteRS;\n        this.downloadRS = downloadRS;\n        this.$q = $q;\n        this.uploadRS = uploadRS;\n        this.wizardStepManager = wizardStepManager;\n        this.globalCacheService = globalCacheService;\n        this.dvDialog = dvDialog;\n        this.$translate = $translate;\n        this.$window = $window;\n        this.gesuchstellerRS = gesuchstellerRS;\n        this.$rootScope = $rootScope;\n        this.$state = $state;\n        this.$mdSidenav = $mdSidenav;\n        if (!this.isGesuchUnsaved()) {\n            this.getPapiergesuchFromServer();\n        }\n        this.TSRoleUtil = TSRoleUtil_1.TSRoleUtil;\n    }\n    KommentarViewController.prototype.getPapiergesuchFromServer = function () {\n        var _this = this;\n        return this.dokumenteRS.getDokumenteByTypeCached(this.getGesuch(), TSDokumentGrundTyp_1.TSDokumentGrundTyp.PAPIERGESUCH, this.globalCacheService.getCache(TSCacheTyp_1.TSCacheTyp.EBEGU_DOCUMENT))\n            .then(function (promiseValue) {\n            if (promiseValue.dokumentGruende.length === 1) {\n                _this.dokumentePapiergesuch = promiseValue.dokumentGruende[0];\n            }\n            else {\n                console.log('Falsche anzahl Dokumente');\n            }\n            return promiseValue;\n        });\n    };\n    KommentarViewController.prototype.getGesuch = function () {\n        return this.gesuchModelManager.getGesuch();\n    };\n    KommentarViewController.prototype.toggleEwkSidenav = function () {\n        this.$mdSidenav('ewk').toggle();\n    };\n    KommentarViewController.prototype.saveBemerkungZurVerfuegung = function () {\n        if (!this.isGesuchUnsaved()) {\n            // Bemerkungen auf dem Gesuch werden nur gespeichert, wenn das gesuch schon persisted ist!\n            this.gesuchRS.updateBemerkung(this.getGesuch().id, this.getGesuch().bemerkungen);\n        }\n    };\n    KommentarViewController.prototype.saveBemerkungPruefungSTV = function () {\n        if (!this.isGesuchUnsaved()) {\n            // Bemerkungen auf dem Gesuch werden nur gespeichert, wenn das gesuch schon persisted ist!\n            this.gesuchRS.updateBemerkungPruefungSTV(this.getGesuch().id, this.getGesuch().bemerkungenPruefungSTV);\n        }\n    };\n    KommentarViewController.prototype.saveStepBemerkung = function () {\n        if (!this.isGesuchUnsaved()) {\n            this.wizardStepManager.updateCurrentWizardStep();\n        }\n    };\n    KommentarViewController.prototype.hasPapiergesuch = function () {\n        if (this.dokumentePapiergesuch) {\n            if (this.dokumentePapiergesuch.dokumente && this.dokumentePapiergesuch.dokumente.length !== 0) {\n                if (this.dokumentePapiergesuch.dokumente[0].filename) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    KommentarViewController.prototype.download = function () {\n        var _this = this;\n        var win = this.downloadRS.prepareDownloadWindow();\n        this.getPapiergesuchFromServer().then(function (promiseValue) {\n            if (!_this.hasPapiergesuch()) {\n                _this.$log.error('Kein Papiergesuch für Download vorhanden!');\n            }\n            else {\n                var newest_1 = _this.getNewest(_this.dokumentePapiergesuch.dokumente);\n                _this.downloadRS.getAccessTokenDokument(newest_1.id)\n                    .then(function (response) {\n                    var tempDokument = angular.copy(response);\n                    _this.downloadRS.startDownload(tempDokument.accessToken, newest_1.filename, false, win);\n                })\n                    .catch(function (ex) {\n                    win.close();\n                    _this.$log.error('An error occurred downloading the document, closing download window.');\n                });\n            }\n        });\n    };\n    KommentarViewController.prototype.getNewest = function (dokumente) {\n        var newest = dokumente[0];\n        for (var i = 0; i < dokumente.length; i++) {\n            if (dokumente[i].timestampErstellt.isAfter(newest.timestampErstellt)) {\n                newest = dokumente[i];\n            }\n        }\n        return newest;\n    };\n    KommentarViewController.prototype.upload = function (files) {\n        var _this = this;\n        this.getPapiergesuchFromServer().then(function (promiseValue) {\n            if (_this.hasPapiergesuch()) {\n                _this.$log.error('Papiergesuch schon vorhanden');\n            }\n            else {\n                var gesuchID = _this.getGesuch().id;\n                console.log('Uploading files on gesuch ' + gesuchID);\n                var filesTooBig = [];\n                var filesOk = [];\n                _this.$log.debug('Uploading files on gesuch ' + gesuchID);\n                for (var _i = 0, files_1 = files; _i < files_1.length; _i++) {\n                    var file = files_1[_i];\n                    _this.$log.debug('File: ' + file.name + ' size: ' + file.size);\n                    if (file.size > 10000000) {\n                        filesTooBig.push(file);\n                    }\n                    else {\n                        filesOk.push(file);\n                    }\n                }\n                if (filesTooBig.length > 0) {\n                    // DialogBox anzeigen für Files, welche zu gross sind!\n                    var returnString = _this.$translate.instant('FILE_ZU_GROSS') + '<br/><br/>';\n                    returnString += '<ul>';\n                    for (var _a = 0, filesTooBig_1 = filesTooBig; _a < filesTooBig_1.length; _a++) {\n                        var file = filesTooBig_1[_a];\n                        returnString += '<li>';\n                        returnString += file.name;\n                        returnString += '</li>';\n                    }\n                    returnString += '</ul>';\n                    _this.dvDialog.showDialog(okHtmlDialogTempl, OkHtmlDialogController_1.OkHtmlDialogController, {\n                        title: returnString\n                    });\n                }\n                if (filesOk.length > 0) {\n                    _this.uploadRS.uploadFile(filesOk, _this.dokumentePapiergesuch, gesuchID).then(function (response) {\n                        _this.dokumentePapiergesuch = angular.copy(response);\n                        _this.globalCacheService.getCache(TSCacheTyp_1.TSCacheTyp.EBEGU_DOCUMENT).removeAll();\n                    });\n                }\n            }\n        });\n    };\n    KommentarViewController.prototype.isGesuchUnsaved = function () {\n        return this.getGesuch().isNew();\n    };\n    KommentarViewController.prototype.getCurrentWizardStep = function () {\n        return this.wizardStepManager.getCurrentStep();\n    };\n    KommentarViewController.prototype.isGesuchReadonly = function () {\n        return this.gesuchModelManager.isGesuchReadonly();\n    };\n    KommentarViewController.prototype.isInBearbeitungSTV = function () {\n        return this.gesuchModelManager.getGesuch().status === TSAntragStatus_1.TSAntragStatus.IN_BEARBEITUNG_STV;\n    };\n    KommentarViewController.prototype.freigebenSTV = function () {\n        var _this = this;\n        this.dvDialog.showDialog(removeDialogTempl, RemoveDialogController_1.RemoveDialogController, {\n            title: this.getFreigabeTitel(),\n            deleteText: this.getFreigabeBeschreibung(),\n            parentController: undefined,\n            elementID: undefined\n        }).then(function () {\n            return _this.gesuchRS.gesuchBySTVFreigeben(_this.getGesuch().id).then(function (gesuch) {\n                _this.gesuchModelManager.setGesuch(gesuch);\n                _this.$state.go('pendenzenSteueramt');\n            });\n        });\n    };\n    KommentarViewController.prototype.showBemerkungenPruefungSTV = function () {\n        return this.getGesuch().geprueftSTV === true || this.getGesuch().status === TSAntragStatus_1.TSAntragStatus.PRUEFUNG_STV || this.getGesuch().status === TSAntragStatus_1.TSAntragStatus.IN_BEARBEITUNG_STV\n            || this.getGesuch().status === TSAntragStatus_1.TSAntragStatus.GEPRUEFT_STV;\n    };\n    KommentarViewController.prototype.getFreigabeName = function () {\n        return this.$translate.instant(this.getFreigabeTitel());\n    };\n    KommentarViewController.prototype.getFreigabeTitel = function () {\n        if (this.getGesuch().areThereOnlySchulamtAngebote()) {\n            return 'FREIGABE_SCH';\n        }\n        return 'FREIGABE_JA';\n    };\n    KommentarViewController.prototype.getFreigabeBeschreibung = function () {\n        if (this.getGesuch().areThereOnlySchulamtAngebote()) {\n            return 'FREIGABE_SCH_BESCHREIBUNG';\n        }\n        return 'FREIGABE_JA_BESCHREIBUNG';\n    };\n    KommentarViewController.$inject = ['$log', 'GesuchModelManager', 'GesuchRS', 'DokumenteRS', 'DownloadRS', '$q', 'UploadRS',\n        'WizardStepManager', 'GlobalCacheService', 'DvDialog', '$translate', '$window', 'GesuchstellerRS', '$rootScope', '$state', '$mdSidenav'];\n    return KommentarViewController;\n}());\nexports.KommentarViewController = KommentarViewController;\n",{"version":3,"file":"/home/imanol/projects/ebegu/ebegu-web/src/gesuch/component/kommentarView/kommentarView.ts","sourceRoot":"","sources":["/home/imanol/projects/ebegu/ebegu-web/src/gesuch/component/kommentarView/kommentarView.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Ki-Tax: System for the management of external childcare subsidies\n * Copyright (C) 2017 City of Bern Switzerland\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport {IComponentOptions, ILogService} from 'angular';\nimport GesuchModelManager from '../../service/gesuchModelManager';\nimport TSGesuch from '../../../models/TSGesuch';\nimport GesuchRS from '../../service/gesuchRS.rest';\nimport DokumenteRS from '../../service/dokumenteRS.rest';\nimport {TSDokumentGrundTyp} from '../../../models/enums/TSDokumentGrundTyp';\nimport TSDokumenteDTO from '../../../models/dto/TSDokumenteDTO';\nimport TSDokumentGrund from '../../../models/TSDokumentGrund';\nimport TSDokument from '../../../models/TSDokument';\nimport TSDownloadFile from '../../../models/TSDownloadFile';\nimport {DownloadRS} from '../../../core/service/downloadRS.rest';\nimport {UploadRS} from '../../../core/service/uploadRS.rest';\nimport WizardStepManager from '../../service/wizardStepManager';\nimport TSWizardStep from '../../../models/TSWizardStep';\nimport GlobalCacheService from '../../service/globalCacheService';\nimport {DvDialog} from '../../../core/directive/dv-dialog/dv-dialog';\nimport {OkHtmlDialogController} from '../../dialog/OkHtmlDialogController';\nimport {TSCacheTyp} from '../../../models/enums/TSCacheTyp';\nimport GesuchstellerRS from '../../../core/service/gesuchstellerRS.rest';\nimport {TSRoleUtil} from '../../../utils/TSRoleUtil';\nimport {TSAntragStatus} from '../../../models/enums/TSAntragStatus';\nimport {RemoveDialogController} from '../../dialog/RemoveDialogController';\nimport {IStateService} from 'angular-ui-router';\nimport IPromise = angular.IPromise;\nimport IQService = angular.IQService;\nimport ITranslateService = angular.translate.ITranslateService;\nimport IRootScopeService = angular.IRootScopeService;\nlet template = require('./kommentarView.html');\nrequire('./kommentarView.less');\nlet okHtmlDialogTempl = require('../../../gesuch/dialog/okHtmlDialogTemplate.html');\nlet removeDialogTempl = require('../../dialog/removeDialogTemplate.html');\n\nexport class KommentarViewComponentConfig implements IComponentOptions {\n    transclude = false;\n    template = template;\n    controller = KommentarViewController;\n    controllerAs = 'vm';\n}\n\n/**\n * Controller fuer den Kommentare\n */\nexport class KommentarViewController {\n\n    dokumentePapiergesuch: TSDokumentGrund;\n    TSRoleUtil: any;\n\n    static $inject: string[] = ['$log', 'GesuchModelManager', 'GesuchRS', 'DokumenteRS', 'DownloadRS', '$q', 'UploadRS',\n        'WizardStepManager', 'GlobalCacheService', 'DvDialog', '$translate', '$window', 'GesuchstellerRS', '$rootScope', '$state', '$mdSidenav'];\n    /* @ngInject */\n    constructor(private $log: ILogService, private gesuchModelManager: GesuchModelManager, private gesuchRS: GesuchRS,\n                private dokumenteRS: DokumenteRS, private downloadRS: DownloadRS, private $q: IQService,\n                private uploadRS: UploadRS, private wizardStepManager: WizardStepManager, private globalCacheService: GlobalCacheService,\n                private dvDialog: DvDialog, private $translate: ITranslateService, private $window: ng.IWindowService, private gesuchstellerRS: GesuchstellerRS,\n                private $rootScope: IRootScopeService, private $state: IStateService, private $mdSidenav: ng.material.ISidenavService) {\n\n        if (!this.isGesuchUnsaved()) {\n            this.getPapiergesuchFromServer();\n        }\n        this.TSRoleUtil = TSRoleUtil;\n    }\n\n    private getPapiergesuchFromServer(): IPromise<TSDokumenteDTO> {\n\n        return this.dokumenteRS.getDokumenteByTypeCached(\n            this.getGesuch(), TSDokumentGrundTyp.PAPIERGESUCH, this.globalCacheService.getCache(TSCacheTyp.EBEGU_DOCUMENT))\n            .then((promiseValue: TSDokumenteDTO) => {\n\n                if (promiseValue.dokumentGruende.length === 1) {\n                    this.dokumentePapiergesuch = promiseValue.dokumentGruende[0];\n                } else {\n                    console.log('Falsche anzahl Dokumente');\n                }\n                return promiseValue;\n            });\n    }\n\n    getGesuch(): TSGesuch {\n        return this.gesuchModelManager.getGesuch();\n    }\n    public toggleEwkSidenav() {\n        this.$mdSidenav('ewk').toggle();\n    }\n\n    public saveBemerkungZurVerfuegung(): void {\n        if (!this.isGesuchUnsaved()) {\n            // Bemerkungen auf dem Gesuch werden nur gespeichert, wenn das gesuch schon persisted ist!\n            this.gesuchRS.updateBemerkung(this.getGesuch().id, this.getGesuch().bemerkungen);\n        }\n    }\n\n    public saveBemerkungPruefungSTV(): void {\n        if (!this.isGesuchUnsaved()) {\n            // Bemerkungen auf dem Gesuch werden nur gespeichert, wenn das gesuch schon persisted ist!\n            this.gesuchRS.updateBemerkungPruefungSTV(this.getGesuch().id, this.getGesuch().bemerkungenPruefungSTV);\n        }\n    }\n\n    public saveStepBemerkung(): void {\n        if (!this.isGesuchUnsaved()) {\n            this.wizardStepManager.updateCurrentWizardStep();\n        }\n    }\n\n    hasPapiergesuch(): boolean {\n        if (this.dokumentePapiergesuch) {\n            if (this.dokumentePapiergesuch.dokumente && this.dokumentePapiergesuch.dokumente.length !== 0) {\n                if (this.dokumentePapiergesuch.dokumente[0].filename) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n\n    download() {\n        let win: Window = this.downloadRS.prepareDownloadWindow();\n        this.getPapiergesuchFromServer().then((promiseValue: any) => {\n            if (!this.hasPapiergesuch()) {\n                this.$log.error('Kein Papiergesuch für Download vorhanden!');\n            } else {\n                let newest: TSDokument = this.getNewest(this.dokumentePapiergesuch.dokumente);\n                this.downloadRS.getAccessTokenDokument(newest.id)\n                    .then((response) => {\n                        let tempDokument: TSDownloadFile = angular.copy(response);\n                        this.downloadRS.startDownload(tempDokument.accessToken, newest.filename, false, win);\n                    })\n                    .catch((ex) => {\n                        win.close();\n                        this.$log.error('An error occurred downloading the document, closing download window.');\n                    });\n            }\n        });\n    }\n\n    private getNewest(dokumente: Array<TSDokument>): TSDokument {\n        let newest: TSDokument = dokumente[0];\n        for (let i = 0; i < dokumente.length; i++) {\n            if (dokumente[i].timestampErstellt.isAfter(newest.timestampErstellt)) {\n                newest = dokumente[i];\n            }\n        }\n        return newest;\n\n    }\n\n    upload(files: any[]) {\n        this.getPapiergesuchFromServer().then((promiseValue: any) => {\n            if (this.hasPapiergesuch()) {\n                this.$log.error('Papiergesuch schon vorhanden');\n            } else {\n                let gesuchID = this.getGesuch().id;\n                console.log('Uploading files on gesuch ' + gesuchID);\n\n                let filesTooBig: any[] = [];\n                let filesOk: any[] = [];\n                this.$log.debug('Uploading files on gesuch ' + gesuchID);\n                for (let file of files) {\n                    this.$log.debug('File: ' + file.name + ' size: ' + file.size);\n                    if (file.size > 10000000) { // Maximale Filegrösse ist 10MB\n                        filesTooBig.push(file);\n                    } else {\n                        filesOk.push(file);\n                    }\n                }\n\n                if (filesTooBig.length > 0) {\n                    // DialogBox anzeigen für Files, welche zu gross sind!\n                    let returnString = this.$translate.instant('FILE_ZU_GROSS') + '<br/><br/>';\n                    returnString += '<ul>';\n                    for (let file of filesTooBig) {\n                        returnString += '<li>';\n                        returnString += file.name;\n                        returnString += '</li>';\n                    }\n                    returnString += '</ul>';\n\n                    this.dvDialog.showDialog(okHtmlDialogTempl, OkHtmlDialogController, {\n                        title: returnString\n                    });\n                }\n\n                if (filesOk.length > 0) {\n                    this.uploadRS.uploadFile(filesOk, this.dokumentePapiergesuch, gesuchID).then((response) => {\n                        this.dokumentePapiergesuch = angular.copy(response);\n                        this.globalCacheService.getCache(TSCacheTyp.EBEGU_DOCUMENT).removeAll();\n                    });\n                }\n            }\n        });\n    }\n\n    isGesuchUnsaved(): boolean {\n        return this.getGesuch().isNew();\n    }\n\n    public getCurrentWizardStep(): TSWizardStep {\n        return this.wizardStepManager.getCurrentStep();\n    }\n\n    public isGesuchReadonly(): boolean {\n        return this.gesuchModelManager.isGesuchReadonly();\n    }\n\n    public isInBearbeitungSTV(): boolean {\n        return this.gesuchModelManager.getGesuch().status === TSAntragStatus.IN_BEARBEITUNG_STV;\n    }\n\n    public freigebenSTV(): void {\n        this.dvDialog.showDialog(removeDialogTempl, RemoveDialogController, {\n            title: this.getFreigabeTitel(),\n            deleteText: this.getFreigabeBeschreibung(),\n            parentController: undefined,\n            elementID: undefined\n        }).then(() => {\n            return this.gesuchRS.gesuchBySTVFreigeben(this.getGesuch().id).then((gesuch: TSGesuch) => {\n                this.gesuchModelManager.setGesuch(gesuch);\n                this.$state.go('pendenzenSteueramt');\n            });\n        });\n    }\n\n    public showBemerkungenPruefungSTV(): boolean {\n        return this.getGesuch().geprueftSTV === true || this.getGesuch().status === TSAntragStatus.PRUEFUNG_STV || this.getGesuch().status === TSAntragStatus.IN_BEARBEITUNG_STV\n            || this.getGesuch().status === TSAntragStatus.GEPRUEFT_STV;\n    }\n\n    public getFreigabeName(): string {\n        return this.$translate.instant(this.getFreigabeTitel());\n    }\n\n    public getFreigabeTitel(): string {\n        if (this.getGesuch().areThereOnlySchulamtAngebote()) {\n            return 'FREIGABE_SCH';\n        }\n        return 'FREIGABE_JA';\n    }\n\n    public getFreigabeBeschreibung(): string {\n        if (this.getGesuch().areThereOnlySchulamtAngebote()) {\n            return 'FREIGABE_SCH_BESCHREIBUNG';\n        }\n        return 'FREIGABE_JA_BESCHREIBUNG';\n    }\n}\n"]}]}