{"remainingRequest":"/home/imanol/projects/ebegu/ebegu-web/node_modules/thread-loader/dist/cjs.js??ref--0-1!/home/imanol/projects/ebegu/ebegu-web/node_modules/ts-loader/index.js??ref--0-2!/home/imanol/projects/ebegu/ebegu-web/src/gesuch/component/kommentarView/kommentarView.ts","cacheIdentifier":"cache-loader:1.1.0 test","dependencies":[{"path":"/home/imanol/projects/ebegu/ebegu-web/src/gesuch/component/kommentarView/kommentarView.ts","mtime":1518535855228},{"path":"/home/imanol/projects/ebegu/ebegu-web/node_modules/cache-loader/dist/cjs.js","mtime":1507514019000},{"path":"/home/imanol/projects/ebegu/ebegu-web/node_modules/thread-loader/dist/cjs.js","mtime":1507523420000},{"path":"/home/imanol/projects/ebegu/ebegu-web/node_modules/ts-loader/index.js","mtime":1508488471000}],"contextDependencies":[],"result":["/*\n * Ki-Tax: System for the management of external childcare subsidies\n * Copyright (C) 2017 City of Bern Switzerland\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\ndefine([\"require\", \"exports\", \"../../../models/enums/TSDokumentGrundTyp\", \"../../dialog/OkHtmlDialogController\", \"../../../models/enums/TSCacheTyp\", \"../../../utils/TSRoleUtil\", \"../../../models/enums/TSAntragStatus\", \"../../dialog/RemoveDialogController\"], function (require, exports, TSDokumentGrundTyp_1, OkHtmlDialogController_1, TSCacheTyp_1, TSRoleUtil_1, TSAntragStatus_1, RemoveDialogController_1) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    var template = require('./kommentarView.html');\n    require('./kommentarView.less');\n    var okHtmlDialogTempl = require('../../../gesuch/dialog/okHtmlDialogTemplate.html');\n    var removeDialogTempl = require('../../dialog/removeDialogTemplate.html');\n    var KommentarViewComponentConfig = /** @class */ (function () {\n        function KommentarViewComponentConfig() {\n            this.transclude = false;\n            this.template = template;\n            this.controller = KommentarViewController;\n            this.controllerAs = 'vm';\n        }\n        return KommentarViewComponentConfig;\n    }());\n    exports.KommentarViewComponentConfig = KommentarViewComponentConfig;\n    /**\n     * Controller fuer den Kommentare\n     */\n    var KommentarViewController = /** @class */ (function () {\n        /* @ngInject */\n        function KommentarViewController($log, gesuchModelManager, gesuchRS, dokumenteRS, downloadRS, $q, uploadRS, wizardStepManager, globalCacheService, dvDialog, $translate, $window, gesuchstellerRS, $rootScope, $state, $mdSidenav) {\n            this.$log = $log;\n            this.gesuchModelManager = gesuchModelManager;\n            this.gesuchRS = gesuchRS;\n            this.dokumenteRS = dokumenteRS;\n            this.downloadRS = downloadRS;\n            this.$q = $q;\n            this.uploadRS = uploadRS;\n            this.wizardStepManager = wizardStepManager;\n            this.globalCacheService = globalCacheService;\n            this.dvDialog = dvDialog;\n            this.$translate = $translate;\n            this.$window = $window;\n            this.gesuchstellerRS = gesuchstellerRS;\n            this.$rootScope = $rootScope;\n            this.$state = $state;\n            this.$mdSidenav = $mdSidenav;\n            if (!this.isGesuchUnsaved()) {\n                this.getPapiergesuchFromServer();\n            }\n            this.TSRoleUtil = TSRoleUtil_1.TSRoleUtil;\n        }\n        KommentarViewController.prototype.getPapiergesuchFromServer = function () {\n            var _this = this;\n            return this.dokumenteRS.getDokumenteByTypeCached(this.getGesuch(), TSDokumentGrundTyp_1.TSDokumentGrundTyp.PAPIERGESUCH, this.globalCacheService.getCache(TSCacheTyp_1.TSCacheTyp.EBEGU_DOCUMENT))\n                .then(function (promiseValue) {\n                if (promiseValue.dokumentGruende.length === 1) {\n                    _this.dokumentePapiergesuch = promiseValue.dokumentGruende[0];\n                }\n                else {\n                    console.log('Falsche anzahl Dokumente');\n                }\n                return promiseValue;\n            });\n        };\n        KommentarViewController.prototype.getGesuch = function () {\n            return this.gesuchModelManager.getGesuch();\n        };\n        KommentarViewController.prototype.toggleEwkSidenav = function () {\n            this.$mdSidenav('ewk').toggle();\n        };\n        KommentarViewController.prototype.saveBemerkungZurVerfuegung = function () {\n            if (!this.isGesuchUnsaved()) {\n                // Bemerkungen auf dem Gesuch werden nur gespeichert, wenn das gesuch schon persisted ist!\n                this.gesuchRS.updateBemerkung(this.getGesuch().id, this.getGesuch().bemerkungen);\n            }\n        };\n        KommentarViewController.prototype.saveBemerkungPruefungSTV = function () {\n            if (!this.isGesuchUnsaved()) {\n                // Bemerkungen auf dem Gesuch werden nur gespeichert, wenn das gesuch schon persisted ist!\n                this.gesuchRS.updateBemerkungPruefungSTV(this.getGesuch().id, this.getGesuch().bemerkungenPruefungSTV);\n            }\n        };\n        KommentarViewController.prototype.saveStepBemerkung = function () {\n            if (!this.isGesuchUnsaved()) {\n                this.wizardStepManager.updateCurrentWizardStep();\n            }\n        };\n        KommentarViewController.prototype.hasPapiergesuch = function () {\n            if (this.dokumentePapiergesuch) {\n                if (this.dokumentePapiergesuch.dokumente && this.dokumentePapiergesuch.dokumente.length !== 0) {\n                    if (this.dokumentePapiergesuch.dokumente[0].filename) {\n                        return true;\n                    }\n                }\n            }\n            return false;\n        };\n        KommentarViewController.prototype.download = function () {\n            var _this = this;\n            var win = this.downloadRS.prepareDownloadWindow();\n            this.getPapiergesuchFromServer().then(function (promiseValue) {\n                if (!_this.hasPapiergesuch()) {\n                    _this.$log.error('Kein Papiergesuch für Download vorhanden!');\n                }\n                else {\n                    var newest_1 = _this.getNewest(_this.dokumentePapiergesuch.dokumente);\n                    _this.downloadRS.getAccessTokenDokument(newest_1.id)\n                        .then(function (response) {\n                        var tempDokument = angular.copy(response);\n                        _this.downloadRS.startDownload(tempDokument.accessToken, newest_1.filename, false, win);\n                    })\n                        .catch(function (ex) {\n                        win.close();\n                        _this.$log.error('An error occurred downloading the document, closing download window.');\n                    });\n                }\n            });\n        };\n        KommentarViewController.prototype.getNewest = function (dokumente) {\n            var newest = dokumente[0];\n            for (var i = 0; i < dokumente.length; i++) {\n                if (dokumente[i].timestampErstellt.isAfter(newest.timestampErstellt)) {\n                    newest = dokumente[i];\n                }\n            }\n            return newest;\n        };\n        KommentarViewController.prototype.upload = function (files) {\n            var _this = this;\n            this.getPapiergesuchFromServer().then(function (promiseValue) {\n                if (_this.hasPapiergesuch()) {\n                    _this.$log.error('Papiergesuch schon vorhanden');\n                }\n                else {\n                    var gesuchID = _this.getGesuch().id;\n                    console.log('Uploading files on gesuch ' + gesuchID);\n                    var filesTooBig = [];\n                    var filesOk = [];\n                    _this.$log.debug('Uploading files on gesuch ' + gesuchID);\n                    for (var _i = 0, files_1 = files; _i < files_1.length; _i++) {\n                        var file = files_1[_i];\n                        _this.$log.debug('File: ' + file.name + ' size: ' + file.size);\n                        if (file.size > 10000000) {\n                            filesTooBig.push(file);\n                        }\n                        else {\n                            filesOk.push(file);\n                        }\n                    }\n                    if (filesTooBig.length > 0) {\n                        // DialogBox anzeigen für Files, welche zu gross sind!\n                        var returnString = _this.$translate.instant('FILE_ZU_GROSS') + '<br/><br/>';\n                        returnString += '<ul>';\n                        for (var _a = 0, filesTooBig_1 = filesTooBig; _a < filesTooBig_1.length; _a++) {\n                            var file = filesTooBig_1[_a];\n                            returnString += '<li>';\n                            returnString += file.name;\n                            returnString += '</li>';\n                        }\n                        returnString += '</ul>';\n                        _this.dvDialog.showDialog(okHtmlDialogTempl, OkHtmlDialogController_1.OkHtmlDialogController, {\n                            title: returnString\n                        });\n                    }\n                    if (filesOk.length > 0) {\n                        _this.uploadRS.uploadFile(filesOk, _this.dokumentePapiergesuch, gesuchID).then(function (response) {\n                            _this.dokumentePapiergesuch = angular.copy(response);\n                            _this.globalCacheService.getCache(TSCacheTyp_1.TSCacheTyp.EBEGU_DOCUMENT).removeAll();\n                        });\n                    }\n                }\n            });\n        };\n        KommentarViewController.prototype.isGesuchUnsaved = function () {\n            return this.getGesuch().isNew();\n        };\n        KommentarViewController.prototype.getCurrentWizardStep = function () {\n            return this.wizardStepManager.getCurrentStep();\n        };\n        KommentarViewController.prototype.isGesuchReadonly = function () {\n            return this.gesuchModelManager.isGesuchReadonly();\n        };\n        KommentarViewController.prototype.isInBearbeitungSTV = function () {\n            return this.gesuchModelManager.getGesuch().status === TSAntragStatus_1.TSAntragStatus.IN_BEARBEITUNG_STV;\n        };\n        KommentarViewController.prototype.freigebenSTV = function () {\n            var _this = this;\n            this.dvDialog.showDialog(removeDialogTempl, RemoveDialogController_1.RemoveDialogController, {\n                title: 'FREIGABE_JA',\n                deleteText: 'FREIGABE_JA_BESCHREIBUNG',\n                parentController: undefined,\n                elementID: undefined\n            }).then(function () {\n                return _this.gesuchRS.gesuchBySTVFreigeben(_this.getGesuch().id).then(function (gesuch) {\n                    _this.gesuchModelManager.setGesuch(gesuch);\n                    _this.$state.go('pendenzenSteueramt');\n                });\n            });\n        };\n        KommentarViewController.prototype.showBemerkungenPruefungSTV = function () {\n            return this.getGesuch().geprueftSTV === true || this.getGesuch().status === TSAntragStatus_1.TSAntragStatus.PRUEFUNG_STV || this.getGesuch().status === TSAntragStatus_1.TSAntragStatus.IN_BEARBEITUNG_STV\n                || this.getGesuch().status === TSAntragStatus_1.TSAntragStatus.GEPRUEFT_STV;\n        };\n        KommentarViewController.$inject = ['$log', 'GesuchModelManager', 'GesuchRS', 'DokumenteRS', 'DownloadRS', '$q', 'UploadRS',\n            'WizardStepManager', 'GlobalCacheService', 'DvDialog', '$translate', '$window', 'GesuchstellerRS', '$rootScope', '$state', '$mdSidenav'];\n        return KommentarViewController;\n    }());\n    exports.KommentarViewController = KommentarViewController;\n});\n",{"version":3,"file":"/home/imanol/projects/ebegu/ebegu-web/src/gesuch/component/kommentarView/kommentarView.ts","sourceRoot":"","sources":["/home/imanol/projects/ebegu/ebegu-web/src/gesuch/component/kommentarView/kommentarView.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Ki-Tax: System for the management of external childcare subsidies\n * Copyright (C) 2017 City of Bern Switzerland\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport {IComponentOptions, ILogService} from 'angular';\nimport GesuchModelManager from '../../service/gesuchModelManager';\nimport TSGesuch from '../../../models/TSGesuch';\nimport GesuchRS from '../../service/gesuchRS.rest';\nimport DokumenteRS from '../../service/dokumenteRS.rest';\nimport {TSDokumentGrundTyp} from '../../../models/enums/TSDokumentGrundTyp';\nimport TSDokumenteDTO from '../../../models/dto/TSDokumenteDTO';\nimport TSDokumentGrund from '../../../models/TSDokumentGrund';\nimport TSDokument from '../../../models/TSDokument';\nimport TSDownloadFile from '../../../models/TSDownloadFile';\nimport {DownloadRS} from '../../../core/service/downloadRS.rest';\nimport {UploadRS} from '../../../core/service/uploadRS.rest';\nimport WizardStepManager from '../../service/wizardStepManager';\nimport TSWizardStep from '../../../models/TSWizardStep';\nimport GlobalCacheService from '../../service/globalCacheService';\nimport {DvDialog} from '../../../core/directive/dv-dialog/dv-dialog';\nimport {OkHtmlDialogController} from '../../dialog/OkHtmlDialogController';\nimport {TSCacheTyp} from '../../../models/enums/TSCacheTyp';\nimport GesuchstellerRS from '../../../core/service/gesuchstellerRS.rest';\nimport {TSRoleUtil} from '../../../utils/TSRoleUtil';\nimport {TSAntragStatus} from '../../../models/enums/TSAntragStatus';\nimport {RemoveDialogController} from '../../dialog/RemoveDialogController';\nimport {IStateService} from 'angular-ui-router';\nimport IPromise = angular.IPromise;\nimport IQService = angular.IQService;\nimport ITranslateService = angular.translate.ITranslateService;\nimport IRootScopeService = angular.IRootScopeService;\nlet template = require('./kommentarView.html');\nrequire('./kommentarView.less');\nlet okHtmlDialogTempl = require('../../../gesuch/dialog/okHtmlDialogTemplate.html');\nlet removeDialogTempl = require('../../dialog/removeDialogTemplate.html');\n\nexport class KommentarViewComponentConfig implements IComponentOptions {\n    transclude = false;\n    template = template;\n    controller = KommentarViewController;\n    controllerAs = 'vm';\n}\n\n/**\n * Controller fuer den Kommentare\n */\nexport class KommentarViewController {\n\n    dokumentePapiergesuch: TSDokumentGrund;\n    TSRoleUtil: any;\n\n    static $inject: string[] = ['$log', 'GesuchModelManager', 'GesuchRS', 'DokumenteRS', 'DownloadRS', '$q', 'UploadRS',\n        'WizardStepManager', 'GlobalCacheService', 'DvDialog', '$translate', '$window', 'GesuchstellerRS', '$rootScope', '$state', '$mdSidenav'];\n    /* @ngInject */\n    constructor(private $log: ILogService, private gesuchModelManager: GesuchModelManager, private gesuchRS: GesuchRS,\n                private dokumenteRS: DokumenteRS, private downloadRS: DownloadRS, private $q: IQService,\n                private uploadRS: UploadRS, private wizardStepManager: WizardStepManager, private globalCacheService: GlobalCacheService,\n                private dvDialog: DvDialog, private $translate: ITranslateService, private $window: ng.IWindowService, private gesuchstellerRS: GesuchstellerRS,\n                private $rootScope: IRootScopeService, private $state: IStateService, private $mdSidenav: ng.material.ISidenavService) {\n\n        if (!this.isGesuchUnsaved()) {\n            this.getPapiergesuchFromServer();\n        }\n        this.TSRoleUtil = TSRoleUtil;\n    }\n\n    private getPapiergesuchFromServer(): IPromise<TSDokumenteDTO> {\n\n        return this.dokumenteRS.getDokumenteByTypeCached(\n            this.getGesuch(), TSDokumentGrundTyp.PAPIERGESUCH, this.globalCacheService.getCache(TSCacheTyp.EBEGU_DOCUMENT))\n            .then((promiseValue: TSDokumenteDTO) => {\n\n                if (promiseValue.dokumentGruende.length === 1) {\n                    this.dokumentePapiergesuch = promiseValue.dokumentGruende[0];\n                } else {\n                    console.log('Falsche anzahl Dokumente');\n                }\n                return promiseValue;\n            });\n    }\n\n    getGesuch(): TSGesuch {\n        return this.gesuchModelManager.getGesuch();\n    }\n    public toggleEwkSidenav() {\n        this.$mdSidenav('ewk').toggle();\n    }\n\n    public saveBemerkungZurVerfuegung(): void {\n        if (!this.isGesuchUnsaved()) {\n            // Bemerkungen auf dem Gesuch werden nur gespeichert, wenn das gesuch schon persisted ist!\n            this.gesuchRS.updateBemerkung(this.getGesuch().id, this.getGesuch().bemerkungen);\n        }\n    }\n\n    public saveBemerkungPruefungSTV(): void {\n        if (!this.isGesuchUnsaved()) {\n            // Bemerkungen auf dem Gesuch werden nur gespeichert, wenn das gesuch schon persisted ist!\n            this.gesuchRS.updateBemerkungPruefungSTV(this.getGesuch().id, this.getGesuch().bemerkungenPruefungSTV);\n        }\n    }\n\n    public saveStepBemerkung(): void {\n        if (!this.isGesuchUnsaved()) {\n            this.wizardStepManager.updateCurrentWizardStep();\n        }\n    }\n\n    hasPapiergesuch(): boolean {\n        if (this.dokumentePapiergesuch) {\n            if (this.dokumentePapiergesuch.dokumente && this.dokumentePapiergesuch.dokumente.length !== 0) {\n                if (this.dokumentePapiergesuch.dokumente[0].filename) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n\n    download() {\n        let win: Window = this.downloadRS.prepareDownloadWindow();\n        this.getPapiergesuchFromServer().then((promiseValue: any) => {\n            if (!this.hasPapiergesuch()) {\n                this.$log.error('Kein Papiergesuch für Download vorhanden!');\n            } else {\n                let newest: TSDokument = this.getNewest(this.dokumentePapiergesuch.dokumente);\n                this.downloadRS.getAccessTokenDokument(newest.id)\n                    .then((response) => {\n                        let tempDokument: TSDownloadFile = angular.copy(response);\n                        this.downloadRS.startDownload(tempDokument.accessToken, newest.filename, false, win);\n                    })\n                    .catch((ex) => {\n                        win.close();\n                        this.$log.error('An error occurred downloading the document, closing download window.');\n                    });\n            }\n        });\n    }\n\n    private getNewest(dokumente: Array<TSDokument>): TSDokument {\n        let newest: TSDokument = dokumente[0];\n        for (let i = 0; i < dokumente.length; i++) {\n            if (dokumente[i].timestampErstellt.isAfter(newest.timestampErstellt)) {\n                newest = dokumente[i];\n            }\n        }\n        return newest;\n\n    }\n\n    upload(files: any[]) {\n        this.getPapiergesuchFromServer().then((promiseValue: any) => {\n            if (this.hasPapiergesuch()) {\n                this.$log.error('Papiergesuch schon vorhanden');\n            } else {\n                let gesuchID = this.getGesuch().id;\n                console.log('Uploading files on gesuch ' + gesuchID);\n\n                let filesTooBig: any[] = [];\n                let filesOk: any[] = [];\n                this.$log.debug('Uploading files on gesuch ' + gesuchID);\n                for (let file of files) {\n                    this.$log.debug('File: ' + file.name + ' size: ' + file.size);\n                    if (file.size > 10000000) { // Maximale Filegrösse ist 10MB\n                        filesTooBig.push(file);\n                    } else {\n                        filesOk.push(file);\n                    }\n                }\n\n                if (filesTooBig.length > 0) {\n                    // DialogBox anzeigen für Files, welche zu gross sind!\n                    let returnString = this.$translate.instant('FILE_ZU_GROSS') + '<br/><br/>';\n                    returnString += '<ul>';\n                    for (let file of filesTooBig) {\n                        returnString += '<li>';\n                        returnString += file.name;\n                        returnString += '</li>';\n                    }\n                    returnString += '</ul>';\n\n                    this.dvDialog.showDialog(okHtmlDialogTempl, OkHtmlDialogController, {\n                        title: returnString\n                    });\n                }\n\n                if (filesOk.length > 0) {\n                    this.uploadRS.uploadFile(filesOk, this.dokumentePapiergesuch, gesuchID).then((response) => {\n                        this.dokumentePapiergesuch = angular.copy(response);\n                        this.globalCacheService.getCache(TSCacheTyp.EBEGU_DOCUMENT).removeAll();\n                    });\n                }\n            }\n        });\n    }\n\n    isGesuchUnsaved(): boolean {\n        return this.getGesuch().isNew();\n    }\n\n    public getCurrentWizardStep(): TSWizardStep {\n        return this.wizardStepManager.getCurrentStep();\n    }\n\n    public isGesuchReadonly(): boolean {\n        return this.gesuchModelManager.isGesuchReadonly();\n    }\n\n    public isInBearbeitungSTV(): boolean {\n        return this.gesuchModelManager.getGesuch().status === TSAntragStatus.IN_BEARBEITUNG_STV;\n    }\n\n    public freigebenSTV(): void {\n        this.dvDialog.showDialog(removeDialogTempl, RemoveDialogController, {\n            title: 'FREIGABE_JA',\n            deleteText: 'FREIGABE_JA_BESCHREIBUNG',\n            parentController: undefined,\n            elementID: undefined\n        }).then(() => {\n            return this.gesuchRS.gesuchBySTVFreigeben(this.getGesuch().id).then((gesuch: TSGesuch) => {\n                this.gesuchModelManager.setGesuch(gesuch);\n                this.$state.go('pendenzenSteueramt');\n            });\n        });\n    }\n\n    public showBemerkungenPruefungSTV(): boolean {\n        return this.getGesuch().geprueftSTV === true || this.getGesuch().status === TSAntragStatus.PRUEFUNG_STV || this.getGesuch().status === TSAntragStatus.IN_BEARBEITUNG_STV\n            || this.getGesuch().status === TSAntragStatus.GEPRUEFT_STV;\n    }\n}\n"]}]}