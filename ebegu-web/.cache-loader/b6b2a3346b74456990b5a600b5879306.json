{"remainingRequest":"/home/imanol/projects/ebegu/ebegu-web/node_modules/thread-loader/dist/cjs.js??ref--0-1!/home/imanol/projects/ebegu/ebegu-web/node_modules/ts-loader/index.js??ref--0-2!/home/imanol/projects/ebegu/ebegu-web/src/core/service/institutionStammdatenRS.rest.ts","cacheIdentifier":"cache-loader:1.1.0 test","dependencies":[{"path":"/home/imanol/projects/ebegu/ebegu-web/src/core/service/institutionStammdatenRS.rest.ts","mtime":1518535855220},{"path":"/home/imanol/projects/ebegu/ebegu-web/node_modules/cache-loader/dist/cjs.js","mtime":1507514019000},{"path":"/home/imanol/projects/ebegu/ebegu-web/node_modules/thread-loader/dist/cjs.js","mtime":1507523420000},{"path":"/home/imanol/projects/ebegu/ebegu-web/node_modules/ts-loader/index.js","mtime":1508488471000}],"contextDependencies":[],"result":["/*\n * Ki-Tax: System for the management of external childcare subsidies\n * Copyright (C) 2017 City of Bern Switzerland\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\ndefine([\"require\", \"exports\", \"../../models/TSInstitutionStammdaten\", \"../../utils/DateUtil\"], function (require, exports, TSInstitutionStammdaten_1, DateUtil_1) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    var InstitutionStammdatenRS = /** @class */ (function () {\n        /* @ngInject */\n        function InstitutionStammdatenRS($http, REST_API, ebeguRestUtil, $log) {\n            this.serviceURL = REST_API + 'institutionstammdaten';\n            this.http = $http;\n            this.ebeguRestUtil = ebeguRestUtil;\n            this.log = $log;\n        }\n        InstitutionStammdatenRS.prototype.findInstitutionStammdaten = function (institutionStammdatenID) {\n            var _this = this;\n            return this.http.get(this.serviceURL + '/id/' + encodeURIComponent(institutionStammdatenID))\n                .then(function (response) {\n                _this.log.debug('PARSING InstitutionStammdaten REST object ', response.data);\n                return _this.ebeguRestUtil.parseInstitutionStammdaten(new TSInstitutionStammdaten_1.default(), response.data);\n            });\n        };\n        InstitutionStammdatenRS.prototype.createInstitutionStammdaten = function (institutionStammdaten) {\n            return this.saveInstitutionStammdaten(institutionStammdaten);\n        };\n        InstitutionStammdatenRS.prototype.updateInstitutionStammdaten = function (institutionStammdaten) {\n            return this.saveInstitutionStammdaten(institutionStammdaten);\n        };\n        InstitutionStammdatenRS.prototype.saveInstitutionStammdaten = function (institutionStammdaten) {\n            var _this = this;\n            var restInstitutionStammdaten = {};\n            restInstitutionStammdaten = this.ebeguRestUtil.institutionStammdatenToRestObject(restInstitutionStammdaten, institutionStammdaten);\n            return this.http.put(this.serviceURL, restInstitutionStammdaten, {\n                headers: {\n                    'Content-Type': 'application/json'\n                }\n            }).then(function (response) {\n                _this.log.debug('PARSING institutionStammdaten REST object', response.data);\n                return _this.ebeguRestUtil.parseInstitutionStammdaten(new TSInstitutionStammdaten_1.default(), response.data);\n            });\n        };\n        InstitutionStammdatenRS.prototype.removeInstitutionStammdaten = function (institutionStammdatenID) {\n            return this.http.delete(this.serviceURL + '/' + encodeURIComponent(institutionStammdatenID));\n        };\n        InstitutionStammdatenRS.prototype.getAllInstitutionStammdaten = function () {\n            var _this = this;\n            return this.http.get(this.serviceURL).then(function (response) {\n                _this.log.debug('PARSING institutionStammdaten REST array object', response.data);\n                return _this.ebeguRestUtil.parseInstitutionStammdatenArray(response.data);\n            });\n        };\n        InstitutionStammdatenRS.prototype.getAllInstitutionStammdatenByDate = function (dateParam) {\n            var _this = this;\n            return this.http.get(this.serviceURL + '/date', { params: { date: DateUtil_1.default.momentToLocalDate(dateParam) } })\n                .then(function (response) {\n                _this.log.debug('PARSING institutionStammdaten REST array object', response.data);\n                return _this.ebeguRestUtil.parseInstitutionStammdatenArray(response.data);\n            });\n        };\n        InstitutionStammdatenRS.prototype.getAllActiveInstitutionStammdatenByDate = function (dateParam) {\n            var _this = this;\n            return this.http.get(this.serviceURL + '/date/active', { params: { date: DateUtil_1.default.momentToLocalDate(dateParam) } })\n                .then(function (response) {\n                _this.log.debug('PARSING institutionStammdaten REST array object', response.data);\n                return _this.ebeguRestUtil.parseInstitutionStammdatenArray(response.data);\n            });\n        };\n        InstitutionStammdatenRS.prototype.getAllInstitutionStammdatenByInstitution = function (institutionID) {\n            var _this = this;\n            return this.http.get(this.serviceURL + '/institution' + '/' + encodeURIComponent(institutionID))\n                .then(function (response) {\n                _this.log.debug('PARSING institutionStammdaten REST array object', response.data);\n                return _this.ebeguRestUtil.parseInstitutionStammdatenArray(response.data);\n            });\n        };\n        InstitutionStammdatenRS.prototype.getBetreuungsangeboteForInstitutionenOfCurrentBenutzer = function () {\n            var _this = this;\n            return this.http.get(this.serviceURL + '/currentuser')\n                .then(function (response) {\n                _this.log.debug('PARSING institutionStammdaten REST array object', response.data);\n                return response.data;\n            });\n        };\n        InstitutionStammdatenRS.prototype.getServiceName = function () {\n            return 'InstitutionStammdatenRS';\n        };\n        InstitutionStammdatenRS.$inject = ['$http', 'REST_API', 'EbeguRestUtil', '$log'];\n        return InstitutionStammdatenRS;\n    }());\n    exports.InstitutionStammdatenRS = InstitutionStammdatenRS;\n});\n",{"version":3,"file":"/home/imanol/projects/ebegu/ebegu-web/src/core/service/institutionStammdatenRS.rest.ts","sourceRoot":"","sources":["/home/imanol/projects/ebegu/ebegu-web/src/core/service/institutionStammdatenRS.rest.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Ki-Tax: System for the management of external childcare subsidies\n * Copyright (C) 2017 City of Bern Switzerland\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport {IHttpPromise, IHttpService, ILogService, IPromise} from 'angular';\nimport EbeguRestUtil from '../../utils/EbeguRestUtil';\nimport TSInstitutionStammdaten from '../../models/TSInstitutionStammdaten';\nimport DateUtil from '../../utils/DateUtil';\nimport {TSBetreuungsangebotTyp} from '../../models/enums/TSBetreuungsangebotTyp';\nimport * as moment from 'moment';\n\nexport class InstitutionStammdatenRS {\n    serviceURL: string;\n    http: IHttpService;\n    ebeguRestUtil: EbeguRestUtil;\n    log: ILogService;\n\n    static $inject = ['$http', 'REST_API', 'EbeguRestUtil', '$log'];\n    /* @ngInject */\n    constructor($http: IHttpService, REST_API: string, ebeguRestUtil: EbeguRestUtil, $log: ILogService) {\n        this.serviceURL = REST_API + 'institutionstammdaten';\n        this.http = $http;\n        this.ebeguRestUtil = ebeguRestUtil;\n        this.log = $log;\n    }\n\n    public findInstitutionStammdaten(institutionStammdatenID: string): IPromise<TSInstitutionStammdaten> {\n        return this.http.get(this.serviceURL + '/id/' + encodeURIComponent(institutionStammdatenID))\n            .then((response: any) => {\n                this.log.debug('PARSING InstitutionStammdaten REST object ', response.data);\n                return this.ebeguRestUtil.parseInstitutionStammdaten(new TSInstitutionStammdaten(), response.data);\n            });\n    }\n\n    public createInstitutionStammdaten(institutionStammdaten: TSInstitutionStammdaten): IPromise<TSInstitutionStammdaten> {\n        return this.saveInstitutionStammdaten(institutionStammdaten);\n    }\n\n    public updateInstitutionStammdaten(institutionStammdaten: TSInstitutionStammdaten): IPromise<TSInstitutionStammdaten> {\n        return this.saveInstitutionStammdaten(institutionStammdaten);\n    }\n\n    private saveInstitutionStammdaten(institutionStammdaten: TSInstitutionStammdaten): IPromise<TSInstitutionStammdaten> {\n        let restInstitutionStammdaten = {};\n        restInstitutionStammdaten = this.ebeguRestUtil.institutionStammdatenToRestObject(restInstitutionStammdaten, institutionStammdaten);\n\n        return this.http.put(this.serviceURL, restInstitutionStammdaten, {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }).then((response: any) => {\n                this.log.debug('PARSING institutionStammdaten REST object', response.data);\n                return this.ebeguRestUtil.parseInstitutionStammdaten(new TSInstitutionStammdaten(), response.data);\n            }\n        );\n    }\n\n    public removeInstitutionStammdaten(institutionStammdatenID: string): IHttpPromise<any> {\n        return this.http.delete(this.serviceURL + '/' + encodeURIComponent(institutionStammdatenID));\n    }\n\n    public getAllInstitutionStammdaten(): IPromise<TSInstitutionStammdaten[]> {\n        return this.http.get(this.serviceURL).then((response: any) => {\n            this.log.debug('PARSING institutionStammdaten REST array object', response.data);\n            return this.ebeguRestUtil.parseInstitutionStammdatenArray(response.data);\n        });\n    }\n\n    public getAllInstitutionStammdatenByDate(dateParam: moment.Moment): IPromise<TSInstitutionStammdaten[]> {\n        return this.http.get(this.serviceURL + '/date', {params: {date: DateUtil.momentToLocalDate(dateParam)}})\n            .then((response: any) => {\n                this.log.debug('PARSING institutionStammdaten REST array object', response.data);\n                return this.ebeguRestUtil.parseInstitutionStammdatenArray(response.data);\n            });\n    }\n\n    public getAllActiveInstitutionStammdatenByDate(dateParam: moment.Moment): IPromise<TSInstitutionStammdaten[]> {\n        return this.http.get(this.serviceURL + '/date/active', {params: {date: DateUtil.momentToLocalDate(dateParam)}})\n            .then((response: any) => {\n                this.log.debug('PARSING institutionStammdaten REST array object', response.data);\n                return this.ebeguRestUtil.parseInstitutionStammdatenArray(response.data);\n            });\n    }\n\n    public getAllInstitutionStammdatenByInstitution(institutionID: string): IPromise<TSInstitutionStammdaten[]> {\n        return this.http.get(this.serviceURL + '/institution' + '/' + encodeURIComponent(institutionID))\n            .then((response: any) => {\n                this.log.debug('PARSING institutionStammdaten REST array object', response.data);\n                return this.ebeguRestUtil.parseInstitutionStammdatenArray(response.data);\n            });\n    }\n\n    public getBetreuungsangeboteForInstitutionenOfCurrentBenutzer(): IPromise<TSBetreuungsangebotTyp[]> {\n        return this.http.get(this.serviceURL + '/currentuser')\n            .then((response: any) => {\n                this.log.debug('PARSING institutionStammdaten REST array object', response.data);\n                return response.data;\n            });\n    }\n\n    public getServiceName(): string {\n        return 'InstitutionStammdatenRS';\n    }\n\n}\n"]}]}