{"remainingRequest":"/home/imanol/projects/ebegu/ebegu-web/node_modules/thread-loader/dist/cjs.js??ref--0-1!/home/imanol/projects/ebegu/ebegu-web/node_modules/ts-loader/index.js??ref--0-2!/home/imanol/projects/ebegu/ebegu-web/src/core/service/institutionStammdatenRS.rest.ts","cacheIdentifier":"cache-loader:1.1.0 test","dependencies":[{"path":"/home/imanol/projects/ebegu/ebegu-web/src/core/service/institutionStammdatenRS.rest.ts","mtime":1518612532794},{"path":"/home/imanol/projects/ebegu/ebegu-web/node_modules/cache-loader/dist/cjs.js","mtime":1507514019000},{"path":"/home/imanol/projects/ebegu/ebegu-web/node_modules/thread-loader/dist/cjs.js","mtime":1507523420000},{"path":"/home/imanol/projects/ebegu/ebegu-web/node_modules/ts-loader/index.js","mtime":1508488471000}],"contextDependencies":[],"result":["\"use strict\";\n/*\n * Ki-Tax: System for the management of external childcare subsidies\n * Copyright (C) 2017 City of Bern Switzerland\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar TSInstitutionStammdaten_1 = require(\"../../models/TSInstitutionStammdaten\");\nvar DateUtil_1 = require(\"../../utils/DateUtil\");\nvar InstitutionStammdatenRS = /** @class */ (function () {\n    /* @ngInject */\n    function InstitutionStammdatenRS($http, REST_API, ebeguRestUtil, $log) {\n        this.serviceURL = REST_API + 'institutionstammdaten';\n        this.http = $http;\n        this.ebeguRestUtil = ebeguRestUtil;\n        this.log = $log;\n    }\n    InstitutionStammdatenRS.prototype.findInstitutionStammdaten = function (institutionStammdatenID) {\n        var _this = this;\n        return this.http.get(this.serviceURL + '/id/' + encodeURIComponent(institutionStammdatenID))\n            .then(function (response) {\n            _this.log.debug('PARSING InstitutionStammdaten REST object ', response.data);\n            return _this.ebeguRestUtil.parseInstitutionStammdaten(new TSInstitutionStammdaten_1.default(), response.data);\n        });\n    };\n    InstitutionStammdatenRS.prototype.createInstitutionStammdaten = function (institutionStammdaten) {\n        return this.saveInstitutionStammdaten(institutionStammdaten);\n    };\n    InstitutionStammdatenRS.prototype.updateInstitutionStammdaten = function (institutionStammdaten) {\n        return this.saveInstitutionStammdaten(institutionStammdaten);\n    };\n    InstitutionStammdatenRS.prototype.saveInstitutionStammdaten = function (institutionStammdaten) {\n        var _this = this;\n        var restInstitutionStammdaten = {};\n        restInstitutionStammdaten = this.ebeguRestUtil.institutionStammdatenToRestObject(restInstitutionStammdaten, institutionStammdaten);\n        return this.http.put(this.serviceURL, restInstitutionStammdaten, {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }).then(function (response) {\n            _this.log.debug('PARSING institutionStammdaten REST object', response.data);\n            return _this.ebeguRestUtil.parseInstitutionStammdaten(new TSInstitutionStammdaten_1.default(), response.data);\n        });\n    };\n    InstitutionStammdatenRS.prototype.removeInstitutionStammdaten = function (institutionStammdatenID) {\n        return this.http.delete(this.serviceURL + '/' + encodeURIComponent(institutionStammdatenID));\n    };\n    InstitutionStammdatenRS.prototype.getAllInstitutionStammdaten = function () {\n        var _this = this;\n        return this.http.get(this.serviceURL).then(function (response) {\n            _this.log.debug('PARSING institutionStammdaten REST array object', response.data);\n            return _this.ebeguRestUtil.parseInstitutionStammdatenArray(response.data);\n        });\n    };\n    InstitutionStammdatenRS.prototype.getAllInstitutionStammdatenByDate = function (dateParam) {\n        var _this = this;\n        return this.http.get(this.serviceURL + '/date', { params: { date: DateUtil_1.default.momentToLocalDate(dateParam) } })\n            .then(function (response) {\n            _this.log.debug('PARSING institutionStammdaten REST array object', response.data);\n            return _this.ebeguRestUtil.parseInstitutionStammdatenArray(response.data);\n        });\n    };\n    InstitutionStammdatenRS.prototype.getAllActiveInstitutionStammdatenByDate = function (dateParam) {\n        var _this = this;\n        return this.http.get(this.serviceURL + '/date/active', { params: { date: DateUtil_1.default.momentToLocalDate(dateParam) } })\n            .then(function (response) {\n            _this.log.debug('PARSING institutionStammdaten REST array object', response.data);\n            return _this.ebeguRestUtil.parseInstitutionStammdatenArray(response.data);\n        });\n    };\n    InstitutionStammdatenRS.prototype.getAllInstitutionStammdatenByInstitution = function (institutionID) {\n        var _this = this;\n        return this.http.get(this.serviceURL + '/institution' + '/' + encodeURIComponent(institutionID))\n            .then(function (response) {\n            _this.log.debug('PARSING institutionStammdaten REST array object', response.data);\n            return _this.ebeguRestUtil.parseInstitutionStammdatenArray(response.data);\n        });\n    };\n    InstitutionStammdatenRS.prototype.getBetreuungsangeboteForInstitutionenOfCurrentBenutzer = function () {\n        var _this = this;\n        return this.http.get(this.serviceURL + '/currentuser')\n            .then(function (response) {\n            _this.log.debug('PARSING institutionStammdaten REST array object', response.data);\n            return response.data;\n        });\n    };\n    InstitutionStammdatenRS.prototype.getServiceName = function () {\n        return 'InstitutionStammdatenRS';\n    };\n    InstitutionStammdatenRS.$inject = ['$http', 'REST_API', 'EbeguRestUtil', '$log'];\n    return InstitutionStammdatenRS;\n}());\nexports.InstitutionStammdatenRS = InstitutionStammdatenRS;\n",{"version":3,"file":"/home/imanol/projects/ebegu/ebegu-web/src/core/service/institutionStammdatenRS.rest.ts","sourceRoot":"","sources":["/home/imanol/projects/ebegu/ebegu-web/src/core/service/institutionStammdatenRS.rest.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Ki-Tax: System for the management of external childcare subsidies\n * Copyright (C) 2017 City of Bern Switzerland\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport {IHttpPromise, IHttpService, ILogService, IPromise} from 'angular';\nimport * as moment from 'moment';\nimport {TSBetreuungsangebotTyp} from '../../models/enums/TSBetreuungsangebotTyp';\nimport TSInstitutionStammdaten from '../../models/TSInstitutionStammdaten';\nimport DateUtil from '../../utils/DateUtil';\nimport EbeguRestUtil from '../../utils/EbeguRestUtil';\n\nexport class InstitutionStammdatenRS {\n    serviceURL: string;\n    http: IHttpService;\n    ebeguRestUtil: EbeguRestUtil;\n    log: ILogService;\n\n    static $inject = ['$http', 'REST_API', 'EbeguRestUtil', '$log'];\n    /* @ngInject */\n    constructor($http: IHttpService, REST_API: string, ebeguRestUtil: EbeguRestUtil, $log: ILogService) {\n        this.serviceURL = REST_API + 'institutionstammdaten';\n        this.http = $http;\n        this.ebeguRestUtil = ebeguRestUtil;\n        this.log = $log;\n    }\n\n    public findInstitutionStammdaten(institutionStammdatenID: string): IPromise<TSInstitutionStammdaten> {\n        return this.http.get(this.serviceURL + '/id/' + encodeURIComponent(institutionStammdatenID))\n            .then((response: any) => {\n                this.log.debug('PARSING InstitutionStammdaten REST object ', response.data);\n                return this.ebeguRestUtil.parseInstitutionStammdaten(new TSInstitutionStammdaten(), response.data);\n            });\n    }\n\n    public createInstitutionStammdaten(institutionStammdaten: TSInstitutionStammdaten): IPromise<TSInstitutionStammdaten> {\n        return this.saveInstitutionStammdaten(institutionStammdaten);\n    }\n\n    public updateInstitutionStammdaten(institutionStammdaten: TSInstitutionStammdaten): IPromise<TSInstitutionStammdaten> {\n        return this.saveInstitutionStammdaten(institutionStammdaten);\n    }\n\n    private saveInstitutionStammdaten(institutionStammdaten: TSInstitutionStammdaten): IPromise<TSInstitutionStammdaten> {\n        let restInstitutionStammdaten = {};\n        restInstitutionStammdaten = this.ebeguRestUtil.institutionStammdatenToRestObject(restInstitutionStammdaten, institutionStammdaten);\n\n        return this.http.put(this.serviceURL, restInstitutionStammdaten, {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }).then((response: any) => {\n                this.log.debug('PARSING institutionStammdaten REST object', response.data);\n                return this.ebeguRestUtil.parseInstitutionStammdaten(new TSInstitutionStammdaten(), response.data);\n            }\n        );\n    }\n\n    public removeInstitutionStammdaten(institutionStammdatenID: string): IHttpPromise<any> {\n        return this.http.delete(this.serviceURL + '/' + encodeURIComponent(institutionStammdatenID));\n    }\n\n    public getAllInstitutionStammdaten(): IPromise<TSInstitutionStammdaten[]> {\n        return this.http.get(this.serviceURL).then((response: any) => {\n            this.log.debug('PARSING institutionStammdaten REST array object', response.data);\n            return this.ebeguRestUtil.parseInstitutionStammdatenArray(response.data);\n        });\n    }\n\n    public getAllInstitutionStammdatenByDate(dateParam: moment.Moment): IPromise<TSInstitutionStammdaten[]> {\n        return this.http.get(this.serviceURL + '/date', {params: {date: DateUtil.momentToLocalDate(dateParam)}})\n            .then((response: any) => {\n                this.log.debug('PARSING institutionStammdaten REST array object', response.data);\n                return this.ebeguRestUtil.parseInstitutionStammdatenArray(response.data);\n            });\n    }\n\n    public getAllActiveInstitutionStammdatenByDate(dateParam: moment.Moment): IPromise<TSInstitutionStammdaten[]> {\n        return this.http.get(this.serviceURL + '/date/active', {params: {date: DateUtil.momentToLocalDate(dateParam)}})\n            .then((response: any) => {\n                this.log.debug('PARSING institutionStammdaten REST array object', response.data);\n                return this.ebeguRestUtil.parseInstitutionStammdatenArray(response.data);\n            });\n    }\n\n    public getAllInstitutionStammdatenByInstitution(institutionID: string): IPromise<TSInstitutionStammdaten[]> {\n        return this.http.get(this.serviceURL + '/institution' + '/' + encodeURIComponent(institutionID))\n            .then((response: any) => {\n                this.log.debug('PARSING institutionStammdaten REST array object', response.data);\n                return this.ebeguRestUtil.parseInstitutionStammdatenArray(response.data);\n            });\n    }\n\n    public getBetreuungsangeboteForInstitutionenOfCurrentBenutzer(): IPromise<TSBetreuungsangebotTyp[]> {\n        return this.http.get(this.serviceURL + '/currentuser')\n            .then((response: any) => {\n                this.log.debug('PARSING institutionStammdaten REST array object', response.data);\n                return response.data;\n            });\n    }\n\n    public getServiceName(): string {\n        return 'InstitutionStammdatenRS';\n    }\n}\n"]}]}