{"remainingRequest":"/home/imanol/projects/ebegu/ebegu-web/node_modules/thread-loader/dist/cjs.js??ref--0-1!/home/imanol/projects/ebegu/ebegu-web/node_modules/ts-loader/index.js??ref--0-2!/home/imanol/projects/ebegu/ebegu-web/src/gesuch/service/WizardStepRS.rest.ts","cacheIdentifier":"cache-loader:1.1.0 test","dependencies":[{"path":"/home/imanol/projects/ebegu/ebegu-web/src/gesuch/service/WizardStepRS.rest.ts","mtime":1512484412019},{"path":"/home/imanol/projects/ebegu/ebegu-web/node_modules/cache-loader/dist/cjs.js","mtime":1507514019000},{"path":"/home/imanol/projects/ebegu/ebegu-web/node_modules/thread-loader/dist/cjs.js","mtime":1507523420000},{"path":"/home/imanol/projects/ebegu/ebegu-web/node_modules/ts-loader/index.js","mtime":1508488471000}],"contextDependencies":[],"result":["\"use strict\";\n/*\n * Ki-Tax: System for the management of external childcare subsidies\n * Copyright (C) 2017 City of Bern Switzerland\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar TSWizardStep_1 = require(\"../../models/TSWizardStep\");\nvar WizardStepRS = /** @class */ (function () {\n    /* @ngInject */\n    function WizardStepRS($http, REST_API, ebeguRestUtil, $log) {\n        this.$log = $log;\n        this.serviceURL = REST_API + 'wizard-steps';\n        this.http = $http;\n        this.ebeguRestUtil = ebeguRestUtil;\n    }\n    WizardStepRS.prototype.updateWizardStep = function (wizardStep) {\n        var _this = this;\n        var wizardStepObject = this.ebeguRestUtil.wizardStepToRestObject({}, wizardStep);\n        return this.http.post(this.serviceURL, wizardStepObject, {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }).then(function (response) {\n            _this.$log.debug('PARSING WizardStep REST object ', response.data);\n            return _this.ebeguRestUtil.parseWizardStep(new TSWizardStep_1.default(), response.data);\n        });\n    };\n    WizardStepRS.prototype.findWizardStepsFromGesuch = function (gesuchID) {\n        var _this = this;\n        return this.http.get(this.serviceURL + '/' + encodeURIComponent(gesuchID))\n            .then(function (response) {\n            _this.$log.debug('PARSING wizardSteps REST objects ', response.data);\n            return _this.ebeguRestUtil.parseWizardStepList(response.data);\n        });\n    };\n    WizardStepRS.prototype.getServiceName = function () {\n        return 'WizardStepRS';\n    };\n    WizardStepRS.prototype.setWizardStepMutiert = function (wizardStepId) {\n        var _this = this;\n        return this.http.post(this.serviceURL + '/setWizardStepMutiert/' + encodeURIComponent(wizardStepId), null)\n            .then(function (response) {\n            return _this.ebeguRestUtil.parseWizardStep(new TSWizardStep_1.default(), response.data);\n        });\n    };\n    WizardStepRS.$inject = ['$http', 'REST_API', 'EbeguRestUtil', '$log'];\n    return WizardStepRS;\n}());\nexports.default = WizardStepRS;\n",{"version":3,"file":"/home/imanol/projects/ebegu/ebegu-web/src/gesuch/service/WizardStepRS.rest.ts","sourceRoot":"","sources":["/home/imanol/projects/ebegu/ebegu-web/src/gesuch/service/WizardStepRS.rest.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;GAaG;;AAIH,0DAAqD;AAErD;IAMI,eAAe;IACf,sBAAY,KAAmB,EAAE,QAAgB,EAAE,aAA4B,EAAU,IAAiB;QAAjB,SAAI,GAAJ,IAAI,CAAa;QACtG,IAAI,CAAC,UAAU,GAAG,QAAQ,GAAG,cAAc,CAAC;QAC5C,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;QAClB,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;IACvC,CAAC;IAEM,uCAAgB,GAAvB,UAAwB,UAAwB;QAAhD,iBAWC;QAVG,IAAI,gBAAgB,GAAG,IAAI,CAAC,aAAa,CAAC,sBAAsB,CAAC,EAAE,EAAE,UAAU,CAAC,CAAC;QAEjF,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE,gBAAgB,EAAE;YACrD,OAAO,EAAE;gBACL,cAAc,EAAE,kBAAkB;aACrC;SACJ,CAAC,CAAC,IAAI,CAAC,UAAC,QAAa;YAClB,KAAI,CAAC,IAAI,CAAC,KAAK,CAAC,iCAAiC,EAAE,QAAQ,CAAC,IAAI,CAAC,CAAC;YAClE,MAAM,CAAC,KAAI,CAAC,aAAa,CAAC,eAAe,CAAC,IAAI,sBAAY,EAAE,EAAE,QAAQ,CAAC,IAAI,CAAC,CAAC;QACjF,CAAC,CAAC,CAAC;IACP,CAAC;IAEM,gDAAyB,GAAhC,UAAiC,QAAgB;QAAjD,iBAMC;QALG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,GAAG,GAAG,GAAG,kBAAkB,CAAC,QAAQ,CAAC,CAAC;aACrE,IAAI,CAAC,UAAC,QAAa;YAChB,KAAI,CAAC,IAAI,CAAC,KAAK,CAAC,mCAAmC,EAAE,QAAQ,CAAC,IAAI,CAAC,CAAC;YACpE,MAAM,CAAC,KAAI,CAAC,aAAa,CAAC,mBAAmB,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;QACjE,CAAC,CAAC,CAAC;IACX,CAAC;IAEM,qCAAc,GAArB;QACI,MAAM,CAAC,cAAc,CAAC;IAC1B,CAAC;IAEM,2CAAoB,GAA3B,UAA4B,YAAoB;QAAhD,iBAKC;QAJG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,GAAG,wBAAwB,GAAG,kBAAkB,CAAC,YAAY,CAAC,EAAE,IAAI,CAAC;aACrG,IAAI,CAAC,UAAC,QAAQ;YACf,MAAM,CAAC,KAAI,CAAC,aAAa,CAAC,eAAe,CAAC,IAAI,sBAAY,EAAE,EAAE,QAAQ,CAAC,IAAI,CAAC,CAAC;QACjF,CAAC,CAAC,CAAC;IACP,CAAC;IAtCM,oBAAO,GAAG,CAAC,OAAO,EAAE,UAAU,EAAE,eAAe,EAAE,MAAM,CAAC,CAAC;IAuCpE,mBAAC;CAAA,AA5CD,IA4CC;kBA5CoB,YAAY","sourcesContent":["/*\n * Ki-Tax: System for the management of external childcare subsidies\n * Copyright (C) 2017 City of Bern Switzerland\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport {IHttpService, ILogService, IPromise} from 'angular';\nimport EbeguRestUtil from '../../utils/EbeguRestUtil';\nimport TSWizardStep from '../../models/TSWizardStep';\n\nexport default class WizardStepRS {\n    serviceURL: string;\n    http: IHttpService;\n    ebeguRestUtil: EbeguRestUtil;\n\n    static $inject = ['$http', 'REST_API', 'EbeguRestUtil', '$log'];\n    /* @ngInject */\n    constructor($http: IHttpService, REST_API: string, ebeguRestUtil: EbeguRestUtil, private $log: ILogService) {\n        this.serviceURL = REST_API + 'wizard-steps';\n        this.http = $http;\n        this.ebeguRestUtil = ebeguRestUtil;\n    }\n\n    public updateWizardStep(wizardStep: TSWizardStep): IPromise<any> {\n        let wizardStepObject = this.ebeguRestUtil.wizardStepToRestObject({}, wizardStep);\n\n        return this.http.post(this.serviceURL, wizardStepObject, {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }).then((response: any) => {\n            this.$log.debug('PARSING WizardStep REST object ', response.data);\n            return this.ebeguRestUtil.parseWizardStep(new TSWizardStep(), response.data);\n        });\n    }\n\n    public findWizardStepsFromGesuch(gesuchID: string): IPromise<any> {\n        return this.http.get(this.serviceURL + '/' + encodeURIComponent(gesuchID))\n            .then((response: any) => {\n                this.$log.debug('PARSING wizardSteps REST objects ', response.data);\n                return this.ebeguRestUtil.parseWizardStepList(response.data);\n            });\n    }\n\n    public getServiceName(): string {\n        return 'WizardStepRS';\n    }\n\n    public setWizardStepMutiert(wizardStepId: string): IPromise<TSWizardStep> {\n        return this.http.post(this.serviceURL + '/setWizardStepMutiert/' + encodeURIComponent(wizardStepId), null)\n            .then((response) => {\n            return this.ebeguRestUtil.parseWizardStep(new TSWizardStep(), response.data);\n        });\n    }\n}\n"]}]}