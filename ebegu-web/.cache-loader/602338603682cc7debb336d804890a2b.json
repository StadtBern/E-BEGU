{"remainingRequest":"/home/imanol/projects/ebegu/ebegu-web/node_modules/thread-loader/dist/cjs.js??ref--0-1!/home/imanol/projects/ebegu/ebegu-web/node_modules/ts-loader/index.js??ref--0-2!/home/imanol/projects/ebegu/ebegu-web/src/core/component/dv-dokumente-list/dv-dokumente-list.ts","cacheIdentifier":"cache-loader:1.1.0 test","dependencies":[{"path":"/home/imanol/projects/ebegu/ebegu-web/src/core/component/dv-dokumente-list/dv-dokumente-list.ts","mtime":1518612532786},{"path":"/home/imanol/projects/ebegu/ebegu-web/node_modules/cache-loader/dist/cjs.js","mtime":1507514019000},{"path":"/home/imanol/projects/ebegu/ebegu-web/node_modules/thread-loader/dist/cjs.js","mtime":1507523420000},{"path":"/home/imanol/projects/ebegu/ebegu-web/node_modules/ts-loader/index.js","mtime":1508488471000}],"contextDependencies":[],"result":["\"use strict\";\n/*\n * Ki-Tax: System for the management of external childcare subsidies\n * Copyright (C) 2017 City of Bern Switzerland\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar RemoveDialogController_1 = require(\"../../../gesuch/dialog/RemoveDialogController\");\nvar OkHtmlDialogController_1 = require(\"../../../gesuch/dialog/OkHtmlDialogController\");\nvar TSRoleUtil_1 = require(\"../../../utils/TSRoleUtil\");\nvar TSDokumentGrundPersonType_1 = require(\"../../../models/enums/TSDokumentGrundPersonType\");\nvar TSRole_1 = require(\"../../../models/enums/TSRole\");\nvar TSAntragStatus_1 = require(\"../../../models/enums/TSAntragStatus\");\nvar template = require('./dv-dokumente-list.html');\nvar removeDialogTemplate = require('../../../gesuch/dialog/removeDialogTemplate.html');\nrequire('./dv-dokumente-list.less');\nvar okHtmlDialogTempl = require('../../../gesuch/dialog/okHtmlDialogTemplate.html');\nvar DVDokumenteListConfig = /** @class */ (function () {\n    function DVDokumenteListConfig() {\n        this.transclude = false;\n        this.bindings = {\n            dokumente: '<',\n            tableId: '@',\n            tableTitle: '@',\n            tag: '@',\n            titleValue: '<',\n            onUploadDone: '&',\n            onRemove: '&',\n            sonstige: '<'\n        };\n        this.template = template;\n        this.controller = DVDokumenteListController;\n        this.controllerAs = 'vm';\n    }\n    return DVDokumenteListConfig;\n}());\nexports.DVDokumenteListConfig = DVDokumenteListConfig;\nvar DVDokumenteListController = /** @class */ (function () {\n    /* @ngInject */\n    function DVDokumenteListController(uploadRS, gesuchModelManager, ebeguUtil, downloadRS, dvDialog, wizardStepManager, $log, authServiceRS, $translate, $window, applicationPropertyRS) {\n        this.uploadRS = uploadRS;\n        this.gesuchModelManager = gesuchModelManager;\n        this.ebeguUtil = ebeguUtil;\n        this.downloadRS = downloadRS;\n        this.dvDialog = dvDialog;\n        this.wizardStepManager = wizardStepManager;\n        this.$log = $log;\n        this.authServiceRS = authServiceRS;\n        this.$translate = $translate;\n        this.$window = $window;\n        this.applicationPropertyRS = applicationPropertyRS;\n        this.allowedMimetypes = '';\n    }\n    DVDokumenteListController.prototype.$onInit = function () {\n        var _this = this;\n        this.applicationPropertyRS.getAllowedMimetypes().then(function (response) {\n            if (response !== undefined) {\n                _this.allowedMimetypes = response.value;\n            }\n        });\n    };\n    DVDokumenteListController.prototype.uploadAnhaenge = function (files, selectDokument) {\n        var _this = this;\n        if (this.gesuchModelManager.getGesuch()) {\n            var gesuchID = this.gesuchModelManager.getGesuch().id;\n            var filesTooBig = [];\n            var filesOk = [];\n            this.$log.debug('Uploading files on gesuch ' + gesuchID);\n            for (var _i = 0, files_1 = files; _i < files_1.length; _i++) {\n                var file = files_1[_i];\n                this.$log.debug('File: ' + file.name + ' size: ' + file.size);\n                if (file.size > 10000000) {\n                    filesTooBig.push(file);\n                }\n                else {\n                    filesOk.push(file);\n                }\n            }\n            if (filesTooBig.length > 0) {\n                // DialogBox anzeigen f√ºr Files, welche zu gross sind!\n                var returnString = this.$translate.instant('FILE_ZU_GROSS') + '<br/><br/>';\n                returnString += '<ul>';\n                for (var _a = 0, filesTooBig_1 = filesTooBig; _a < filesTooBig_1.length; _a++) {\n                    var file = filesTooBig_1[_a];\n                    returnString += '<li>';\n                    returnString += file.name;\n                    returnString += '</li>';\n                }\n                returnString += '</ul>';\n                this.dvDialog.showDialog(okHtmlDialogTempl, OkHtmlDialogController_1.OkHtmlDialogController, {\n                    title: returnString\n                });\n            }\n            if (filesOk.length > 0) {\n                this.uploadRS.uploadFile(filesOk, selectDokument, gesuchID).then(function (response) {\n                    var returnedDG = angular.copy(response);\n                    _this.wizardStepManager.findStepsFromGesuch(_this.gesuchModelManager.getGesuch().id).then(function () {\n                        _this.handleUpload(returnedDG);\n                    });\n                });\n            }\n        }\n        else {\n            this.$log.warn('No gesuch found to store file or gesuch is status verfuegt');\n        }\n    };\n    DVDokumenteListController.prototype.hasDokuments = function (selectDokument) {\n        if (selectDokument.dokumente) {\n            for (var _i = 0, _a = selectDokument.dokumente; _i < _a.length; _i++) {\n                var dokument = _a[_i];\n                if (dokument.filename) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    DVDokumenteListController.prototype.handleUpload = function (returnedDG) {\n        this.onUploadDone({ dokument: returnedDG });\n    };\n    DVDokumenteListController.prototype.isRemoveAllowed = function (dokumentGrund, dokument) {\n        // Loeschen von Dokumenten ist nur in folgenden Faellen erlaubt:\n        // - GS bis Freigabe (d.h nicht readonlyForRole). In diesem Status kann es nur \"seine\" Dokumente geben\n        // - JA bis Verfuegen, aber nur die von JA hinzugefuegten: d.h. wenn noch nicht verfuegt: die eigenen, wenn readonly: nichts\n        // - Admin: Auch nach verfuegen, aber nur die vom JA hinzugefuegten: wenn noch nicht verfuegt oder readonly: die eigenen\n        // - Alle anderen Rollen: nichts\n        var readonly = this.isGesuchReadonly();\n        var roleLoggedIn = this.authServiceRS.getPrincipalRole();\n        var documentUploadedByAmt = true; // by default true in case there is no uploadUser\n        if (dokument.userUploaded) {\n            var roleDocumentUpload = dokument.userUploaded.role;\n            documentUploadedByAmt = (roleDocumentUpload === TSRole_1.TSRole.SACHBEARBEITER_JA || roleDocumentUpload === TSRole_1.TSRole.ADMIN\n                || roleDocumentUpload === TSRole_1.TSRole.SCHULAMT || roleDocumentUpload === TSRole_1.TSRole.ADMINISTRATOR_SCHULAMT || roleDocumentUpload === TSRole_1.TSRole.SUPER_ADMIN);\n        }\n        if (roleLoggedIn === TSRole_1.TSRole.GESUCHSTELLER) {\n            return !readonly;\n        }\n        else if (roleLoggedIn === TSRole_1.TSRole.SACHBEARBEITER_JA || roleLoggedIn === TSRole_1.TSRole.SCHULAMT) {\n            return !readonly && documentUploadedByAmt;\n        }\n        else if (roleLoggedIn === TSRole_1.TSRole.ADMIN || roleLoggedIn === TSRole_1.TSRole.SUPER_ADMIN || roleLoggedIn === TSRole_1.TSRole.ADMINISTRATOR_SCHULAMT) {\n            return documentUploadedByAmt;\n        }\n        return false;\n    };\n    DVDokumenteListController.prototype.remove = function (dokumentGrund, dokument) {\n        var _this = this;\n        this.$log.debug('component -> remove dokument ' + dokument.filename);\n        this.dvDialog.showDialog(removeDialogTemplate, RemoveDialogController_1.RemoveDialogController, {\n            deleteText: '',\n            title: 'FILE_LOESCHEN',\n            parentController: undefined,\n            elementID: undefined\n        })\n            .then(function () {\n            _this.onRemove({ dokumentGrund: dokumentGrund, dokument: dokument });\n        });\n    };\n    DVDokumenteListController.prototype.download = function (dokument, attachment) {\n        var _this = this;\n        this.$log.debug('download dokument ' + dokument.filename);\n        var win = this.downloadRS.prepareDownloadWindow();\n        this.downloadRS.getAccessTokenDokument(dokument.id)\n            .then(function (downloadFile) {\n            _this.$log.debug('accessToken: ' + downloadFile.accessToken);\n            _this.downloadRS.startDownload(downloadFile.accessToken, downloadFile.filename, attachment, win);\n        })\n            .catch(function (ex) {\n            win.close();\n            _this.$log.error('An error occurred downloading the document, closing download window.');\n        });\n    };\n    DVDokumenteListController.prototype.getWidth = function () {\n        if (this.sonstige) {\n            return '95%';\n        }\n        else {\n            if (this.tag) {\n                return '45%';\n            }\n            else {\n                return '60%';\n            }\n        }\n    };\n    DVDokumenteListController.prototype.isGesuchReadonly = function () {\n        return this.gesuchModelManager.isGesuchReadonly();\n    };\n    DVDokumenteListController.prototype.isDokumenteUploadDisabled = function () {\n        // Dokument-Upload ist eigentlich in jedem Status m√∂glich, aber nicht f√ºr alle Rollen. Also nicht\n        // gleichbedeutend mit readonly auf dem Gesuch\n        // Jedoch darf der Gesuchsteller nach der Verfuegung nichts mehr hochladen\n        var gsAndVerfuegt = TSAntragStatus_1.isAnyStatusOfVerfuegtButSchulamt(this.gesuchModelManager.getGesuch().status) && this.authServiceRS.isRole(TSRole_1.TSRole.GESUCHSTELLER);\n        return gsAndVerfuegt || this.authServiceRS.isOneOfRoles(TSRoleUtil_1.TSRoleUtil.getReadOnlyRoles());\n    };\n    /**\n     * According to the personType the right FullName will be calculated.\n     * - For FREETEXT the value in field fullName prevails.\n     * - For GESUCHSTELLER the fullname will be taken out of the GESUCHSTELLER. The value of personNumber indicates from which Gesuchsteller.\n     * - For KIND the fullname will be taken out of the KIND. The value of personNumber indicates from which Kind using its field kindNumber.\n     */\n    DVDokumenteListController.prototype.extractFullName = function (dokumentGrund) {\n        if (dokumentGrund.personType === TSDokumentGrundPersonType_1.TSDokumentGrundPersonType.FREETEXT) {\n            return dokumentGrund.fullName;\n        }\n        else if (dokumentGrund.personType === TSDokumentGrundPersonType_1.TSDokumentGrundPersonType.GESUCHSTELLER) {\n            if (this.gesuchModelManager.getGesuch()) {\n                if (dokumentGrund.personNumber === 2 && this.gesuchModelManager.getGesuch().gesuchsteller2) {\n                    return this.gesuchModelManager.getGesuch().gesuchsteller2.extractFullName();\n                }\n                else if (dokumentGrund.personNumber === 1 && this.gesuchModelManager.getGesuch().gesuchsteller1) {\n                    return this.gesuchModelManager.getGesuch().gesuchsteller1.extractFullName();\n                }\n            }\n        }\n        else if (dokumentGrund.personType === TSDokumentGrundPersonType_1.TSDokumentGrundPersonType.KIND) {\n            if (this.gesuchModelManager.getGesuch() && this.gesuchModelManager.getGesuch().kindContainers) {\n                var kindContainer = this.gesuchModelManager.getGesuch().extractKindFromKindNumber(dokumentGrund.personNumber);\n                if (kindContainer && kindContainer.kindJA) {\n                    return kindContainer.kindJA.getFullName();\n                }\n            }\n        }\n        return '';\n    };\n    DVDokumenteListController.$inject = ['UploadRS', 'GesuchModelManager', 'EbeguUtil', 'DownloadRS', 'DvDialog', 'WizardStepManager',\n        '$log', 'AuthServiceRS', '$translate', '$window', 'ApplicationPropertyRS'];\n    return DVDokumenteListController;\n}());\nexports.DVDokumenteListController = DVDokumenteListController;\n",{"version":3,"file":"/home/imanol/projects/ebegu/ebegu-web/src/core/component/dv-dokumente-list/dv-dokumente-list.ts","sourceRoot":"","sources":["/home/imanol/projects/ebegu/ebegu-web/src/core/component/dv-dokumente-list/dv-dokumente-list.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Ki-Tax: System for the management of external childcare subsidies\n * Copyright (C) 2017 City of Bern Switzerland\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport {IComponentOptions, ILogService} from 'angular';\nimport TSDokumentGrund from '../../../models/TSDokumentGrund';\nimport {UploadRS} from '../../service/uploadRS.rest';\nimport GesuchModelManager from '../../../gesuch/service/gesuchModelManager';\nimport EbeguUtil from '../../../utils/EbeguUtil';\nimport TSDokument from '../../../models/TSDokument';\nimport {DownloadRS} from '../../service/downloadRS.rest';\nimport TSDownloadFile from '../../../models/TSDownloadFile';\nimport {DvDialog} from '../../directive/dv-dialog/dv-dialog';\nimport {RemoveDialogController} from '../../../gesuch/dialog/RemoveDialogController';\nimport WizardStepManager from '../../../gesuch/service/wizardStepManager';\nimport AuthServiceRS from '../../../authentication/service/AuthServiceRS.rest';\nimport {OkHtmlDialogController} from '../../../gesuch/dialog/OkHtmlDialogController';\nimport {TSRoleUtil} from '../../../utils/TSRoleUtil';\nimport {TSDokumentGrundPersonType} from '../../../models/enums/TSDokumentGrundPersonType';\nimport TSKindContainer from '../../../models/TSKindContainer';\nimport {TSRole} from '../../../models/enums/TSRole';\nimport {isAnyStatusOfVerfuegtButSchulamt} from '../../../models/enums/TSAntragStatus';\nimport {ApplicationPropertyRS} from '../../../admin/service/applicationPropertyRS.rest';\nimport TSApplicationProperty from '../../../models/TSApplicationProperty';\nimport ITranslateService = angular.translate.ITranslateService;\n\nlet template = require('./dv-dokumente-list.html');\nlet removeDialogTemplate = require('../../../gesuch/dialog/removeDialogTemplate.html');\nrequire('./dv-dokumente-list.less');\nlet okHtmlDialogTempl = require('../../../gesuch/dialog/okHtmlDialogTemplate.html');\n\nexport class DVDokumenteListConfig implements IComponentOptions {\n    transclude = false;\n\n    bindings: any = {\n        dokumente: '<',\n        tableId: '@',\n        tableTitle: '@',\n        tag: '@',\n        titleValue: '<',\n        onUploadDone: '&',\n        onRemove: '&',\n        sonstige: '<'\n\n    };\n    template = template;\n    controller = DVDokumenteListController;\n    controllerAs = 'vm';\n}\n\nexport class DVDokumenteListController {\n\n    dokumente: TSDokumentGrund[];\n    tableId: string;\n    tableTitle: string;\n    tag: string;\n    titleValue: string;\n    onUploadDone: (dokumentGrund: any) => void;\n    onRemove: (attrs: any) => void;\n    sonstige: boolean;\n    allowedMimetypes: string = '';\n\n    static $inject: any[] = ['UploadRS', 'GesuchModelManager', 'EbeguUtil', 'DownloadRS', 'DvDialog', 'WizardStepManager',\n        '$log', 'AuthServiceRS', '$translate', '$window', 'ApplicationPropertyRS'];\n\n    /* @ngInject */\n    constructor(private uploadRS: UploadRS, private gesuchModelManager: GesuchModelManager, private ebeguUtil: EbeguUtil,\n        private downloadRS: DownloadRS, private dvDialog: DvDialog, private wizardStepManager: WizardStepManager,\n        private $log: ILogService, private authServiceRS: AuthServiceRS, private $translate: ITranslateService,\n        private $window: ng.IWindowService, private applicationPropertyRS: ApplicationPropertyRS) {\n\n    }\n\n    $onInit() {\n        this.applicationPropertyRS.getAllowedMimetypes().then((response: TSApplicationProperty) => {\n            if (response !== undefined) {\n                this.allowedMimetypes = response.value;\n            }\n        });\n\n    }\n\n    uploadAnhaenge(files: any[], selectDokument: TSDokumentGrund) {\n        if (this.gesuchModelManager.getGesuch()) {\n            let gesuchID = this.gesuchModelManager.getGesuch().id;\n            let filesTooBig: any[] = [];\n            let filesOk: any[] = [];\n            this.$log.debug('Uploading files on gesuch ' + gesuchID);\n            for (let file of files) {\n                this.$log.debug('File: ' + file.name + ' size: ' + file.size);\n                if (file.size > 10000000) { // Maximale Filegr√∂sse ist 10MB\n                    filesTooBig.push(file);\n                } else {\n                    filesOk.push(file);\n                }\n            }\n\n            if (filesTooBig.length > 0) {\n                // DialogBox anzeigen f√ºr Files, welche zu gross sind!\n                let returnString = this.$translate.instant('FILE_ZU_GROSS') + '<br/><br/>';\n                returnString += '<ul>';\n                for (let file of filesTooBig) {\n                    returnString += '<li>';\n                    returnString += file.name;\n                    returnString += '</li>';\n                }\n                returnString += '</ul>';\n\n                this.dvDialog.showDialog(okHtmlDialogTempl, OkHtmlDialogController, {\n                    title: returnString\n                });\n            }\n\n            if (filesOk.length > 0) {\n                this.uploadRS.uploadFile(filesOk, selectDokument, gesuchID).then((response) => {\n                    let returnedDG: TSDokumentGrund = angular.copy(response);\n                    this.wizardStepManager.findStepsFromGesuch(this.gesuchModelManager.getGesuch().id).then(() => {\n                        this.handleUpload(returnedDG);\n                    });\n                });\n            }\n        } else {\n            this.$log.warn('No gesuch found to store file or gesuch is status verfuegt');\n        }\n    }\n\n    hasDokuments(selectDokument: TSDokumentGrund): boolean {\n        if (selectDokument.dokumente) {\n            for (let dokument of selectDokument.dokumente) {\n                if (dokument.filename) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n\n    handleUpload(returnedDG: TSDokumentGrund) {\n        this.onUploadDone({dokument: returnedDG});\n    }\n\n    isRemoveAllowed(dokumentGrund: TSDokumentGrund, dokument: TSDokument): boolean {\n        // Loeschen von Dokumenten ist nur in folgenden Faellen erlaubt:\n        // - GS bis Freigabe (d.h nicht readonlyForRole). In diesem Status kann es nur \"seine\" Dokumente geben\n        // - JA bis Verfuegen, aber nur die von JA hinzugefuegten: d.h. wenn noch nicht verfuegt: die eigenen, wenn readonly: nichts\n        // - Admin: Auch nach verfuegen, aber nur die vom JA hinzugefuegten: wenn noch nicht verfuegt oder readonly: die eigenen\n        // - Alle anderen Rollen: nichts\n        let readonly: boolean = this.isGesuchReadonly();\n        let roleLoggedIn: TSRole = this.authServiceRS.getPrincipalRole();\n        let documentUploadedByAmt: boolean = true; // by default true in case there is no uploadUser\n        if (dokument.userUploaded) {\n            let roleDocumentUpload: TSRole = dokument.userUploaded.role;\n            documentUploadedByAmt = (roleDocumentUpload === TSRole.SACHBEARBEITER_JA || roleDocumentUpload === TSRole.ADMIN\n                || roleDocumentUpload === TSRole.SCHULAMT || roleDocumentUpload === TSRole.ADMINISTRATOR_SCHULAMT || roleDocumentUpload === TSRole.SUPER_ADMIN);\n        }\n        if (roleLoggedIn === TSRole.GESUCHSTELLER) {\n            return !readonly;\n        } else if (roleLoggedIn === TSRole.SACHBEARBEITER_JA || roleLoggedIn === TSRole.SCHULAMT) {\n            return !readonly && documentUploadedByAmt;\n        } else if (roleLoggedIn === TSRole.ADMIN || roleLoggedIn === TSRole.SUPER_ADMIN || roleLoggedIn === TSRole.ADMINISTRATOR_SCHULAMT) {\n            return documentUploadedByAmt;\n        }\n        return false;\n    }\n\n    remove(dokumentGrund: TSDokumentGrund, dokument: TSDokument) {\n        this.$log.debug('component -> remove dokument ' + dokument.filename);\n        this.dvDialog.showDialog(removeDialogTemplate, RemoveDialogController, {\n            deleteText: '',\n            title: 'FILE_LOESCHEN',\n            parentController: undefined,\n            elementID: undefined\n        })\n        .then(() => {   //User confirmed removal\n            this.onRemove({dokumentGrund: dokumentGrund, dokument: dokument});\n\n        });\n    }\n\n    download(dokument: TSDokument, attachment: boolean) {\n        this.$log.debug('download dokument ' + dokument.filename);\n        let win: Window = this.downloadRS.prepareDownloadWindow();\n\n        this.downloadRS.getAccessTokenDokument(dokument.id)\n        .then((downloadFile: TSDownloadFile) => {\n            this.$log.debug('accessToken: ' + downloadFile.accessToken);\n            this.downloadRS.startDownload(downloadFile.accessToken, downloadFile.filename, attachment, win);\n        })\n        .catch((ex) => {\n            win.close();\n            this.$log.error('An error occurred downloading the document, closing download window.');\n        });\n    }\n\n    getWidth(): String {\n        if (this.sonstige) {\n            return '95%';\n        } else {\n            if (this.tag) {\n                return '45%';\n            } else {\n                return '60%';\n            }\n        }\n    }\n\n    public isGesuchReadonly(): boolean {\n        return this.gesuchModelManager.isGesuchReadonly();\n    }\n\n    public isDokumenteUploadDisabled(): boolean {\n        // Dokument-Upload ist eigentlich in jedem Status m√∂glich, aber nicht f√ºr alle Rollen. Also nicht\n        // gleichbedeutend mit readonly auf dem Gesuch\n        // Jedoch darf der Gesuchsteller nach der Verfuegung nichts mehr hochladen\n        let gsAndVerfuegt: boolean = isAnyStatusOfVerfuegtButSchulamt(this.gesuchModelManager.getGesuch().status) && this.authServiceRS.isRole(TSRole.GESUCHSTELLER);\n        return gsAndVerfuegt || this.authServiceRS.isOneOfRoles(TSRoleUtil.getReadOnlyRoles());\n    }\n\n    /**\n     * According to the personType the right FullName will be calculated.\n     * - For FREETEXT the value in field fullName prevails.\n     * - For GESUCHSTELLER the fullname will be taken out of the GESUCHSTELLER. The value of personNumber indicates from which Gesuchsteller.\n     * - For KIND the fullname will be taken out of the KIND. The value of personNumber indicates from which Kind using its field kindNumber.\n     */\n    public extractFullName(dokumentGrund: TSDokumentGrund): string {\n        if (dokumentGrund.personType === TSDokumentGrundPersonType.FREETEXT) {\n            return dokumentGrund.fullName;\n        } else if (dokumentGrund.personType === TSDokumentGrundPersonType.GESUCHSTELLER) {\n            if (this.gesuchModelManager.getGesuch()) {\n                if (dokumentGrund.personNumber === 2 && this.gesuchModelManager.getGesuch().gesuchsteller2) {\n                    return this.gesuchModelManager.getGesuch().gesuchsteller2.extractFullName();\n\n                } else if (dokumentGrund.personNumber === 1 && this.gesuchModelManager.getGesuch().gesuchsteller1) {\n                    return this.gesuchModelManager.getGesuch().gesuchsteller1.extractFullName();\n                }\n            }\n        } else if (dokumentGrund.personType === TSDokumentGrundPersonType.KIND) {\n            if (this.gesuchModelManager.getGesuch() && this.gesuchModelManager.getGesuch().kindContainers) {\n                let kindContainer: TSKindContainer = this.gesuchModelManager.getGesuch().extractKindFromKindNumber(dokumentGrund.personNumber);\n                if (kindContainer && kindContainer.kindJA) {\n                    return kindContainer.kindJA.getFullName();\n                }\n            }\n        }\n        return '';\n    }\n}\n\n\n"]}]}