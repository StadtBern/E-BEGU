{"remainingRequest":"/home/imanol/projects/ebegu/ebegu-web/node_modules/thread-loader/dist/cjs.js??ref--0-1!/home/imanol/projects/ebegu/ebegu-web/node_modules/ts-loader/index.js??ref--0-2!/home/imanol/projects/ebegu/ebegu-web/src/core/component/dv-dokumente-list/dv-dokumente-list.ts","cacheIdentifier":"cache-loader:1.1.0 test","dependencies":[{"path":"/home/imanol/projects/ebegu/ebegu-web/src/core/component/dv-dokumente-list/dv-dokumente-list.ts","mtime":1518535855208},{"path":"/home/imanol/projects/ebegu/ebegu-web/node_modules/cache-loader/dist/cjs.js","mtime":1507514019000},{"path":"/home/imanol/projects/ebegu/ebegu-web/node_modules/thread-loader/dist/cjs.js","mtime":1507523420000},{"path":"/home/imanol/projects/ebegu/ebegu-web/node_modules/ts-loader/index.js","mtime":1508488471000}],"contextDependencies":[],"result":["/*\n * Ki-Tax: System for the management of external childcare subsidies\n * Copyright (C) 2017 City of Bern Switzerland\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\ndefine([\"require\", \"exports\", \"../../../gesuch/dialog/RemoveDialogController\", \"../../../gesuch/dialog/OkHtmlDialogController\", \"../../../utils/TSRoleUtil\", \"../../../models/enums/TSDokumentGrundPersonType\", \"../../../models/enums/TSRole\", \"../../../models/enums/TSAntragStatus\"], function (require, exports, RemoveDialogController_1, OkHtmlDialogController_1, TSRoleUtil_1, TSDokumentGrundPersonType_1, TSRole_1, TSAntragStatus_1) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    var template = require('./dv-dokumente-list.html');\n    var removeDialogTemplate = require('../../../gesuch/dialog/removeDialogTemplate.html');\n    require('./dv-dokumente-list.less');\n    var okHtmlDialogTempl = require('../../../gesuch/dialog/okHtmlDialogTemplate.html');\n    var DVDokumenteListConfig = /** @class */ (function () {\n        function DVDokumenteListConfig() {\n            this.transclude = false;\n            this.bindings = {\n                dokumente: '<',\n                tableId: '@',\n                tableTitle: '@',\n                tag: '@',\n                titleValue: '<',\n                onUploadDone: '&',\n                onRemove: '&',\n                sonstige: '<'\n            };\n            this.template = template;\n            this.controller = DVDokumenteListController;\n            this.controllerAs = 'vm';\n        }\n        return DVDokumenteListConfig;\n    }());\n    exports.DVDokumenteListConfig = DVDokumenteListConfig;\n    var DVDokumenteListController = /** @class */ (function () {\n        /* @ngInject */\n        function DVDokumenteListController(uploadRS, gesuchModelManager, ebeguUtil, downloadRS, dvDialog, wizardStepManager, $log, authServiceRS, $translate, $window, applicationPropertyRS) {\n            this.uploadRS = uploadRS;\n            this.gesuchModelManager = gesuchModelManager;\n            this.ebeguUtil = ebeguUtil;\n            this.downloadRS = downloadRS;\n            this.dvDialog = dvDialog;\n            this.wizardStepManager = wizardStepManager;\n            this.$log = $log;\n            this.authServiceRS = authServiceRS;\n            this.$translate = $translate;\n            this.$window = $window;\n            this.applicationPropertyRS = applicationPropertyRS;\n            this.allowedMimetypes = '';\n        }\n        DVDokumenteListController.prototype.$onInit = function () {\n            var _this = this;\n            this.applicationPropertyRS.getAllowedMimetypes().then(function (response) {\n                if (response !== undefined) {\n                    _this.allowedMimetypes = response.value;\n                }\n            });\n        };\n        DVDokumenteListController.prototype.uploadAnhaenge = function (files, selectDokument) {\n            var _this = this;\n            if (this.gesuchModelManager.getGesuch()) {\n                var gesuchID = this.gesuchModelManager.getGesuch().id;\n                var filesTooBig = [];\n                var filesOk = [];\n                this.$log.debug('Uploading files on gesuch ' + gesuchID);\n                for (var _i = 0, files_1 = files; _i < files_1.length; _i++) {\n                    var file = files_1[_i];\n                    this.$log.debug('File: ' + file.name + ' size: ' + file.size);\n                    if (file.size > 10000000) {\n                        filesTooBig.push(file);\n                    }\n                    else {\n                        filesOk.push(file);\n                    }\n                }\n                if (filesTooBig.length > 0) {\n                    // DialogBox anzeigen f√ºr Files, welche zu gross sind!\n                    var returnString = this.$translate.instant('FILE_ZU_GROSS') + '<br/><br/>';\n                    returnString += '<ul>';\n                    for (var _a = 0, filesTooBig_1 = filesTooBig; _a < filesTooBig_1.length; _a++) {\n                        var file = filesTooBig_1[_a];\n                        returnString += '<li>';\n                        returnString += file.name;\n                        returnString += '</li>';\n                    }\n                    returnString += '</ul>';\n                    this.dvDialog.showDialog(okHtmlDialogTempl, OkHtmlDialogController_1.OkHtmlDialogController, {\n                        title: returnString\n                    });\n                }\n                if (filesOk.length > 0) {\n                    this.uploadRS.uploadFile(filesOk, selectDokument, gesuchID).then(function (response) {\n                        var returnedDG = angular.copy(response);\n                        _this.wizardStepManager.findStepsFromGesuch(_this.gesuchModelManager.getGesuch().id).then(function () {\n                            _this.handleUpload(returnedDG);\n                        });\n                    });\n                }\n            }\n            else {\n                this.$log.warn('No gesuch found to store file or gesuch is status verfuegt');\n            }\n        };\n        DVDokumenteListController.prototype.hasDokuments = function (selectDokument) {\n            if (selectDokument.dokumente) {\n                for (var _i = 0, _a = selectDokument.dokumente; _i < _a.length; _i++) {\n                    var dokument = _a[_i];\n                    if (dokument.filename) {\n                        return true;\n                    }\n                }\n            }\n            return false;\n        };\n        DVDokumenteListController.prototype.handleUpload = function (returnedDG) {\n            this.onUploadDone({ dokument: returnedDG });\n        };\n        DVDokumenteListController.prototype.isRemoveAllowed = function (dokumentGrund, dokument) {\n            // Loeschen von Dokumenten ist nur in folgenden Faellen erlaubt:\n            // - GS bis Freigabe (d.h nicht readonlyForRole). In diesem Status kann es nur \"seine\" Dokumente geben\n            // - JA bis Verfuegen, aber nur die von JA hinzugefuegten: d.h. wenn noch nicht verfuegt: die eigenen, wenn readonly: nichts\n            // - Admin: Auch nach verfuegen, aber nur die vom JA hinzugefuegten: wenn noch nicht verfuegt oder readonly: die eigenen\n            // - Alle anderen Rollen: nichts\n            var readonly = this.isGesuchReadonly();\n            var roleLoggedIn = this.authServiceRS.getPrincipalRole();\n            var documentUploadedByJA = true; // by default true in case there is no uploadUser\n            if (dokument.userUploaded) {\n                var roleDocumentUpload = dokument.userUploaded.role;\n                documentUploadedByJA = (roleDocumentUpload === TSRole_1.TSRole.SACHBEARBEITER_JA || roleDocumentUpload === TSRole_1.TSRole.ADMIN || roleDocumentUpload === TSRole_1.TSRole.SUPER_ADMIN);\n            }\n            if (roleLoggedIn === TSRole_1.TSRole.GESUCHSTELLER) {\n                return !readonly;\n            }\n            else if (roleLoggedIn === TSRole_1.TSRole.SACHBEARBEITER_JA) {\n                return !readonly && documentUploadedByJA;\n            }\n            else if (roleLoggedIn === TSRole_1.TSRole.ADMIN || roleLoggedIn === TSRole_1.TSRole.SUPER_ADMIN) {\n                return documentUploadedByJA;\n            }\n            return false;\n        };\n        DVDokumenteListController.prototype.remove = function (dokumentGrund, dokument) {\n            var _this = this;\n            this.$log.debug('component -> remove dokument ' + dokument.filename);\n            this.dvDialog.showDialog(removeDialogTemplate, RemoveDialogController_1.RemoveDialogController, {\n                deleteText: '',\n                title: 'FILE_LOESCHEN',\n                parentController: undefined,\n                elementID: undefined\n            })\n                .then(function () {\n                _this.onRemove({ dokumentGrund: dokumentGrund, dokument: dokument });\n            });\n        };\n        DVDokumenteListController.prototype.download = function (dokument, attachment) {\n            var _this = this;\n            this.$log.debug('download dokument ' + dokument.filename);\n            var win = this.downloadRS.prepareDownloadWindow();\n            this.downloadRS.getAccessTokenDokument(dokument.id)\n                .then(function (downloadFile) {\n                _this.$log.debug('accessToken: ' + downloadFile.accessToken);\n                _this.downloadRS.startDownload(downloadFile.accessToken, downloadFile.filename, attachment, win);\n            })\n                .catch(function (ex) {\n                win.close();\n                _this.$log.error('An error occurred downloading the document, closing download window.');\n            });\n        };\n        DVDokumenteListController.prototype.getWidth = function () {\n            if (this.sonstige) {\n                return '95%';\n            }\n            else {\n                if (this.tag) {\n                    return '45%';\n                }\n                else {\n                    return '60%';\n                }\n            }\n        };\n        DVDokumenteListController.prototype.isGesuchReadonly = function () {\n            return this.gesuchModelManager.isGesuchReadonly();\n        };\n        DVDokumenteListController.prototype.isDokumenteUploadDisabled = function () {\n            // Dokument-Upload ist eigentlich in jedem Status m√∂glich, aber nicht f√ºr alle Rollen. Also nicht\n            // gleichbedeutend mit readonly auf dem Gesuch\n            // Jedoch darf der Gesuchsteller nach der Verfuegung nichts mehr hochladen\n            var gsAndVerfuegt = TSAntragStatus_1.isAnyStatusOfVerfuegtButSchulamt(this.gesuchModelManager.getGesuch().status) && this.authServiceRS.isRole(TSRole_1.TSRole.GESUCHSTELLER);\n            return gsAndVerfuegt || this.authServiceRS.isOneOfRoles(TSRoleUtil_1.TSRoleUtil.getReadOnlyRoles());\n        };\n        /**\n         * According to the personType the right FullName will be calculated.\n         * - For FREETEXT the value in field fullName prevails.\n         * - For GESUCHSTELLER the fullname will be taken out of the GESUCHSTELLER. The value of personNumber indicates from which Gesuchsteller.\n         * - For KIND the fullname will be taken out of the KIND. The value of personNumber indicates from which Kind using its field kindNumber.\n         */\n        DVDokumenteListController.prototype.extractFullName = function (dokumentGrund) {\n            if (dokumentGrund.personType === TSDokumentGrundPersonType_1.TSDokumentGrundPersonType.FREETEXT) {\n                return dokumentGrund.fullName;\n            }\n            else if (dokumentGrund.personType === TSDokumentGrundPersonType_1.TSDokumentGrundPersonType.GESUCHSTELLER) {\n                if (this.gesuchModelManager.getGesuch()) {\n                    if (dokumentGrund.personNumber === 2 && this.gesuchModelManager.getGesuch().gesuchsteller2) {\n                        return this.gesuchModelManager.getGesuch().gesuchsteller2.extractFullName();\n                    }\n                    else if (dokumentGrund.personNumber === 1 && this.gesuchModelManager.getGesuch().gesuchsteller1) {\n                        return this.gesuchModelManager.getGesuch().gesuchsteller1.extractFullName();\n                    }\n                }\n            }\n            else if (dokumentGrund.personType === TSDokumentGrundPersonType_1.TSDokumentGrundPersonType.KIND) {\n                if (this.gesuchModelManager.getGesuch() && this.gesuchModelManager.getGesuch().kindContainers) {\n                    var kindContainer = this.gesuchModelManager.getGesuch().extractKindFromKindNumber(dokumentGrund.personNumber);\n                    if (kindContainer && kindContainer.kindJA) {\n                        return kindContainer.kindJA.getFullName();\n                    }\n                }\n            }\n            return '';\n        };\n        DVDokumenteListController.$inject = ['UploadRS', 'GesuchModelManager', 'EbeguUtil', 'DownloadRS', 'DvDialog', 'WizardStepManager',\n            '$log', 'AuthServiceRS', '$translate', '$window', 'ApplicationPropertyRS'];\n        return DVDokumenteListController;\n    }());\n    exports.DVDokumenteListController = DVDokumenteListController;\n});\n",{"version":3,"file":"/home/imanol/projects/ebegu/ebegu-web/src/core/component/dv-dokumente-list/dv-dokumente-list.ts","sourceRoot":"","sources":["/home/imanol/projects/ebegu/ebegu-web/src/core/component/dv-dokumente-list/dv-dokumente-list.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Ki-Tax: System for the management of external childcare subsidies\n * Copyright (C) 2017 City of Bern Switzerland\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport {IComponentOptions, ILogService} from 'angular';\nimport TSDokumentGrund from '../../../models/TSDokumentGrund';\nimport {UploadRS} from '../../service/uploadRS.rest';\nimport GesuchModelManager from '../../../gesuch/service/gesuchModelManager';\nimport EbeguUtil from '../../../utils/EbeguUtil';\nimport TSDokument from '../../../models/TSDokument';\nimport {DownloadRS} from '../../service/downloadRS.rest';\nimport TSDownloadFile from '../../../models/TSDownloadFile';\nimport {DvDialog} from '../../directive/dv-dialog/dv-dialog';\nimport {RemoveDialogController} from '../../../gesuch/dialog/RemoveDialogController';\nimport WizardStepManager from '../../../gesuch/service/wizardStepManager';\nimport AuthServiceRS from '../../../authentication/service/AuthServiceRS.rest';\nimport {OkHtmlDialogController} from '../../../gesuch/dialog/OkHtmlDialogController';\nimport {TSRoleUtil} from '../../../utils/TSRoleUtil';\nimport {TSDokumentGrundPersonType} from '../../../models/enums/TSDokumentGrundPersonType';\nimport TSKindContainer from '../../../models/TSKindContainer';\nimport {TSRole} from '../../../models/enums/TSRole';\nimport {isAnyStatusOfVerfuegtButSchulamt} from '../../../models/enums/TSAntragStatus';\nimport {ApplicationPropertyRS} from '../../../admin/service/applicationPropertyRS.rest';\nimport TSApplicationProperty from '../../../models/TSApplicationProperty';\nimport ITranslateService = angular.translate.ITranslateService;\n\nlet template = require('./dv-dokumente-list.html');\nlet removeDialogTemplate = require('../../../gesuch/dialog/removeDialogTemplate.html');\nrequire('./dv-dokumente-list.less');\nlet okHtmlDialogTempl = require('../../../gesuch/dialog/okHtmlDialogTemplate.html');\n\nexport class DVDokumenteListConfig implements IComponentOptions {\n    transclude = false;\n\n    bindings: any = {\n        dokumente: '<',\n        tableId: '@',\n        tableTitle: '@',\n        tag: '@',\n        titleValue: '<',\n        onUploadDone: '&',\n        onRemove: '&',\n        sonstige: '<'\n\n    };\n    template = template;\n    controller = DVDokumenteListController;\n    controllerAs = 'vm';\n}\n\nexport class DVDokumenteListController {\n\n    dokumente: TSDokumentGrund[];\n    tableId: string;\n    tableTitle: string;\n    tag: string;\n    titleValue: string;\n    onUploadDone: (dokumentGrund: any) => void;\n    onRemove: (attrs: any) => void;\n    sonstige: boolean;\n    allowedMimetypes: string = '';\n\n    static $inject: any[] = ['UploadRS', 'GesuchModelManager', 'EbeguUtil', 'DownloadRS', 'DvDialog', 'WizardStepManager',\n        '$log', 'AuthServiceRS', '$translate', '$window', 'ApplicationPropertyRS'];\n\n    /* @ngInject */\n    constructor(private uploadRS: UploadRS, private gesuchModelManager: GesuchModelManager, private ebeguUtil: EbeguUtil,\n        private downloadRS: DownloadRS, private dvDialog: DvDialog, private wizardStepManager: WizardStepManager,\n        private $log: ILogService, private authServiceRS: AuthServiceRS, private $translate: ITranslateService,\n        private $window: ng.IWindowService, private applicationPropertyRS: ApplicationPropertyRS) {\n\n    }\n\n    $onInit() {\n        this.applicationPropertyRS.getAllowedMimetypes().then((response: TSApplicationProperty) => {\n            if (response !== undefined) {\n                this.allowedMimetypes = response.value;\n            }\n        });\n\n    }\n\n    uploadAnhaenge(files: any[], selectDokument: TSDokumentGrund) {\n        if (this.gesuchModelManager.getGesuch()) {\n            let gesuchID = this.gesuchModelManager.getGesuch().id;\n            let filesTooBig: any[] = [];\n            let filesOk: any[] = [];\n            this.$log.debug('Uploading files on gesuch ' + gesuchID);\n            for (let file of files) {\n                this.$log.debug('File: ' + file.name + ' size: ' + file.size);\n                if (file.size > 10000000) { // Maximale Filegr√∂sse ist 10MB\n                    filesTooBig.push(file);\n                } else {\n                    filesOk.push(file);\n                }\n            }\n\n            if (filesTooBig.length > 0) {\n                // DialogBox anzeigen f√ºr Files, welche zu gross sind!\n                let returnString = this.$translate.instant('FILE_ZU_GROSS') + '<br/><br/>';\n                returnString += '<ul>';\n                for (let file of filesTooBig) {\n                    returnString += '<li>';\n                    returnString += file.name;\n                    returnString += '</li>';\n                }\n                returnString += '</ul>';\n\n                this.dvDialog.showDialog(okHtmlDialogTempl, OkHtmlDialogController, {\n                    title: returnString\n                });\n            }\n\n            if (filesOk.length > 0) {\n                this.uploadRS.uploadFile(filesOk, selectDokument, gesuchID).then((response) => {\n                    let returnedDG: TSDokumentGrund = angular.copy(response);\n                    this.wizardStepManager.findStepsFromGesuch(this.gesuchModelManager.getGesuch().id).then(() => {\n                        this.handleUpload(returnedDG);\n                    });\n                });\n            }\n        } else {\n            this.$log.warn('No gesuch found to store file or gesuch is status verfuegt');\n        }\n    }\n\n    hasDokuments(selectDokument: TSDokumentGrund): boolean {\n        if (selectDokument.dokumente) {\n            for (let dokument of selectDokument.dokumente) {\n                if (dokument.filename) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n\n    handleUpload(returnedDG: TSDokumentGrund) {\n        this.onUploadDone({dokument: returnedDG});\n    }\n\n    isRemoveAllowed(dokumentGrund: TSDokumentGrund, dokument: TSDokument): boolean {\n        // Loeschen von Dokumenten ist nur in folgenden Faellen erlaubt:\n        // - GS bis Freigabe (d.h nicht readonlyForRole). In diesem Status kann es nur \"seine\" Dokumente geben\n        // - JA bis Verfuegen, aber nur die von JA hinzugefuegten: d.h. wenn noch nicht verfuegt: die eigenen, wenn readonly: nichts\n        // - Admin: Auch nach verfuegen, aber nur die vom JA hinzugefuegten: wenn noch nicht verfuegt oder readonly: die eigenen\n        // - Alle anderen Rollen: nichts\n        let readonly: boolean = this.isGesuchReadonly();\n        let roleLoggedIn: TSRole = this.authServiceRS.getPrincipalRole();\n        let documentUploadedByJA: boolean = true; // by default true in case there is no uploadUser\n        if (dokument.userUploaded) {\n            let roleDocumentUpload: TSRole = dokument.userUploaded.role;\n            documentUploadedByJA = (roleDocumentUpload === TSRole.SACHBEARBEITER_JA || roleDocumentUpload === TSRole.ADMIN || roleDocumentUpload === TSRole.SUPER_ADMIN);\n        }\n        if (roleLoggedIn === TSRole.GESUCHSTELLER) {\n            return !readonly;\n        } else if (roleLoggedIn === TSRole.SACHBEARBEITER_JA) {\n            return !readonly && documentUploadedByJA;\n        } else if (roleLoggedIn === TSRole.ADMIN || roleLoggedIn === TSRole.SUPER_ADMIN) {\n            return documentUploadedByJA;\n        }\n        return false;\n    }\n\n    remove(dokumentGrund: TSDokumentGrund, dokument: TSDokument) {\n        this.$log.debug('component -> remove dokument ' + dokument.filename);\n        this.dvDialog.showDialog(removeDialogTemplate, RemoveDialogController, {\n            deleteText: '',\n            title: 'FILE_LOESCHEN',\n            parentController: undefined,\n            elementID: undefined\n        })\n        .then(() => {   //User confirmed removal\n            this.onRemove({dokumentGrund: dokumentGrund, dokument: dokument});\n\n        });\n    }\n\n    download(dokument: TSDokument, attachment: boolean) {\n        this.$log.debug('download dokument ' + dokument.filename);\n        let win: Window = this.downloadRS.prepareDownloadWindow();\n\n        this.downloadRS.getAccessTokenDokument(dokument.id)\n        .then((downloadFile: TSDownloadFile) => {\n            this.$log.debug('accessToken: ' + downloadFile.accessToken);\n            this.downloadRS.startDownload(downloadFile.accessToken, downloadFile.filename, attachment, win);\n        })\n        .catch((ex) => {\n            win.close();\n            this.$log.error('An error occurred downloading the document, closing download window.');\n        });\n    }\n\n    getWidth(): String {\n        if (this.sonstige) {\n            return '95%';\n        } else {\n            if (this.tag) {\n                return '45%';\n            } else {\n                return '60%';\n            }\n        }\n    }\n\n    public isGesuchReadonly(): boolean {\n        return this.gesuchModelManager.isGesuchReadonly();\n    }\n\n    public isDokumenteUploadDisabled(): boolean {\n        // Dokument-Upload ist eigentlich in jedem Status m√∂glich, aber nicht f√ºr alle Rollen. Also nicht\n        // gleichbedeutend mit readonly auf dem Gesuch\n        // Jedoch darf der Gesuchsteller nach der Verfuegung nichts mehr hochladen\n        let gsAndVerfuegt: boolean = isAnyStatusOfVerfuegtButSchulamt(this.gesuchModelManager.getGesuch().status) && this.authServiceRS.isRole(TSRole.GESUCHSTELLER);\n        return gsAndVerfuegt || this.authServiceRS.isOneOfRoles(TSRoleUtil.getReadOnlyRoles());\n    }\n\n    /**\n     * According to the personType the right FullName will be calculated.\n     * - For FREETEXT the value in field fullName prevails.\n     * - For GESUCHSTELLER the fullname will be taken out of the GESUCHSTELLER. The value of personNumber indicates from which Gesuchsteller.\n     * - For KIND the fullname will be taken out of the KIND. The value of personNumber indicates from which Kind using its field kindNumber.\n     */\n    public extractFullName(dokumentGrund: TSDokumentGrund): string {\n        if (dokumentGrund.personType === TSDokumentGrundPersonType.FREETEXT) {\n            return dokumentGrund.fullName;\n        } else if (dokumentGrund.personType === TSDokumentGrundPersonType.GESUCHSTELLER) {\n            if (this.gesuchModelManager.getGesuch()) {\n                if (dokumentGrund.personNumber === 2 && this.gesuchModelManager.getGesuch().gesuchsteller2) {\n                    return this.gesuchModelManager.getGesuch().gesuchsteller2.extractFullName();\n\n                } else if (dokumentGrund.personNumber === 1 && this.gesuchModelManager.getGesuch().gesuchsteller1) {\n                    return this.gesuchModelManager.getGesuch().gesuchsteller1.extractFullName();\n                }\n            }\n        } else if (dokumentGrund.personType === TSDokumentGrundPersonType.KIND) {\n            if (this.gesuchModelManager.getGesuch() && this.gesuchModelManager.getGesuch().kindContainers) {\n                let kindContainer: TSKindContainer = this.gesuchModelManager.getGesuch().extractKindFromKindNumber(dokumentGrund.personNumber);\n                if (kindContainer && kindContainer.kindJA) {\n                    return kindContainer.kindJA.getFullName();\n                }\n            }\n        }\n        return '';\n    }\n}\n\n\n"]}]}