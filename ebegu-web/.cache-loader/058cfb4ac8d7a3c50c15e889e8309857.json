{"remainingRequest":"/home/imanol/projects/ebegu/ebegu-web/node_modules/thread-loader/dist/cjs.js??ref--0-1!/home/imanol/projects/ebegu/ebegu-web/node_modules/ts-loader/index.js??ref--0-2!/home/imanol/projects/ebegu/ebegu-web/src/zahlungsauftrag/component/zahlungsauftragView.ts","cacheIdentifier":"cache-loader:1.1.0 test","dependencies":[{"path":"/home/imanol/projects/ebegu/ebegu-web/src/zahlungsauftrag/component/zahlungsauftragView.ts","mtime":1514969425744},{"path":"/home/imanol/projects/ebegu/ebegu-web/node_modules/cache-loader/dist/cjs.js","mtime":1507514019000},{"path":"/home/imanol/projects/ebegu/ebegu-web/node_modules/thread-loader/dist/cjs.js","mtime":1507523420000},{"path":"/home/imanol/projects/ebegu/ebegu-web/node_modules/ts-loader/index.js","mtime":1508488471000}],"contextDependencies":[],"result":["\"use strict\";\n/*\n * Ki-Tax: System for the management of external childcare subsidies\n * Copyright (C) 2017 City of Bern Switzerland\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar RemoveDialogController_1 = require(\"../../gesuch/dialog/RemoveDialogController\");\nvar TSRole_1 = require(\"../../models/enums/TSRole\");\nvar TSZahlungsauftragstatus_1 = require(\"../../models/enums/TSZahlungsauftragstatus\");\nvar TSZahlungsstatus_1 = require(\"../../models/enums/TSZahlungsstatus\");\nvar EbeguUtil_1 = require(\"../../utils/EbeguUtil\");\nvar TSRoleUtil_1 = require(\"../../utils/TSRoleUtil\");\nvar template = require('./zahlungsauftragView.html');\nrequire('./zahlungsauftragView.less');\nvar removeDialogTemplate = require('../../gesuch/dialog/removeDialogTemplate.html');\nvar ZahlungsauftragViewComponentConfig = /** @class */ (function () {\n    function ZahlungsauftragViewComponentConfig() {\n        this.transclude = false;\n        this.template = template;\n        this.controller = ZahlungsauftragViewController;\n        this.controllerAs = 'vm';\n    }\n    return ZahlungsauftragViewComponentConfig;\n}());\nexports.ZahlungsauftragViewComponentConfig = ZahlungsauftragViewComponentConfig;\nvar ZahlungsauftragViewController = /** @class */ (function () {\n    function ZahlungsauftragViewController(zahlungRS, CONSTANTS, $state, downloadRS, applicationPropertyRS, reportRS, authServiceRS, ebeguUtil, dvDialog, $translate) {\n        this.zahlungRS = zahlungRS;\n        this.CONSTANTS = CONSTANTS;\n        this.$state = $state;\n        this.downloadRS = downloadRS;\n        this.applicationPropertyRS = applicationPropertyRS;\n        this.reportRS = reportRS;\n        this.authServiceRS = authServiceRS;\n        this.ebeguUtil = ebeguUtil;\n        this.dvDialog = dvDialog;\n        this.$translate = $translate;\n        this.itemsByPage = 12;\n        this.testMode = false;\n        this.initViewModel();\n    }\n    ZahlungsauftragViewController.prototype.getZahlungsauftragen = function () {\n        return this.zahlungsauftragen;\n    };\n    ZahlungsauftragViewController.prototype.initViewModel = function () {\n        var _this = this;\n        this.updateZahlungsauftrag();\n        this.applicationPropertyRS.isZahlungenTestMode().then(function (response) {\n            _this.testMode = response;\n        });\n    };\n    ZahlungsauftragViewController.prototype.updateZahlungsauftrag = function () {\n        var _this = this;\n        switch (this.authServiceRS.getPrincipal().role) {\n            case TSRole_1.TSRole.SACHBEARBEITER_INSTITUTION:\n            case TSRole_1.TSRole.SACHBEARBEITER_TRAEGERSCHAFT: {\n                this.zahlungRS.getAllZahlungsauftraegeInstitution().then(function (response) {\n                    _this.zahlungsauftragen = angular.copy(response);\n                });\n                break;\n            }\n            case TSRole_1.TSRole.SUPER_ADMIN:\n            case TSRole_1.TSRole.ADMIN:\n            case TSRole_1.TSRole.SACHBEARBEITER_JA:\n            case TSRole_1.TSRole.JURIST:\n            case TSRole_1.TSRole.REVISOR: {\n                this.zahlungRS.getAllZahlungsauftraege().then(function (response) {\n                    _this.zahlungsauftragen = angular.copy(response);\n                });\n                break;\n            }\n            default:\n                break;\n        }\n    };\n    ZahlungsauftragViewController.prototype.gotoZahlung = function (zahlungsauftrag) {\n        this.$state.go('zahlung', {\n            zahlungsauftragId: zahlungsauftrag.id\n        });\n    };\n    ZahlungsauftragViewController.prototype.createZahlungsauftrag = function () {\n        var _this = this;\n        if (this.form.$valid) {\n            this.dvDialog.showDialog(removeDialogTemplate, RemoveDialogController_1.RemoveDialogController, {\n                title: this.$translate.instant('ZAHLUNG_ERSTELLEN_CONFIRM'),\n                deleteText: this.$translate.instant('ZAHLUNG_ERSTELLEN_INFO'),\n                parentController: undefined,\n                elementID: undefined\n            }).then(function () {\n                _this.zahlungRS.createZahlungsauftrag(_this.beschrieb, _this.faelligkeitsdatum, _this.datumGeneriert).then(function (response) {\n                    _this.zahlungsauftragen.push(response);\n                    _this.resetEditZahlungsauftrag();\n                    _this.resetForm();\n                });\n            });\n        }\n    };\n    ZahlungsauftragViewController.prototype.downloadPain = function (zahlungsauftrag) {\n        var _this = this;\n        var win = this.downloadRS.prepareDownloadWindow();\n        return this.downloadRS.getPain001AccessTokenGeneratedDokument(zahlungsauftrag.id)\n            .then(function (downloadFile) {\n            _this.downloadRS.startDownload(downloadFile.accessToken, downloadFile.filename, true, win);\n        })\n            .catch(function (ex) {\n            win.close();\n        });\n    };\n    ZahlungsauftragViewController.prototype.downloadAllDetails = function (zahlungsauftrag) {\n        var _this = this;\n        var win = this.downloadRS.prepareDownloadWindow();\n        this.reportRS.getZahlungsauftragReportExcel(zahlungsauftrag.id)\n            .then(function (downloadFile) {\n            _this.downloadRS.startDownload(downloadFile.accessToken, downloadFile.filename, false, win);\n        })\n            .catch(function (ex) {\n            win.close();\n        });\n    };\n    ZahlungsauftragViewController.prototype.ausloesen = function (zahlungsauftragId) {\n        var _this = this;\n        this.dvDialog.showDialog(removeDialogTemplate, RemoveDialogController_1.RemoveDialogController, {\n            title: this.$translate.instant('ZAHLUNG_AUSLOESEN_CONFIRM'),\n            deleteText: this.$translate.instant('ZAHLUNG_AUSLOESEN_INFO'),\n            parentController: undefined,\n            elementID: undefined\n        }).then(function () {\n            _this.zahlungRS.zahlungsauftragAusloesen(zahlungsauftragId).then(function (response) {\n                var index = EbeguUtil_1.default.getIndexOfElementwithID(response, _this.zahlungsauftragen);\n                if (index > -1) {\n                    _this.zahlungsauftragen[index] = response;\n                }\n                _this.ebeguUtil.handleSmarttablesUpdateBug(_this.zahlungsauftragen);\n            });\n        });\n    };\n    ZahlungsauftragViewController.prototype.edit = function (zahlungsauftrag) {\n        this.zahlungsauftragToEdit = zahlungsauftrag;\n    };\n    ZahlungsauftragViewController.prototype.save = function (zahlungsauftrag) {\n        var _this = this;\n        if (this.isEditValid()) {\n            this.zahlungRS.updateZahlungsauftrag(this.zahlungsauftragToEdit.beschrieb, this.zahlungsauftragToEdit.datumFaellig, this.zahlungsauftragToEdit.id).then(function (response) {\n                var index = EbeguUtil_1.default.getIndexOfElementwithID(response, _this.zahlungsauftragen);\n                if (index > -1) {\n                    _this.zahlungsauftragen[index] = response;\n                }\n                _this.form.$setPristine(); // nach dem es gespeichert wird, muessen wir das Form wieder auf clean setzen\n                _this.resetEditZahlungsauftrag();\n            });\n        }\n    };\n    ZahlungsauftragViewController.prototype.isEditable = function (status) {\n        if (status === TSZahlungsauftragstatus_1.TSZahlungsauftragsstatus.ENTWURF) {\n            return true;\n        }\n        return false;\n    };\n    ZahlungsauftragViewController.prototype.isEditMode = function (zahlungsauftragId) {\n        if (this.zahlungsauftragToEdit && this.zahlungsauftragToEdit.id === zahlungsauftragId) {\n            return true;\n        }\n        return false;\n    };\n    ZahlungsauftragViewController.prototype.isEditValid = function () {\n        if (this.zahlungsauftragToEdit) {\n            return this.zahlungsauftragToEdit.beschrieb && this.zahlungsauftragToEdit.beschrieb.length > 0 &&\n                this.zahlungsauftragToEdit.datumFaellig !== null && this.zahlungsauftragToEdit.datumFaellig !== undefined;\n        }\n        return false;\n    };\n    ZahlungsauftragViewController.prototype.resetEditZahlungsauftrag = function () {\n        this.zahlungsauftragToEdit = null;\n    };\n    ZahlungsauftragViewController.prototype.rowClass = function (zahlungsauftragId) {\n        if (this.isEditMode(zahlungsauftragId) && !this.isEditValid()) {\n            return 'errorrow';\n        }\n        return '';\n    };\n    /**\n     * resets all three variables needed to create a Zahlung.\n     */\n    ZahlungsauftragViewController.prototype.resetForm = function () {\n        this.beschrieb = undefined;\n        this.faelligkeitsdatum = undefined;\n        this.datumGeneriert = undefined;\n        this.form.$setPristine();\n        this.form.$setUntouched();\n    };\n    ZahlungsauftragViewController.prototype.getCalculatedStatus = function (zahlungsauftrag) {\n        if (zahlungsauftrag.status !== TSZahlungsauftragstatus_1.TSZahlungsauftragsstatus.BESTAETIGT && this.authServiceRS.isOneOfRoles(TSRoleUtil_1.TSRoleUtil.getTraegerschaftInstitutionOnlyRoles())) {\n            if (zahlungsauftrag.zahlungen.every(function (zahlung) { return zahlung.status === TSZahlungsstatus_1.TSZahlungsstatus.BESTAETIGT; })) {\n                return TSZahlungsstatus_1.TSZahlungsstatus.BESTAETIGT;\n            }\n        }\n        return zahlungsauftrag.status;\n    };\n    ZahlungsauftragViewController.$inject = ['ZahlungRS', 'CONSTANTS', '$state', 'DownloadRS', 'ApplicationPropertyRS', 'ReportRS',\n        'AuthServiceRS', 'EbeguUtil', 'DvDialog', '$translate'];\n    return ZahlungsauftragViewController;\n}());\nexports.ZahlungsauftragViewController = ZahlungsauftragViewController;\n",{"version":3,"file":"/home/imanol/projects/ebegu/ebegu-web/src/zahlungsauftrag/component/zahlungsauftragView.ts","sourceRoot":"","sources":["/home/imanol/projects/ebegu/ebegu-web/src/zahlungsauftrag/component/zahlungsauftragView.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Ki-Tax: System for the management of external childcare subsidies\n * Copyright (C) 2017 City of Bern Switzerland\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport {IComponentOptions} from 'angular';\nimport * as moment from 'moment';\nimport {ApplicationPropertyRS} from '../../admin/service/applicationPropertyRS.rest';\nimport AuthServiceRS from '../../authentication/service/AuthServiceRS.rest';\nimport {DvDialog} from '../../core/directive/dv-dialog/dv-dialog';\nimport {DownloadRS} from '../../core/service/downloadRS.rest';\nimport {ReportRS} from '../../core/service/reportRS.rest';\nimport ZahlungRS from '../../core/service/zahlungRS.rest';\nimport {RemoveDialogController} from '../../gesuch/dialog/RemoveDialogController';\nimport {TSRole} from '../../models/enums/TSRole';\nimport {TSZahlungsauftragsstatus} from '../../models/enums/TSZahlungsauftragstatus';\nimport {TSZahlungsstatus} from '../../models/enums/TSZahlungsstatus';\nimport TSDownloadFile from '../../models/TSDownloadFile';\nimport TSZahlungsauftrag from '../../models/TSZahlungsauftrag';\nimport EbeguUtil from '../../utils/EbeguUtil';\nimport {TSRoleUtil} from '../../utils/TSRoleUtil';\nimport IStateService = angular.ui.IStateService;\nimport IFormController = angular.IFormController;\nimport Moment = moment.Moment;\nimport ITranslateService = angular.translate.ITranslateService;\nlet template = require('./zahlungsauftragView.html');\nrequire('./zahlungsauftragView.less');\n\nlet removeDialogTemplate = require('../../gesuch/dialog/removeDialogTemplate.html');\n\nexport class ZahlungsauftragViewComponentConfig implements IComponentOptions {\n    transclude = false;\n    template = template;\n    controller = ZahlungsauftragViewController;\n    controllerAs = 'vm';\n}\n\nexport class ZahlungsauftragViewController {\n\n    form: IFormController;\n    private zahlungsauftragen: Array<TSZahlungsauftrag>;\n    private zahlungsauftragToEdit: TSZahlungsauftrag;\n\n    beschrieb: string;\n    faelligkeitsdatum: Moment;\n    datumGeneriert: Moment;\n    itemsByPage: number = 12;\n    testMode: boolean = false;\n\n    static $inject: string[] = ['ZahlungRS', 'CONSTANTS', '$state', 'DownloadRS', 'ApplicationPropertyRS', 'ReportRS',\n        'AuthServiceRS', 'EbeguUtil', 'DvDialog', '$translate'];\n\n    constructor(private zahlungRS: ZahlungRS, private CONSTANTS: any,\n                private $state: IStateService, private downloadRS: DownloadRS,\n                private applicationPropertyRS: ApplicationPropertyRS,\n                private reportRS: ReportRS, private authServiceRS: AuthServiceRS, private ebeguUtil: EbeguUtil,\n                private dvDialog: DvDialog, private $translate: ITranslateService) {\n        this.initViewModel();\n    }\n\n    public getZahlungsauftragen() {\n        return this.zahlungsauftragen;\n    }\n\n    private initViewModel() {\n        this.updateZahlungsauftrag();\n        this.applicationPropertyRS.isZahlungenTestMode().then((response: any) => {\n            this.testMode = response;\n        });\n    }\n\n    private updateZahlungsauftrag() {\n\n        switch (this.authServiceRS.getPrincipal().role) {\n\n            case TSRole.SACHBEARBEITER_INSTITUTION:\n            case TSRole.SACHBEARBEITER_TRAEGERSCHAFT: {\n                this.zahlungRS.getAllZahlungsauftraegeInstitution().then((response: any) => {\n                    this.zahlungsauftragen = angular.copy(response);\n\n                });\n                break;\n            }\n            case TSRole.SUPER_ADMIN:\n            case TSRole.ADMIN:\n            case TSRole.SACHBEARBEITER_JA:\n            case TSRole.JURIST:\n            case TSRole.REVISOR: {\n                this.zahlungRS.getAllZahlungsauftraege().then((response: any) => {\n                    this.zahlungsauftragen = angular.copy(response);\n\n                });\n                break;\n            }\n            default:\n                break;\n        }\n    }\n\n    public gotoZahlung(zahlungsauftrag: TSZahlungsauftrag) {\n        this.$state.go('zahlung', {\n            zahlungsauftragId: zahlungsauftrag.id\n        });\n    }\n\n    public createZahlungsauftrag() {\n        if (this.form.$valid) {\n            this.dvDialog.showDialog(removeDialogTemplate, RemoveDialogController, {\n                title: this.$translate.instant('ZAHLUNG_ERSTELLEN_CONFIRM'),\n                deleteText: this.$translate.instant('ZAHLUNG_ERSTELLEN_INFO'),\n                parentController: undefined,\n                elementID: undefined\n            }).then(() => {   //User confirmed removal\n                this.zahlungRS.createZahlungsauftrag(this.beschrieb, this.faelligkeitsdatum, this.datumGeneriert).then((response: TSZahlungsauftrag) => {\n                    this.zahlungsauftragen.push(response);\n                    this.resetEditZahlungsauftrag();\n                    this.resetForm();\n                });\n            });\n        }\n    }\n\n    public downloadPain(zahlungsauftrag: TSZahlungsauftrag) {\n        let win: Window = this.downloadRS.prepareDownloadWindow();\n        return this.downloadRS.getPain001AccessTokenGeneratedDokument(zahlungsauftrag.id)\n            .then((downloadFile: TSDownloadFile) => {\n                this.downloadRS.startDownload(downloadFile.accessToken, downloadFile.filename, true, win);\n            })\n            .catch((ex) => {\n                win.close();\n            });\n    }\n\n    public downloadAllDetails(zahlungsauftrag: TSZahlungsauftrag) {\n        let win: Window = this.downloadRS.prepareDownloadWindow();\n        this.reportRS.getZahlungsauftragReportExcel(zahlungsauftrag.id)\n            .then((downloadFile: TSDownloadFile) => {\n                this.downloadRS.startDownload(downloadFile.accessToken, downloadFile.filename, false, win);\n            })\n            .catch((ex) => {\n                win.close();\n            });\n    }\n\n    public ausloesen(zahlungsauftragId: string) {\n        this.dvDialog.showDialog(removeDialogTemplate, RemoveDialogController, {\n            title: this.$translate.instant('ZAHLUNG_AUSLOESEN_CONFIRM'),\n            deleteText: this.$translate.instant('ZAHLUNG_AUSLOESEN_INFO'),\n            parentController: undefined,\n            elementID: undefined\n        }).then(() => {   //User confirmed removal\n            this.zahlungRS.zahlungsauftragAusloesen(zahlungsauftragId).then((response: TSZahlungsauftrag) => {\n                let index = EbeguUtil.getIndexOfElementwithID(response, this.zahlungsauftragen);\n                if (index > -1) {\n                    this.zahlungsauftragen[index] = response;\n                }\n                this.ebeguUtil.handleSmarttablesUpdateBug(this.zahlungsauftragen);\n            });\n        });\n    }\n\n    public edit(zahlungsauftrag: TSZahlungsauftrag) {\n        this.zahlungsauftragToEdit = zahlungsauftrag;\n    }\n\n    public save(zahlungsauftrag: TSZahlungsauftrag) {\n        if (this.isEditValid()) {\n            this.zahlungRS.updateZahlungsauftrag(\n                this.zahlungsauftragToEdit.beschrieb, this.zahlungsauftragToEdit.datumFaellig, this.zahlungsauftragToEdit.id).then((response: TSZahlungsauftrag) => {\n                let index = EbeguUtil.getIndexOfElementwithID(response, this.zahlungsauftragen);\n                if (index > -1) {\n                    this.zahlungsauftragen[index] = response;\n                }\n                this.form.$setPristine(); // nach dem es gespeichert wird, muessen wir das Form wieder auf clean setzen\n                this.resetEditZahlungsauftrag();\n            });\n\n        }\n    }\n\n    public isEditable(status: TSZahlungsauftragsstatus): boolean {\n        if (status === TSZahlungsauftragsstatus.ENTWURF) {\n            return true;\n        }\n        return false;\n    }\n\n    public isEditMode(zahlungsauftragId: string): boolean {\n        if (this.zahlungsauftragToEdit && this.zahlungsauftragToEdit.id === zahlungsauftragId) {\n            return true;\n        }\n        return false;\n    }\n\n    public isEditValid(): boolean {\n        if (this.zahlungsauftragToEdit) {\n            return this.zahlungsauftragToEdit.beschrieb && this.zahlungsauftragToEdit.beschrieb.length > 0 &&\n                this.zahlungsauftragToEdit.datumFaellig !== null && this.zahlungsauftragToEdit.datumFaellig !== undefined;\n        }\n        return false;\n    }\n\n    private resetEditZahlungsauftrag() {\n        this.zahlungsauftragToEdit = null;\n    }\n\n    public rowClass(zahlungsauftragId: string) {\n        if (this.isEditMode(zahlungsauftragId) && !this.isEditValid()) {\n            return 'errorrow';\n        }\n        return '';\n    }\n\n    /**\n     * resets all three variables needed to create a Zahlung.\n     */\n    private resetForm(): void {\n        this.beschrieb = undefined;\n        this.faelligkeitsdatum = undefined;\n        this.datumGeneriert = undefined;\n        this.form.$setPristine();\n        this.form.$setUntouched();\n    }\n\n    public getCalculatedStatus(zahlungsauftrag: TSZahlungsauftrag) {\n        if (zahlungsauftrag.status !== TSZahlungsauftragsstatus.BESTAETIGT && this.authServiceRS.isOneOfRoles(TSRoleUtil.getTraegerschaftInstitutionOnlyRoles())) {\n            if (zahlungsauftrag.zahlungen.every(zahlung => zahlung.status === TSZahlungsstatus.BESTAETIGT)) {\n                return TSZahlungsstatus.BESTAETIGT;\n            }\n        }\n        return zahlungsauftrag.status;\n    }\n}\n"]}]}