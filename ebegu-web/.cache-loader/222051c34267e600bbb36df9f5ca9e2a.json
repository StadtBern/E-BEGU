{"remainingRequest":"/home/imanol/projects/ebegu/ebegu-web/node_modules/thread-loader/dist/cjs.js??ref--0-1!/home/imanol/projects/ebegu/ebegu-web/node_modules/ts-loader/index.js??ref--0-2!/home/imanol/projects/ebegu/ebegu-web/src/core/directive/dv-barcode-listener.ts","cacheIdentifier":"cache-loader:1.1.0 test","dependencies":[{"path":"/home/imanol/projects/ebegu/ebegu-web/src/core/directive/dv-barcode-listener.ts","mtime":1512484412003},{"path":"/home/imanol/projects/ebegu/ebegu-web/node_modules/cache-loader/dist/cjs.js","mtime":1507514019000},{"path":"/home/imanol/projects/ebegu/ebegu-web/node_modules/thread-loader/dist/cjs.js","mtime":1507523420000},{"path":"/home/imanol/projects/ebegu/ebegu-web/node_modules/ts-loader/index.js","mtime":1508488471000}],"contextDependencies":[],"result":["\"use strict\";\n/*\n * Ki-Tax: System for the management of external childcare subsidies\n * Copyright (C) 2017 City of Bern Switzerland\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar FreigabeController_1 = require(\"../../gesuch/dialog/FreigabeController\");\nvar TSRoleUtil_1 = require(\"../../utils/TSRoleUtil\");\nvar TSAuthEvent_1 = require(\"../../models/enums/TSAuthEvent\");\nvar FREIGEBEN_DIALOG_TEMPLATE = require('../../gesuch/dialog/freigabe.html');\nvar DVBarcodeListener = /** @class */ (function () {\n    function DVBarcodeListener() {\n        this.restrict = 'A';\n        this.controller = DVBarcodeController;\n        this.controllerAs = 'vm';\n    }\n    DVBarcodeListener.factory = function () {\n        var directive = function () { return new DVBarcodeListener(); };\n        directive.$inject = [];\n        return directive;\n    };\n    return DVBarcodeListener;\n}());\nexports.DVBarcodeListener = DVBarcodeListener;\n/**\n * This binds a listener for a certain keypress sequence to the document. If this keypress sequence (escaped with §)\n * is found then we open the dialog\n * The format of an expected barcode sequence is §FREIGABE|OPEN|cd85e001-403f-407f-8eb8-102c402342b6§\n */\nvar DVBarcodeController = /** @class */ (function () {\n    /* @ngInject */\n    function DVBarcodeController($document, $timeout, dVDialog, authService, errorService, $log, $rootScope) {\n        this.$document = $document;\n        this.$timeout = $timeout;\n        this.dVDialog = dVDialog;\n        this.authService = authService;\n        this.errorService = errorService;\n        this.$log = $log;\n        this.$rootScope = $rootScope;\n        this.barcodeReading = false;\n        this.barcodeBuffer = [];\n        this.barcodeReadtimeout = null;\n    }\n    DVBarcodeController.prototype.$onInit = function () {\n        var _this = this;\n        var keypressEvent = function (e) {\n            _this.barcodeOnKeyPressed(e);\n        };\n        this.$rootScope.$on(TSAuthEvent_1.TSAuthEvent[TSAuthEvent_1.TSAuthEvent.LOGIN_SUCCESS], function () {\n            _this.$document.unbind('keypress', keypressEvent);\n            if (_this.authService.isOneOfRoles(TSRoleUtil_1.TSRoleUtil.getAdministratorJugendamtSchulamtRoles())) {\n                _this.$document.bind('keypress', keypressEvent);\n            }\n        });\n        this.$rootScope.$on(TSAuthEvent_1.TSAuthEvent[TSAuthEvent_1.TSAuthEvent.LOGOUT_SUCCESS], function () {\n            _this.$document.unbind('keypress', keypressEvent);\n        });\n    };\n    DVBarcodeController.prototype.barcodeOnKeyPressed = function (e) {\n        var _this = this;\n        var keyPressChar = e.key ? e.key : String.fromCharCode(e.which);\n        if (this.barcodeReading) {\n            e.preventDefault();\n            if (keyPressChar !== '§') {\n                this.barcodeBuffer.push(keyPressChar);\n                this.$log.debug('Current buffer: ' + this.barcodeBuffer.join(''));\n            }\n        }\n        if (keyPressChar === '§') {\n            e.preventDefault();\n            if (this.barcodeReading) {\n                this.$log.debug('End Barcode read');\n                var barcodeRead = this.barcodeBuffer.join('');\n                this.$log.debug('Barcode read:' + barcodeRead);\n                barcodeRead = barcodeRead.replace('§', '');\n                var barcodeParts = barcodeRead.split('|');\n                if (barcodeParts.length === 3) {\n                    var barcodeDocType = barcodeParts[0];\n                    var barcodeDocFunction = barcodeParts[1];\n                    var barcodeDocID = barcodeParts[2];\n                    this.$log.debug('Barcode Doc Type: ' + barcodeDocType);\n                    this.$log.debug('Barcode Doc Function: ' + barcodeDocFunction);\n                    this.$log.debug('Barcode Doc ID: ' + barcodeDocID);\n                    this.barcodeBuffer = [];\n                    this.$timeout.cancel(this.barcodeReadtimeout);\n                    this.dVDialog.showDialogFullscreen(FREIGEBEN_DIALOG_TEMPLATE, FreigabeController_1.FreigabeController, {\n                        docID: barcodeDocID\n                    });\n                }\n                else {\n                    this.errorService.addMesageAsError('Barcode hat falsches Format: ' + barcodeRead);\n                }\n            }\n            else {\n                this.$log.debug('Begin Barcode read');\n                this.barcodeReadtimeout = this.$timeout(function () {\n                    _this.barcodeReading = false;\n                    _this.$log.debug('End Barcode read');\n                    _this.$log.debug('Clearing buffer: ' + _this.barcodeBuffer.join(''));\n                    _this.barcodeBuffer = [];\n                }, 1000);\n            }\n            this.barcodeReading = !this.barcodeReading;\n        }\n    };\n    DVBarcodeController.$inject = ['$document', '$timeout', 'DvDialog', 'AuthServiceRS', 'ErrorService', '$log', '$rootScope'];\n    return DVBarcodeController;\n}());\nexports.DVBarcodeController = DVBarcodeController;\n",{"version":3,"file":"/home/imanol/projects/ebegu/ebegu-web/src/core/directive/dv-barcode-listener.ts","sourceRoot":"","sources":["/home/imanol/projects/ebegu/ebegu-web/src/core/directive/dv-barcode-listener.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Ki-Tax: System for the management of external childcare subsidies\n * Copyright (C) 2017 City of Bern Switzerland\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport {IDirective, IDirectiveFactory} from 'angular';\nimport {DvDialog} from './dv-dialog/dv-dialog';\nimport {FreigabeController} from '../../gesuch/dialog/FreigabeController';\nimport AuthServiceRS from '../../authentication/service/AuthServiceRS.rest';\nimport {TSRoleUtil} from '../../utils/TSRoleUtil';\nimport ErrorService from '../errors/service/ErrorService';\nimport {TSAuthEvent} from '../../models/enums/TSAuthEvent';\nimport * as moment from 'moment';\nimport ITimeoutService = angular.ITimeoutService;\nimport IDocumentService = angular.IDocumentService;\nimport ILogService = angular.ILogService;\nimport IRootScopeService = angular.IRootScopeService;\n\nlet FREIGEBEN_DIALOG_TEMPLATE = require('../../gesuch/dialog/freigabe.html');\n\nexport class DVBarcodeListener implements IDirective {\n    restrict = 'A';\n    controller = DVBarcodeController;\n    controllerAs = 'vm';\n\n    static factory(): IDirectiveFactory {\n        const directive = () => new DVBarcodeListener();\n        directive.$inject = [];\n        return directive;\n    }\n}\n\n/**\n * This binds a listener for a certain keypress sequence to the document. If this keypress sequence (escaped with §)\n * is found then we open the dialog\n * The format of an expected barcode sequence is §FREIGABE|OPEN|cd85e001-403f-407f-8eb8-102c402342b6§\n */\nexport class DVBarcodeController {\n\n    static $inject: string[] = ['$document', '$timeout', 'DvDialog', 'AuthServiceRS', 'ErrorService', '$log', '$rootScope'];\n\n    private barcodeReading: boolean = false;\n    private barcodeBuffer: string[] = [];\n    private barcodeReadtimeout: any = null;\n\n    /* @ngInject */\n    constructor(private $document: IDocumentService, private $timeout: ITimeoutService, private dVDialog: DvDialog, private authService: AuthServiceRS,\n                private errorService: ErrorService, private $log: ILogService, private $rootScope: IRootScopeService) {\n\n    }\n\n    $onInit() {\n        let keypressEvent = (e: any) => {\n            this.barcodeOnKeyPressed(e);\n        };\n\n        this.$rootScope.$on(TSAuthEvent[TSAuthEvent.LOGIN_SUCCESS], () => {\n            this.$document.unbind('keypress', keypressEvent);\n            if (this.authService.isOneOfRoles(TSRoleUtil.getAdministratorJugendamtSchulamtRoles())) {\n                this.$document.bind('keypress', keypressEvent);\n            }\n        });\n\n        this.$rootScope.$on(TSAuthEvent[TSAuthEvent.LOGOUT_SUCCESS], () => {\n            this.$document.unbind('keypress', keypressEvent);\n        });\n\n    }\n\n    public barcodeOnKeyPressed(e: any): void {\n\n        let keyPressChar: string = e.key ? e.key : String.fromCharCode(e.which);\n\n        if (this.barcodeReading) {\n            e.preventDefault();\n            if (keyPressChar !== '§') {\n                this.barcodeBuffer.push(keyPressChar);\n                this.$log.debug('Current buffer: ' + this.barcodeBuffer.join(''));\n            }\n        }\n\n        if (keyPressChar === '§') {\n            e.preventDefault();\n            if (this.barcodeReading) {\n                this.$log.debug('End Barcode read');\n\n                let barcodeRead: string = this.barcodeBuffer.join('');\n                this.$log.debug('Barcode read:' + barcodeRead);\n                barcodeRead = barcodeRead.replace('§', '');\n\n                let barcodeParts: string[] = barcodeRead.split('|');\n\n                if (barcodeParts.length === 3) {\n                    let barcodeDocType: string = barcodeParts[0];\n                    let barcodeDocFunction: string = barcodeParts[1];\n                    let barcodeDocID: string = barcodeParts[2];\n\n                    this.$log.debug('Barcode Doc Type: ' + barcodeDocType);\n                    this.$log.debug('Barcode Doc Function: ' + barcodeDocFunction);\n                    this.$log.debug('Barcode Doc ID: ' + barcodeDocID);\n\n                    this.barcodeBuffer = [];\n                    this.$timeout.cancel(this.barcodeReadtimeout);\n\n                    this.dVDialog.showDialogFullscreen(FREIGEBEN_DIALOG_TEMPLATE, FreigabeController, {\n                        docID: barcodeDocID\n                    });\n                } else {\n                    this.errorService.addMesageAsError('Barcode hat falsches Format: ' + barcodeRead);\n                }\n            } else {\n                this.$log.debug('Begin Barcode read');\n\n                this.barcodeReadtimeout = this.$timeout(() => {\n                    this.barcodeReading = false;\n                    this.$log.debug('End Barcode read');\n                    this.$log.debug('Clearing buffer: ' + this.barcodeBuffer.join(''));\n                    this.barcodeBuffer = [];\n                }, 1000);\n            }\n\n            this.barcodeReading = !this.barcodeReading;\n\n        }\n    }\n}\n"]}]}