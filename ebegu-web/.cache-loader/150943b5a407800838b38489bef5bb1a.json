{"remainingRequest":"/home/imanol/projects/ebegu/ebegu-web/node_modules/thread-loader/dist/cjs.js??ref--0-1!/home/imanol/projects/ebegu/ebegu-web/node_modules/ts-loader/index.js??ref--0-2!/home/imanol/projects/ebegu/ebegu-web/src/gesuch/service/berechnungsManager.ts","cacheIdentifier":"cache-loader:1.1.0 test","dependencies":[{"path":"/home/imanol/projects/ebegu/ebegu-web/src/gesuch/service/berechnungsManager.ts","mtime":1512484412019},{"path":"/home/imanol/projects/ebegu/ebegu-web/node_modules/cache-loader/dist/cjs.js","mtime":1507514019000},{"path":"/home/imanol/projects/ebegu/ebegu-web/node_modules/thread-loader/dist/cjs.js","mtime":1507523420000},{"path":"/home/imanol/projects/ebegu/ebegu-web/node_modules/ts-loader/index.js","mtime":1508488471000}],"contextDependencies":[],"result":["\"use strict\";\n/*\n * Ki-Tax: System for the management of external childcare subsidies\n * Copyright (C) 2017 City of Bern Switzerland\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar TSFinanzielleSituationResultateDTO_1 = require(\"../../models/dto/TSFinanzielleSituationResultateDTO\");\nvar TSDokumenteDTO_1 = require(\"../../models/dto/TSDokumenteDTO\");\nvar TSAuthEvent_1 = require(\"../../models/enums/TSAuthEvent\");\nvar BerechnungsManager = /** @class */ (function () {\n    /* @ngInject */\n    function BerechnungsManager(finanzielleSituationRS, ebeguRestUtil, einkommensverschlechterungContainerRS, dokumenteRS, $rootScope) {\n        var _this = this;\n        this.finanzielleSituationRS = finanzielleSituationRS;\n        this.ebeguRestUtil = ebeguRestUtil;\n        this.einkommensverschlechterungContainerRS = einkommensverschlechterungContainerRS;\n        this.dokumenteRS = dokumenteRS;\n        this.$rootScope = $rootScope;\n        this.initValues();\n        $rootScope.$on(TSAuthEvent_1.TSAuthEvent[TSAuthEvent_1.TSAuthEvent.LOGIN_SUCCESS], function () {\n            _this.initValues();\n        });\n    }\n    BerechnungsManager.prototype.initValues = function () {\n        this.finanzielleSituationResultate = new TSFinanzielleSituationResultateDTO_1.default();\n        this.einkommensverschlechterungResultateBjP1 = new TSFinanzielleSituationResultateDTO_1.default();\n        this.einkommensverschlechterungResultateBjP2 = new TSFinanzielleSituationResultateDTO_1.default();\n        this.dokumente = new TSDokumenteDTO_1.default;\n    };\n    BerechnungsManager.prototype.calculateFinanzielleSituation = function (gesuch) {\n        var _this = this;\n        return this.finanzielleSituationRS.calculateFinanzielleSituation(gesuch)\n            .then(function (finSitContRespo) {\n            _this.finanzielleSituationResultate = finSitContRespo;\n            return finSitContRespo;\n        });\n    };\n    BerechnungsManager.prototype.calculateFinanzielleSituationTemp = function (tsFinSitModel) {\n        var _this = this;\n        return this.finanzielleSituationRS.calculateFinanzielleSituationTemp(tsFinSitModel)\n            .then(function (finSitContRespo) {\n            _this.finanzielleSituationResultate = finSitContRespo;\n            return finSitContRespo;\n        });\n    };\n    BerechnungsManager.prototype.calculateEinkommensverschlechterung = function (gesuch, basisJahrPlus) {\n        var _this = this;\n        return this.einkommensverschlechterungContainerRS.calculateEinkommensverschlechterung(gesuch, basisJahrPlus)\n            .then(function (finSitContRespo) {\n            if (basisJahrPlus === 2) {\n                _this.einkommensverschlechterungResultateBjP2 = finSitContRespo;\n            }\n            else {\n                _this.einkommensverschlechterungResultateBjP1 = finSitContRespo;\n            }\n            return finSitContRespo;\n        });\n    };\n    BerechnungsManager.prototype.calculateEinkommensverschlechterungTemp = function (finanzModel, basisJahrPlus) {\n        var _this = this;\n        return this.einkommensverschlechterungContainerRS.calculateEinkommensverschlechterungTemp(finanzModel, basisJahrPlus)\n            .then(function (finSitContRespo) {\n            if (basisJahrPlus === 2) {\n                _this.einkommensverschlechterungResultateBjP2 = finSitContRespo;\n            }\n            else {\n                _this.einkommensverschlechterungResultateBjP1 = finSitContRespo;\n            }\n            return finSitContRespo;\n        });\n    };\n    BerechnungsManager.prototype.getEinkommensverschlechterungResultate = function (basisJahrPlus) {\n        if (basisJahrPlus === 2) {\n            return this.einkommensverschlechterungResultateBjP2;\n        }\n        return this.einkommensverschlechterungResultateBjP1;\n    };\n    BerechnungsManager.prototype.getDokumente = function (gesuch) {\n        var _this = this;\n        return this.dokumenteRS.getDokumente(gesuch)\n            .then(function (promiseValue) {\n            _this.dokumente = promiseValue;\n            return promiseValue;\n        });\n    };\n    /**\n     * setzt alle Resultate zureuck so dass sicher nichts mehr gesetzt ist, wird zB gebraucht wenn man den Fall wechselt\n     */\n    BerechnungsManager.prototype.clear = function () {\n        this.einkommensverschlechterungResultateBjP1 = undefined;\n        this.einkommensverschlechterungResultateBjP2 = undefined;\n        this.finanzielleSituationResultate = undefined;\n        this.dokumente = undefined;\n    };\n    BerechnungsManager.$inject = ['FinanzielleSituationRS', 'EbeguRestUtil', 'EinkommensverschlechterungContainerRS', 'DokumenteRS', '$rootScope'];\n    return BerechnungsManager;\n}());\nexports.default = BerechnungsManager;\n",{"version":3,"file":"/home/imanol/projects/ebegu/ebegu-web/src/gesuch/service/berechnungsManager.ts","sourceRoot":"","sources":["/home/imanol/projects/ebegu/ebegu-web/src/gesuch/service/berechnungsManager.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;GAaG;;AAMH,0GAAqG;AAErG,kEAA6D;AAG7D,8DAA2D;AAG3D;IAOI,eAAe;IACf,4BAAoB,sBAA8C,EAAU,aAA4B,EACpF,qCAA4E,EAC5E,WAAwB,EAAU,UAA6B;QAFnF,iBAQC;QARmB,2BAAsB,GAAtB,sBAAsB,CAAwB;QAAU,kBAAa,GAAb,aAAa,CAAe;QACpF,0CAAqC,GAArC,qCAAqC,CAAuC;QAC5E,gBAAW,GAAX,WAAW,CAAa;QAAU,eAAU,GAAV,UAAU,CAAmB;QAC/E,IAAI,CAAC,UAAU,EAAE,CAAC;QAElB,UAAU,CAAC,GAAG,CAAC,yBAAW,CAAC,yBAAW,CAAC,aAAa,CAAC,EAAE;YACnD,KAAI,CAAC,UAAU,EAAE,CAAC;QACtB,CAAC,CAAC,CAAC;IACP,CAAC;IAEO,uCAAU,GAAlB;QACI,IAAI,CAAC,6BAA6B,GAAG,IAAI,4CAAkC,EAAE,CAAC;QAC9E,IAAI,CAAC,uCAAuC,GAAG,IAAI,4CAAkC,EAAE,CAAC;QACxF,IAAI,CAAC,uCAAuC,GAAG,IAAI,4CAAkC,EAAE,CAAC;QACxF,IAAI,CAAC,SAAS,GAAG,IAAI,wBAAc,CAAC;IACxC,CAAC;IAEM,0DAA6B,GAApC,UAAqC,MAAgB;QAArD,iBAOC;QANG,MAAM,CAAC,IAAI,CAAC,sBAAsB,CAAC,6BAA6B,CAC5D,MAAM,CAAC;aACN,IAAI,CAAC,UAAC,eAAmD;YACtD,KAAI,CAAC,6BAA6B,GAAG,eAAe,CAAC;YACrD,MAAM,CAAC,eAAe,CAAC;QAC3B,CAAC,CAAC,CAAC;IACX,CAAC;IAEM,8DAAiC,GAAxC,UAAyC,aAA4B;QAArE,iBAOC;QANG,MAAM,CAAC,IAAI,CAAC,sBAAsB,CAAC,iCAAiC,CAChE,aAAa,CAAC;aACb,IAAI,CAAC,UAAC,eAAmD;YACtD,KAAI,CAAC,6BAA6B,GAAG,eAAe,CAAC;YACrD,MAAM,CAAC,eAAe,CAAC;QAC3B,CAAC,CAAC,CAAC;IACX,CAAC;IAEM,gEAAmC,GAA1C,UAA2C,MAAgB,EAAE,aAAqB;QAAlF,iBAWC;QAVG,MAAM,CAAC,IAAI,CAAC,qCAAqC,CAAC,mCAAmC,CACjF,MAAM,EAAE,aAAa,CAAC;aACrB,IAAI,CAAC,UAAC,eAAmD;YACtD,EAAE,CAAC,CAAC,aAAa,KAAK,CAAC,CAAC,CAAC,CAAC;gBACtB,KAAI,CAAC,uCAAuC,GAAG,eAAe,CAAC;YACnE,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,KAAI,CAAC,uCAAuC,GAAG,eAAe,CAAC;YACnE,CAAC;YACD,MAAM,CAAC,eAAe,CAAC;QAC3B,CAAC,CAAC,CAAC;IACX,CAAC;IAEM,oEAAuC,GAA9C,UAA+C,WAA0B,EAAE,aAAqB;QAAhG,iBAWC;QAVG,MAAM,CAAC,IAAI,CAAC,qCAAqC,CAAC,uCAAuC,CACrF,WAAW,EAAE,aAAa,CAAC;aAC1B,IAAI,CAAC,UAAC,eAAmD;YACtD,EAAE,CAAC,CAAC,aAAa,KAAK,CAAC,CAAC,CAAC,CAAC;gBACtB,KAAI,CAAC,uCAAuC,GAAG,eAAe,CAAC;YACnE,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,KAAI,CAAC,uCAAuC,GAAG,eAAe,CAAC;YACnE,CAAC;YACD,MAAM,CAAC,eAAe,CAAC;QAC3B,CAAC,CAAC,CAAC;IACX,CAAC;IAED,mEAAsC,GAAtC,UAAuC,aAAqB;QACxD,EAAE,CAAC,CAAC,aAAa,KAAK,CAAC,CAAC,CAAC,CAAC;YACtB,MAAM,CAAC,IAAI,CAAC,uCAAuC,CAAC;QACxD,CAAC;QACD,MAAM,CAAC,IAAI,CAAC,uCAAuC,CAAC;IACxD,CAAC;IAEM,yCAAY,GAAnB,UAAoB,MAAgB;QAApC,iBAOC;QANG,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,YAAY,CAChC,MAAM,CAAC;aACN,IAAI,CAAC,UAAC,YAA4B;YAC/B,KAAI,CAAC,SAAS,GAAG,YAAY,CAAC;YAC9B,MAAM,CAAC,YAAY,CAAC;QACxB,CAAC,CAAC,CAAC;IACX,CAAC;IAED;;OAEG;IACI,kCAAK,GAAZ;QACI,IAAI,CAAC,uCAAuC,GAAG,SAAS,CAAC;QACzD,IAAI,CAAC,uCAAuC,GAAG,SAAS,CAAC;QACzD,IAAI,CAAC,6BAA6B,GAAG,SAAS,CAAC;QAC/C,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;IAC/B,CAAC;IAvFM,0BAAO,GAAG,CAAC,wBAAwB,EAAE,eAAe,EAAE,uCAAuC,EAAE,aAAa,EAAE,YAAY,CAAC,CAAC;IAwFvI,yBAAC;CAAA,AA9FD,IA8FC;kBA9FoB,kBAAkB","sourcesContent":["/*\n * Ki-Tax: System for the management of external childcare subsidies\n * Copyright (C) 2017 City of Bern Switzerland\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport TSGesuch from '../../models/TSGesuch';\nimport {IPromise} from 'angular';\nimport EbeguRestUtil from '../../utils/EbeguRestUtil';\nimport FinanzielleSituationRS from './finanzielleSituationRS.rest';\nimport TSFinanzielleSituationResultateDTO from '../../models/dto/TSFinanzielleSituationResultateDTO';\nimport EinkommensverschlechterungContainerRS from './einkommensverschlechterungContainerRS.rest';\nimport TSDokumenteDTO from '../../models/dto/TSDokumenteDTO';\nimport DokumenteRS from './dokumenteRS.rest';\nimport TSFinanzModel from '../../models/TSFinanzModel';\nimport {TSAuthEvent} from '../../models/enums/TSAuthEvent';\nimport IRootScopeService = angular.IRootScopeService;\n\nexport default class BerechnungsManager {\n    finanzielleSituationResultate: TSFinanzielleSituationResultateDTO;\n    einkommensverschlechterungResultateBjP1: TSFinanzielleSituationResultateDTO;\n    einkommensverschlechterungResultateBjP2: TSFinanzielleSituationResultateDTO;\n    dokumente: TSDokumenteDTO;\n\n    static $inject = ['FinanzielleSituationRS', 'EbeguRestUtil', 'EinkommensverschlechterungContainerRS', 'DokumenteRS', '$rootScope'];\n    /* @ngInject */\n    constructor(private finanzielleSituationRS: FinanzielleSituationRS, private ebeguRestUtil: EbeguRestUtil,\n                private einkommensverschlechterungContainerRS: EinkommensverschlechterungContainerRS,\n                private dokumenteRS: DokumenteRS, private $rootScope: IRootScopeService) {\n        this.initValues();\n\n        $rootScope.$on(TSAuthEvent[TSAuthEvent.LOGIN_SUCCESS], () => {\n            this.initValues();\n        });\n    }\n\n    private initValues() {\n        this.finanzielleSituationResultate = new TSFinanzielleSituationResultateDTO();\n        this.einkommensverschlechterungResultateBjP1 = new TSFinanzielleSituationResultateDTO();\n        this.einkommensverschlechterungResultateBjP2 = new TSFinanzielleSituationResultateDTO();\n        this.dokumente = new TSDokumenteDTO;\n    }\n\n    public calculateFinanzielleSituation(gesuch: TSGesuch): IPromise<TSFinanzielleSituationResultateDTO> {\n        return this.finanzielleSituationRS.calculateFinanzielleSituation(\n            gesuch)\n            .then((finSitContRespo: TSFinanzielleSituationResultateDTO) => {\n                this.finanzielleSituationResultate = finSitContRespo;\n                return finSitContRespo;\n            });\n    }\n\n    public calculateFinanzielleSituationTemp(tsFinSitModel: TSFinanzModel): IPromise<TSFinanzielleSituationResultateDTO> {\n        return this.finanzielleSituationRS.calculateFinanzielleSituationTemp(\n            tsFinSitModel)\n            .then((finSitContRespo: TSFinanzielleSituationResultateDTO) => {\n                this.finanzielleSituationResultate = finSitContRespo;\n                return finSitContRespo;\n            });\n    }\n\n    public calculateEinkommensverschlechterung(gesuch: TSGesuch, basisJahrPlus: number): IPromise<TSFinanzielleSituationResultateDTO> {\n        return this.einkommensverschlechterungContainerRS.calculateEinkommensverschlechterung(\n            gesuch, basisJahrPlus)\n            .then((finSitContRespo: TSFinanzielleSituationResultateDTO) => {\n                if (basisJahrPlus === 2) {\n                    this.einkommensverschlechterungResultateBjP2 = finSitContRespo;\n                } else {\n                    this.einkommensverschlechterungResultateBjP1 = finSitContRespo;\n                }\n                return finSitContRespo;\n            });\n    }\n\n    public calculateEinkommensverschlechterungTemp(finanzModel: TSFinanzModel, basisJahrPlus: number): IPromise<TSFinanzielleSituationResultateDTO> {\n        return this.einkommensverschlechterungContainerRS.calculateEinkommensverschlechterungTemp(\n            finanzModel, basisJahrPlus)\n            .then((finSitContRespo: TSFinanzielleSituationResultateDTO) => {\n                if (basisJahrPlus === 2) {\n                    this.einkommensverschlechterungResultateBjP2 = finSitContRespo;\n                } else {\n                    this.einkommensverschlechterungResultateBjP1 = finSitContRespo;\n                }\n                return finSitContRespo;\n            });\n    }\n\n    getEinkommensverschlechterungResultate(basisJahrPlus: number): TSFinanzielleSituationResultateDTO {\n        if (basisJahrPlus === 2) {\n            return this.einkommensverschlechterungResultateBjP2;\n        }\n        return this.einkommensverschlechterungResultateBjP1;\n    }\n\n    public getDokumente(gesuch: TSGesuch): IPromise<TSDokumenteDTO> {\n        return this.dokumenteRS.getDokumente(\n            gesuch)\n            .then((promiseValue: TSDokumenteDTO) => {\n                this.dokumente = promiseValue;\n                return promiseValue;\n            });\n    }\n\n    /**\n     * setzt alle Resultate zureuck so dass sicher nichts mehr gesetzt ist, wird zB gebraucht wenn man den Fall wechselt\n     */\n    public clear() {\n        this.einkommensverschlechterungResultateBjP1 = undefined;\n        this.einkommensverschlechterungResultateBjP2 = undefined;\n        this.finanzielleSituationResultate = undefined;\n        this.dokumente = undefined;\n    }\n}\n"]}]}