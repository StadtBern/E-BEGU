{"remainingRequest":"/home/imanol/projects/ebegu/ebegu-web/node_modules/thread-loader/dist/cjs.js??ref--0-1!/home/imanol/projects/ebegu/ebegu-web/node_modules/ts-loader/index.js??ref--0-2!/home/imanol/projects/ebegu/ebegu-web/src/core/service/betreuungRS.rest.ts","cacheIdentifier":"cache-loader:1.1.0 test","dependencies":[{"path":"/home/imanol/projects/ebegu/ebegu-web/src/core/service/betreuungRS.rest.ts","mtime":1518535855216},{"path":"/home/imanol/projects/ebegu/ebegu-web/node_modules/cache-loader/dist/cjs.js","mtime":1507514019000},{"path":"/home/imanol/projects/ebegu/ebegu-web/node_modules/thread-loader/dist/cjs.js","mtime":1507523420000},{"path":"/home/imanol/projects/ebegu/ebegu-web/node_modules/ts-loader/index.js","mtime":1508488471000}],"contextDependencies":[],"result":["/*\n * Ki-Tax: System for the management of external childcare subsidies\n * Copyright (C) 2017 City of Bern Switzerland\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\ndefine([\"require\", \"exports\", \"../../models/TSBetreuung\"], function (require, exports, TSBetreuung_1) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    var BetreuungRS = /** @class */ (function () {\n        /* @ngInject */\n        function BetreuungRS($http, REST_API, ebeguRestUtil, $log, wizardStepManager) {\n            this.wizardStepManager = wizardStepManager;\n            this.serviceURL = REST_API + 'betreuungen';\n            this.http = $http;\n            this.ebeguRestUtil = ebeguRestUtil;\n            this.log = $log;\n        }\n        BetreuungRS.prototype.getServiceName = function () {\n            return 'BetreuungRS';\n        };\n        BetreuungRS.prototype.findBetreuung = function (betreuungID) {\n            var _this = this;\n            return this.http.get(this.serviceURL + '/' + encodeURIComponent(betreuungID))\n                .then(function (response) {\n                _this.log.debug('PARSING betreuung REST object ', response.data);\n                return _this.ebeguRestUtil.parseBetreuung(new TSBetreuung_1.default(), response.data);\n            });\n        };\n        BetreuungRS.prototype.findAllBetreuungenWithVerfuegungFromFall = function (fallId) {\n            var _this = this;\n            return this.http.get(this.serviceURL + '/alleBetreuungen/' + encodeURIComponent(fallId))\n                .then(function (response) {\n                _this.log.debug('PARSING Betreuung REST object ', response.data);\n                return _this.ebeguRestUtil.parseBetreuungList(response.data);\n            });\n        };\n        BetreuungRS.prototype.saveBetreuung = function (betreuung, kindId, gesuchId, abwesenheit) {\n            var _this = this;\n            var restBetreuung = {};\n            restBetreuung = this.ebeguRestUtil.betreuungToRestObject(restBetreuung, betreuung);\n            return this.http.put(this.serviceURL + '/betreuung/' + encodeURIComponent(kindId) + '/' + abwesenheit, restBetreuung, {\n                headers: {\n                    'Content-Type': 'application/json'\n                }\n            }).then(function (response) {\n                return _this.wizardStepManager.findStepsFromGesuch(gesuchId).then(function () {\n                    _this.log.debug('PARSING Betreuung REST object ', response.data);\n                    return _this.ebeguRestUtil.parseBetreuung(new TSBetreuung_1.default(), response.data);\n                });\n            });\n        };\n        BetreuungRS.prototype.betreuungsPlatzAbweisen = function (betreuung, kindId, gesuchId) {\n            var _this = this;\n            var restBetreuung = {};\n            restBetreuung = this.ebeguRestUtil.betreuungToRestObject(restBetreuung, betreuung);\n            return this.http.put(this.serviceURL + '/abweisen/' + encodeURIComponent(kindId) + '/', restBetreuung, {\n                headers: {\n                    'Content-Type': 'application/json'\n                }\n            }).then(function (response) {\n                return _this.wizardStepManager.findStepsFromGesuch(gesuchId).then(function () {\n                    _this.log.debug('PARSING Betreuung REST object ', response.data);\n                    return _this.ebeguRestUtil.parseBetreuung(new TSBetreuung_1.default(), response.data);\n                });\n            });\n        };\n        BetreuungRS.prototype.betreuungsPlatzBestaetigen = function (betreuung, kindId, gesuchId) {\n            var _this = this;\n            var restBetreuung = {};\n            restBetreuung = this.ebeguRestUtil.betreuungToRestObject(restBetreuung, betreuung);\n            return this.http.put(this.serviceURL + '/bestaetigen/' + encodeURIComponent(kindId) + '/', restBetreuung, {\n                headers: {\n                    'Content-Type': 'application/json'\n                }\n            }).then(function (response) {\n                return _this.wizardStepManager.findStepsFromGesuch(gesuchId).then(function () {\n                    _this.log.debug('PARSING Betreuung REST object ', response.data);\n                    return _this.ebeguRestUtil.parseBetreuung(new TSBetreuung_1.default(), response.data);\n                });\n            });\n        };\n        BetreuungRS.prototype.removeBetreuung = function (betreuungId, gesuchId) {\n            var _this = this;\n            return this.http.delete(this.serviceURL + '/' + encodeURIComponent(betreuungId))\n                .then(function (responseDeletion) {\n                return _this.wizardStepManager.findStepsFromGesuch(gesuchId).then(function () {\n                    return responseDeletion;\n                });\n            });\n        };\n        /**\n         * Diese Methode ruft den Service um alle uebergebenen Betreuungen zu speichern.\n         * Dies wird empfohlen wenn mehrere Betreuungen gleichzeitig gespeichert werden muessen,\n         * damit alles in einer Transaction passiert. Z.B. fuer Abwesenheiten\n         */\n        BetreuungRS.prototype.saveBetreuungen = function (betreuungenToUpdate, gesuchId, saveForAbwesenheit) {\n            var _this = this;\n            var restBetreuungen = [];\n            betreuungenToUpdate.forEach(function (betreuungToUpdate) {\n                restBetreuungen.push(_this.ebeguRestUtil.betreuungToRestObject({}, betreuungToUpdate));\n            });\n            return this.http.put(this.serviceURL + '/all/' + saveForAbwesenheit, restBetreuungen, {\n                headers: {\n                    'Content-Type': 'application/json'\n                }\n            }).then(function (response) {\n                return _this.wizardStepManager.findStepsFromGesuch(gesuchId).then(function () {\n                    _this.log.debug('PARSING Betreuung REST object ', response.data);\n                    var convertedBetreuungen = [];\n                    response.data.forEach(function (returnedBetreuung) {\n                        convertedBetreuungen.push(_this.ebeguRestUtil.parseBetreuung(new TSBetreuung_1.default(), returnedBetreuung));\n                    });\n                    return convertedBetreuungen;\n                });\n            });\n        };\n        BetreuungRS.$inject = ['$http', 'REST_API', 'EbeguRestUtil', '$log', 'WizardStepManager'];\n        return BetreuungRS;\n    }());\n    exports.default = BetreuungRS;\n});\n",{"version":3,"file":"/home/imanol/projects/ebegu/ebegu-web/src/core/service/betreuungRS.rest.ts","sourceRoot":"","sources":["/home/imanol/projects/ebegu/ebegu-web/src/core/service/betreuungRS.rest.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Ki-Tax: System for the management of external childcare subsidies\n * Copyright (C) 2017 City of Bern Switzerland\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport {IHttpService, ILogService, IPromise} from 'angular';\nimport EbeguRestUtil from '../../utils/EbeguRestUtil';\nimport TSBetreuung from '../../models/TSBetreuung';\nimport WizardStepManager from '../../gesuch/service/wizardStepManager';\n\nexport default class BetreuungRS {\n    serviceURL: string;\n    http: IHttpService;\n    ebeguRestUtil: EbeguRestUtil;\n    log: ILogService;\n\n    static $inject = ['$http', 'REST_API', 'EbeguRestUtil', '$log', 'WizardStepManager'];\n    /* @ngInject */\n    constructor($http: IHttpService, REST_API: string, ebeguRestUtil: EbeguRestUtil, $log: ILogService,\n                private wizardStepManager: WizardStepManager) {\n        this.serviceURL = REST_API + 'betreuungen';\n        this.http = $http;\n        this.ebeguRestUtil = ebeguRestUtil;\n        this.log = $log;\n    }\n\n    public getServiceName(): string {\n        return 'BetreuungRS';\n    }\n\n    public findBetreuung(betreuungID: string): IPromise<TSBetreuung> {\n        return this.http.get(this.serviceURL + '/' + encodeURIComponent(betreuungID))\n            .then((response: any) => {\n                this.log.debug('PARSING betreuung REST object ', response.data);\n                return this.ebeguRestUtil.parseBetreuung(new TSBetreuung(), response.data);\n            });\n    }\n\n    public findAllBetreuungenWithVerfuegungFromFall(fallId: string): IPromise<TSBetreuung[]> {\n        return this.http.get(this.serviceURL + '/alleBetreuungen/' + encodeURIComponent(fallId))\n            .then((response: any) => {\n                this.log.debug('PARSING Betreuung REST object ', response.data);\n                return this.ebeguRestUtil.parseBetreuungList(response.data);\n            });\n    }\n\n    public saveBetreuung(betreuung: TSBetreuung, kindId: string, gesuchId: string, abwesenheit: boolean): IPromise<TSBetreuung> {\n        let restBetreuung = {};\n        restBetreuung = this.ebeguRestUtil.betreuungToRestObject(restBetreuung, betreuung);\n        return this.http.put(this.serviceURL + '/betreuung/' + encodeURIComponent(kindId) + '/' + abwesenheit, restBetreuung, {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }).then((response: any) => {\n            return this.wizardStepManager.findStepsFromGesuch(gesuchId).then(() => {\n                this.log.debug('PARSING Betreuung REST object ', response.data);\n                return this.ebeguRestUtil.parseBetreuung(new TSBetreuung(), response.data);\n            });\n        });\n    }\n\n    public betreuungsPlatzAbweisen(betreuung: TSBetreuung, kindId: string, gesuchId: string): IPromise<TSBetreuung> {\n        let restBetreuung = {};\n        restBetreuung = this.ebeguRestUtil.betreuungToRestObject(restBetreuung, betreuung);\n        return this.http.put(this.serviceURL + '/abweisen/' + encodeURIComponent(kindId) + '/', restBetreuung, {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }).then((response: any) => {\n            return this.wizardStepManager.findStepsFromGesuch(gesuchId).then(() => {\n                this.log.debug('PARSING Betreuung REST object ', response.data);\n                return this.ebeguRestUtil.parseBetreuung(new TSBetreuung(), response.data);\n            });\n        });\n    }\n\n    public betreuungsPlatzBestaetigen(betreuung: TSBetreuung, kindId: string, gesuchId: string): IPromise<TSBetreuung> {\n        let restBetreuung = {};\n        restBetreuung = this.ebeguRestUtil.betreuungToRestObject(restBetreuung, betreuung);\n        return this.http.put(this.serviceURL + '/bestaetigen/' + encodeURIComponent(kindId) + '/', restBetreuung, {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }).then((response: any) => {\n            return this.wizardStepManager.findStepsFromGesuch(gesuchId).then(() => {\n                this.log.debug('PARSING Betreuung REST object ', response.data);\n                return this.ebeguRestUtil.parseBetreuung(new TSBetreuung(), response.data);\n            });\n        });\n    }\n\n    public removeBetreuung(betreuungId: string, gesuchId: string): IPromise<any> {\n        return this.http.delete(this.serviceURL + '/' + encodeURIComponent(betreuungId))\n            .then((responseDeletion) => {\n                return this.wizardStepManager.findStepsFromGesuch(gesuchId).then(() => {\n                    return responseDeletion;\n                });\n            });\n    }\n\n    /**\n     * Diese Methode ruft den Service um alle uebergebenen Betreuungen zu speichern.\n     * Dies wird empfohlen wenn mehrere Betreuungen gleichzeitig gespeichert werden muessen,\n     * damit alles in einer Transaction passiert. Z.B. fuer Abwesenheiten\n     */\n    public saveBetreuungen(betreuungenToUpdate: Array<TSBetreuung>, gesuchId: string, saveForAbwesenheit: boolean): IPromise<Array<TSBetreuung>> {\n        let restBetreuungen: Array<any> = [];\n        betreuungenToUpdate.forEach((betreuungToUpdate: TSBetreuung) => {\n            restBetreuungen.push(this.ebeguRestUtil.betreuungToRestObject({}, betreuungToUpdate));\n        });\n        return this.http.put(this.serviceURL + '/all/' + saveForAbwesenheit, restBetreuungen, {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }).then((response: any) => {\n            return this.wizardStepManager.findStepsFromGesuch(gesuchId).then(() => {\n                this.log.debug('PARSING Betreuung REST object ', response.data);\n                let convertedBetreuungen: Array<TSBetreuung> = [];\n                response.data.forEach((returnedBetreuung: any) => {\n                    convertedBetreuungen.push(this.ebeguRestUtil.parseBetreuung(new TSBetreuung(), returnedBetreuung));\n                });\n                return convertedBetreuungen;\n            });\n        });\n    }\n}\n"]}]}