{"remainingRequest":"/home/imanol/projects/ebegu/ebegu-web/node_modules/thread-loader/dist/cjs.js??ref--0-1!/home/imanol/projects/ebegu/ebegu-web/node_modules/ts-loader/index.js??ref--0-2!/home/imanol/projects/ebegu/ebegu-web/src/authentication/service/HttpAuthInterceptor.ts","cacheIdentifier":"cache-loader:1.1.0 test","dependencies":[{"path":"/home/imanol/projects/ebegu/ebegu-web/src/authentication/service/HttpAuthInterceptor.ts","mtime":1518535855208},{"path":"/home/imanol/projects/ebegu/ebegu-web/node_modules/cache-loader/dist/cjs.js","mtime":1507514019000},{"path":"/home/imanol/projects/ebegu/ebegu-web/node_modules/thread-loader/dist/cjs.js","mtime":1507523420000},{"path":"/home/imanol/projects/ebegu/ebegu-web/node_modules/ts-loader/index.js","mtime":1508488471000}],"contextDependencies":[],"result":["/*\n * Ki-Tax: System for the management of external childcare subsidies\n * Copyright (C) 2017 City of Bern Switzerland\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\ndefine([\"require\", \"exports\", \"../../models/enums/TSAuthEvent\"], function (require, exports, TSAuthEvent_1) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    var HttpAuthInterceptor = /** @class */ (function () {\n        /* @ngInject */\n        function HttpAuthInterceptor($rootScope, $q, CONSTANTS, httpBuffer) {\n            var _this = this;\n            this.$rootScope = $rootScope;\n            this.$q = $q;\n            this.CONSTANTS = CONSTANTS;\n            this.httpBuffer = httpBuffer;\n            this.responseError = function (response) {\n                switch (response.status) {\n                    case 401:\n                        // exclude requests from the login form\n                        if (response.config && response.config.url === _this.CONSTANTS.REST_API + 'auth/login') {\n                            return _this.$q.reject(response);\n                        }\n                        //if this request was a background polling request we do not want to relogin or show errors\n                        if (response.config && response.config.url.indexOf('notokenrefresh') > 0) {\n                            console.debug('rejecting failed notokenrefresh response');\n                            return _this.$q.reject(response);\n                        }\n                        // all requests that failed due to notAuthenticated are appended to httpBuffer. Use httpBuffer.retryAll to submit them.\n                        var deferred = _this.$q.defer();\n                        _this.httpBuffer.append(response.config, deferred);\n                        _this.$rootScope.$broadcast(TSAuthEvent_1.TSAuthEvent[TSAuthEvent_1.TSAuthEvent.NOT_AUTHENTICATED], response);\n                        return deferred.promise;\n                    case 403:\n                        _this.$rootScope.$broadcast(TSAuthEvent_1.TSAuthEvent[TSAuthEvent_1.TSAuthEvent.NOT_AUTHORISED], response);\n                        return _this.$q.reject(response);\n                }\n                return _this.$q.reject(response);\n            };\n        }\n        HttpAuthInterceptor.$inject = ['$rootScope', '$q', 'CONSTANTS', 'httpBuffer'];\n        return HttpAuthInterceptor;\n    }());\n    exports.default = HttpAuthInterceptor;\n});\n",{"version":3,"file":"/home/imanol/projects/ebegu/ebegu-web/src/authentication/service/HttpAuthInterceptor.ts","sourceRoot":"","sources":["/home/imanol/projects/ebegu/ebegu-web/src/authentication/service/HttpAuthInterceptor.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;GAaG;;;;IAMH;QAGI,eAAe;QACf,6BAAoB,UAA6B,EAAU,EAAa,EAAU,SAAc,EAC5E,UAAsB;YAD1C,iBAEC;YAFmB,eAAU,GAAV,UAAU,CAAmB;YAAU,OAAE,GAAF,EAAE,CAAW;YAAU,cAAS,GAAT,SAAS,CAAK;YAC5E,eAAU,GAAV,UAAU,CAAY;YAInC,kBAAa,GAAG,UAAC,QAAa;gBACjC,MAAM,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC;oBACtB,KAAK,GAAG;wBACJ,uCAAuC;wBACvC,EAAE,CAAC,CAAC,QAAQ,CAAC,MAAM,IAAI,QAAQ,CAAC,MAAM,CAAC,GAAG,KAAK,KAAI,CAAC,SAAS,CAAC,QAAQ,GAAG,YAAY,CAAC,CAAC,CAAC;4BACpF,MAAM,CAAC,KAAI,CAAC,EAAE,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;wBACpC,CAAC;wBACD,2FAA2F;wBAC3F,EAAE,CAAC,CAAC,QAAQ,CAAC,MAAM,IAAI,QAAQ,CAAC,MAAM,CAAC,GAAG,CAAC,OAAO,CAAC,gBAAgB,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;4BACvE,OAAO,CAAC,KAAK,CAAC,0CAA0C,CAAC,CAAC;4BAC1D,MAAM,CAAC,KAAI,CAAC,EAAE,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;wBACpC,CAAC;wBACD,uHAAuH;wBACvH,IAAI,QAAQ,GAAG,KAAI,CAAC,EAAE,CAAC,KAAK,EAAE,CAAC;wBAC/B,KAAI,CAAC,UAAU,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;wBAClD,KAAI,CAAC,UAAU,CAAC,UAAU,CAAC,yBAAW,CAAC,yBAAW,CAAC,iBAAiB,CAAC,EAAE,QAAQ,CAAC,CAAC;wBACjF,MAAM,CAAC,QAAQ,CAAC,OAAO,CAAC;oBAC5B,KAAK,GAAG;wBACJ,KAAI,CAAC,UAAU,CAAC,UAAU,CAAC,yBAAW,CAAC,yBAAW,CAAC,cAAc,CAAC,EAAE,QAAQ,CAAC,CAAC;wBAC9E,MAAM,CAAC,KAAI,CAAC,EAAE,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;gBACxC,CAAC;gBACD,MAAM,CAAC,KAAI,CAAC,EAAE,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;YACpC,CAAC,CAAA;QAzBD,CAAC;QAJM,2BAAO,GAAG,CAAC,YAAY,EAAE,IAAI,EAAE,WAAW,EAAE,YAAY,CAAC,CAAC;QA8BrE,0BAAC;KAAA,AAhCD,IAgCC;sBAhCoB,mBAAmB","sourcesContent":["/*\n * Ki-Tax: System for the management of external childcare subsidies\n * Copyright (C) 2017 City of Bern Switzerland\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport {IHttpInterceptor, IQService, IRootScopeService} from 'angular';\nimport {TSAuthEvent} from '../../models/enums/TSAuthEvent';\nimport HttpBuffer from './HttpBuffer';\n\nexport default class HttpAuthInterceptor implements IHttpInterceptor {\n\n    static $inject = ['$rootScope', '$q', 'CONSTANTS', 'httpBuffer'];\n    /* @ngInject */\n    constructor(private $rootScope: IRootScopeService, private $q: IQService, private CONSTANTS: any,\n                private httpBuffer: HttpBuffer) {\n    }\n\n\n    public responseError = (response: any) => {\n        switch (response.status) {\n            case 401:\n                // exclude requests from the login form\n                if (response.config && response.config.url === this.CONSTANTS.REST_API + 'auth/login') {\n                    return this.$q.reject(response);\n                }\n                //if this request was a background polling request we do not want to relogin or show errors\n                if (response.config && response.config.url.indexOf('notokenrefresh') > 0) {\n                    console.debug('rejecting failed notokenrefresh response');\n                    return this.$q.reject(response);\n                }\n                // all requests that failed due to notAuthenticated are appended to httpBuffer. Use httpBuffer.retryAll to submit them.\n                let deferred = this.$q.defer();\n                this.httpBuffer.append(response.config, deferred);\n                this.$rootScope.$broadcast(TSAuthEvent[TSAuthEvent.NOT_AUTHENTICATED], response);\n                return deferred.promise;\n            case 403:\n                this.$rootScope.$broadcast(TSAuthEvent[TSAuthEvent.NOT_AUTHORISED], response);\n                return this.$q.reject(response);\n        }\n        return this.$q.reject(response);\n    }\n}\n"]}]}