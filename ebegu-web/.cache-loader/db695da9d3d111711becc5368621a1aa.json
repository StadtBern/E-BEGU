{"remainingRequest":"/home/imanol/projects/ebegu/ebegu-web/node_modules/thread-loader/dist/cjs.js??ref--0-1!/home/imanol/projects/ebegu/ebegu-web/node_modules/ts-loader/index.js??ref--0-2!/home/imanol/projects/ebegu/ebegu-web/src/core/service/batchRS.rest.ts","cacheIdentifier":"cache-loader:1.1.0 test","dependencies":[{"path":"/home/imanol/projects/ebegu/ebegu-web/src/core/service/batchRS.rest.ts","mtime":1518612642528},{"path":"/home/imanol/projects/ebegu/ebegu-web/node_modules/cache-loader/dist/cjs.js","mtime":1507514019000},{"path":"/home/imanol/projects/ebegu/ebegu-web/node_modules/thread-loader/dist/cjs.js","mtime":1507523420000},{"path":"/home/imanol/projects/ebegu/ebegu-web/node_modules/ts-loader/index.js","mtime":1508488471000}],"contextDependencies":[],"result":["\"use strict\";\n/*\n * Ki-Tax: System for the management of external childcare subsidies\n * Copyright (C) 2017 City of Bern Switzerland\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * liest information ueber batch jobs aus\n */\nvar BatchJobRS = /** @class */ (function () {\n    /* @ngInject */\n    function BatchJobRS($http, REST_API, ebeguRestUtil, $log, $q) {\n        this.ebeguRestUtil = ebeguRestUtil;\n        this.$q = $q;\n        this.serviceURL = REST_API + 'admin/batch';\n        this.http = $http;\n    }\n    BatchJobRS.prototype.getAllJobs = function () {\n        var _this = this;\n        return this.http.get(this.serviceURL + '/jobs').then(function (response) {\n            return _this.ebeguRestUtil.parseWorkJobList(response.data);\n        });\n    };\n    BatchJobRS.prototype.getBatchJobsOfUser = function () {\n        var _this = this;\n        return this.http.get(this.serviceURL + '/userjobs/notokenrefresh').then(function (response) {\n            return _this.ebeguRestUtil.parseWorkJobList(response.data);\n        });\n    };\n    BatchJobRS.prototype.getBatchJobInformation = function (executionId) {\n        var _this = this;\n        return this.http.get(this.serviceURL + '/jobs/' + encodeURI(executionId)).then(function (response) {\n            return _this.ebeguRestUtil.parseWorkJobList(response.data);\n        });\n    };\n    BatchJobRS.$inject = ['$http', 'REST_API', 'EbeguRestUtil'];\n    return BatchJobRS;\n}());\nexports.default = BatchJobRS;\n",{"version":3,"file":"/home/imanol/projects/ebegu/ebegu-web/src/core/service/batchRS.rest.ts","sourceRoot":"","sources":["/home/imanol/projects/ebegu/ebegu-web/src/core/service/batchRS.rest.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;GAaG;;AAMH;;GAEG;AACH;IAMI,eAAe;IACf,oBAAY,KAAmB,EAAE,QAAgB,EAAU,aAA4B,EAAE,IAAiB,EAAU,EAAa;QAAtE,kBAAa,GAAb,aAAa,CAAe;QAA6B,OAAE,GAAF,EAAE,CAAW;QAC7H,IAAI,CAAC,UAAU,GAAG,QAAQ,GAAG,aAAa,CAAC;QAC3C,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;IACtB,CAAC;IAEM,+BAAU,GAAjB;QAAA,iBAIC;QAHG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,GAAG,OAAO,CAAC,CAAC,IAAI,CAAC,UAAC,QAAa;YAC/D,MAAM,CAAC,KAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;QAC9D,CAAC,CAAC,CAAC;IACP,CAAC;IAEM,uCAAkB,GAAzB;QAAA,iBAKC;QAHG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,GAAG,0BAA0B,CAAC,CAAC,IAAI,CAAC,UAAC,QAAa;YAClF,MAAM,CAAC,KAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;QAC9D,CAAC,CAAC,CAAC;IACP,CAAC;IAEM,2CAAsB,GAA7B,UAA8B,WAAmB;QAAjD,iBAIC;QAHG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,GAAG,QAAQ,GAAG,SAAS,CAAC,WAAW,CAAC,CAAC,CAAC,IAAI,CAAC,UAAC,QAAa;YACzF,MAAM,CAAC,KAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;QAC9D,CAAC,CAAC,CAAC;IACP,CAAC;IA5BM,kBAAO,GAAG,CAAC,OAAO,EAAE,UAAU,EAAE,eAAe,CAAC,CAAC;IA6B5D,iBAAC;CAAA,AA9BD,IA8BC;kBA9BoB,UAAU","sourcesContent":["/*\n * Ki-Tax: System for the management of external childcare subsidies\n * Copyright (C) 2017 City of Bern Switzerland\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport {IHttpService, ILogService, IPromise, IQService} from 'angular';\nimport EbeguRestUtil from '../../utils/EbeguRestUtil';\nimport TSWorkJob from '../../models/TSWorkJob';\n\n/**\n * liest information ueber batch jobs aus\n */\nexport default class BatchJobRS {\n    static $inject = ['$http', 'REST_API', 'EbeguRestUtil'];\n\n    serviceURL: string;\n    http: IHttpService;\n\n    /* @ngInject */\n    constructor($http: IHttpService, REST_API: string, private ebeguRestUtil: EbeguRestUtil, $log: ILogService, private $q: IQService) {\n        this.serviceURL = REST_API + 'admin/batch';\n        this.http = $http;\n    }\n\n    public getAllJobs(): IPromise<TSWorkJob[]> {\n        return this.http.get(this.serviceURL + '/jobs').then((response: any) => {\n            return this.ebeguRestUtil.parseWorkJobList(response.data);\n        });\n    }\n\n    public getBatchJobsOfUser(): IPromise<TSWorkJob[]> {\n\n        return this.http.get(this.serviceURL + '/userjobs/notokenrefresh').then((response: any) => {\n            return this.ebeguRestUtil.parseWorkJobList(response.data);\n        });\n    }\n\n    public getBatchJobInformation(executionId: string): IPromise<TSWorkJob[]> {\n        return this.http.get(this.serviceURL + '/jobs/' + encodeURI(executionId)).then((response: any) => {\n            return this.ebeguRestUtil.parseWorkJobList(response.data);\n        });\n    }\n}\n"]}]}