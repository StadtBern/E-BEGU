{"remainingRequest":"/home/imanol/projects/ebegu/ebegu-web/node_modules/thread-loader/dist/cjs.js??ref--0-1!/home/imanol/projects/ebegu/ebegu-web/node_modules/ts-loader/index.js??ref--0-2!/home/imanol/projects/ebegu/ebegu-web/src/utils/EnumEx.ts","cacheIdentifier":"cache-loader:1.1.0 test","dependencies":[{"path":"/home/imanol/projects/ebegu/ebegu-web/src/utils/EnumEx.ts","mtime":1512484412031},{"path":"/home/imanol/projects/ebegu/ebegu-web/node_modules/cache-loader/dist/cjs.js","mtime":1507514019000},{"path":"/home/imanol/projects/ebegu/ebegu-web/node_modules/thread-loader/dist/cjs.js","mtime":1507523420000},{"path":"/home/imanol/projects/ebegu/ebegu-web/node_modules/ts-loader/index.js","mtime":1508488471000}],"contextDependencies":[],"result":["\"use strict\";\n/*\n * Ki-Tax: System for the management of external childcare subsidies\n * Copyright (C) 2017 City of Bern Switzerland\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar EnumEx = /** @class */ (function () {\n    function EnumEx() {\n    }\n    /**\n     *\n     * @param e takes an enum and returns the names of the objects as a string arry\n     * @returns {string[]}\n     */\n    EnumEx.getNames = function (e) {\n        return Object.keys(e).filter(function (v) { return isNaN(parseInt(v, 10)); });\n    };\n    EnumEx.getValues = function (e) {\n        return Object.keys(e)\n            .map(function (v) { return parseInt(v, 10); })\n            .filter(function (v) { return !isNaN(v); });\n    };\n    return EnumEx;\n}());\nexports.EnumEx = EnumEx;\n",{"version":3,"file":"/home/imanol/projects/ebegu/ebegu-web/src/utils/EnumEx.ts","sourceRoot":"","sources":["/home/imanol/projects/ebegu/ebegu-web/src/utils/EnumEx.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;GAaG;;AAEH;IAAA;IAgBA,CAAC;IAfG;;;;OAIG;IACI,eAAQ,GAAf,UAAgB,CAAM;QAClB,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,UAAA,CAAC,IAAI,OAAA,KAAK,CAAC,QAAQ,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAtB,CAAsB,CACvD,CAAC;IACN,CAAC;IAEM,gBAAS,GAAhB,UAAiB,CAAM;QACnB,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;aAChB,GAAG,CAAC,UAAA,CAAC,IAAI,OAAA,QAAQ,CAAC,CAAC,EAAE,EAAE,CAAC,EAAf,CAAe,CAAC;aACzB,MAAM,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,KAAK,CAAC,CAAC,CAAC,EAAT,CAAS,CAAC,CAAC;IAChC,CAAC;IACL,aAAC;AAAD,CAAC,AAhBD,IAgBC;AAhBY,wBAAM","sourcesContent":["/*\n * Ki-Tax: System for the management of external childcare subsidies\n * Copyright (C) 2017 City of Bern Switzerland\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nexport class EnumEx {\n    /**\n     *\n     * @param e takes an enum and returns the names of the objects as a string arry\n     * @returns {string[]}\n     */\n    static getNames(e: any): string[] {\n        return Object.keys(e).filter(v => isNaN(parseInt(v, 10))\n        );\n    }\n\n    static getValues(e: any): number[] {\n        return Object.keys(e)\n            .map(v => parseInt(v, 10))\n            .filter(v => !isNaN(v));\n    }\n}\n"]}]}