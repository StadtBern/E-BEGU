{"remainingRequest":"/home/imanol/projects/ebegu/ebegu-web/node_modules/thread-loader/dist/cjs.js??ref--0-1!/home/imanol/projects/ebegu/ebegu-web/node_modules/ts-loader/index.js??ref--0-2!/home/imanol/projects/ebegu/ebegu-web/src/core/directive/dv-verantwortlicherselect/dv-verantwortlicherselect.ts","cacheIdentifier":"cache-loader:1.1.0 test","dependencies":[{"path":"/home/imanol/projects/ebegu/ebegu-web/src/core/directive/dv-verantwortlicherselect/dv-verantwortlicherselect.ts","mtime":1518612532790},{"path":"/home/imanol/projects/ebegu/ebegu-web/node_modules/cache-loader/dist/cjs.js","mtime":1507514019000},{"path":"/home/imanol/projects/ebegu/ebegu-web/node_modules/thread-loader/dist/cjs.js","mtime":1507523420000},{"path":"/home/imanol/projects/ebegu/ebegu-web/node_modules/ts-loader/index.js","mtime":1508488471000}],"contextDependencies":[],"result":["\"use strict\";\n/*\n * Ki-Tax: System for the management of external childcare subsidies\n * Copyright (C) 2017 City of Bern Switzerland\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar TSRoleUtil_1 = require(\"../../../utils/TSRoleUtil\");\nvar template = require('./dv-verantwortlicherselect.html');\nvar DvVerantwortlicherselect = /** @class */ (function () {\n    function DvVerantwortlicherselect() {\n        this.restrict = 'E';\n        this.require = {};\n        this.scope = {\n            schulamt: '<',\n            antragList: '<'\n        };\n        this.controller = VerantwortlicherselectController;\n        this.controllerAs = 'vm';\n        this.bindToController = true;\n        this.template = template;\n    }\n    DvVerantwortlicherselect.factory = function () {\n        var directive = function () { return new DvVerantwortlicherselect(); };\n        directive.$inject = [];\n        return directive;\n    };\n    return DvVerantwortlicherselect;\n}());\nexports.DvVerantwortlicherselect = DvVerantwortlicherselect;\n/**\n * Direktive  der initial die smart table nach dem aktuell eingeloggtem user filtert\n */\nvar VerantwortlicherselectController = /** @class */ (function () {\n    /* @ngInject */\n    function VerantwortlicherselectController(userRS, authServiceRS, gesuchModelManager, $translate) {\n        this.userRS = userRS;\n        this.authServiceRS = authServiceRS;\n        this.gesuchModelManager = gesuchModelManager;\n        this.$translate = $translate;\n        this.TSRoleUtil = TSRoleUtil_1.TSRoleUtil;\n    }\n    //wird von angular aufgerufen\n    VerantwortlicherselectController.prototype.$onInit = function () {\n        this.updateUserList();\n    };\n    VerantwortlicherselectController.prototype.updateUserList = function () {\n        var _this = this;\n        //not needed for Gesuchsteller\n        if (this.authServiceRS.isOneOfRoles(TSRoleUtil_1.TSRoleUtil.getAllRolesButGesuchsteller())) {\n            if (this.schulamt === true) {\n                this.userRS.getBenutzerSCHorAdminSCH().then(function (response) {\n                    _this.userList = angular.copy(response);\n                });\n            }\n            else {\n                this.userRS.getBenutzerJAorAdmin().then(function (response) {\n                    _this.userList = angular.copy(response);\n                });\n            }\n        }\n    };\n    VerantwortlicherselectController.prototype.getTitel = function () {\n        if (this.schulamt) {\n            return this.$translate.instant('VERANTWORTLICHER_SCHULAMT');\n        }\n        else {\n            return this.$translate.instant('VERANTWORTLICHER_JUGENDAMT');\n        }\n    };\n    VerantwortlicherselectController.prototype.getGesuch = function () {\n        return this.gesuchModelManager.getGesuch();\n    };\n    VerantwortlicherselectController.prototype.hasGesuch = function () {\n        return this.antragList && this.antragList.length > 0;\n    };\n    VerantwortlicherselectController.prototype.getVerantwortlicherFullName = function () {\n        if (this.getGesuch() && this.getGesuch().fall) {\n            if (this.schulamt && this.getGesuch().fall.verantwortlicherSCH) {\n                return this.getGesuch().fall.verantwortlicherSCH.getFullName();\n            }\n            if (!this.schulamt && this.getGesuch().fall.verantwortlicher) {\n                return this.getGesuch().fall.verantwortlicher.getFullName();\n            }\n        }\n        return this.$translate.instant('NO_VERANTWORTLICHER_SELECTED');\n    };\n    /**\n     * Sets the given user as the verantworlicher fuer den aktuellen Fall\n     * @param verantwortlicher\n     */\n    VerantwortlicherselectController.prototype.setVerantwortlicher = function (verantwortlicher) {\n        this.setVerantwortlicherGesuchModelManager(verantwortlicher);\n        this.gesuchModelManager.updateFall();\n        this.setUserAsFallVerantwortlicherLocal(verantwortlicher);\n    };\n    VerantwortlicherselectController.prototype.setVerantwortlicherGesuchModelManager = function (verantwortlicher) {\n        if (this.schulamt) {\n            this.gesuchModelManager.setUserAsFallVerantwortlicherSCH(verantwortlicher);\n        }\n        else {\n            this.gesuchModelManager.setUserAsFallVerantwortlicher(verantwortlicher);\n        }\n    };\n    VerantwortlicherselectController.prototype.setUserAsFallVerantwortlicherLocal = function (user) {\n        if (user && this.getGesuch() && this.getGesuch().fall) {\n            if (this.schulamt) {\n                this.getGesuch().fall.verantwortlicherSCH = user;\n            }\n            else {\n                this.getGesuch().fall.verantwortlicher = user;\n            }\n        }\n    };\n    /**\n     *\n     * @param user\n     * @returns {boolean} true if the given user is already the verantwortlicher of the current fall\n     */\n    VerantwortlicherselectController.prototype.isCurrentVerantwortlicher = function (user) {\n        return (user && this.getFallVerantwortlicher() && this.getFallVerantwortlicher().username === user.username);\n    };\n    VerantwortlicherselectController.prototype.getFallVerantwortlicher = function () {\n        if (this.schulamt) {\n            return this.gesuchModelManager.getFallVerantwortlicherSCH();\n        }\n        else {\n            return this.gesuchModelManager.getFallVerantwortlicher();\n        }\n    };\n    VerantwortlicherselectController.$inject = ['UserRS', 'AuthServiceRS', 'GesuchModelManager', '$translate'];\n    return VerantwortlicherselectController;\n}());\nexports.VerantwortlicherselectController = VerantwortlicherselectController;\n",{"version":3,"file":"/home/imanol/projects/ebegu/ebegu-web/src/core/directive/dv-verantwortlicherselect/dv-verantwortlicherselect.ts","sourceRoot":"","sources":["/home/imanol/projects/ebegu/ebegu-web/src/core/directive/dv-verantwortlicherselect/dv-verantwortlicherselect.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Ki-Tax: System for the management of external childcare subsidies\n * Copyright (C) 2017 City of Bern Switzerland\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport {IDirective, IDirectiveFactory} from 'angular';\nimport ITranslateService = angular.translate.ITranslateService;\nimport {TSRoleUtil} from '../../../utils/TSRoleUtil';\nimport TSUser from '../../../models/TSUser';\nimport TSAntragDTO from '../../../models/TSAntragDTO';\nimport UserRS from '../../service/userRS.rest';\nimport AuthServiceRS from '../../../authentication/service/AuthServiceRS.rest';\nimport TSGesuch from '../../../models/TSGesuch';\nimport GesuchModelManager from '../../../gesuch/service/gesuchModelManager';\nlet template = require('./dv-verantwortlicherselect.html');\n\nexport class DvVerantwortlicherselect implements IDirective {\n    restrict = 'E';\n    require: any = {};\n    scope = {\n        schulamt: '<',\n        antragList: '<'\n    };\n    controller = VerantwortlicherselectController;\n    controllerAs = 'vm';\n    bindToController = true;\n    template = template;\n\n    static factory(): IDirectiveFactory {\n        const directive = () => new DvVerantwortlicherselect();\n        directive.$inject = [];\n        return directive;\n    }\n}\n/**\n * Direktive  der initial die smart table nach dem aktuell eingeloggtem user filtert\n */\nexport class VerantwortlicherselectController {\n\n    userList: Array<TSUser>;\n    TSRoleUtil: any;\n    antragList: Array<TSAntragDTO>;\n    schulamt: boolean;\n\n    static $inject: string[] = ['UserRS', 'AuthServiceRS', 'GesuchModelManager', '$translate'];\n    /* @ngInject */\n    constructor(private userRS: UserRS, private authServiceRS: AuthServiceRS, private gesuchModelManager: GesuchModelManager,\n                private $translate: ITranslateService) {\n        this.TSRoleUtil = TSRoleUtil;\n    }\n\n    //wird von angular aufgerufen\n    $onInit() {\n        this.updateUserList();\n    }\n\n    public updateUserList(): void {\n        //not needed for Gesuchsteller\n        if (this.authServiceRS.isOneOfRoles(TSRoleUtil.getAllRolesButGesuchsteller())) {\n            if (this.schulamt === true) {\n                this.userRS.getBenutzerSCHorAdminSCH().then((response) => {\n                    this.userList = angular.copy(response);\n                });\n\n            } else {\n                this.userRS.getBenutzerJAorAdmin().then((response) => {\n                    this.userList = angular.copy(response);\n                });\n            }\n        }\n    }\n\n    public getTitel(): string {\n        if (this.schulamt) {\n            return this.$translate.instant('VERANTWORTLICHER_SCHULAMT');\n        } else {\n            return this.$translate.instant('VERANTWORTLICHER_JUGENDAMT');\n        }\n    }\n\n    public getGesuch(): TSGesuch {\n        return this.gesuchModelManager.getGesuch();\n    }\n\n    public hasGesuch(): boolean {\n        return this.antragList && this.antragList.length > 0;\n    }\n\n    public getVerantwortlicherFullName(): string {\n        if (this.getGesuch() && this.getGesuch().fall) {\n            if (this.schulamt && this.getGesuch().fall.verantwortlicherSCH) {\n                return this.getGesuch().fall.verantwortlicherSCH.getFullName();\n            }\n            if (!this.schulamt && this.getGesuch().fall.verantwortlicher) {\n                return this.getGesuch().fall.verantwortlicher.getFullName();\n            }\n        }\n        return this.$translate.instant('NO_VERANTWORTLICHER_SELECTED');\n    }\n\n    /**\n     * Sets the given user as the verantworlicher fuer den aktuellen Fall\n     * @param verantwortlicher\n     */\n    public setVerantwortlicher(verantwortlicher: TSUser): void {\n        this.setVerantwortlicherGesuchModelManager(verantwortlicher);\n        this.gesuchModelManager.updateFall();\n        this.setUserAsFallVerantwortlicherLocal(verantwortlicher);\n    }\n\n    private setVerantwortlicherGesuchModelManager(verantwortlicher: TSUser) {\n        if (this.schulamt) {\n            this.gesuchModelManager.setUserAsFallVerantwortlicherSCH(verantwortlicher);\n        } else {\n            this.gesuchModelManager.setUserAsFallVerantwortlicher(verantwortlicher);\n        }\n    }\n\n    public setUserAsFallVerantwortlicherLocal(user: TSUser) {\n        if (user && this.getGesuch() && this.getGesuch().fall) {\n            if (this.schulamt) {\n                this.getGesuch().fall.verantwortlicherSCH = user;\n            } else {\n                this.getGesuch().fall.verantwortlicher = user;\n            }\n        }\n    }\n\n    /**\n     *\n     * @param user\n     * @returns {boolean} true if the given user is already the verantwortlicher of the current fall\n     */\n    public isCurrentVerantwortlicher(user: TSUser): boolean {\n        return (user && this.getFallVerantwortlicher() && this.getFallVerantwortlicher().username === user.username);\n    }\n\n    public getFallVerantwortlicher(): TSUser {\n        if (this.schulamt) {\n            return this.gesuchModelManager.getFallVerantwortlicherSCH();\n        } else {\n            return this.gesuchModelManager.getFallVerantwortlicher();\n        }\n    }\n}\n"]}]}