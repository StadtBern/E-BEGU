{"remainingRequest":"/home/imanol/projects/ebegu/ebegu-web/node_modules/thread-loader/dist/cjs.js??ref--0-1!/home/imanol/projects/ebegu/ebegu-web/node_modules/ts-loader/index.js??ref--0-2!/home/imanol/projects/ebegu/ebegu-web/src/authentication/service/AuthServiceRS.rest.ts","cacheIdentifier":"cache-loader:1.1.0 test","dependencies":[{"path":"/home/imanol/projects/ebegu/ebegu-web/src/authentication/service/AuthServiceRS.rest.ts","mtime":1518612532786},{"path":"/home/imanol/projects/ebegu/ebegu-web/node_modules/cache-loader/dist/cjs.js","mtime":1507514019000},{"path":"/home/imanol/projects/ebegu/ebegu-web/node_modules/thread-loader/dist/cjs.js","mtime":1507523420000},{"path":"/home/imanol/projects/ebegu/ebegu-web/node_modules/ts-loader/index.js","mtime":1508488471000}],"contextDependencies":[],"result":["\"use strict\";\n/*\n * Ki-Tax: System for the management of external childcare subsidies\n * Copyright (C) 2017 City of Bern Switzerland\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar TSAuthEvent_1 = require(\"../../models/enums/TSAuthEvent\");\nvar TSUser_1 = require(\"../../models/TSUser\");\nvar AuthServiceRS = /** @class */ (function () {\n    /* @ngInject */\n    function AuthServiceRS($http, CONSTANTS, $q, $timeout, $cookies, base64, ebeguRestUtil, httpBuffer, $rootScope) {\n        this.$http = $http;\n        this.CONSTANTS = CONSTANTS;\n        this.$q = $q;\n        this.$timeout = $timeout;\n        this.$cookies = $cookies;\n        this.base64 = base64;\n        this.ebeguRestUtil = ebeguRestUtil;\n        this.httpBuffer = httpBuffer;\n        this.$rootScope = $rootScope;\n    }\n    AuthServiceRS.prototype.getPrincipal = function () {\n        return this.principal;\n    };\n    AuthServiceRS.prototype.getPrincipalRole = function () {\n        if (this.principal) {\n            return this.principal.role;\n        }\n        return undefined;\n    };\n    AuthServiceRS.prototype.loginRequest = function (userCredentials) {\n        var _this = this;\n        if (userCredentials) {\n            return this.$http.post(this.CONSTANTS.REST_API + 'auth/login', this.ebeguRestUtil.userToRestObject({}, userCredentials))\n                .then(function (response) {\n                // try to reload buffered requests\n                _this.httpBuffer.retryAll(function (config) {\n                    return config;\n                });\n                //ensure that there is ALWAYS a logout-event before the login-event by throwing it right before\n                // login\n                _this.$rootScope.$broadcast(TSAuthEvent_1.TSAuthEvent[TSAuthEvent_1.TSAuthEvent.LOGOUT_SUCCESS], 'logged out before logging in in');\n                return _this.$timeout(function () {\n                    try {\n                        _this.initWithCookie();\n                        return _this.principal;\n                    }\n                    catch (e) {\n                        return _this.$q.reject();\n                    }\n                }, 100);\n            });\n        }\n        return undefined;\n    };\n    AuthServiceRS.prototype.initWithCookie = function () {\n        var _this = this;\n        var authIdbase64 = this.$cookies.get('authId');\n        if (authIdbase64) {\n            try {\n                var authData = angular.fromJson(this.base64.decode(authIdbase64));\n                this.principal = new TSUser_1.default(authData.vorname, authData.nachname, authData.authId, '', authData.email, authData.mandant, authData.role);\n                this.$timeout(function () {\n                    _this.$rootScope.$broadcast(TSAuthEvent_1.TSAuthEvent[TSAuthEvent_1.TSAuthEvent.LOGIN_SUCCESS], 'logged in');\n                }); //bei login muessen wir warten bis angular alle componenten erstellt hat bevor wir das event werfen\n                return true;\n            }\n            catch (e) {\n                console.log('cookie decoding failed');\n            }\n        }\n        return false;\n    };\n    AuthServiceRS.prototype.logoutRequest = function () {\n        var _this = this;\n        return this.$http.post(this.CONSTANTS.REST_API + 'auth/logout', null).then(function (res) {\n            _this.principal = undefined;\n            _this.$rootScope.$broadcast(TSAuthEvent_1.TSAuthEvent[TSAuthEvent_1.TSAuthEvent.LOGOUT_SUCCESS], 'logged out');\n            return res;\n        });\n    };\n    AuthServiceRS.prototype.initSSOLogin = function (relayPath) {\n        return this.$http.get(this.CONSTANTS.REST_API + 'auth/singleSignOn', { params: { relayPath: relayPath } }).then(function (res) {\n            return res.data;\n        });\n    };\n    AuthServiceRS.prototype.initSingleLogout = function (relayPath) {\n        return this.$http.get(this.CONSTANTS.REST_API + 'auth/singleLogout', { params: { relayPath: relayPath } }).then(function (res) {\n            return res.data;\n        });\n    };\n    /**\n     * Gibt true zurueck, wenn der eingelogte Benutzer die gegebene Role hat. Fuer undefined Werte wird immer false\n     * zurueckgegeben.\n     */\n    AuthServiceRS.prototype.isRole = function (role) {\n        if (role && this.principal) {\n            return this.principal.role === role;\n        }\n        return false;\n    };\n    /**\n     * gibt true zurueck wenn der aktuelle Benutzer eine der uebergebenen Rollen innehat\n     */\n    AuthServiceRS.prototype.isOneOfRoles = function (roles) {\n        if (roles !== undefined && roles !== null && this.principal) {\n            for (var i = 0; i < roles.length; i++) {\n                var role = roles[i];\n                if (role === this.principal.role) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    AuthServiceRS.$inject = ['$http', 'CONSTANTS', '$q', '$timeout', '$cookies', 'base64', 'EbeguRestUtil', 'httpBuffer', '$rootScope'];\n    return AuthServiceRS;\n}());\nexports.default = AuthServiceRS;\n",{"version":3,"file":"/home/imanol/projects/ebegu/ebegu-web/src/authentication/service/AuthServiceRS.rest.ts","sourceRoot":"","sources":["/home/imanol/projects/ebegu/ebegu-web/src/authentication/service/AuthServiceRS.rest.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Ki-Tax: System for the management of external childcare subsidies\n * Copyright (C) 2017 City of Bern Switzerland\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport {TSAuthEvent} from '../../models/enums/TSAuthEvent';\nimport {TSRole} from '../../models/enums/TSRole';\nimport TSUser from '../../models/TSUser';\nimport EbeguRestUtil from '../../utils/EbeguRestUtil';\nimport HttpBuffer from './HttpBuffer';\nimport ICookiesService = angular.cookies.ICookiesService;\nimport IHttpService = angular.IHttpService;\nimport IPromise = angular.IPromise;\nimport IQService = angular.IQService;\nimport IRequestConfig = angular.IRequestConfig;\nimport IRootScopeService = angular.IRootScopeService;\nimport ITimeoutService = angular.ITimeoutService;\n\nexport default class AuthServiceRS {\n\n    private principal: TSUser;\n\n    static $inject = ['$http', 'CONSTANTS', '$q', '$timeout', '$cookies', 'base64', 'EbeguRestUtil', 'httpBuffer', '$rootScope'];\n\n    /* @ngInject */\n    constructor(private $http: IHttpService, private CONSTANTS: any, private $q: IQService,\n                private $timeout: ITimeoutService,\n                private $cookies: ICookiesService, private base64: any, private ebeguRestUtil: EbeguRestUtil,\n                private httpBuffer: HttpBuffer,\n                private $rootScope: IRootScopeService) {\n    }\n\n    public getPrincipal(): TSUser {\n        return this.principal;\n    }\n\n    public getPrincipalRole(): TSRole {\n        if (this.principal) {\n            return this.principal.role;\n        }\n        return undefined;\n    }\n\n    public loginRequest(userCredentials: TSUser): IPromise<TSUser> {\n        if (userCredentials) {\n            return this.$http.post(this.CONSTANTS.REST_API + 'auth/login', this.ebeguRestUtil.userToRestObject({}, userCredentials))\n                .then((response: any) => {\n\n                    // try to reload buffered requests\n                    this.httpBuffer.retryAll((config: IRequestConfig) => {\n                        return config;\n                    });\n                    //ensure that there is ALWAYS a logout-event before the login-event by throwing it right before\n                    // login\n                    this.$rootScope.$broadcast(TSAuthEvent[TSAuthEvent.LOGOUT_SUCCESS], 'logged out before logging in in');\n                    return this.$timeout((): any => { // Response cookies are not immediately accessible, so lets wait for a bit\n                        try {\n                            this.initWithCookie();\n\n                            return this.principal;\n                        } catch (e) {\n                            return this.$q.reject();\n                        }\n                    }, 100);\n\n                });\n\n        }\n        return undefined;\n    }\n\n    public initWithCookie(): boolean {\n        let authIdbase64 = this.$cookies.get('authId');\n        if (authIdbase64) {\n            try {\n                let authData = angular.fromJson(this.base64.decode(authIdbase64));\n                this.principal = new TSUser(authData.vorname, authData.nachname, authData.authId, '', authData.email, authData.mandant, authData.role);\n                this.$timeout(() => {\n                    this.$rootScope.$broadcast(TSAuthEvent[TSAuthEvent.LOGIN_SUCCESS], 'logged in');\n                }); //bei login muessen wir warten bis angular alle componenten erstellt hat bevor wir das event werfen\n\n                return true;\n            } catch (e) {\n                console.log('cookie decoding failed');\n            }\n        }\n\n        return false;\n    }\n\n    public logoutRequest() {\n        return this.$http.post(this.CONSTANTS.REST_API + 'auth/logout', null).then((res: any) => {\n            this.principal = undefined;\n            this.$rootScope.$broadcast(TSAuthEvent[TSAuthEvent.LOGOUT_SUCCESS], 'logged out');\n            return res;\n        });\n    }\n\n    public initSSOLogin(relayPath: string): IPromise<string> {\n        return this.$http.get(this.CONSTANTS.REST_API + 'auth/singleSignOn', {params: {relayPath: relayPath}}).then((res: any) => {\n            return res.data;\n        });\n    }\n\n    public initSingleLogout(relayPath: string): IPromise<string> {\n        return this.$http.get(this.CONSTANTS.REST_API + 'auth/singleLogout', {params: {relayPath: relayPath}}).then((res: any) => {\n            return res.data;\n        });\n    }\n\n    /**\n     * Gibt true zurueck, wenn der eingelogte Benutzer die gegebene Role hat. Fuer undefined Werte wird immer false\n     * zurueckgegeben.\n     */\n    public isRole(role: TSRole) {\n        if (role && this.principal) {\n            return this.principal.role === role;\n        }\n        return false;\n    }\n\n    /**\n     * gibt true zurueck wenn der aktuelle Benutzer eine der uebergebenen Rollen innehat\n     */\n    public isOneOfRoles(roles: Array<TSRole>): boolean {\n        if (roles !== undefined && roles !== null && this.principal) {\n            for (let i = 0; i < roles.length; i++) {\n                let role = roles[i];\n                if (role === this.principal.role) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n}\n"]}]}