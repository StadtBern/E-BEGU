{"remainingRequest":"/home/imanol/projects/ebegu/ebegu-web/node_modules/thread-loader/dist/cjs.js??ref--0-1!/home/imanol/projects/ebegu/ebegu-web/node_modules/ts-loader/index.js??ref--0-2!/home/imanol/projects/ebegu/ebegu-web/src/gesuch/service/gesuchRS.rest.ts","cacheIdentifier":"cache-loader:1.1.0 test","dependencies":[{"path":"/home/imanol/projects/ebegu/ebegu-web/src/gesuch/service/gesuchRS.rest.ts","mtime":1518535855232},{"path":"/home/imanol/projects/ebegu/ebegu-web/node_modules/cache-loader/dist/cjs.js","mtime":1507514019000},{"path":"/home/imanol/projects/ebegu/ebegu-web/node_modules/thread-loader/dist/cjs.js","mtime":1507523420000},{"path":"/home/imanol/projects/ebegu/ebegu-web/node_modules/ts-loader/index.js","mtime":1508488471000}],"contextDependencies":[],"result":["/*\n * Ki-Tax: System for the management of external childcare subsidies\n * Copyright (C) 2017 City of Bern Switzerland\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\ndefine([\"require\", \"exports\", \"../../models/TSGesuch\", \"../../models/TSAntragSearchresultDTO\", \"../../models/TSAntragDTO\", \"../../utils/DateUtil\", \"../../models/enums/TSMitteilungEvent\"], function (require, exports, TSGesuch_1, TSAntragSearchresultDTO_1, TSAntragDTO_1, DateUtil_1, TSMitteilungEvent_1) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    var GesuchRS = /** @class */ (function () {\n        /* @ngInject */\n        function GesuchRS($http, REST_API, ebeguRestUtil, $log, wizardStepManager, $rootScope) {\n            this.$log = $log;\n            this.wizardStepManager = wizardStepManager;\n            this.$rootScope = $rootScope;\n            this.serviceURL = REST_API + 'gesuche';\n            this.http = $http;\n            this.ebeguRestUtil = ebeguRestUtil;\n        }\n        GesuchRS.prototype.createGesuch = function (gesuch) {\n            var _this = this;\n            var sentGesuch = {};\n            sentGesuch = this.ebeguRestUtil.gesuchToRestObject(sentGesuch, gesuch);\n            return this.http.post(this.serviceURL, sentGesuch, {\n                headers: {\n                    'Content-Type': 'application/json'\n                }\n            }).then(function (response) {\n                _this.$log.debug('PARSING gesuch REST object ', response.data);\n                var convertedGesuch = _this.ebeguRestUtil.parseGesuch(new TSGesuch_1.default(), response.data);\n                return _this.wizardStepManager.updateFirstWizardStep(convertedGesuch.id).then(function () {\n                    return convertedGesuch;\n                });\n            });\n        };\n        GesuchRS.prototype.updateGesuch = function (gesuch) {\n            var _this = this;\n            var sentGesuch = {};\n            sentGesuch = this.ebeguRestUtil.gesuchToRestObject(sentGesuch, gesuch);\n            return this.http.put(this.serviceURL, sentGesuch, {\n                headers: {\n                    'Content-Type': 'application/json'\n                }\n            }).then(function (response) {\n                return _this.wizardStepManager.findStepsFromGesuch(gesuch.id).then(function () {\n                    _this.$log.debug('PARSING gesuch REST object ', response.data);\n                    return _this.ebeguRestUtil.parseGesuch(new TSGesuch_1.default(), response.data);\n                });\n            });\n        };\n        GesuchRS.prototype.findGesuch = function (gesuchID) {\n            var _this = this;\n            return this.http.get(this.serviceURL + '/' + encodeURIComponent(gesuchID))\n                .then(function (response) {\n                _this.$log.debug('PARSING gesuch REST object ', response.data);\n                return _this.ebeguRestUtil.parseGesuch(new TSGesuch_1.default(), response.data);\n            });\n        };\n        GesuchRS.prototype.findGesuchForFreigabe = function (gesuchID) {\n            var _this = this;\n            return this.http.get(this.serviceURL + '/freigabe/' + encodeURIComponent(gesuchID))\n                .then(function (response) {\n                _this.$log.debug('PARSING antragDTO REST object ', response.data);\n                return _this.ebeguRestUtil.parseAntragDTO(new TSAntragDTO_1.default(), response.data);\n            });\n        };\n        GesuchRS.prototype.findGesuchForInstitution = function (gesuchID) {\n            var _this = this;\n            return this.http.get(this.serviceURL + '/institution/' + encodeURIComponent(gesuchID))\n                .then(function (response) {\n                _this.$log.debug('PARSING gesuch (fuer Institutionen) REST object ', response.data);\n                return _this.ebeguRestUtil.parseGesuch(new TSGesuch_1.default(), response.data);\n            });\n        };\n        GesuchRS.prototype.searchAntraege = function (antragSearch) {\n            var _this = this;\n            return this.http.post(this.serviceURL + '/search/', antragSearch, {\n                headers: {\n                    'Content-Type': 'application/json'\n                }\n            }).then(function (response) {\n                _this.$log.debug('PARSING antraege REST array object', response.data);\n                return new TSAntragSearchresultDTO_1.default(_this.ebeguRestUtil.parseAntragDTOs(response.data.antragDTOs), response.data.paginationDTO.totalItemCount);\n            });\n        };\n        GesuchRS.prototype.updateBemerkung = function (gesuchID, bemerkung) {\n            return this.http.put(this.serviceURL + '/bemerkung/' + encodeURIComponent(gesuchID), bemerkung, {\n                headers: {\n                    'Content-Type': 'application/json'\n                }\n            });\n        };\n        GesuchRS.prototype.updateBemerkungPruefungSTV = function (gesuchID, bemerkungPruefungSTV) {\n            return this.http.put(this.serviceURL + '/bemerkungPruefungSTV/' + encodeURIComponent(gesuchID), bemerkungPruefungSTV, {\n                headers: {\n                    'Content-Type': 'application/json'\n                }\n            });\n        };\n        GesuchRS.prototype.updateGesuchStatus = function (gesuchID, status) {\n            return this.http.put(this.serviceURL + '/status/' + encodeURIComponent(gesuchID) + '/' + status, null);\n        };\n        GesuchRS.prototype.getAllAntragDTOForFall = function (fallId) {\n            var _this = this;\n            return this.http.get(this.serviceURL + '/fall/' + encodeURIComponent(fallId)).then(function (response) {\n                return _this.ebeguRestUtil.parseAntragDTOs(response.data);\n            });\n        };\n        GesuchRS.prototype.antragMutieren = function (antragId, dateParam) {\n            var _this = this;\n            return this.http.post(this.serviceURL + '/mutieren/' + encodeURIComponent(antragId), null, { params: { date: DateUtil_1.default.momentToLocalDate(dateParam) } }).then(function (response) {\n                return _this.ebeguRestUtil.parseGesuch(new TSGesuch_1.default(), response.data);\n            });\n        };\n        GesuchRS.prototype.antragErneuern = function (gesuchsperiodeId, antragId, dateParam) {\n            var _this = this;\n            return this.http.post(this.serviceURL + '/erneuern/' + encodeURIComponent(gesuchsperiodeId) + '/' + encodeURIComponent(antragId), null, { params: { date: DateUtil_1.default.momentToLocalDate(dateParam) } }).then(function (response) {\n                return _this.ebeguRestUtil.parseGesuch(new TSGesuch_1.default(), response.data);\n            });\n        };\n        GesuchRS.prototype.antragFreigeben = function (antragId, username) {\n            var _this = this;\n            return this.http.post(this.serviceURL + '/freigeben/' + encodeURIComponent(antragId), username, {\n                headers: {\n                    'Content-Type': 'text/plain'\n                }\n            }).then(function (response) {\n                return _this.ebeguRestUtil.parseGesuch(new TSGesuch_1.default(), response.data);\n            });\n        };\n        GesuchRS.prototype.setBeschwerdeHaengig = function (antragId) {\n            var _this = this;\n            return this.http.post(this.serviceURL + '/setBeschwerde/' + encodeURIComponent(antragId), null).then(function (response) {\n                return _this.ebeguRestUtil.parseGesuch(new TSGesuch_1.default(), response.data);\n            });\n        };\n        GesuchRS.prototype.sendGesuchToSTV = function (antragId, bemerkungen) {\n            var _this = this;\n            return this.http.post(this.serviceURL + '/sendToSTV/' + encodeURIComponent(antragId), bemerkungen, null).then(function (response) {\n                return _this.ebeguRestUtil.parseGesuch(new TSGesuch_1.default(), response.data);\n            });\n        };\n        GesuchRS.prototype.gesuchBySTVFreigeben = function (antragId) {\n            var _this = this;\n            return this.http.post(this.serviceURL + '/freigebenSTV/' + encodeURIComponent(antragId), null).then(function (response) {\n                return _this.ebeguRestUtil.parseGesuch(new TSGesuch_1.default(), response.data);\n            });\n        };\n        GesuchRS.prototype.stvPruefungAbschliessen = function (antragId) {\n            var _this = this;\n            return this.http.post(this.serviceURL + '/stvPruefungAbschliessen/' + encodeURIComponent(antragId), null).then(function (response) {\n                return _this.ebeguRestUtil.parseGesuch(new TSGesuch_1.default(), response.data);\n            });\n        };\n        GesuchRS.prototype.removeBeschwerdeHaengig = function (antragId) {\n            var _this = this;\n            return this.http.post(this.serviceURL + '/removeBeschwerde/' + encodeURIComponent(antragId), null).then(function (response) {\n                return _this.ebeguRestUtil.parseGesuch(new TSGesuch_1.default(), response.data);\n            });\n        };\n        GesuchRS.prototype.getNeuestesGesuchFromGesuch = function (gesuchID) {\n            return this.http.get(this.serviceURL + '/neuestesgesuch/' + encodeURIComponent(gesuchID))\n                .then(function (response) {\n                return response.data;\n            });\n        };\n        GesuchRS.prototype.removeOnlineMutation = function (fallID, gesuchsperiodeId) {\n            var _this = this;\n            return this.http.delete(this.serviceURL + '/removeOnlineMutation/' + encodeURIComponent(fallID)\n                + '/' + encodeURIComponent(gesuchsperiodeId))\n                .then(function (response) {\n                _this.$rootScope.$broadcast(TSMitteilungEvent_1.TSMitteilungEvent[TSMitteilungEvent_1.TSMitteilungEvent.MUTATIONSMITTEILUNG_MUTATION_REMOVED], response);\n                return response.data;\n            });\n        };\n        GesuchRS.prototype.removeOnlineFolgegesuch = function (fallID, gesuchsperiodeId) {\n            return this.http.delete(this.serviceURL + '/removeOnlineFolgegesuch/' + encodeURIComponent(fallID)\n                + '/' + encodeURIComponent(gesuchsperiodeId))\n                .then(function (response) {\n                return response.data;\n            });\n        };\n        GesuchRS.prototype.removePapiergesuch = function (gesuchId) {\n            return this.http.delete(this.serviceURL + '/removePapiergesuch/' + encodeURIComponent(gesuchId))\n                .then(function (response) {\n                return response.data;\n            });\n        };\n        GesuchRS.prototype.removeGesuchstellerAntrag = function (gesuchId) {\n            return this.http.delete(this.serviceURL + '/removeGesuchstellerAntrag/' + encodeURIComponent(gesuchId))\n                .then(function (response) {\n                return response.data;\n            });\n        };\n        GesuchRS.prototype.closeWithoutAngebot = function (antragId) {\n            var _this = this;\n            return this.http.post(this.serviceURL + '/closeWithoutAngebot/' + encodeURIComponent(antragId), null).then(function (response) {\n                return _this.ebeguRestUtil.parseGesuch(new TSGesuch_1.default(), response.data);\n            });\n        };\n        GesuchRS.prototype.verfuegenStarten = function (antragId, hasFSDocument) {\n            var _this = this;\n            return this.http.post(this.serviceURL + '/verfuegenStarten/' + encodeURIComponent(antragId) + '/' + hasFSDocument, null).then(function (response) {\n                return _this.ebeguRestUtil.parseGesuch(new TSGesuch_1.default(), response.data);\n            });\n        };\n        GesuchRS.prototype.getGesuchBetreuungenStatus = function (gesuchId) {\n            return this.http.get(this.serviceURL + '/gesuchBetreuungenStatus/' + encodeURIComponent(gesuchId))\n                .then(function (response) {\n                return response.data;\n            });\n        };\n        GesuchRS.prototype.gesuchVerfuegen = function (antragId) {\n            return this.http.post(this.serviceURL + '/gesuchVerfuegen/' + encodeURIComponent(antragId), null);\n        };\n        GesuchRS.$inject = ['$http', 'REST_API', 'EbeguRestUtil', '$log', 'WizardStepManager', '$rootScope'];\n        return GesuchRS;\n    }());\n    exports.default = GesuchRS;\n});\n",{"version":3,"file":"/home/imanol/projects/ebegu/ebegu-web/src/gesuch/service/gesuchRS.rest.ts","sourceRoot":"","sources":["/home/imanol/projects/ebegu/ebegu-web/src/gesuch/service/gesuchRS.rest.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Ki-Tax: System for the management of external childcare subsidies\n * Copyright (C) 2017 City of Bern Switzerland\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport {IEntityRS} from '../../core/service/iEntityRS.rest';\nimport {IHttpPromise, IHttpService, ILogService, IPromise} from 'angular';\nimport TSGesuch from '../../models/TSGesuch';\nimport EbeguRestUtil from '../../utils/EbeguRestUtil';\nimport WizardStepManager from './wizardStepManager';\nimport {TSAntragStatus} from '../../models/enums/TSAntragStatus';\nimport TSAntragSearchresultDTO from '../../models/TSAntragSearchresultDTO';\nimport TSAntragDTO from '../../models/TSAntragDTO';\nimport DateUtil from '../../utils/DateUtil';\nimport * as moment from 'moment';\nimport {TSMitteilungEvent} from '../../models/enums/TSMitteilungEvent';\nimport {TSGesuchBetreuungenStatus} from '../../models/enums/TSGesuchBetreuungenStatus';\nimport IRootScopeService = angular.IRootScopeService;\n\nexport default class GesuchRS implements IEntityRS {\n    serviceURL: string;\n    http: IHttpService;\n    ebeguRestUtil: EbeguRestUtil;\n\n    static $inject = ['$http', 'REST_API', 'EbeguRestUtil', '$log', 'WizardStepManager', '$rootScope'];\n    /* @ngInject */\n    constructor($http: IHttpService, REST_API: string, ebeguRestUtil: EbeguRestUtil, private $log: ILogService,\n                private wizardStepManager: WizardStepManager, private $rootScope: IRootScopeService) {\n        this.serviceURL = REST_API + 'gesuche';\n        this.http = $http;\n        this.ebeguRestUtil = ebeguRestUtil;\n    }\n\n    public createGesuch(gesuch: TSGesuch): IPromise<TSGesuch> {\n        let sentGesuch = {};\n        sentGesuch = this.ebeguRestUtil.gesuchToRestObject(sentGesuch, gesuch);\n        return this.http.post(this.serviceURL, sentGesuch, {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }).then((response: any) => {\n            this.$log.debug('PARSING gesuch REST object ', response.data);\n            let convertedGesuch: TSGesuch = this.ebeguRestUtil.parseGesuch(new TSGesuch(), response.data);\n            return this.wizardStepManager.updateFirstWizardStep(convertedGesuch.id).then(() => {\n                return convertedGesuch;\n            });\n        });\n    }\n\n    public updateGesuch(gesuch: TSGesuch): IPromise<TSGesuch> {\n        let sentGesuch = {};\n        sentGesuch = this.ebeguRestUtil.gesuchToRestObject(sentGesuch, gesuch);\n        return this.http.put(this.serviceURL, sentGesuch, {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }).then((response) => {\n            return this.wizardStepManager.findStepsFromGesuch(gesuch.id).then(() => {\n                this.$log.debug('PARSING gesuch REST object ', response.data);\n                return this.ebeguRestUtil.parseGesuch(new TSGesuch(), response.data);\n            });\n        });\n    }\n\n    public findGesuch(gesuchID: string): IPromise<TSGesuch> {\n        return this.http.get(this.serviceURL + '/' + encodeURIComponent(gesuchID))\n            .then((response: any) => {\n                this.$log.debug('PARSING gesuch REST object ', response.data);\n                return this.ebeguRestUtil.parseGesuch(new TSGesuch(), response.data);\n            });\n    }\n\n    public findGesuchForFreigabe(gesuchID: string): IPromise<TSAntragDTO> {\n        return this.http.get(this.serviceURL + '/freigabe/' + encodeURIComponent(gesuchID))\n            .then((response: any) => {\n                this.$log.debug('PARSING antragDTO REST object ', response.data);\n                return this.ebeguRestUtil.parseAntragDTO(new TSAntragDTO(), response.data);\n            });\n    }\n\n\n    public findGesuchForInstitution(gesuchID: string): IPromise<TSGesuch> {\n        return this.http.get(this.serviceURL + '/institution/' + encodeURIComponent(gesuchID))\n            .then((response: any) => {\n                this.$log.debug('PARSING gesuch (fuer Institutionen) REST object ', response.data);\n                return this.ebeguRestUtil.parseGesuch(new TSGesuch(), response.data);\n            });\n    }\n\n    public searchAntraege(antragSearch: any): IPromise<TSAntragSearchresultDTO> {\n        return this.http.post(this.serviceURL + '/search/', antragSearch, {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }).then((response: any) => {\n            this.$log.debug('PARSING antraege REST array object', response.data);\n            return new TSAntragSearchresultDTO(this.ebeguRestUtil.parseAntragDTOs(response.data.antragDTOs), response.data.paginationDTO.totalItemCount);\n        });\n    }\n\n    public updateBemerkung(gesuchID: string, bemerkung: string): IHttpPromise<any> {\n        return this.http.put(this.serviceURL + '/bemerkung/' + encodeURIComponent(gesuchID), bemerkung, {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        });\n    }\n\n    public updateBemerkungPruefungSTV(gesuchID: string, bemerkungPruefungSTV: string): IHttpPromise<any> {\n        return this.http.put(this.serviceURL + '/bemerkungPruefungSTV/' + encodeURIComponent(gesuchID), bemerkungPruefungSTV, {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        });\n    }\n\n    public updateGesuchStatus(gesuchID: string, status: TSAntragStatus): IHttpPromise<any> {\n        return this.http.put(this.serviceURL + '/status/' + encodeURIComponent(gesuchID) + '/' + status, null);\n    }\n\n    public getAllAntragDTOForFall(fallId: string): IPromise<TSAntragDTO[]> {\n        return this.http.get(this.serviceURL + '/fall/' + encodeURIComponent(fallId)).then((response: any) => {\n            return this.ebeguRestUtil.parseAntragDTOs(response.data);\n        });\n    }\n\n    public antragMutieren(antragId: string, dateParam: moment.Moment): IPromise<TSGesuch> {\n        return this.http.post(this.serviceURL + '/mutieren/' + encodeURIComponent(antragId), null,\n            {params: {date: DateUtil.momentToLocalDate(dateParam)}}).then((response) => {\n            return this.ebeguRestUtil.parseGesuch(new TSGesuch(), response.data);\n        });\n    }\n\n    public antragErneuern(gesuchsperiodeId: string, antragId: string, dateParam: moment.Moment): IPromise<TSGesuch> {\n        return this.http.post(this.serviceURL + '/erneuern/' + encodeURIComponent(gesuchsperiodeId) + '/' + encodeURIComponent(antragId), null,\n            {params: {date: DateUtil.momentToLocalDate(dateParam)}}).then((response) => {\n            return this.ebeguRestUtil.parseGesuch(new TSGesuch(), response.data);\n        });\n    }\n\n    public antragFreigeben(antragId: string, username: string): IPromise<TSGesuch> {\n        return this.http.post(this.serviceURL + '/freigeben/' + encodeURIComponent(antragId), username, {\n            headers: {\n                'Content-Type': 'text/plain'\n            }\n        }).then((response) => {\n            return this.ebeguRestUtil.parseGesuch(new TSGesuch(), response.data);\n        });\n    }\n\n    public setBeschwerdeHaengig(antragId: string): IPromise<TSGesuch> {\n        return this.http.post(this.serviceURL + '/setBeschwerde/' + encodeURIComponent(antragId), null).then((response) => {\n            return this.ebeguRestUtil.parseGesuch(new TSGesuch(), response.data);\n        });\n    }\n\n    public sendGesuchToSTV(antragId: string, bemerkungen: string): IPromise<TSGesuch> {\n        return this.http.post(this.serviceURL + '/sendToSTV/' + encodeURIComponent(antragId), bemerkungen, null).then((response) => {\n            return this.ebeguRestUtil.parseGesuch(new TSGesuch(), response.data);\n        });\n    }\n\n    public gesuchBySTVFreigeben(antragId: string): IPromise<TSGesuch> {\n        return this.http.post(this.serviceURL + '/freigebenSTV/' + encodeURIComponent(antragId), null).then((response) => {\n            return this.ebeguRestUtil.parseGesuch(new TSGesuch(), response.data);\n        });\n    }\n\n    public stvPruefungAbschliessen(antragId: string): IPromise<TSGesuch> {\n        return this.http.post(this.serviceURL + '/stvPruefungAbschliessen/' + encodeURIComponent(antragId), null).then((response) => {\n            return this.ebeguRestUtil.parseGesuch(new TSGesuch(), response.data);\n        });\n    }\n\n    public removeBeschwerdeHaengig(antragId: string): IPromise<TSGesuch> {\n        return this.http.post(this.serviceURL + '/removeBeschwerde/' + encodeURIComponent(antragId), null).then((response) => {\n            return this.ebeguRestUtil.parseGesuch(new TSGesuch(), response.data);\n        });\n    }\n\n    public getNeuestesGesuchFromGesuch(gesuchID: string):  IPromise<boolean> {\n        return this.http.get(this.serviceURL + '/neuestesgesuch/' + encodeURIComponent(gesuchID))\n            .then((response: any) => {\n                return response.data;\n            });\n    }\n\n    public removeOnlineMutation(fallID: string, gesuchsperiodeId: string): IPromise<boolean> {\n        return this.http.delete(this.serviceURL + '/removeOnlineMutation/' + encodeURIComponent(fallID)\n            + '/' + encodeURIComponent(gesuchsperiodeId))\n            .then((response: any) => {\n                this.$rootScope.$broadcast(TSMitteilungEvent[TSMitteilungEvent.MUTATIONSMITTEILUNG_MUTATION_REMOVED], response);\n                return response.data;\n            });\n    }\n\n    public removeOnlineFolgegesuch(fallID: string, gesuchsperiodeId: string): IPromise<boolean> {\n        return this.http.delete(this.serviceURL + '/removeOnlineFolgegesuch/' + encodeURIComponent(fallID)\n            + '/' + encodeURIComponent(gesuchsperiodeId))\n            .then((response: any) => {\n                return response.data;\n            });\n    }\n\n    public removePapiergesuch(gesuchId: string): IPromise<boolean> {\n        return this.http.delete(this.serviceURL + '/removePapiergesuch/' + encodeURIComponent(gesuchId))\n            .then((response: any) => {\n                return response.data;\n            });\n    }\n\n    public removeGesuchstellerAntrag(gesuchId: string): IPromise<boolean> {\n        return this.http.delete(this.serviceURL + '/removeGesuchstellerAntrag/' + encodeURIComponent(gesuchId))\n            .then((response: any) => {\n                return response.data;\n            });\n    }\n\n    public closeWithoutAngebot(antragId: string): IPromise<TSGesuch> {\n        return this.http.post(this.serviceURL + '/closeWithoutAngebot/' + encodeURIComponent(antragId), null).then((response) => {\n            return this.ebeguRestUtil.parseGesuch(new TSGesuch(), response.data);\n        });\n    }\n\n    public verfuegenStarten(antragId: string, hasFSDocument: boolean): IPromise<TSGesuch> {\n        return this.http.post(this.serviceURL + '/verfuegenStarten/' + encodeURIComponent(antragId) + '/' + hasFSDocument, null).then((response) => {\n            return this.ebeguRestUtil.parseGesuch(new TSGesuch(), response.data);\n        });\n    }\n\n    public getGesuchBetreuungenStatus(gesuchId: string): IPromise<TSGesuchBetreuungenStatus> {\n        return this.http.get(this.serviceURL + '/gesuchBetreuungenStatus/' + encodeURIComponent(gesuchId))\n            .then((response: any) => {\n                return response.data;\n            });\n    }\n\n    public gesuchVerfuegen(antragId: string): IHttpPromise<any> {\n        return this.http.post(this.serviceURL + '/gesuchVerfuegen/' + encodeURIComponent(antragId), null);\n    }\n}\n"]}]}