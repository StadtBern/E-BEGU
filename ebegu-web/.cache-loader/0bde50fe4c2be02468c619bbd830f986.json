{"remainingRequest":"/home/imanol/projects/ebegu/ebegu-web/node_modules/thread-loader/dist/cjs.js??ref--0-1!/home/imanol/projects/ebegu/ebegu-web/node_modules/ts-loader/index.js??ref--0-2!/home/imanol/projects/ebegu/ebegu-web/src/gesuch/service/gesuchRS.rest.ts","cacheIdentifier":"cache-loader:1.1.0 test","dependencies":[{"path":"/home/imanol/projects/ebegu/ebegu-web/src/gesuch/service/gesuchRS.rest.ts","mtime":1518612532806},{"path":"/home/imanol/projects/ebegu/ebegu-web/node_modules/cache-loader/dist/cjs.js","mtime":1507514019000},{"path":"/home/imanol/projects/ebegu/ebegu-web/node_modules/thread-loader/dist/cjs.js","mtime":1507523420000},{"path":"/home/imanol/projects/ebegu/ebegu-web/node_modules/ts-loader/index.js","mtime":1508488471000}],"contextDependencies":[],"result":["\"use strict\";\n/*\n * Ki-Tax: System for the management of external childcare subsidies\n * Copyright (C) 2017 City of Bern Switzerland\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar TSMitteilungEvent_1 = require(\"../../models/enums/TSMitteilungEvent\");\nvar TSAntragDTO_1 = require(\"../../models/TSAntragDTO\");\nvar TSGesuch_1 = require(\"../../models/TSGesuch\");\nvar DateUtil_1 = require(\"../../utils/DateUtil\");\nvar GesuchRS = /** @class */ (function () {\n    /* @ngInject */\n    function GesuchRS($http, REST_API, ebeguRestUtil, $log, wizardStepManager, $rootScope) {\n        this.$log = $log;\n        this.wizardStepManager = wizardStepManager;\n        this.$rootScope = $rootScope;\n        this.serviceURL = REST_API + 'gesuche';\n        this.http = $http;\n        this.ebeguRestUtil = ebeguRestUtil;\n    }\n    GesuchRS.prototype.createGesuch = function (gesuch) {\n        var _this = this;\n        var sentGesuch = {};\n        sentGesuch = this.ebeguRestUtil.gesuchToRestObject(sentGesuch, gesuch);\n        return this.http.post(this.serviceURL, sentGesuch, {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }).then(function (response) {\n            _this.$log.debug('PARSING gesuch REST object ', response.data);\n            var convertedGesuch = _this.ebeguRestUtil.parseGesuch(new TSGesuch_1.default(), response.data);\n            return _this.wizardStepManager.updateFirstWizardStep(convertedGesuch.id).then(function () {\n                return convertedGesuch;\n            });\n        });\n    };\n    GesuchRS.prototype.updateGesuch = function (gesuch) {\n        var _this = this;\n        var sentGesuch = {};\n        sentGesuch = this.ebeguRestUtil.gesuchToRestObject(sentGesuch, gesuch);\n        return this.http.put(this.serviceURL, sentGesuch, {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }).then(function (response) {\n            return _this.wizardStepManager.findStepsFromGesuch(gesuch.id).then(function () {\n                _this.$log.debug('PARSING gesuch REST object ', response.data);\n                return _this.ebeguRestUtil.parseGesuch(new TSGesuch_1.default(), response.data);\n            });\n        });\n    };\n    GesuchRS.prototype.findGesuch = function (gesuchID) {\n        var _this = this;\n        return this.http.get(this.serviceURL + '/' + encodeURIComponent(gesuchID))\n            .then(function (response) {\n            _this.$log.debug('PARSING gesuch REST object ', response.data);\n            return _this.ebeguRestUtil.parseGesuch(new TSGesuch_1.default(), response.data);\n        });\n    };\n    GesuchRS.prototype.findGesuchForFreigabe = function (gesuchID) {\n        var _this = this;\n        return this.http.get(this.serviceURL + '/freigabe/' + encodeURIComponent(gesuchID))\n            .then(function (response) {\n            _this.$log.debug('PARSING antragDTO REST object ', response.data);\n            return _this.ebeguRestUtil.parseAntragDTO(new TSAntragDTO_1.default(), response.data);\n        });\n    };\n    GesuchRS.prototype.findGesuchForInstitution = function (gesuchID) {\n        var _this = this;\n        return this.http.get(this.serviceURL + '/institution/' + encodeURIComponent(gesuchID))\n            .then(function (response) {\n            _this.$log.debug('PARSING gesuch (fuer Institutionen) REST object ', response.data);\n            return _this.ebeguRestUtil.parseGesuch(new TSGesuch_1.default(), response.data);\n        });\n    };\n    GesuchRS.prototype.updateBemerkung = function (gesuchID, bemerkung) {\n        return this.http.put(this.serviceURL + '/bemerkung/' + encodeURIComponent(gesuchID), bemerkung, {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        });\n    };\n    GesuchRS.prototype.updateBemerkungPruefungSTV = function (gesuchID, bemerkungPruefungSTV) {\n        return this.http.put(this.serviceURL + '/bemerkungPruefungSTV/' + encodeURIComponent(gesuchID), bemerkungPruefungSTV, {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        });\n    };\n    GesuchRS.prototype.updateGesuchStatus = function (gesuchID, status) {\n        return this.http.put(this.serviceURL + '/status/' + encodeURIComponent(gesuchID) + '/' + status, null);\n    };\n    GesuchRS.prototype.getAllAntragDTOForFall = function (fallId) {\n        var _this = this;\n        return this.http.get(this.serviceURL + '/fall/' + encodeURIComponent(fallId)).then(function (response) {\n            return _this.ebeguRestUtil.parseAntragDTOs(response.data);\n        });\n    };\n    GesuchRS.prototype.antragMutieren = function (antragId, dateParam) {\n        var _this = this;\n        return this.http.post(this.serviceURL + '/mutieren/' + encodeURIComponent(antragId), null, { params: { date: DateUtil_1.default.momentToLocalDate(dateParam) } }).then(function (response) {\n            return _this.ebeguRestUtil.parseGesuch(new TSGesuch_1.default(), response.data);\n        });\n    };\n    GesuchRS.prototype.antragErneuern = function (gesuchsperiodeId, antragId, dateParam) {\n        var _this = this;\n        return this.http.post(this.serviceURL + '/erneuern/' + encodeURIComponent(gesuchsperiodeId) + '/' + encodeURIComponent(antragId), null, { params: { date: DateUtil_1.default.momentToLocalDate(dateParam) } }).then(function (response) {\n            return _this.ebeguRestUtil.parseGesuch(new TSGesuch_1.default(), response.data);\n        });\n    };\n    GesuchRS.prototype.antragFreigeben = function (antragId, usernameJA, usernameSCH) {\n        var _this = this;\n        return this.http.post(this.serviceURL + '/freigeben/' + encodeURIComponent(antragId) + '/JA/' + usernameJA + '/SCH/' + usernameSCH, null, {\n            headers: {\n                'Content-Type': 'text/plain'\n            }\n        }).then(function (response) {\n            return _this.ebeguRestUtil.parseGesuch(new TSGesuch_1.default(), response.data);\n        });\n    };\n    GesuchRS.prototype.setBeschwerdeHaengig = function (antragId) {\n        var _this = this;\n        return this.http.post(this.serviceURL + '/setBeschwerde/' + encodeURIComponent(antragId), null).then(function (response) {\n            return _this.ebeguRestUtil.parseGesuch(new TSGesuch_1.default(), response.data);\n        });\n    };\n    GesuchRS.prototype.setAbschliessen = function (antragId) {\n        var _this = this;\n        return this.http.post(this.serviceURL + '/setAbschliessen/' + encodeURIComponent(antragId), null).then(function (response) {\n            return _this.ebeguRestUtil.parseGesuch(new TSGesuch_1.default(), response.data);\n        });\n    };\n    GesuchRS.prototype.sendGesuchToSTV = function (antragId, bemerkungen) {\n        var _this = this;\n        return this.http.post(this.serviceURL + '/sendToSTV/' + encodeURIComponent(antragId), bemerkungen, null).then(function (response) {\n            return _this.ebeguRestUtil.parseGesuch(new TSGesuch_1.default(), response.data);\n        });\n    };\n    GesuchRS.prototype.gesuchBySTVFreigeben = function (antragId) {\n        var _this = this;\n        return this.http.post(this.serviceURL + '/freigebenSTV/' + encodeURIComponent(antragId), null).then(function (response) {\n            return _this.ebeguRestUtil.parseGesuch(new TSGesuch_1.default(), response.data);\n        });\n    };\n    GesuchRS.prototype.stvPruefungAbschliessen = function (antragId) {\n        var _this = this;\n        return this.http.post(this.serviceURL + '/stvPruefungAbschliessen/' + encodeURIComponent(antragId), null).then(function (response) {\n            return _this.ebeguRestUtil.parseGesuch(new TSGesuch_1.default(), response.data);\n        });\n    };\n    GesuchRS.prototype.removeBeschwerdeHaengig = function (antragId) {\n        var _this = this;\n        return this.http.post(this.serviceURL + '/removeBeschwerde/' + encodeURIComponent(antragId), null).then(function (response) {\n            return _this.ebeguRestUtil.parseGesuch(new TSGesuch_1.default(), response.data);\n        });\n    };\n    GesuchRS.prototype.removeOnlineMutation = function (fallID, gesuchsperiodeId) {\n        var _this = this;\n        return this.http.delete(this.serviceURL + '/removeOnlineMutation/' + encodeURIComponent(fallID)\n            + '/' + encodeURIComponent(gesuchsperiodeId))\n            .then(function (response) {\n            _this.$rootScope.$broadcast(TSMitteilungEvent_1.TSMitteilungEvent[TSMitteilungEvent_1.TSMitteilungEvent.MUTATIONSMITTEILUNG_MUTATION_REMOVED], response);\n            return response.data;\n        });\n    };\n    GesuchRS.prototype.removeOnlineFolgegesuch = function (fallID, gesuchsperiodeId) {\n        return this.http.delete(this.serviceURL + '/removeOnlineFolgegesuch/' + encodeURIComponent(fallID)\n            + '/' + encodeURIComponent(gesuchsperiodeId))\n            .then(function (response) {\n            return response.data;\n        });\n    };\n    GesuchRS.prototype.removePapiergesuch = function (gesuchId) {\n        return this.http.delete(this.serviceURL + '/removePapiergesuch/' + encodeURIComponent(gesuchId))\n            .then(function (response) {\n            return response.data;\n        });\n    };\n    GesuchRS.prototype.removeGesuchstellerAntrag = function (gesuchId) {\n        return this.http.delete(this.serviceURL + '/removeGesuchstellerAntrag/' + encodeURIComponent(gesuchId))\n            .then(function (response) {\n            return response.data;\n        });\n    };\n    GesuchRS.prototype.closeWithoutAngebot = function (antragId) {\n        var _this = this;\n        return this.http.post(this.serviceURL + '/closeWithoutAngebot/' + encodeURIComponent(antragId), null).then(function (response) {\n            return _this.ebeguRestUtil.parseGesuch(new TSGesuch_1.default(), response.data);\n        });\n    };\n    GesuchRS.prototype.verfuegenStarten = function (antragId, hasFSDocument) {\n        var _this = this;\n        return this.http.post(this.serviceURL + '/verfuegenStarten/' + encodeURIComponent(antragId) + '/' + hasFSDocument, null).then(function (response) {\n            return _this.ebeguRestUtil.parseGesuch(new TSGesuch_1.default(), response.data);\n        });\n    };\n    GesuchRS.prototype.getGesuchBetreuungenStatus = function (gesuchId) {\n        return this.http.get(this.serviceURL + '/gesuchBetreuungenStatus/' + encodeURIComponent(gesuchId))\n            .then(function (response) {\n            return response.data;\n        });\n    };\n    GesuchRS.prototype.gesuchVerfuegen = function (antragId) {\n        return this.http.post(this.serviceURL + '/gesuchVerfuegen/' + encodeURIComponent(antragId), null);\n    };\n    GesuchRS.prototype.changeFinSitStatus = function (antragId, finSitStatus) {\n        return this.http.post(this.serviceURL + '/changeFinSitStatus/' + encodeURIComponent(antragId) + '/' + finSitStatus, null);\n    };\n    GesuchRS.prototype.isNeuestesGesuch = function (gesuchID) {\n        return this.http.get(this.serviceURL + '/newest/' + encodeURIComponent(gesuchID))\n            .then(function (response) {\n            return response.data;\n        });\n    };\n    GesuchRS.prototype.getIdOfNewestGesuch = function (gesuchsperiodeId, fallId) {\n        return this.http.get(this.serviceURL + '/newestid/' + encodeURIComponent(gesuchsperiodeId) + '/' + encodeURIComponent(fallId))\n            .then(function (response) {\n            return response.data;\n        });\n    };\n    GesuchRS.$inject = ['$http', 'REST_API', 'EbeguRestUtil', '$log', 'WizardStepManager', '$rootScope'];\n    return GesuchRS;\n}());\nexports.default = GesuchRS;\n",{"version":3,"file":"/home/imanol/projects/ebegu/ebegu-web/src/gesuch/service/gesuchRS.rest.ts","sourceRoot":"","sources":["/home/imanol/projects/ebegu/ebegu-web/src/gesuch/service/gesuchRS.rest.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Ki-Tax: System for the management of external childcare subsidies\n * Copyright (C) 2017 City of Bern Switzerland\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport {IHttpPromise, IHttpService, ILogService, IPromise} from 'angular';\nimport * as moment from 'moment';\nimport {IEntityRS} from '../../core/service/iEntityRS.rest';\nimport {TSAntragStatus} from '../../models/enums/TSAntragStatus';\nimport {TSGesuchBetreuungenStatus} from '../../models/enums/TSGesuchBetreuungenStatus';\nimport {TSMitteilungEvent} from '../../models/enums/TSMitteilungEvent';\nimport TSAntragDTO from '../../models/TSAntragDTO';\nimport TSGesuch from '../../models/TSGesuch';\nimport DateUtil from '../../utils/DateUtil';\nimport EbeguRestUtil from '../../utils/EbeguRestUtil';\nimport WizardStepManager from './wizardStepManager';\nimport IRootScopeService = angular.IRootScopeService;\nimport {TSFinSitStatus} from '../../models/enums/TSFinSitStatus';\n\nexport default class GesuchRS implements IEntityRS {\n    serviceURL: string;\n    http: IHttpService;\n    ebeguRestUtil: EbeguRestUtil;\n\n    static $inject = ['$http', 'REST_API', 'EbeguRestUtil', '$log', 'WizardStepManager', '$rootScope'];\n    /* @ngInject */\n    constructor($http: IHttpService, REST_API: string, ebeguRestUtil: EbeguRestUtil, private $log: ILogService,\n                private wizardStepManager: WizardStepManager, private $rootScope: IRootScopeService) {\n        this.serviceURL = REST_API + 'gesuche';\n        this.http = $http;\n        this.ebeguRestUtil = ebeguRestUtil;\n    }\n\n    public createGesuch(gesuch: TSGesuch): IPromise<TSGesuch> {\n        let sentGesuch = {};\n        sentGesuch = this.ebeguRestUtil.gesuchToRestObject(sentGesuch, gesuch);\n        return this.http.post(this.serviceURL, sentGesuch, {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }).then((response: any) => {\n            this.$log.debug('PARSING gesuch REST object ', response.data);\n            let convertedGesuch: TSGesuch = this.ebeguRestUtil.parseGesuch(new TSGesuch(), response.data);\n            return this.wizardStepManager.updateFirstWizardStep(convertedGesuch.id).then(() => {\n                return convertedGesuch;\n            });\n        });\n    }\n\n    public updateGesuch(gesuch: TSGesuch): IPromise<TSGesuch> {\n        let sentGesuch = {};\n        sentGesuch = this.ebeguRestUtil.gesuchToRestObject(sentGesuch, gesuch);\n        return this.http.put(this.serviceURL, sentGesuch, {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }).then((response) => {\n            return this.wizardStepManager.findStepsFromGesuch(gesuch.id).then(() => {\n                this.$log.debug('PARSING gesuch REST object ', response.data);\n                return this.ebeguRestUtil.parseGesuch(new TSGesuch(), response.data);\n            });\n        });\n    }\n\n    public findGesuch(gesuchID: string): IPromise<TSGesuch> {\n        return this.http.get(this.serviceURL + '/' + encodeURIComponent(gesuchID))\n            .then((response: any) => {\n                this.$log.debug('PARSING gesuch REST object ', response.data);\n                return this.ebeguRestUtil.parseGesuch(new TSGesuch(), response.data);\n            });\n    }\n\n    public findGesuchForFreigabe(gesuchID: string): IPromise<TSAntragDTO> {\n        return this.http.get(this.serviceURL + '/freigabe/' + encodeURIComponent(gesuchID))\n            .then((response: any) => {\n                this.$log.debug('PARSING antragDTO REST object ', response.data);\n                return this.ebeguRestUtil.parseAntragDTO(new TSAntragDTO(), response.data);\n            });\n    }\n\n\n    public findGesuchForInstitution(gesuchID: string): IPromise<TSGesuch> {\n        return this.http.get(this.serviceURL + '/institution/' + encodeURIComponent(gesuchID))\n            .then((response: any) => {\n                this.$log.debug('PARSING gesuch (fuer Institutionen) REST object ', response.data);\n                return this.ebeguRestUtil.parseGesuch(new TSGesuch(), response.data);\n            });\n    }\n\n    public updateBemerkung(gesuchID: string, bemerkung: string): IHttpPromise<any> {\n        return this.http.put(this.serviceURL + '/bemerkung/' + encodeURIComponent(gesuchID), bemerkung, {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        });\n    }\n\n    public updateBemerkungPruefungSTV(gesuchID: string, bemerkungPruefungSTV: string): IHttpPromise<any> {\n        return this.http.put(this.serviceURL + '/bemerkungPruefungSTV/' + encodeURIComponent(gesuchID), bemerkungPruefungSTV, {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        });\n    }\n\n    public updateGesuchStatus(gesuchID: string, status: TSAntragStatus): IHttpPromise<any> {\n        return this.http.put(this.serviceURL + '/status/' + encodeURIComponent(gesuchID) + '/' + status, null);\n    }\n\n    public getAllAntragDTOForFall(fallId: string): IPromise<TSAntragDTO[]> {\n        return this.http.get(this.serviceURL + '/fall/' + encodeURIComponent(fallId)).then((response: any) => {\n            return this.ebeguRestUtil.parseAntragDTOs(response.data);\n        });\n    }\n\n    public antragMutieren(antragId: string, dateParam: moment.Moment): IPromise<TSGesuch> {\n        return this.http.post(this.serviceURL + '/mutieren/' + encodeURIComponent(antragId), null,\n            {params: {date: DateUtil.momentToLocalDate(dateParam)}}).then((response) => {\n            return this.ebeguRestUtil.parseGesuch(new TSGesuch(), response.data);\n        });\n    }\n\n    public antragErneuern(gesuchsperiodeId: string, antragId: string, dateParam: moment.Moment): IPromise<TSGesuch> {\n        return this.http.post(this.serviceURL + '/erneuern/' + encodeURIComponent(gesuchsperiodeId) + '/' + encodeURIComponent(antragId), null,\n            {params: {date: DateUtil.momentToLocalDate(dateParam)}}).then((response) => {\n            return this.ebeguRestUtil.parseGesuch(new TSGesuch(), response.data);\n        });\n    }\n\n    public antragFreigeben(antragId: string, usernameJA: string, usernameSCH: string): IPromise<TSGesuch> {\n        return this.http.post(this.serviceURL + '/freigeben/' + encodeURIComponent(antragId) + '/JA/' + usernameJA + '/SCH/' + usernameSCH,\n            null, {\n            headers: {\n                'Content-Type': 'text/plain'\n            }\n        }).then((response) => {\n            return this.ebeguRestUtil.parseGesuch(new TSGesuch(), response.data);\n        });\n    }\n\n    public setBeschwerdeHaengig(antragId: string): IPromise<TSGesuch> {\n        return this.http.post(this.serviceURL + '/setBeschwerde/' + encodeURIComponent(antragId), null).then((response) => {\n            return this.ebeguRestUtil.parseGesuch(new TSGesuch(), response.data);\n        });\n    }\n\n    public setAbschliessen(antragId: string): IPromise<TSGesuch> {\n        return this.http.post(this.serviceURL + '/setAbschliessen/' + encodeURIComponent(antragId), null).then((response) => {\n            return this.ebeguRestUtil.parseGesuch(new TSGesuch(), response.data);\n        });\n    }\n\n    public sendGesuchToSTV(antragId: string, bemerkungen: string): IPromise<TSGesuch> {\n        return this.http.post(this.serviceURL + '/sendToSTV/' + encodeURIComponent(antragId), bemerkungen, null).then((response) => {\n            return this.ebeguRestUtil.parseGesuch(new TSGesuch(), response.data);\n        });\n    }\n\n    public gesuchBySTVFreigeben(antragId: string): IPromise<TSGesuch> {\n        return this.http.post(this.serviceURL + '/freigebenSTV/' + encodeURIComponent(antragId), null).then((response) => {\n            return this.ebeguRestUtil.parseGesuch(new TSGesuch(), response.data);\n        });\n    }\n\n    public stvPruefungAbschliessen(antragId: string): IPromise<TSGesuch> {\n        return this.http.post(this.serviceURL + '/stvPruefungAbschliessen/' + encodeURIComponent(antragId), null).then((response) => {\n            return this.ebeguRestUtil.parseGesuch(new TSGesuch(), response.data);\n        });\n    }\n\n    public removeBeschwerdeHaengig(antragId: string): IPromise<TSGesuch> {\n        return this.http.post(this.serviceURL + '/removeBeschwerde/' + encodeURIComponent(antragId), null).then((response) => {\n            return this.ebeguRestUtil.parseGesuch(new TSGesuch(), response.data);\n        });\n    }\n\n    public removeOnlineMutation(fallID: string, gesuchsperiodeId: string): IPromise<boolean> {\n        return this.http.delete(this.serviceURL + '/removeOnlineMutation/' + encodeURIComponent(fallID)\n            + '/' + encodeURIComponent(gesuchsperiodeId))\n            .then((response: any) => {\n                this.$rootScope.$broadcast(TSMitteilungEvent[TSMitteilungEvent.MUTATIONSMITTEILUNG_MUTATION_REMOVED], response);\n                return response.data;\n            });\n    }\n\n    public removeOnlineFolgegesuch(fallID: string, gesuchsperiodeId: string): IPromise<boolean> {\n        return this.http.delete(this.serviceURL + '/removeOnlineFolgegesuch/' + encodeURIComponent(fallID)\n            + '/' + encodeURIComponent(gesuchsperiodeId))\n            .then((response: any) => {\n                return response.data;\n            });\n    }\n\n    public removePapiergesuch(gesuchId: string): IPromise<boolean> {\n        return this.http.delete(this.serviceURL + '/removePapiergesuch/' + encodeURIComponent(gesuchId))\n            .then((response: any) => {\n                return response.data;\n            });\n    }\n\n    public removeGesuchstellerAntrag(gesuchId: string): IPromise<boolean> {\n        return this.http.delete(this.serviceURL + '/removeGesuchstellerAntrag/' + encodeURIComponent(gesuchId))\n            .then((response: any) => {\n                return response.data;\n            });\n    }\n\n    public closeWithoutAngebot(antragId: string): IPromise<TSGesuch> {\n        return this.http.post(this.serviceURL + '/closeWithoutAngebot/' + encodeURIComponent(antragId), null).then((response) => {\n            return this.ebeguRestUtil.parseGesuch(new TSGesuch(), response.data);\n        });\n    }\n\n    public verfuegenStarten(antragId: string, hasFSDocument: boolean): IPromise<TSGesuch> {\n        return this.http.post(this.serviceURL + '/verfuegenStarten/' + encodeURIComponent(antragId) + '/' + hasFSDocument, null).then((response) => {\n            return this.ebeguRestUtil.parseGesuch(new TSGesuch(), response.data);\n        });\n    }\n\n    public getGesuchBetreuungenStatus(gesuchId: string): IPromise<TSGesuchBetreuungenStatus> {\n        return this.http.get(this.serviceURL + '/gesuchBetreuungenStatus/' + encodeURIComponent(gesuchId))\n            .then((response: any) => {\n                return response.data;\n            });\n    }\n\n    public gesuchVerfuegen(antragId: string): IHttpPromise<any> {\n        return this.http.post(this.serviceURL + '/gesuchVerfuegen/' + encodeURIComponent(antragId), null);\n    }\n\n    public changeFinSitStatus(antragId: string, finSitStatus: TSFinSitStatus): IPromise<any> {\n        return this.http.post(this.serviceURL + '/changeFinSitStatus/' + encodeURIComponent(antragId) + '/' + finSitStatus, null);\n    }\n\n    public isNeuestesGesuch(gesuchID: string): IPromise<boolean> {\n        return this.http.get(this.serviceURL + '/newest/' + encodeURIComponent(gesuchID))\n            .then((response: any) => {\n                return response.data;\n            });\n    }\n\n    public getIdOfNewestGesuch(gesuchsperiodeId: string, fallId: string): IPromise<string> {\n        return this.http.get(this.serviceURL + '/newestid/' + encodeURIComponent(gesuchsperiodeId) + '/' + encodeURIComponent(fallId))\n            .then((response: any) => {\n                return response.data;\n            });\n    }\n}\n"]}]}