{"remainingRequest":"/home/imanol/projects/ebegu/ebegu-web/node_modules/thread-loader/dist/cjs.js??ref--0-1!/home/imanol/projects/ebegu/ebegu-web/node_modules/ts-loader/index.js??ref--0-2!/home/imanol/projects/ebegu/ebegu-web/src/core/service/gesuchstellerRS.rest.ts","cacheIdentifier":"cache-loader:1.1.0 test","dependencies":[{"path":"/home/imanol/projects/ebegu/ebegu-web/src/core/service/gesuchstellerRS.rest.ts","mtime":1512484412007},{"path":"/home/imanol/projects/ebegu/ebegu-web/node_modules/cache-loader/dist/cjs.js","mtime":1507514019000},{"path":"/home/imanol/projects/ebegu/ebegu-web/node_modules/thread-loader/dist/cjs.js","mtime":1507523420000},{"path":"/home/imanol/projects/ebegu/ebegu-web/node_modules/ts-loader/index.js","mtime":1508488471000}],"contextDependencies":[],"result":["\"use strict\";\n/*\n * Ki-Tax: System for the management of external childcare subsidies\n * Copyright (C) 2017 City of Bern Switzerland\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar TSGesuchstellerContainer_1 = require(\"../../models/TSGesuchstellerContainer\");\nvar GesuchstellerRS = /** @class */ (function () {\n    /* @ngInject */\n    function GesuchstellerRS($http, REST_API, ebeguRestUtil, $log, wizardStepManager) {\n        this.wizardStepManager = wizardStepManager;\n        this.serviceURL = REST_API + 'gesuchsteller';\n        this.http = $http;\n        this.ebeguRestUtil = ebeguRestUtil;\n        this.log = $log;\n    }\n    GesuchstellerRS.prototype.saveGesuchsteller = function (gesuchsteller, gesuchId, gsNumber, umzug) {\n        var _this = this;\n        var gessteller = this.ebeguRestUtil.gesuchstellerContainerToRestObject({}, gesuchsteller);\n        return this.http.put(this.serviceURL + '/' + encodeURIComponent(gesuchId) + '/gsNumber/' + gsNumber + '/' + umzug, gessteller, {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }).then(function (response) {\n            return _this.wizardStepManager.findStepsFromGesuch(gesuchId).then(function () {\n                _this.log.debug('PARSING gesuchsteller REST object ', response.data);\n                return _this.ebeguRestUtil.parseGesuchstellerContainer(new TSGesuchstellerContainer_1.default(), response.data);\n            });\n        });\n    };\n    GesuchstellerRS.prototype.findGesuchsteller = function (gesuchstellerID) {\n        var _this = this;\n        return this.http.get(this.serviceURL + '/id/' + encodeURIComponent(gesuchstellerID))\n            .then(function (response) {\n            _this.log.debug('PARSING gesuchsteller REST object ', response.data);\n            return _this.ebeguRestUtil.parseGesuchstellerContainer(new TSGesuchstellerContainer_1.default(), response.data);\n        });\n    };\n    GesuchstellerRS.prototype.getServiceName = function () {\n        return 'GesuchstellerRS';\n    };\n    GesuchstellerRS.$inject = ['$http', 'REST_API', 'EbeguRestUtil', '$log', 'WizardStepManager'];\n    return GesuchstellerRS;\n}());\nexports.default = GesuchstellerRS;\n",{"version":3,"file":"/home/imanol/projects/ebegu/ebegu-web/src/core/service/gesuchstellerRS.rest.ts","sourceRoot":"","sources":["/home/imanol/projects/ebegu/ebegu-web/src/core/service/gesuchstellerRS.rest.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;GAaG;;AAKH,kFAA6E;AAE7E;IAOI,eAAe;IACf,yBAAY,KAAmB,EAAE,QAAgB,EAAE,aAA4B,EAAE,IAAiB,EAC9E,iBAAoC;QAApC,sBAAiB,GAAjB,iBAAiB,CAAmB;QACpD,IAAI,CAAC,UAAU,GAAG,QAAQ,GAAG,eAAe,CAAC;QAC7C,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;QAClB,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;QACnC,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC;IAEpB,CAAC;IAEM,2CAAiB,GAAxB,UAAyB,aAAuC,EAAE,QAAgB,EAAE,QAAgB,EAAE,KAAc;QAApH,iBAYC;QAXG,IAAI,UAAU,GAAG,IAAI,CAAC,aAAa,CAAC,kCAAkC,CAAC,EAAE,EAAE,aAAa,CAAC,CAAC;QAC1F,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,GAAG,GAAG,GAAG,kBAAkB,CAAC,QAAQ,CAAC,GAAG,YAAY,GAAG,QAAQ,GAAG,GAAG,GAAG,KAAK,EAAE,UAAU,EAAE;YAC3H,OAAO,EAAE;gBACL,cAAc,EAAE,kBAAkB;aACrC;SACJ,CAAC,CAAC,IAAI,CAAC,UAAC,QAAa;YAClB,MAAM,CAAC,KAAI,CAAC,iBAAiB,CAAC,mBAAmB,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC;gBAC7D,KAAI,CAAC,GAAG,CAAC,KAAK,CAAC,oCAAoC,EAAE,QAAQ,CAAC,IAAI,CAAC,CAAC;gBACpE,MAAM,CAAC,KAAI,CAAC,aAAa,CAAC,2BAA2B,CAAC,IAAI,kCAAwB,EAAE,EAAE,QAAQ,CAAC,IAAI,CAAC,CAAC;YACzG,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACP,CAAC;IAEM,2CAAiB,GAAxB,UAAyB,eAAuB;QAAhD,iBAMC;QALG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,GAAG,MAAM,GAAG,kBAAkB,CAAC,eAAe,CAAC,CAAC;aAC/E,IAAI,CAAC,UAAC,QAAa;YAChB,KAAI,CAAC,GAAG,CAAC,KAAK,CAAC,oCAAoC,EAAE,QAAQ,CAAC,IAAI,CAAC,CAAC;YACpE,MAAM,CAAC,KAAI,CAAC,aAAa,CAAC,2BAA2B,CAAC,IAAI,kCAAwB,EAAE,EAAE,QAAQ,CAAC,IAAI,CAAC,CAAC;QACzG,CAAC,CAAC,CAAC;IACX,CAAC;IAEM,wCAAc,GAArB;QACI,MAAM,CAAC,iBAAiB,CAAC;IAC7B,CAAC;IAnCM,uBAAO,GAAG,CAAC,OAAO,EAAE,UAAU,EAAE,eAAe,EAAE,MAAM,EAAE,mBAAmB,CAAC,CAAC;IAqCzF,sBAAC;CAAA,AA3CD,IA2CC;kBA3CoB,eAAe","sourcesContent":["/*\n * Ki-Tax: System for the management of external childcare subsidies\n * Copyright (C) 2017 City of Bern Switzerland\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport EbeguRestUtil from '../../utils/EbeguRestUtil';\nimport {IHttpService, ILogService, IPromise} from 'angular';\nimport WizardStepManager from '../../gesuch/service/wizardStepManager';\nimport TSGesuchstellerContainer from '../../models/TSGesuchstellerContainer';\n\nexport default class GesuchstellerRS {\n    serviceURL: string;\n    http: IHttpService;\n    ebeguRestUtil: EbeguRestUtil;\n    log: ILogService;\n\n    static $inject = ['$http', 'REST_API', 'EbeguRestUtil', '$log', 'WizardStepManager'];\n    /* @ngInject */\n    constructor($http: IHttpService, REST_API: string, ebeguRestUtil: EbeguRestUtil, $log: ILogService,\n                private wizardStepManager: WizardStepManager) {\n        this.serviceURL = REST_API + 'gesuchsteller';\n        this.http = $http;\n        this.ebeguRestUtil = ebeguRestUtil;\n        this.log = $log;\n\n    }\n\n    public saveGesuchsteller(gesuchsteller: TSGesuchstellerContainer, gesuchId: string, gsNumber: number, umzug: boolean): IPromise<TSGesuchstellerContainer> {\n        let gessteller = this.ebeguRestUtil.gesuchstellerContainerToRestObject({}, gesuchsteller);\n        return this.http.put(this.serviceURL + '/' + encodeURIComponent(gesuchId) + '/gsNumber/' + gsNumber + '/' + umzug, gessteller, {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }).then((response: any) => {\n            return this.wizardStepManager.findStepsFromGesuch(gesuchId).then(() => {\n                this.log.debug('PARSING gesuchsteller REST object ', response.data);\n                return this.ebeguRestUtil.parseGesuchstellerContainer(new TSGesuchstellerContainer(), response.data);\n            });\n        });\n    }\n\n    public findGesuchsteller(gesuchstellerID: string): IPromise<TSGesuchstellerContainer> {\n        return this.http.get(this.serviceURL + '/id/' + encodeURIComponent(gesuchstellerID))\n            .then((response: any) => {\n                this.log.debug('PARSING gesuchsteller REST object ', response.data);\n                return this.ebeguRestUtil.parseGesuchstellerContainer(new TSGesuchstellerContainer(), response.data);\n            });\n    }\n\n    public getServiceName(): string {\n        return 'GesuchstellerRS';\n    }\n\n}\n\n"]}]}