{"remainingRequest":"/home/imanol/projects/ebegu/ebegu-web/node_modules/thread-loader/dist/cjs.js??ref--0-1!/home/imanol/projects/ebegu/ebegu-web/node_modules/ts-loader/index.js??ref--0-2!/home/imanol/projects/ebegu/ebegu-web/src/gesuch/component/betreuungView/betreuungView.ts","cacheIdentifier":"cache-loader:1.1.0 test","dependencies":[{"path":"/home/imanol/projects/ebegu/ebegu-web/src/gesuch/component/betreuungView/betreuungView.ts","mtime":1518612642528},{"path":"/home/imanol/projects/ebegu/ebegu-web/node_modules/cache-loader/dist/cjs.js","mtime":1507514019000},{"path":"/home/imanol/projects/ebegu/ebegu-web/node_modules/thread-loader/dist/cjs.js","mtime":1507523420000},{"path":"/home/imanol/projects/ebegu/ebegu-web/node_modules/ts-loader/index.js","mtime":1508488471000}],"contextDependencies":[],"result":["\"use strict\";\n/*\n * Ki-Tax: System for the management of external childcare subsidies\n * Copyright (C) 2017 City of Bern Switzerland\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar TSAntragStatus_1 = require(\"../../../models/enums/TSAntragStatus\");\nvar TSBetreuungsangebotTyp_1 = require(\"../../../models/enums/TSBetreuungsangebotTyp\");\nvar TSBetreuungsstatus_1 = require(\"../../../models/enums/TSBetreuungsstatus\");\nvar TSGesuchsperiodeStatus_1 = require(\"../../../models/enums/TSGesuchsperiodeStatus\");\nvar TSWizardStepName_1 = require(\"../../../models/enums/TSWizardStepName\");\nvar TSBelegungTagesschule_1 = require(\"../../../models/TSBelegungTagesschule\");\nvar TSBetreuung_1 = require(\"../../../models/TSBetreuung\");\nvar TSBetreuungspensum_1 = require(\"../../../models/TSBetreuungspensum\");\nvar TSBetreuungspensumContainer_1 = require(\"../../../models/TSBetreuungspensumContainer\");\nvar TSDateRange_1 = require(\"../../../models/types/TSDateRange\");\nvar DateUtil_1 = require(\"../../../utils/DateUtil\");\nvar TSRoleUtil_1 = require(\"../../../utils/TSRoleUtil\");\nvar RemoveDialogController_1 = require(\"../../dialog/RemoveDialogController\");\nvar abstractGesuchView_1 = require(\"../abstractGesuchView\");\nvar TSAnmeldungMutationZustand_1 = require(\"../../../models/enums/TSAnmeldungMutationZustand\");\nvar template = require('./betreuungView.html');\nrequire('./betreuungView.less');\nvar removeDialogTemplate = require('../../dialog/removeDialogTemplate.html');\nvar BetreuungViewComponentConfig = /** @class */ (function () {\n    function BetreuungViewComponentConfig() {\n        this.transclude = false;\n        this.template = template;\n        this.controller = BetreuungViewController;\n        this.controllerAs = 'vm';\n    }\n    return BetreuungViewComponentConfig;\n}());\nexports.BetreuungViewComponentConfig = BetreuungViewComponentConfig;\nvar BetreuungViewController = /** @class */ (function (_super) {\n    __extends(BetreuungViewController, _super);\n    /* @ngInject */\n    function BetreuungViewController($state, gesuchModelManager, ebeguUtil, CONSTANTS, $scope, berechnungsManager, errorService, authServiceRS, wizardStepManager, $stateParams, mitteilungRS, dvDialog, $log, $timeout, $translate) {\n        var _this = _super.call(this, gesuchModelManager, berechnungsManager, wizardStepManager, $scope, TSWizardStepName_1.TSWizardStepName.BETREUUNG, $timeout) || this;\n        _this.$state = $state;\n        _this.ebeguUtil = ebeguUtil;\n        _this.CONSTANTS = CONSTANTS;\n        _this.errorService = errorService;\n        _this.authServiceRS = authServiceRS;\n        _this.$stateParams = $stateParams;\n        _this.mitteilungRS = mitteilungRS;\n        _this.$log = $log;\n        _this.moduleBackup = undefined;\n        _this.aktuellGueltig = true;\n        _this.dvDialog = dvDialog;\n        _this.$translate = $translate;\n        return _this;\n    }\n    BetreuungViewController.prototype.$onInit = function () {\n        this.mutationsmeldungModel = undefined;\n        this.isMutationsmeldungStatus = false;\n        var kindIndex = this.gesuchModelManager.convertKindNumberToKindIndex(parseInt(this.$stateParams.kindNumber, 10));\n        if (kindIndex >= 0) {\n            this.gesuchModelManager.setKindIndex(kindIndex);\n            if (this.$stateParams.betreuungNumber && this.$stateParams.betreuungNumber.length > 0) {\n                this.betreuungIndex = this.gesuchModelManager.convertBetreuungNumberToBetreuungIndex(parseInt(this.$stateParams.betreuungNumber));\n                this.model = angular.copy(this.gesuchModelManager.getKindToWorkWith().betreuungen[this.betreuungIndex]);\n                this.initialBetreuung = angular.copy(this.gesuchModelManager.getKindToWorkWith().betreuungen[this.betreuungIndex]);\n                this.gesuchModelManager.setBetreuungIndex(this.betreuungIndex);\n            }\n            else {\n                //wenn betreuung-nummer nicht definiert ist heisst dass, das wir ein neues erstellen sollten\n                this.model = this.initEmptyBetreuung();\n                this.initialBetreuung = angular.copy(this.model);\n                this.betreuungIndex = this.gesuchModelManager.getKindToWorkWith().betreuungen ? this.gesuchModelManager.getKindToWorkWith().betreuungen.length : 0;\n                this.gesuchModelManager.setBetreuungIndex(this.betreuungIndex);\n            }\n            this.setBetreuungsangebotTypValues();\n            // Falls ein Typ gesetzt ist, handelt es sich um eine direkt-Anmeldung\n            if (this.$stateParams.betreuungsangebotTyp) {\n                for (var _i = 0, _a = this.betreuungsangebotValues; _i < _a.length; _i++) {\n                    var obj = _a[_i];\n                    if (obj.key === this.$stateParams.betreuungsangebotTyp) {\n                        this.betreuungsangebot = obj;\n                        this.changedAngebot();\n                    }\n                }\n            }\n            else {\n                this.betreuungsangebot = undefined;\n            }\n            this.initViewModel();\n            // just to read!\n            this.kindModel = this.gesuchModelManager.getKindToWorkWith();\n        }\n        else {\n            this.$log.error('There is no kind available with kind-number:' + this.$stateParams.kindNumber);\n        }\n        this.isNewestGesuch = this.gesuchModelManager.isNeuestesGesuch();\n        this.findExistingBetreuungsmitteilung();\n        if (this.getBetreuungModel().anmeldungMutationZustand) {\n            if (this.getBetreuungModel().anmeldungMutationZustand === TSAnmeldungMutationZustand_1.TSAnmeldungMutationZustand.MUTIERT) {\n                this.aktuellGueltig = false;\n            }\n            else if (this.getBetreuungModel().anmeldungMutationZustand === TSAnmeldungMutationZustand_1.TSAnmeldungMutationZustand.NOCH_NICHT_FREIGEGEBEN) {\n                this.aktuellGueltig = false;\n            }\n        }\n    };\n    /**\n     * Creates a Betreuung for the kind given by the kindNumber attribute of the class.\n     * Thus the kindnumber must be set before this method is called.\n     */\n    BetreuungViewController.prototype.initEmptyBetreuung = function () {\n        var tsBetreuung = new TSBetreuung_1.default();\n        tsBetreuung.betreuungsstatus = TSBetreuungsstatus_1.TSBetreuungsstatus.AUSSTEHEND;\n        return tsBetreuung;\n    };\n    BetreuungViewController.prototype.initViewModel = function () {\n        this.isSavingData = false;\n        this.flagErrorVertrag = false;\n        if (this.getInstitutionSD()) {\n            this.instStammId = this.getInstitutionSD().id;\n            this.betreuungsangebot = this.getBetreuungsangebotFromInstitutionList();\n        }\n        this.startEmptyListOfBetreuungspensen();\n        //institutionen lazy laden\n        if (!this.gesuchModelManager.getActiveInstitutionenList() || this.gesuchModelManager.getActiveInstitutionenList().length <= 0) {\n            this.gesuchModelManager.updateActiveInstitutionenList();\n        }\n    };\n    /**\n     * Fuer Institutionen und Traegerschaften wird es geprueft ob es schon ein Betreuungspensum existiert,\n     * wenn nicht wir die Liste dann mit einem leeren initiallisiert\n     */\n    BetreuungViewController.prototype.startEmptyListOfBetreuungspensen = function () {\n        if ((!this.getBetreuungspensen() || this.getBetreuungspensen().length === 0)\n            && (this.authServiceRS.isOneOfRoles(TSRoleUtil_1.TSRoleUtil.getTraegerschaftInstitutionOnlyRoles()))) {\n            // nur fuer Institutionen wird ein Betreuungspensum by default erstellt\n            this.createBetreuungspensum();\n        }\n    };\n    BetreuungViewController.prototype.getGesuchsperiodeBegin = function () {\n        return this.gesuchModelManager.getGesuchsperiodeBegin();\n    };\n    BetreuungViewController.prototype.getBetreuungsangebotFromInstitutionList = function () {\n        var _this = this;\n        return $.grep(this.betreuungsangebotValues, function (value) {\n            return value.key === _this.getInstitutionSD().betreuungsangebotTyp;\n        })[0];\n    };\n    BetreuungViewController.prototype.getKindModel = function () {\n        return this.kindModel;\n    };\n    BetreuungViewController.prototype.getBetreuungModel = function () {\n        if (this.isMutationsmeldungStatus && this.mutationsmeldungModel) {\n            return this.mutationsmeldungModel;\n        }\n        return this.model;\n    };\n    BetreuungViewController.prototype.changedAngebot = function () {\n        if (this.getBetreuungModel()) {\n            if (this.isSchulamt()) {\n                if (this.isTagesschule()) {\n                    // Nur fuer die neuen Gesuchsperiode kann die Belegung erfast werden\n                    if (this.gesuchModelManager.getGesuchsperiode().hasTagesschulenAnmeldung()\n                        && this.isTageschulenAnmeldungAktiv()) {\n                        this.getBetreuungModel().betreuungsstatus = TSBetreuungsstatus_1.TSBetreuungsstatus.SCHULAMT_ANMELDUNG_ERFASST;\n                        if (!this.getBetreuungModel().belegungTagesschule) {\n                            this.getBetreuungModel().belegungTagesschule = new TSBelegungTagesschule_1.default();\n                            this.setErsterSchultag();\n                        }\n                    }\n                    else {\n                        // \"Alte\" Tagesschule: Noch keine Modulanmeldung moeglich. Wir setzen Default-Institution\n                        this.getBetreuungModel().betreuungsstatus = TSBetreuungsstatus_1.TSBetreuungsstatus.SCHULAMT;\n                        // Fuer Tagesschule setzen wir eine Dummy-Tagesschule als Institution\n                        this.instStammId = this.CONSTANTS.INSTITUTIONSSTAMMDATENID_DUMMY_TAGESSCHULE;\n                        this.setSelectedInstitutionStammdaten();\n                    }\n                }\n            }\n            else {\n                this.getBetreuungModel().betreuungsstatus = TSBetreuungsstatus_1.TSBetreuungsstatus.AUSSTEHEND;\n                this.cleanInstitutionStammdaten();\n            }\n            this.cleanBelegungen();\n        }\n    };\n    BetreuungViewController.prototype.setErsterSchultag = function () {\n        // Default Eintrittsdatum ist erster Schultag, wenn noch in Zukunft\n        var ersterSchultag = this.gesuchModelManager.getGesuchsperiode().datumErsterSchultag;\n        if (DateUtil_1.default.today().isBefore(ersterSchultag)) {\n            this.getBetreuungModel().belegungTagesschule.eintrittsdatum = ersterSchultag;\n        }\n    };\n    BetreuungViewController.prototype.save = function (newStatus, nextStep, params) {\n        var _this = this;\n        this.isSavingData = true;\n        this.gesuchModelManager.setBetreuungToWorkWith(this.model); //setze model\n        var oldStatus = this.model.betreuungsstatus;\n        if (this.getBetreuungModel()) {\n            if (this.isSchulamt()) {\n                this.getBetreuungModel().betreuungspensumContainers = []; // fuer Tagesschule werden keine Betreuungspensum benoetigt, deswegen löschen wir sie vor dem Speichern\n                if (this.isTagesschule()) {\n                    this.filterOnlyAngemeldeteModule();\n                }\n            }\n        }\n        this.errorService.clearAll();\n        this.gesuchModelManager.saveBetreuung(this.model, newStatus, false).then(function (betreuungResponse) {\n            _this.isSavingData = false;\n            _this.form.$setPristine();\n            _this.$state.go(nextStep, params);\n        }).catch(function (exception) {\n            // starting over\n            _this.$log.error('there was an error saving the betreuung ', _this.model);\n            _this.isSavingData = false;\n            _this.model.betreuungsstatus = oldStatus;\n            _this.startEmptyListOfBetreuungspensen();\n            _this.form.$setUntouched();\n            _this.form.$setPristine();\n            _this.model.institutionStammdaten = _this.initialBetreuung.institutionStammdaten;\n            return undefined;\n        });\n    };\n    /**\n     * Entfernt alle Module die nicht als angemeldet markiert sind. Nur fuer Gesuchsperiode in denen die Tagesschuleanmeldung\n     * aktiv ist.\n     */\n    BetreuungViewController.prototype.filterOnlyAngemeldeteModule = function () {\n        if (this.gesuchModelManager.getGesuchsperiode().hasTagesschulenAnmeldung() &&\n            this.getBetreuungModel().belegungTagesschule && this.getBetreuungModel().belegungTagesschule.moduleTagesschule) {\n            // noinspection UnnecessaryLocalVariableJS\n            if (this.moduleBackup === undefined && this.isBetreuungsstatus(TSBetreuungsstatus_1.TSBetreuungsstatus.SCHULAMT_FALSCHE_INSTITUTION)) {\n                this.moduleBackup = this.getBetreuungModel().belegungTagesschule.moduleTagesschule\n                    .filter(function (modul) { return modul.angemeldet === true; });\n                this.getBetreuungModel().belegungTagesschule.moduleTagesschule = this.moduleBackup;\n            }\n            else if (this.moduleBackup !== undefined && this.isBetreuungsstatus(TSBetreuungsstatus_1.TSBetreuungsstatus.SCHULAMT_FALSCHE_INSTITUTION)) {\n                this.getBetreuungModel().belegungTagesschule.moduleTagesschule = this.moduleBackup;\n            }\n            else {\n                var angemeldeteModule = this.getBetreuungModel().belegungTagesschule.moduleTagesschule\n                    .filter(function (modul) { return modul.angemeldet === true; });\n                this.getBetreuungModel().belegungTagesschule.moduleTagesschule = angemeldeteModule;\n            }\n        }\n    };\n    BetreuungViewController.prototype.anmeldenSchulamt = function () {\n        if (this.direktAnmeldenSchulamt()) {\n            this.save(TSBetreuungsstatus_1.TSBetreuungsstatus.SCHULAMT_ANMELDUNG_AUSGELOEST, 'gesuch.betreuungen', { gesuchId: this.getGesuchId() });\n        }\n        else {\n            this.save(TSBetreuungsstatus_1.TSBetreuungsstatus.SCHULAMT_ANMELDUNG_ERFASST, 'gesuch.betreuungen', { gesuchId: this.getGesuchId() });\n        }\n    };\n    BetreuungViewController.prototype.direktAnmeldenSchulamt = function () {\n        // Eigentlich immer ausser in Bearbeitung GS\n        return !(this.isGesuchInStatus(TSAntragStatus_1.TSAntragStatus.IN_BEARBEITUNG_GS) || this.isGesuchInStatus(TSAntragStatus_1.TSAntragStatus.FREIGABEQUITTUNG));\n    };\n    BetreuungViewController.prototype.enableBetreuungsangebotsTyp = function () {\n        return this.model.isNew() && !this.gesuchModelManager.isGesuchReadonly() && !this.gesuchModelManager.isKorrekturModusJugendamt();\n    };\n    BetreuungViewController.prototype.showInstitutionenList = function () {\n        return this.isTageschulenAnmeldungAktiv() && (this.isEnabled() || this.isBetreuungsstatus(TSBetreuungsstatus_1.TSBetreuungsstatus.SCHULAMT_FALSCHE_INSTITUTION))\n            || !this.isTageschulenAnmeldungAktiv() && (this.isEnabled() && !this.isTagesschule());\n    };\n    BetreuungViewController.prototype.showInstitutionenAsText = function () {\n        return (this.isTageschulenAnmeldungAktiv() && !this.isEnabled() && !this.isBetreuungsstatus(TSBetreuungsstatus_1.TSBetreuungsstatus.SCHULAMT_FALSCHE_INSTITUTION))\n            || (!this.isTageschulenAnmeldungAktiv() && !this.isEnabled() && !this.isTagesschule());\n    };\n    BetreuungViewController.prototype.isTageschulenAnmeldungAktiv = function () {\n        return this.gesuchModelManager.getGesuchsperiode().isTageschulenAnmeldungAktiv();\n    };\n    BetreuungViewController.prototype.isFalscheInstitutionAndUserInRole = function () {\n        return this.authServiceRS.isOneOfRoles(TSRoleUtil_1.TSRoleUtil.getAdministratorJugendamtSchulamtRoles())\n            && this.isBetreuungsstatus(TSBetreuungsstatus_1.TSBetreuungsstatus.SCHULAMT_FALSCHE_INSTITUTION)\n            && this.aktuellGueltig;\n    };\n    BetreuungViewController.prototype.anmeldungSchulamtUebernehmen = function () {\n        var _this = this;\n        this.copyBGNumberLToClipboard();\n        this.dvDialog.showDialog(removeDialogTemplate, RemoveDialogController_1.RemoveDialogController, {\n            title: 'CONFIRM_UEBERNAHME_SCHULAMT',\n            deleteText: 'BESCHREIBUNG_UEBERNAHME_SCHULAMT',\n            parentController: undefined,\n            elementID: undefined\n        }).then(function () {\n            if (_this.authServiceRS.isOneOfRoles(TSRoleUtil_1.TSRoleUtil.getTraegerschaftInstitutionOnlyRoles())) {\n                _this.save(TSBetreuungsstatus_1.TSBetreuungsstatus.SCHULAMT_ANMELDUNG_UEBERNOMMEN, 'pendenzenBetreuungen', undefined);\n            }\n            else {\n                _this.save(TSBetreuungsstatus_1.TSBetreuungsstatus.SCHULAMT_ANMELDUNG_UEBERNOMMEN, 'gesuch.betreuungen', { gesuchId: _this.getGesuchId() });\n            }\n        });\n    };\n    BetreuungViewController.prototype.anmeldungSchulamtAblehnen = function () {\n        if (this.authServiceRS.isOneOfRoles(TSRoleUtil_1.TSRoleUtil.getTraegerschaftInstitutionOnlyRoles())) {\n            this.save(TSBetreuungsstatus_1.TSBetreuungsstatus.SCHULAMT_ANMELDUNG_ABGELEHNT, 'pendenzenBetreuungen', undefined);\n        }\n        else {\n            this.save(TSBetreuungsstatus_1.TSBetreuungsstatus.SCHULAMT_ANMELDUNG_ABGELEHNT, 'gesuch.betreuungen', { gesuchId: this.getGesuchId() });\n        }\n    };\n    BetreuungViewController.prototype.anmeldungSchulamtFalscheInstitution = function () {\n        if (this.authServiceRS.isOneOfRoles(TSRoleUtil_1.TSRoleUtil.getTraegerschaftInstitutionOnlyRoles())) {\n            this.save(TSBetreuungsstatus_1.TSBetreuungsstatus.SCHULAMT_FALSCHE_INSTITUTION, 'pendenzenBetreuungen', undefined);\n        }\n        else {\n            this.save(TSBetreuungsstatus_1.TSBetreuungsstatus.SCHULAMT_FALSCHE_INSTITUTION, 'gesuch.betreuungen', { gesuchId: this.getGesuchId() });\n        }\n    };\n    BetreuungViewController.prototype.copyBGNumberLToClipboard = function () {\n        var bgNumber = this.ebeguUtil.calculateBetreuungsIdFromBetreuung(this.gesuchModelManager.getGesuch().fall, this.getBetreuungModel());\n        var $temp = $('<input>');\n        $('body').append($temp);\n        $temp.val(bgNumber).select();\n        document.execCommand('copy');\n        $temp.remove();\n    };\n    BetreuungViewController.prototype.setBetreuungsangebotTypValues = function () {\n        var betreuungsangebotTypValues = [];\n        if (this.gesuchModelManager.getGesuchsperiode() && this.gesuchModelManager.getGesuchsperiode().hasTagesschulenAnmeldung()) {\n            betreuungsangebotTypValues = TSBetreuungsangebotTyp_1.getTSBetreuungsangebotTypValues();\n        }\n        else {\n            betreuungsangebotTypValues = TSBetreuungsangebotTyp_1.getTSBetreuungsangebotTypValuesNoTagesschuleanmeldungen();\n        }\n        this.betreuungsangebotValues = this.ebeguUtil.translateStringList(betreuungsangebotTypValues);\n    };\n    BetreuungViewController.prototype.cancel = function () {\n        this.reset();\n        this.form.$setPristine();\n        this.$state.go('gesuch.betreuungen', { gesuchId: this.getGesuchId() });\n    };\n    BetreuungViewController.prototype.reset = function () {\n        this.removeBetreuungFromKind(); //wenn model existiert und nicht neu ist wegnehmen, sonst resetten\n    };\n    BetreuungViewController.prototype.removeBetreuungFromKind = function () {\n        if (this.model && !this.model.timestampErstellt) {\n            //wenn die Betreeung noch nicht erstellt wurde, loeschen wir die Betreuung vom Array\n            this.gesuchModelManager.removeBetreuungFromKind();\n        }\n    };\n    BetreuungViewController.prototype.getInstitutionenSDList = function () {\n        var _this = this;\n        var result = [];\n        if (this.betreuungsangebot) {\n            this.gesuchModelManager.getActiveInstitutionenList().forEach(function (instStamm) {\n                if (instStamm.betreuungsangebotTyp === _this.betreuungsangebot.key && _this.gesuchModelManager.isDefaultTagesschuleAllowed(instStamm)) {\n                    result.push(instStamm);\n                }\n            });\n        }\n        return result;\n    };\n    BetreuungViewController.prototype.getInstitutionSD = function () {\n        if (this.getBetreuungModel()) {\n            return this.getBetreuungModel().institutionStammdaten;\n        }\n        return undefined;\n    };\n    BetreuungViewController.prototype.getBetreuungspensen = function () {\n        if (this.getBetreuungModel()) {\n            return this.getBetreuungModel().betreuungspensumContainers;\n        }\n        return undefined;\n    };\n    BetreuungViewController.prototype.getBetreuungspensum = function (index) {\n        if (this.getBetreuungspensen() && index >= 0 && index < this.getBetreuungspensen().length) {\n            return this.getBetreuungspensen()[index];\n        }\n        return undefined;\n    };\n    BetreuungViewController.prototype.createBetreuungspensum = function () {\n        if (this.getBetreuungModel() && (this.getBetreuungspensen() === undefined || this.getBetreuungspensen() === null)) {\n            this.getBetreuungModel().betreuungspensumContainers = [];\n        }\n        if (!this.getBetreuungModel()) {\n            this.errorService.addMesageAsError('Betreuungsmodel ist nicht initialisiert.');\n        }\n        this.getBetreuungspensen().push(new TSBetreuungspensumContainer_1.default(undefined, new TSBetreuungspensum_1.default(false, undefined, new TSDateRange_1.TSDateRange())));\n    };\n    BetreuungViewController.prototype.removeBetreuungspensum = function (betreuungspensumToDelete) {\n        var position = this.getBetreuungspensen().indexOf(betreuungspensumToDelete);\n        if (position > -1) {\n            this.getBetreuungspensen().splice(position, 1);\n        }\n    };\n    BetreuungViewController.prototype.setSelectedInstitutionStammdaten = function () {\n        var instStamList = this.gesuchModelManager.getActiveInstitutionenList();\n        for (var i = 0; i < instStamList.length; i++) {\n            if (instStamList[i].id === this.instStammId) {\n                this.model.institutionStammdaten = instStamList[i];\n            }\n        }\n    };\n    BetreuungViewController.prototype.platzAnfordern = function () {\n        if (this.isGesuchValid() && this.getBetreuungModel().vertrag === true) {\n            this.flagErrorVertrag = false;\n            this.save(TSBetreuungsstatus_1.TSBetreuungsstatus.WARTEN, 'gesuch.betreuungen', { gesuchId: this.getGesuchId() });\n        }\n        else if (this.getBetreuungModel().vertrag !== true) {\n            this.flagErrorVertrag = true;\n        }\n    };\n    BetreuungViewController.prototype.platzBestaetigen = function () {\n        if (this.isGesuchValid()) {\n            this.getBetreuungModel().datumBestaetigung = DateUtil_1.default.today();\n            this.save(TSBetreuungsstatus_1.TSBetreuungsstatus.BESTAETIGT, 'pendenzenBetreuungen', undefined);\n        }\n    };\n    /**\n     * Wenn ein Betreuungsangebot abgewiesen wird, muss man die neu eingegebenen Betreuungspensen zuruecksetzen, da sie nicht relevant sind.\n     * Allerdings muessen der Grund und das Datum der Ablehnung doch gespeichert werden.\n     * In diesem Fall machen wir keine Validierung weil die Daten die eingegeben werden muessen, direkt auf dem Server gecheckt werden\n     */\n    BetreuungViewController.prototype.platzAbweisen = function () {\n        //copy values modified by the Institution in initialBetreuung\n        this.initialBetreuung.erweiterteBeduerfnisse = this.getBetreuungModel().erweiterteBeduerfnisse;\n        this.initialBetreuung.grundAblehnung = this.getBetreuungModel().grundAblehnung;\n        //restore initialBetreuung\n        this.model = angular.copy(this.initialBetreuung);\n        this.model.datumAblehnung = DateUtil_1.default.today();\n        this.save(TSBetreuungsstatus_1.TSBetreuungsstatus.ABGEWIESEN, 'pendenzenBetreuungen', undefined);\n    };\n    BetreuungViewController.prototype.stornieren = function () {\n        if (this.isGesuchValid()) {\n            this.getBetreuungModel().datumBestaetigung = DateUtil_1.default.today();\n            for (var i = 0; i < this.getBetreuungspensen().length; i++) {\n                this.getBetreuungspensum(i).betreuungspensumJA.pensum = 0;\n                this.getBetreuungspensum(i).betreuungspensumJA.nichtEingetreten = true;\n            }\n            this.getBetreuungModel().erweiterteBeduerfnisse = false;\n            this.save(TSBetreuungsstatus_1.TSBetreuungsstatus.STORNIERT, 'pendenzenBetreuungen', undefined);\n        }\n    };\n    BetreuungViewController.prototype.saveSchulamt = function () {\n        if (this.isGesuchValid()) {\n            this.save(TSBetreuungsstatus_1.TSBetreuungsstatus.SCHULAMT, 'gesuch.betreuungen', { gesuchId: this.getGesuchId() });\n        }\n    };\n    /**\n     * Returns true when the user is allowed to edit the content. This happens when the status is AUSSTEHEHND\n     * or SCHULAMT and we are not yet in the KorrekturmodusJugendamt\n     * @returns {boolean}\n     */\n    BetreuungViewController.prototype.isEnabled = function () {\n        if (this.getBetreuungModel() && this.getBetreuungModel().betreuungsstatus) {\n            return !this.getBetreuungModel().hasVorgaenger()\n                && (this.isBetreuungsstatus(TSBetreuungsstatus_1.TSBetreuungsstatus.AUSSTEHEND)\n                    || this.isBetreuungsstatus(TSBetreuungsstatus_1.TSBetreuungsstatus.SCHULAMT_ANMELDUNG_ERFASST)\n                    || (this.isBetreuungsstatus(TSBetreuungsstatus_1.TSBetreuungsstatus.SCHULAMT)\n                        && this.getBetreuungModel().isNew()))\n                && !this.isFreigabequittungAusstehend();\n        }\n        return true;\n    };\n    /**\n     * Returns true when the Gesuch must be readonly\n     * @returns {boolean}\n     */\n    BetreuungViewController.prototype.isGesuchReadonly = function () {\n        if (!this.getBetreuungModel().isAngebotSchulamt()) {\n            return _super.prototype.isGesuchReadonly.call(this);\n        }\n        return !this.getBetreuungModel().isEnabled();\n    };\n    BetreuungViewController.prototype.isBetreuungsstatusWarten = function () {\n        return this.isBetreuungsstatus(TSBetreuungsstatus_1.TSBetreuungsstatus.WARTEN);\n    };\n    BetreuungViewController.prototype.isBetreuungsstatusAbgewiesen = function () {\n        return this.isBetreuungsstatus(TSBetreuungsstatus_1.TSBetreuungsstatus.ABGEWIESEN);\n    };\n    BetreuungViewController.prototype.isBetreuungsstatusBestaetigt = function () {\n        return this.isBetreuungsstatus(TSBetreuungsstatus_1.TSBetreuungsstatus.BESTAETIGT);\n    };\n    BetreuungViewController.prototype.isBetreuungsstatusNichtEingetreten = function () {\n        return this.isBetreuungsstatus(TSBetreuungsstatus_1.TSBetreuungsstatus.NICHT_EINGETRETEN);\n    };\n    BetreuungViewController.prototype.isStorniert = function () {\n        return this.isBetreuungsstatus(TSBetreuungsstatus_1.TSBetreuungsstatus.STORNIERT);\n    };\n    BetreuungViewController.prototype.isBetreuungsstatusAusstehend = function () {\n        return this.isBetreuungsstatus(TSBetreuungsstatus_1.TSBetreuungsstatus.AUSSTEHEND);\n    };\n    BetreuungViewController.prototype.isBetreuungsstatusSchulamt = function () {\n        return this.isBetreuungsstatus(TSBetreuungsstatus_1.TSBetreuungsstatus.SCHULAMT);\n    };\n    BetreuungViewController.prototype.isBetreuungsstatusStorniert = function () {\n        return this.isBetreuungsstatus(TSBetreuungsstatus_1.TSBetreuungsstatus.STORNIERT);\n    };\n    BetreuungViewController.prototype.isBetreuungsstatus = function (status) {\n        if (this.getBetreuungModel()) {\n            return this.getBetreuungModel().betreuungsstatus === status;\n        }\n        return false;\n    };\n    BetreuungViewController.prototype.isTagesschule = function () {\n        return this.isBetreuungsangebottyp(TSBetreuungsangebotTyp_1.TSBetreuungsangebotTyp.TAGESSCHULE);\n    };\n    BetreuungViewController.prototype.isFerieninsel = function () {\n        return this.isBetreuungsangebottyp(TSBetreuungsangebotTyp_1.TSBetreuungsangebotTyp.FERIENINSEL);\n    };\n    BetreuungViewController.prototype.isTageseltern = function () {\n        return this.isBetreuungsangebottyp(TSBetreuungsangebotTyp_1.TSBetreuungsangebotTyp.TAGESELTERN_KLEINKIND) ||\n            this.isBetreuungsangebottyp(TSBetreuungsangebotTyp_1.TSBetreuungsangebotTyp.TAGESELTERN_SCHULKIND);\n    };\n    BetreuungViewController.prototype.isSchulamt = function () {\n        return this.isTagesschule() || this.isFerieninsel();\n    };\n    BetreuungViewController.prototype.isBetreuungsangebottyp = function (betAngTyp) {\n        if (this.betreuungsangebot) {\n            return this.betreuungsangebot.key === TSBetreuungsangebotTyp_1.TSBetreuungsangebotTyp[betAngTyp];\n        }\n        return false;\n    };\n    /**\n     * Erweiterte Beduerfnisse wird nur beim Institutionen oder Traegerschaften eingeblendet oder wenn das Feld schon als true gesetzt ist\n     * ACHTUNG: Hier benutzen wir die Direktive dv-show-element nicht, da es unterschiedliche Bedingungen für jede Rolle gibt.\n     * @returns {boolean}\n     */\n    BetreuungViewController.prototype.showErweiterteBeduerfnisse = function () {\n        return this.authServiceRS.isOneOfRoles(TSRoleUtil_1.TSRoleUtil.getTraegerschaftInstitutionRoles())\n            || this.getBetreuungModel().erweiterteBeduerfnisse === true;\n    };\n    BetreuungViewController.prototype.showFalscheAngaben = function () {\n        return (this.isBetreuungsstatusBestaetigt() || this.isBetreuungsstatusAbgewiesen())\n            && !this.isGesuchReadonly() && !this.isFromMutation();\n    };\n    BetreuungViewController.prototype.showAngabenKorrigieren = function () {\n        return (this.isBetreuungsstatusBestaetigt() || this.isBetreuungsstatusAbgewiesen() || this.isBetreuungsstatusStorniert())\n            && !this.isGesuchReadonly() && this.isFromMutation();\n    };\n    BetreuungViewController.prototype.isFromMutation = function () {\n        if (this.getBetreuungModel()) {\n            if (this.getBetreuungModel().vorgaengerId) {\n                return true;\n            }\n        }\n        return false;\n    };\n    BetreuungViewController.prototype.showAngabeKorrigieren = function () {\n        return (this.isBetreuungsstatusBestaetigt() || this.isBetreuungsstatusAbgewiesen())\n            && !this.isGesuchReadonly() && this.isFromMutation();\n    };\n    BetreuungViewController.prototype.mutationsmeldungErstellen = function () {\n        //create dummy copy of model\n        this.mutationsmeldungModel = angular.copy(this.getBetreuungModel());\n        this.isMutationsmeldungStatus = true;\n    };\n    /**\n     * Mutationsmeldungen werden nur Betreuungen erlaubt, die verfuegt sind oder bereits irgendwann\n     * verfuegt wurden bzw. ein vorgaengerId haben. Ausserdem muss es sich um das letzte bzw. neueste Gesuch handeln\n     */\n    BetreuungViewController.prototype.isMutationsmeldungAllowed = function () {\n        return ((this.isMutation() && (this.getBetreuungModel().vorgaengerId || this.getBetreuungModel().betreuungsstatus === TSBetreuungsstatus_1.TSBetreuungsstatus.VERFUEGT))\n            || (!this.isMutation() && TSAntragStatus_1.isVerfuegtOrSTV(this.gesuchModelManager.getGesuch().status) && this.getBetreuungModel().betreuungsstatus === TSBetreuungsstatus_1.TSBetreuungsstatus.VERFUEGT))\n            && this.getBetreuungModel().betreuungsstatus !== TSBetreuungsstatus_1.TSBetreuungsstatus.WARTEN\n            && this.gesuchModelManager.getGesuch().gesuchsperiode.status === TSGesuchsperiodeStatus_1.TSGesuchsperiodeStatus.AKTIV\n            && this.isNewestGesuch\n            && this.gesuchModelManager.getGesuch().gesperrtWegenBeschwerde !== true;\n    };\n    BetreuungViewController.prototype.mutationsmeldungSenden = function () {\n        var _this = this;\n        // send mutationsmeldung (dummy copy)\n        if (this.isGesuchValid() && this.mutationsmeldungModel) {\n            this.dvDialog.showDialog(removeDialogTemplate, RemoveDialogController_1.RemoveDialogController, {\n                title: 'MUTATIONSMELDUNG_CONFIRMATION',\n                deleteText: 'MUTATIONSMELDUNG_BESCHREIBUNG',\n                parentController: undefined,\n                elementID: undefined\n            }).then(function () {\n                _this.mitteilungRS.sendbetreuungsmitteilung(_this.gesuchModelManager.getGesuch().fall, _this.mutationsmeldungModel).then(function (response) {\n                    _this.form.$setUntouched();\n                    _this.form.$setPristine();\n                    // reset values. is needed??????\n                    _this.isMutationsmeldungStatus = false;\n                    _this.mutationsmeldungModel = undefined;\n                    _this.$state.go('gesuch.betreuungen', { gesuchId: _this.getGesuchId() });\n                });\n            });\n        }\n    };\n    /**\n     * Prueft dass das Objekt existingMutationsMeldung existiert und dass es ein sentDatum hat. Das wird gebraucht,\n     * um zu vermeiden, dass ein leeres Objekt als gueltiges Objekt erkannt wird.\n     * Ausserdem muss die Meldung nicht applied sein und nicht den Status ERLEDIGT haben\n     */\n    BetreuungViewController.prototype.showExistingBetreuungsmitteilungInfoBox = function () {\n        return this.existingMutationsMeldung !== undefined && this.existingMutationsMeldung !== null\n            && this.existingMutationsMeldung.sentDatum !== undefined && this.existingMutationsMeldung.sentDatum !== null\n            && this.existingMutationsMeldung.applied !== true && !this.existingMutationsMeldung.isErledigt();\n    };\n    BetreuungViewController.prototype.getDatumLastBetreuungsmitteilung = function () {\n        if (this.showExistingBetreuungsmitteilungInfoBox()) {\n            return DateUtil_1.default.momentToLocalDateFormat(this.existingMutationsMeldung.sentDatum, 'DD.MM.YYYY');\n        }\n        return '';\n    };\n    BetreuungViewController.prototype.getTimeLastBetreuungsmitteilung = function () {\n        if (this.showExistingBetreuungsmitteilungInfoBox()) {\n            return DateUtil_1.default.momentToLocalDateTimeFormat(this.existingMutationsMeldung.sentDatum, 'HH:mm');\n        }\n        return '';\n    };\n    BetreuungViewController.prototype.openExistingBetreuungsmitteilung = function () {\n        this.$state.go('gesuch.mitteilung', {\n            fallId: this.gesuchModelManager.getGesuch().fall.id,\n            gesuchId: this.gesuchModelManager.getGesuch().id,\n            betreuungId: this.getBetreuungModel().id,\n            mitteilungId: this.existingMutationsMeldung.id\n        });\n    };\n    /**\n     * Sucht die neueste Betreuungsmitteilung fuer die aktuelle Betreuung. Da es nur fuer die Rollen\n     * INST und TRAEG relevant ist, wird es nur fuer diese Rollen geholt\n     */\n    BetreuungViewController.prototype.findExistingBetreuungsmitteilung = function () {\n        var _this = this;\n        if (!this.getBetreuungModel().isNew() && this.authServiceRS.isOneOfRoles(TSRoleUtil_1.TSRoleUtil.getTraegerschaftInstitutionOnlyRoles())) {\n            this.mitteilungRS.getNewestBetreuungsmitteilung(this.getBetreuungModel().id).then(function (response) {\n                _this.existingMutationsMeldung = response;\n            });\n        }\n    };\n    BetreuungViewController.prototype.tageschuleSaveDisabled = function () {\n        if (this.getBetreuungModel().isNew()) {\n            var gp = this.gesuchModelManager.getGesuch().gesuchsperiode;\n            return (this.isTagesschule() && gp.hasTagesschulenAnmeldung() && !gp.isTageschulenAnmeldungAktiv()\n                || this.isFerieninsel() && !this.getBetreuungModel().isEnabled());\n        }\n        return true;\n    };\n    /**\n     * Die globale navigation Buttons werden nur angezeigt, wenn es  kein Schulamtangebot ist oder wenn beim Tagesschulangebot\n     * die Periode keine Tagesschuleanmeldung definiert hat.\n     */\n    BetreuungViewController.prototype.displayGlobalNavigationButtons = function () {\n        return !this.isSchulamt() ||\n            (this.isTagesschule() && !this.gesuchModelManager.getGesuch().gesuchsperiode.hasTagesschulenAnmeldung());\n    };\n    /**\n     * Die Felder fuer die Module muessen nur angezeigt werden wenn es Tagesschule ist oder status=SCHULAMT,\n     * das letzte um die alten Betreuungen zu unterstuetzen.\n     */\n    BetreuungViewController.prototype.displayModuleTagesschule = function () {\n        return this.isTagesschule() && this.gesuchModelManager.getGesuch().gesuchsperiode.hasTagesschulenAnmeldung();\n    };\n    /**\n     * Based on the type of the Angebot it resets the belegungen.\n     */\n    BetreuungViewController.prototype.cleanBelegungen = function () {\n        if (this.betreuungsangebot.key !== TSBetreuungsangebotTyp_1.TSBetreuungsangebotTyp.FERIENINSEL) {\n            this.getBetreuungModel().belegungFerieninsel = undefined;\n        }\n        if (this.betreuungsangebot.key !== TSBetreuungsangebotTyp_1.TSBetreuungsangebotTyp.TAGESSCHULE) {\n            this.getBetreuungModel().belegungTagesschule = undefined;\n        }\n    };\n    BetreuungViewController.prototype.cleanInstitutionStammdaten = function () {\n        if (this.getBetreuungModel()) {\n            this.getBetreuungModel().institutionStammdaten = undefined;\n        }\n    };\n    BetreuungViewController.prototype.enableErweiterteBeduerfnisse = function () {\n        return (this.isBetreuungsstatusWarten() && !this.isSavingData) || this.isMutationsmeldungStatus;\n    };\n    /**\n     * Schulamt-Angebote ändern erst beim Einlesen der Freigabequittung den Zustand von SCHULAMT_ANMELDUNG_ERFASST zu\n     * SCHULAMT_ANMELDUNG_AUSGELOEST. Betreuungen in Gesuchen im Zustand FREIGABEQUITTUNG dürfen jedoch nicht editiert werden.\n     * Deshalb braucht es diese Funktion.\n     */\n    BetreuungViewController.prototype.isFreigabequittungAusstehend = function () {\n        if (this.gesuchModelManager.getGesuch() && this.gesuchModelManager.getGesuch().status) {\n            return this.gesuchModelManager.getGesuch().status === TSAntragStatus_1.TSAntragStatus.FREIGABEQUITTUNG;\n        }\n        return false;\n    };\n    BetreuungViewController.$inject = ['$state', 'GesuchModelManager', 'EbeguUtil', 'CONSTANTS', '$scope', 'BerechnungsManager', 'ErrorService',\n        'AuthServiceRS', 'WizardStepManager', '$stateParams', 'MitteilungRS', 'DvDialog', '$log', '$timeout', '$translate'];\n    return BetreuungViewController;\n}(abstractGesuchView_1.default));\nexports.BetreuungViewController = BetreuungViewController;\n",{"version":3,"file":"/home/imanol/projects/ebegu/ebegu-web/src/gesuch/component/betreuungView/betreuungView.ts","sourceRoot":"","sources":["/home/imanol/projects/ebegu/ebegu-web/src/gesuch/component/betreuungView/betreuungView.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Ki-Tax: System for the management of external childcare subsidies\n * Copyright (C) 2017 City of Bern Switzerland\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport {IComponentOptions} from 'angular';\nimport {IStateService} from 'angular-ui-router';\nimport * as moment from 'moment';\nimport AuthServiceRS from '../../../authentication/service/AuthServiceRS.rest';\nimport {DvDialog} from '../../../core/directive/dv-dialog/dv-dialog';\nimport ErrorService from '../../../core/errors/service/ErrorService';\nimport MitteilungRS from '../../../core/service/mitteilungRS.rest';\nimport {isVerfuegtOrSTV, TSAntragStatus} from '../../../models/enums/TSAntragStatus';\nimport {getTSBetreuungsangebotTypValues, getTSBetreuungsangebotTypValuesNoTagesschuleanmeldungen, TSBetreuungsangebotTyp} from '../../../models/enums/TSBetreuungsangebotTyp';\nimport {TSBetreuungsstatus} from '../../../models/enums/TSBetreuungsstatus';\nimport {TSGesuchsperiodeStatus} from '../../../models/enums/TSGesuchsperiodeStatus';\nimport {TSWizardStepName} from '../../../models/enums/TSWizardStepName';\nimport TSBelegungTagesschule from '../../../models/TSBelegungTagesschule';\nimport TSBetreuung from '../../../models/TSBetreuung';\nimport TSBetreuungsmitteilung from '../../../models/TSBetreuungsmitteilung';\nimport TSBetreuungspensum from '../../../models/TSBetreuungspensum';\nimport TSBetreuungspensumContainer from '../../../models/TSBetreuungspensumContainer';\nimport TSGesuchsperiode from '../../../models/TSGesuchsperiode';\nimport TSInstitutionStammdaten from '../../../models/TSInstitutionStammdaten';\nimport TSKindContainer from '../../../models/TSKindContainer';\nimport TSModulTagesschule from '../../../models/TSModulTagesschule';\nimport {TSDateRange} from '../../../models/types/TSDateRange';\nimport DateUtil from '../../../utils/DateUtil';\nimport EbeguUtil from '../../../utils/EbeguUtil';\nimport {TSRoleUtil} from '../../../utils/TSRoleUtil';\nimport {RemoveDialogController} from '../../dialog/RemoveDialogController';\nimport {IBetreuungStateParams} from '../../gesuch.route';\nimport BerechnungsManager from '../../service/berechnungsManager';\nimport GesuchModelManager from '../../service/gesuchModelManager';\nimport WizardStepManager from '../../service/wizardStepManager';\nimport AbstractGesuchViewController from '../abstractGesuchView';\nimport {TSAnmeldungMutationZustand} from '../../../models/enums/TSAnmeldungMutationZustand';\nimport ILogService = angular.ILogService;\nimport IScope = angular.IScope;\nimport ITimeoutService = angular.ITimeoutService;\nimport ITranslateService = angular.translate.ITranslateService;\n\ndeclare let require: any;\nlet template = require('./betreuungView.html');\nrequire('./betreuungView.less');\nlet removeDialogTemplate = require('../../dialog/removeDialogTemplate.html');\n\nexport class BetreuungViewComponentConfig implements IComponentOptions {\n    transclude = false;\n    template = template;\n    controller = BetreuungViewController;\n    controllerAs = 'vm';\n}\n\nexport class BetreuungViewController extends AbstractGesuchViewController<TSBetreuung> {\n    betreuungsangebot: any;\n    betreuungsangebotValues: Array<any>;\n    instStammId: string; //der ausgewaehlte instStammId wird hier gespeichert und dann in die entsprechende InstitutionStammdaten umgewandert\n    isSavingData: boolean; // Semaphore\n    initialBetreuung: TSBetreuung;\n    flagErrorVertrag: boolean;\n    kindModel: TSKindContainer;\n    betreuungIndex: number;\n    isMutationsmeldungStatus: boolean;\n    mutationsmeldungModel: TSBetreuung;\n    existingMutationsMeldung: TSBetreuungsmitteilung;\n    isNewestGesuch: boolean;\n    dvDialog: DvDialog;\n    $translate: ITranslateService;\n    moduleBackup: TSModulTagesschule[] = undefined;\n    aktuellGueltig: boolean = true;\n\n    static $inject = ['$state', 'GesuchModelManager', 'EbeguUtil', 'CONSTANTS', '$scope', 'BerechnungsManager', 'ErrorService',\n        'AuthServiceRS', 'WizardStepManager', '$stateParams', 'MitteilungRS', 'DvDialog', '$log', '$timeout', '$translate'];\n\n    /* @ngInject */\n    constructor(private $state: IStateService, gesuchModelManager: GesuchModelManager, private ebeguUtil: EbeguUtil, private CONSTANTS: any,\n                $scope: IScope, berechnungsManager: BerechnungsManager, private errorService: ErrorService,\n                private authServiceRS: AuthServiceRS, wizardStepManager: WizardStepManager, private $stateParams: IBetreuungStateParams,\n                private mitteilungRS: MitteilungRS, dvDialog: DvDialog, private $log: ILogService,\n                $timeout: ITimeoutService, $translate: ITranslateService) {\n        super(gesuchModelManager, berechnungsManager, wizardStepManager, $scope, TSWizardStepName.BETREUUNG, $timeout);\n        this.dvDialog = dvDialog;\n        this.$translate = $translate;\n    }\n\n    $onInit() {\n        this.mutationsmeldungModel = undefined;\n        this.isMutationsmeldungStatus = false;\n        let kindIndex: number = this.gesuchModelManager.convertKindNumberToKindIndex(parseInt(this.$stateParams.kindNumber, 10));\n        if (kindIndex >= 0) {\n            this.gesuchModelManager.setKindIndex(kindIndex);\n            if (this.$stateParams.betreuungNumber && this.$stateParams.betreuungNumber.length > 0) {\n                this.betreuungIndex = this.gesuchModelManager.convertBetreuungNumberToBetreuungIndex(parseInt(this.$stateParams.betreuungNumber));\n                this.model = angular.copy(this.gesuchModelManager.getKindToWorkWith().betreuungen[this.betreuungIndex]);\n                this.initialBetreuung = angular.copy(this.gesuchModelManager.getKindToWorkWith().betreuungen[this.betreuungIndex]);\n                this.gesuchModelManager.setBetreuungIndex(this.betreuungIndex);\n            } else {\n                //wenn betreuung-nummer nicht definiert ist heisst dass, das wir ein neues erstellen sollten\n                this.model = this.initEmptyBetreuung();\n                this.initialBetreuung = angular.copy(this.model);\n                this.betreuungIndex = this.gesuchModelManager.getKindToWorkWith().betreuungen ? this.gesuchModelManager.getKindToWorkWith().betreuungen.length : 0;\n                this.gesuchModelManager.setBetreuungIndex(this.betreuungIndex);\n            }\n\n            this.setBetreuungsangebotTypValues();\n            // Falls ein Typ gesetzt ist, handelt es sich um eine direkt-Anmeldung\n            if (this.$stateParams.betreuungsangebotTyp) {\n                for (let obj of this.betreuungsangebotValues) {\n                    if (obj.key === this.$stateParams.betreuungsangebotTyp) {\n                        this.betreuungsangebot = obj;\n                        this.changedAngebot();\n                    }\n                }\n            } else {\n                this.betreuungsangebot = undefined;\n            }\n            this.initViewModel();\n\n            // just to read!\n            this.kindModel = this.gesuchModelManager.getKindToWorkWith();\n        } else {\n            this.$log.error('There is no kind available with kind-number:' + this.$stateParams.kindNumber);\n        }\n        this.isNewestGesuch = this.gesuchModelManager.isNeuestesGesuch();\n\n        this.findExistingBetreuungsmitteilung();\n\n        if (this.getBetreuungModel().anmeldungMutationZustand) {\n            if (this.getBetreuungModel().anmeldungMutationZustand === TSAnmeldungMutationZustand.MUTIERT) {\n                this.aktuellGueltig = false;\n            } else if (this.getBetreuungModel().anmeldungMutationZustand === TSAnmeldungMutationZustand.NOCH_NICHT_FREIGEGEBEN) {\n                this.aktuellGueltig = false;\n            }\n        }\n    }\n\n    /**\n     * Creates a Betreuung for the kind given by the kindNumber attribute of the class.\n     * Thus the kindnumber must be set before this method is called.\n     */\n    public initEmptyBetreuung(): TSBetreuung {\n        let tsBetreuung: TSBetreuung = new TSBetreuung();\n        tsBetreuung.betreuungsstatus = TSBetreuungsstatus.AUSSTEHEND;\n        return tsBetreuung;\n    }\n\n    private initViewModel() {\n        this.isSavingData = false;\n        this.flagErrorVertrag = false;\n        if (this.getInstitutionSD()) {\n            this.instStammId = this.getInstitutionSD().id;\n            this.betreuungsangebot = this.getBetreuungsangebotFromInstitutionList();\n        }\n        this.startEmptyListOfBetreuungspensen();\n        //institutionen lazy laden\n        if (!this.gesuchModelManager.getActiveInstitutionenList() || this.gesuchModelManager.getActiveInstitutionenList().length <= 0) {\n            this.gesuchModelManager.updateActiveInstitutionenList();\n        }\n    }\n\n    /**\n     * Fuer Institutionen und Traegerschaften wird es geprueft ob es schon ein Betreuungspensum existiert,\n     * wenn nicht wir die Liste dann mit einem leeren initiallisiert\n     */\n    private startEmptyListOfBetreuungspensen() {\n        if ((!this.getBetreuungspensen() || this.getBetreuungspensen().length === 0)\n            && (this.authServiceRS.isOneOfRoles(TSRoleUtil.getTraegerschaftInstitutionOnlyRoles()))) {\n            // nur fuer Institutionen wird ein Betreuungspensum by default erstellt\n            this.createBetreuungspensum();\n        }\n    }\n\n    public getGesuchsperiodeBegin(): moment.Moment {\n        return this.gesuchModelManager.getGesuchsperiodeBegin();\n    }\n\n    private getBetreuungsangebotFromInstitutionList() {\n        return $.grep(this.betreuungsangebotValues, (value: any) => {\n            return value.key === this.getInstitutionSD().betreuungsangebotTyp;\n        })[0];\n    }\n\n    public getKindModel(): TSKindContainer {\n        return this.kindModel;\n    }\n\n    public getBetreuungModel(): TSBetreuung {\n        if (this.isMutationsmeldungStatus && this.mutationsmeldungModel) {\n            return this.mutationsmeldungModel;\n        }\n        return this.model;\n    }\n\n    public changedAngebot() {\n        if (this.getBetreuungModel()) {\n            if (this.isSchulamt()) {\n                if (this.isTagesschule()) {\n                    // Nur fuer die neuen Gesuchsperiode kann die Belegung erfast werden\n                    if (this.gesuchModelManager.getGesuchsperiode().hasTagesschulenAnmeldung()\n                        && this.isTageschulenAnmeldungAktiv()) {\n                        this.getBetreuungModel().betreuungsstatus = TSBetreuungsstatus.SCHULAMT_ANMELDUNG_ERFASST;\n                        if (!this.getBetreuungModel().belegungTagesschule) {\n                            this.getBetreuungModel().belegungTagesschule = new TSBelegungTagesschule();\n                            this.setErsterSchultag();\n                        }\n                    } else {\n                        // \"Alte\" Tagesschule: Noch keine Modulanmeldung moeglich. Wir setzen Default-Institution\n                        this.getBetreuungModel().betreuungsstatus = TSBetreuungsstatus.SCHULAMT;\n                        // Fuer Tagesschule setzen wir eine Dummy-Tagesschule als Institution\n                        this.instStammId = this.CONSTANTS.INSTITUTIONSSTAMMDATENID_DUMMY_TAGESSCHULE;\n                        this.setSelectedInstitutionStammdaten();\n                    }\n                }\n            } else {\n                this.getBetreuungModel().betreuungsstatus = TSBetreuungsstatus.AUSSTEHEND;\n                this.cleanInstitutionStammdaten();\n            }\n            this.cleanBelegungen();\n        }\n    }\n\n    public setErsterSchultag(): void {\n        // Default Eintrittsdatum ist erster Schultag, wenn noch in Zukunft\n        let ersterSchultag: moment.Moment = this.gesuchModelManager.getGesuchsperiode().datumErsterSchultag;\n        if (DateUtil.today().isBefore(ersterSchultag)) {\n            this.getBetreuungModel().belegungTagesschule.eintrittsdatum = ersterSchultag;\n        }\n    }\n\n    private save(newStatus: TSBetreuungsstatus, nextStep: string, params: any): void {\n        this.isSavingData = true;\n        this.gesuchModelManager.setBetreuungToWorkWith(this.model); //setze model\n        let oldStatus: TSBetreuungsstatus = this.model.betreuungsstatus;\n        if (this.getBetreuungModel()) {\n            if (this.isSchulamt()) {\n                this.getBetreuungModel().betreuungspensumContainers = []; // fuer Tagesschule werden keine Betreuungspensum benoetigt, deswegen löschen wir sie vor dem Speichern\n                if (this.isTagesschule()) {\n                    this.filterOnlyAngemeldeteModule();\n                }\n            }\n        }\n        this.errorService.clearAll();\n        this.gesuchModelManager.saveBetreuung(this.model, newStatus, false).then((betreuungResponse: any) => {\n            this.isSavingData = false;\n            this.form.$setPristine();\n            this.$state.go(nextStep, params);\n        }).catch((exception) => {\n            // starting over\n            this.$log.error('there was an error saving the betreuung ', this.model);\n            this.isSavingData = false;\n            this.model.betreuungsstatus = oldStatus;\n            this.startEmptyListOfBetreuungspensen();\n            this.form.$setUntouched();\n            this.form.$setPristine();\n            this.model.institutionStammdaten = this.initialBetreuung.institutionStammdaten;\n            return undefined;\n        });\n    }\n\n    /**\n     * Entfernt alle Module die nicht als angemeldet markiert sind. Nur fuer Gesuchsperiode in denen die Tagesschuleanmeldung\n     * aktiv ist.\n     */\n    public filterOnlyAngemeldeteModule(): void {\n        if (this.gesuchModelManager.getGesuchsperiode().hasTagesschulenAnmeldung() &&\n            this.getBetreuungModel().belegungTagesschule && this.getBetreuungModel().belegungTagesschule.moduleTagesschule) {\n            // noinspection UnnecessaryLocalVariableJS\n            if (this.moduleBackup === undefined && this.isBetreuungsstatus(TSBetreuungsstatus.SCHULAMT_FALSCHE_INSTITUTION)) {\n                this.moduleBackup = this.getBetreuungModel().belegungTagesschule.moduleTagesschule\n                    .filter(modul => modul.angemeldet === true);\n                this.getBetreuungModel().belegungTagesschule.moduleTagesschule = this.moduleBackup;\n            } else if (this.moduleBackup !== undefined && this.isBetreuungsstatus(TSBetreuungsstatus.SCHULAMT_FALSCHE_INSTITUTION)) {\n                this.getBetreuungModel().belegungTagesschule.moduleTagesschule = this.moduleBackup;\n            } else {\n                let angemeldeteModule: TSModulTagesschule[] = this.getBetreuungModel().belegungTagesschule.moduleTagesschule\n                    .filter(modul => modul.angemeldet === true);\n                this.getBetreuungModel().belegungTagesschule.moduleTagesschule = angemeldeteModule;\n            }\n        }\n    }\n\n    public anmeldenSchulamt(): void {\n        if (this.direktAnmeldenSchulamt()) {\n            this.save(TSBetreuungsstatus.SCHULAMT_ANMELDUNG_AUSGELOEST, 'gesuch.betreuungen', {gesuchId: this.getGesuchId()});\n        } else {\n            this.save(TSBetreuungsstatus.SCHULAMT_ANMELDUNG_ERFASST, 'gesuch.betreuungen', {gesuchId: this.getGesuchId()});\n        }\n    }\n\n    public direktAnmeldenSchulamt(): boolean {\n        // Eigentlich immer ausser in Bearbeitung GS\n        return !(this.isGesuchInStatus(TSAntragStatus.IN_BEARBEITUNG_GS) || this.isGesuchInStatus(TSAntragStatus.FREIGABEQUITTUNG));\n    }\n\n    public enableBetreuungsangebotsTyp(): boolean {\n        return this.model.isNew() && !this.gesuchModelManager.isGesuchReadonly() && !this.gesuchModelManager.isKorrekturModusJugendamt();\n    }\n\n    public showInstitutionenList(): boolean {\n        return this.isTageschulenAnmeldungAktiv() && (this.isEnabled() || this.isBetreuungsstatus(TSBetreuungsstatus.SCHULAMT_FALSCHE_INSTITUTION))\n            || !this.isTageschulenAnmeldungAktiv() && (this.isEnabled() && !this.isTagesschule());\n    }\n\n    public showInstitutionenAsText(): boolean {\n        return (this.isTageschulenAnmeldungAktiv() && !this.isEnabled() && !this.isBetreuungsstatus(TSBetreuungsstatus.SCHULAMT_FALSCHE_INSTITUTION))\n            || (!this.isTageschulenAnmeldungAktiv() && !this.isEnabled() && !this.isTagesschule());\n    }\n\n    public isTageschulenAnmeldungAktiv() {\n        return this.gesuchModelManager.getGesuchsperiode().isTageschulenAnmeldungAktiv();\n    }\n\n    public isFalscheInstitutionAndUserInRole(): boolean {\n        return this.authServiceRS.isOneOfRoles(TSRoleUtil.getAdministratorJugendamtSchulamtRoles())\n            && this.isBetreuungsstatus(TSBetreuungsstatus.SCHULAMT_FALSCHE_INSTITUTION)\n            && this.aktuellGueltig;\n    }\n\n    public anmeldungSchulamtUebernehmen(): void {\n        this.copyBGNumberLToClipboard();\n        this.dvDialog.showDialog(removeDialogTemplate, RemoveDialogController, {\n            title: 'CONFIRM_UEBERNAHME_SCHULAMT',\n            deleteText: 'BESCHREIBUNG_UEBERNAHME_SCHULAMT',\n            parentController: undefined,\n            elementID: undefined\n        }).then(() => {\n            if (this.authServiceRS.isOneOfRoles(TSRoleUtil.getTraegerschaftInstitutionOnlyRoles())) {\n                this.save(TSBetreuungsstatus.SCHULAMT_ANMELDUNG_UEBERNOMMEN, 'pendenzenBetreuungen', undefined);\n            } else {\n                this.save(TSBetreuungsstatus.SCHULAMT_ANMELDUNG_UEBERNOMMEN, 'gesuch.betreuungen', {gesuchId: this.getGesuchId()});\n            }\n        });\n    }\n\n    public anmeldungSchulamtAblehnen(): void {\n        if (this.authServiceRS.isOneOfRoles(TSRoleUtil.getTraegerschaftInstitutionOnlyRoles())) {\n            this.save(TSBetreuungsstatus.SCHULAMT_ANMELDUNG_ABGELEHNT, 'pendenzenBetreuungen', undefined);\n        } else {\n            this.save(TSBetreuungsstatus.SCHULAMT_ANMELDUNG_ABGELEHNT, 'gesuch.betreuungen', {gesuchId: this.getGesuchId()});\n        }\n    }\n\n    public anmeldungSchulamtFalscheInstitution(): void {\n        if (this.authServiceRS.isOneOfRoles(TSRoleUtil.getTraegerschaftInstitutionOnlyRoles())) {\n            this.save(TSBetreuungsstatus.SCHULAMT_FALSCHE_INSTITUTION, 'pendenzenBetreuungen', undefined);\n        } else {\n            this.save(TSBetreuungsstatus.SCHULAMT_FALSCHE_INSTITUTION, 'gesuch.betreuungen', {gesuchId: this.getGesuchId()});\n        }\n    }\n\n    private copyBGNumberLToClipboard(): void {\n        let bgNumber: string = this.ebeguUtil.calculateBetreuungsIdFromBetreuung(this.gesuchModelManager.getGesuch().fall, this.getBetreuungModel());\n        let $temp = $('<input>');\n        $('body').append($temp);\n        $temp.val(bgNumber).select();\n        document.execCommand('copy');\n        $temp.remove();\n    }\n\n    private setBetreuungsangebotTypValues(): void {\n        let betreuungsangebotTypValues = [];\n        if (this.gesuchModelManager.getGesuchsperiode() && this.gesuchModelManager.getGesuchsperiode().hasTagesschulenAnmeldung()) {\n            betreuungsangebotTypValues = getTSBetreuungsangebotTypValues();\n        } else {\n            betreuungsangebotTypValues = getTSBetreuungsangebotTypValuesNoTagesschuleanmeldungen();\n        }\n        this.betreuungsangebotValues = this.ebeguUtil.translateStringList(betreuungsangebotTypValues);\n    }\n\n    public cancel() {\n        this.reset();\n        this.form.$setPristine();\n        this.$state.go('gesuch.betreuungen', {gesuchId: this.getGesuchId()});\n    }\n\n    reset() {\n        this.removeBetreuungFromKind(); //wenn model existiert und nicht neu ist wegnehmen, sonst resetten\n    }\n\n    private removeBetreuungFromKind(): void {\n        if (this.model && !this.model.timestampErstellt) {\n            //wenn die Betreeung noch nicht erstellt wurde, loeschen wir die Betreuung vom Array\n            this.gesuchModelManager.removeBetreuungFromKind();\n        }\n    }\n\n    public getInstitutionenSDList(): Array<TSInstitutionStammdaten> {\n        let result: Array<TSInstitutionStammdaten> = [];\n        if (this.betreuungsangebot) {\n            this.gesuchModelManager.getActiveInstitutionenList().forEach((instStamm: TSInstitutionStammdaten) => {\n                if (instStamm.betreuungsangebotTyp === this.betreuungsangebot.key && this.gesuchModelManager.isDefaultTagesschuleAllowed(instStamm)) {\n                    result.push(instStamm);\n                }\n            });\n        }\n        return result;\n    }\n\n    public getInstitutionSD(): TSInstitutionStammdaten {\n        if (this.getBetreuungModel()) {\n            return this.getBetreuungModel().institutionStammdaten;\n        }\n        return undefined;\n    }\n\n    public getBetreuungspensen(): Array<TSBetreuungspensumContainer> {\n        if (this.getBetreuungModel()) {\n            return this.getBetreuungModel().betreuungspensumContainers;\n        }\n        return undefined;\n    }\n\n    public getBetreuungspensum(index: number): TSBetreuungspensumContainer {\n        if (this.getBetreuungspensen() && index >= 0 && index < this.getBetreuungspensen().length) {\n            return this.getBetreuungspensen()[index];\n        }\n        return undefined;\n    }\n\n    public createBetreuungspensum(): void {\n        if (this.getBetreuungModel() && (this.getBetreuungspensen() === undefined || this.getBetreuungspensen() === null)) {\n            this.getBetreuungModel().betreuungspensumContainers = [];\n        }\n        if (!this.getBetreuungModel()) {\n            this.errorService.addMesageAsError('Betreuungsmodel ist nicht initialisiert.');\n        }\n        this.getBetreuungspensen().push(new TSBetreuungspensumContainer(undefined, new TSBetreuungspensum(false, undefined, new TSDateRange())));\n    }\n\n    public removeBetreuungspensum(betreuungspensumToDelete: TSBetreuungspensumContainer): void {\n        let position: number = this.getBetreuungspensen().indexOf(betreuungspensumToDelete);\n        if (position > -1) {\n            this.getBetreuungspensen().splice(position, 1);\n        }\n    }\n\n    public setSelectedInstitutionStammdaten(): void {\n        let instStamList = this.gesuchModelManager.getActiveInstitutionenList();\n        for (let i: number = 0; i < instStamList.length; i++) {\n            if (instStamList[i].id === this.instStammId) {\n                this.model.institutionStammdaten = instStamList[i];\n            }\n        }\n    }\n\n    public platzAnfordern(): void {\n        if (this.isGesuchValid() && this.getBetreuungModel().vertrag === true) {\n            this.flagErrorVertrag = false;\n            this.save(TSBetreuungsstatus.WARTEN, 'gesuch.betreuungen', {gesuchId: this.getGesuchId()});\n        } else if (this.getBetreuungModel().vertrag !== true) {\n            this.flagErrorVertrag = true;\n        }\n    }\n\n    public platzBestaetigen(): void {\n        if (this.isGesuchValid()) {\n            this.getBetreuungModel().datumBestaetigung = DateUtil.today();\n            this.save(TSBetreuungsstatus.BESTAETIGT, 'pendenzenBetreuungen', undefined);\n        }\n    }\n\n    /**\n     * Wenn ein Betreuungsangebot abgewiesen wird, muss man die neu eingegebenen Betreuungspensen zuruecksetzen, da sie nicht relevant sind.\n     * Allerdings muessen der Grund und das Datum der Ablehnung doch gespeichert werden.\n     * In diesem Fall machen wir keine Validierung weil die Daten die eingegeben werden muessen, direkt auf dem Server gecheckt werden\n     */\n    public platzAbweisen(): void {\n        //copy values modified by the Institution in initialBetreuung\n        this.initialBetreuung.erweiterteBeduerfnisse = this.getBetreuungModel().erweiterteBeduerfnisse;\n        this.initialBetreuung.grundAblehnung = this.getBetreuungModel().grundAblehnung;\n        //restore initialBetreuung\n        this.model = angular.copy(this.initialBetreuung);\n        this.model.datumAblehnung = DateUtil.today();\n        this.save(TSBetreuungsstatus.ABGEWIESEN, 'pendenzenBetreuungen', undefined);\n    }\n\n    public stornieren(): void {\n        if (this.isGesuchValid()) {\n            this.getBetreuungModel().datumBestaetigung = DateUtil.today();\n\n            for (let i: number = 0; i < this.getBetreuungspensen().length; i++) {\n                this.getBetreuungspensum(i).betreuungspensumJA.pensum = 0;\n                this.getBetreuungspensum(i).betreuungspensumJA.nichtEingetreten = true;\n            }\n            this.getBetreuungModel().erweiterteBeduerfnisse = false;\n\n            this.save(TSBetreuungsstatus.STORNIERT, 'pendenzenBetreuungen', undefined);\n        }\n    }\n\n    public saveSchulamt(): void {\n        if (this.isGesuchValid()) {\n            this.save(TSBetreuungsstatus.SCHULAMT, 'gesuch.betreuungen', {gesuchId: this.getGesuchId()});\n        }\n    }\n\n    /**\n     * Returns true when the user is allowed to edit the content. This happens when the status is AUSSTEHEHND\n     * or SCHULAMT and we are not yet in the KorrekturmodusJugendamt\n     * @returns {boolean}\n     */\n    public isEnabled(): boolean {\n        if (this.getBetreuungModel() && this.getBetreuungModel().betreuungsstatus) {\n            return !this.getBetreuungModel().hasVorgaenger()\n                && (this.isBetreuungsstatus(TSBetreuungsstatus.AUSSTEHEND)\n                    || this.isBetreuungsstatus(TSBetreuungsstatus.SCHULAMT_ANMELDUNG_ERFASST)\n                    || (this.isBetreuungsstatus(TSBetreuungsstatus.SCHULAMT)\n                        && this.getBetreuungModel().isNew()))\n                && !this.isFreigabequittungAusstehend();\n        }\n        return true;\n    }\n\n    /**\n     * Returns true when the Gesuch must be readonly\n     * @returns {boolean}\n     */\n    public isGesuchReadonly(): boolean {\n        if (!this.getBetreuungModel().isAngebotSchulamt()) {\n            return super.isGesuchReadonly();\n        }\n        return !this.getBetreuungModel().isEnabled();\n    }\n\n    public isBetreuungsstatusWarten(): boolean {\n        return this.isBetreuungsstatus(TSBetreuungsstatus.WARTEN);\n    }\n\n    public isBetreuungsstatusAbgewiesen(): boolean {\n        return this.isBetreuungsstatus(TSBetreuungsstatus.ABGEWIESEN);\n    }\n\n    public isBetreuungsstatusBestaetigt(): boolean {\n        return this.isBetreuungsstatus(TSBetreuungsstatus.BESTAETIGT);\n    }\n\n    public isBetreuungsstatusNichtEingetreten(): boolean {\n        return this.isBetreuungsstatus(TSBetreuungsstatus.NICHT_EINGETRETEN);\n    }\n\n    public isStorniert(): boolean {\n        return this.isBetreuungsstatus(TSBetreuungsstatus.STORNIERT);\n    }\n\n    public isBetreuungsstatusAusstehend(): boolean {\n        return this.isBetreuungsstatus(TSBetreuungsstatus.AUSSTEHEND);\n    }\n\n    public isBetreuungsstatusSchulamt(): boolean {\n        return this.isBetreuungsstatus(TSBetreuungsstatus.SCHULAMT);\n    }\n\n    public isBetreuungsstatusStorniert(): boolean {\n        return this.isBetreuungsstatus(TSBetreuungsstatus.STORNIERT);\n    }\n\n    public isBetreuungsstatus(status: TSBetreuungsstatus): boolean {\n        if (this.getBetreuungModel()) {\n            return this.getBetreuungModel().betreuungsstatus === status;\n        }\n        return false;\n    }\n\n    public isTagesschule(): boolean {\n        return this.isBetreuungsangebottyp(TSBetreuungsangebotTyp.TAGESSCHULE);\n    }\n\n    public isFerieninsel(): boolean {\n        return this.isBetreuungsangebottyp(TSBetreuungsangebotTyp.FERIENINSEL);\n    }\n\n    public isTageseltern(): boolean {\n        return this.isBetreuungsangebottyp(TSBetreuungsangebotTyp.TAGESELTERN_KLEINKIND) ||\n            this.isBetreuungsangebottyp(TSBetreuungsangebotTyp.TAGESELTERN_SCHULKIND);\n    }\n\n    public isSchulamt(): boolean {\n        return this.isTagesschule() || this.isFerieninsel();\n    }\n\n    private isBetreuungsangebottyp(betAngTyp: TSBetreuungsangebotTyp): boolean {\n        if (this.betreuungsangebot) {\n            return this.betreuungsangebot.key === TSBetreuungsangebotTyp[betAngTyp];\n        }\n        return false;\n    }\n\n    /**\n     * Erweiterte Beduerfnisse wird nur beim Institutionen oder Traegerschaften eingeblendet oder wenn das Feld schon als true gesetzt ist\n     * ACHTUNG: Hier benutzen wir die Direktive dv-show-element nicht, da es unterschiedliche Bedingungen für jede Rolle gibt.\n     * @returns {boolean}\n     */\n    public showErweiterteBeduerfnisse(): boolean {\n        return this.authServiceRS.isOneOfRoles(TSRoleUtil.getTraegerschaftInstitutionRoles())\n            || this.getBetreuungModel().erweiterteBeduerfnisse === true;\n    }\n\n    public showFalscheAngaben(): boolean {\n        return (this.isBetreuungsstatusBestaetigt() || this.isBetreuungsstatusAbgewiesen())\n            && !this.isGesuchReadonly() && !this.isFromMutation();\n    }\n\n    public showAngabenKorrigieren(): boolean {\n        return (this.isBetreuungsstatusBestaetigt() || this.isBetreuungsstatusAbgewiesen() || this.isBetreuungsstatusStorniert())\n            && !this.isGesuchReadonly() && this.isFromMutation();\n    }\n\n    public isFromMutation(): boolean {\n        if (this.getBetreuungModel()) {\n            if (this.getBetreuungModel().vorgaengerId) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    public showAngabeKorrigieren(): boolean {\n        return (this.isBetreuungsstatusBestaetigt() || this.isBetreuungsstatusAbgewiesen())\n            && !this.isGesuchReadonly() && this.isFromMutation();\n    }\n\n    public mutationsmeldungErstellen(): void {\n        //create dummy copy of model\n        this.mutationsmeldungModel = angular.copy(this.getBetreuungModel());\n        this.isMutationsmeldungStatus = true;\n    }\n\n    /**\n     * Mutationsmeldungen werden nur Betreuungen erlaubt, die verfuegt sind oder bereits irgendwann\n     * verfuegt wurden bzw. ein vorgaengerId haben. Ausserdem muss es sich um das letzte bzw. neueste Gesuch handeln\n     */\n    public isMutationsmeldungAllowed(): boolean {\n        return ((this.isMutation() && (this.getBetreuungModel().vorgaengerId || this.getBetreuungModel().betreuungsstatus === TSBetreuungsstatus.VERFUEGT))\n            || (!this.isMutation() && isVerfuegtOrSTV(this.gesuchModelManager.getGesuch().status) && this.getBetreuungModel().betreuungsstatus === TSBetreuungsstatus.VERFUEGT))\n            && this.getBetreuungModel().betreuungsstatus !== TSBetreuungsstatus.WARTEN\n            && this.gesuchModelManager.getGesuch().gesuchsperiode.status === TSGesuchsperiodeStatus.AKTIV\n            && this.isNewestGesuch\n            && this.gesuchModelManager.getGesuch().gesperrtWegenBeschwerde !== true;\n    }\n\n    public mutationsmeldungSenden(): void {\n        // send mutationsmeldung (dummy copy)\n        if (this.isGesuchValid() && this.mutationsmeldungModel) {\n            this.dvDialog.showDialog(removeDialogTemplate, RemoveDialogController, {\n                title: 'MUTATIONSMELDUNG_CONFIRMATION',\n                deleteText: 'MUTATIONSMELDUNG_BESCHREIBUNG',\n                parentController: undefined,\n                elementID: undefined\n            }).then(() => {   //User confirmed removal\n                this.mitteilungRS.sendbetreuungsmitteilung(this.gesuchModelManager.getGesuch().fall,\n                    this.mutationsmeldungModel).then((response) => {\n\n                    this.form.$setUntouched();\n                    this.form.$setPristine();\n                    // reset values. is needed??????\n                    this.isMutationsmeldungStatus = false;\n                    this.mutationsmeldungModel = undefined;\n                    this.$state.go('gesuch.betreuungen', {gesuchId: this.getGesuchId()});\n                });\n            });\n        }\n    }\n\n    /**\n     * Prueft dass das Objekt existingMutationsMeldung existiert und dass es ein sentDatum hat. Das wird gebraucht,\n     * um zu vermeiden, dass ein leeres Objekt als gueltiges Objekt erkannt wird.\n     * Ausserdem muss die Meldung nicht applied sein und nicht den Status ERLEDIGT haben\n     */\n    public showExistingBetreuungsmitteilungInfoBox(): boolean {\n        return this.existingMutationsMeldung !== undefined && this.existingMutationsMeldung !== null\n            && this.existingMutationsMeldung.sentDatum !== undefined && this.existingMutationsMeldung.sentDatum !== null\n            && this.existingMutationsMeldung.applied !== true && !this.existingMutationsMeldung.isErledigt();\n    }\n\n    public getDatumLastBetreuungsmitteilung(): string {\n        if (this.showExistingBetreuungsmitteilungInfoBox()) {\n            return DateUtil.momentToLocalDateFormat(this.existingMutationsMeldung.sentDatum, 'DD.MM.YYYY');\n        }\n        return '';\n    }\n\n    public getTimeLastBetreuungsmitteilung(): string {\n        if (this.showExistingBetreuungsmitteilungInfoBox()) {\n            return DateUtil.momentToLocalDateTimeFormat(this.existingMutationsMeldung.sentDatum, 'HH:mm');\n        }\n        return '';\n    }\n\n    public openExistingBetreuungsmitteilung(): void {\n        this.$state.go('gesuch.mitteilung', {\n            fallId: this.gesuchModelManager.getGesuch().fall.id,\n            gesuchId: this.gesuchModelManager.getGesuch().id,\n            betreuungId: this.getBetreuungModel().id,\n            mitteilungId: this.existingMutationsMeldung.id\n        });\n    }\n\n    /**\n     * Sucht die neueste Betreuungsmitteilung fuer die aktuelle Betreuung. Da es nur fuer die Rollen\n     * INST und TRAEG relevant ist, wird es nur fuer diese Rollen geholt\n     */\n    private findExistingBetreuungsmitteilung() {\n        if (!this.getBetreuungModel().isNew() && this.authServiceRS.isOneOfRoles(TSRoleUtil.getTraegerschaftInstitutionOnlyRoles())) {\n            this.mitteilungRS.getNewestBetreuungsmitteilung(this.getBetreuungModel().id).then((response: TSBetreuungsmitteilung) => {\n                this.existingMutationsMeldung = response;\n            });\n        }\n    }\n\n    public tageschuleSaveDisabled(): boolean {\n        if (this.getBetreuungModel().isNew()) {\n            let gp: TSGesuchsperiode = this.gesuchModelManager.getGesuch().gesuchsperiode;\n            return (this.isTagesschule() && gp.hasTagesschulenAnmeldung() && !gp.isTageschulenAnmeldungAktiv()\n                || this.isFerieninsel() && !this.getBetreuungModel().isEnabled());\n        }\n        return true;\n    }\n\n    /**\n     * Die globale navigation Buttons werden nur angezeigt, wenn es  kein Schulamtangebot ist oder wenn beim Tagesschulangebot\n     * die Periode keine Tagesschuleanmeldung definiert hat.\n     */\n    public displayGlobalNavigationButtons(): boolean {\n        return !this.isSchulamt() ||\n            (this.isTagesschule() && !this.gesuchModelManager.getGesuch().gesuchsperiode.hasTagesschulenAnmeldung());\n    }\n\n    /**\n     * Die Felder fuer die Module muessen nur angezeigt werden wenn es Tagesschule ist oder status=SCHULAMT,\n     * das letzte um die alten Betreuungen zu unterstuetzen.\n     */\n    public displayModuleTagesschule(): boolean {\n        return this.isTagesschule() && this.gesuchModelManager.getGesuch().gesuchsperiode.hasTagesschulenAnmeldung();\n    }\n\n    /**\n     * Based on the type of the Angebot it resets the belegungen.\n     */\n    private cleanBelegungen(): void {\n        if (this.betreuungsangebot.key !== TSBetreuungsangebotTyp.FERIENINSEL) {\n            this.getBetreuungModel().belegungFerieninsel = undefined;\n        }\n        if (this.betreuungsangebot.key !== TSBetreuungsangebotTyp.TAGESSCHULE) {\n            this.getBetreuungModel().belegungTagesschule = undefined;\n        }\n    }\n\n    private cleanInstitutionStammdaten(): void {\n        if (this.getBetreuungModel()) {\n            this.getBetreuungModel().institutionStammdaten = undefined;\n        }\n    }\n\n    public enableErweiterteBeduerfnisse(): boolean {\n        return (this.isBetreuungsstatusWarten() && !this.isSavingData) || this.isMutationsmeldungStatus;\n    }\n\n    /**\n     * Schulamt-Angebote ändern erst beim Einlesen der Freigabequittung den Zustand von SCHULAMT_ANMELDUNG_ERFASST zu\n     * SCHULAMT_ANMELDUNG_AUSGELOEST. Betreuungen in Gesuchen im Zustand FREIGABEQUITTUNG dürfen jedoch nicht editiert werden.\n     * Deshalb braucht es diese Funktion.\n     */\n    public isFreigabequittungAusstehend(): boolean {\n        if (this.gesuchModelManager.getGesuch() && this.gesuchModelManager.getGesuch().status) {\n            return this.gesuchModelManager.getGesuch().status === TSAntragStatus.FREIGABEQUITTUNG;\n        }\n        return false;\n    }\n}\n"]}]}