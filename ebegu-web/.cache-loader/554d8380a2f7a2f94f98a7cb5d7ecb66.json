{"remainingRequest":"/home/imanol/projects/ebegu/ebegu-web/node_modules/thread-loader/dist/cjs.js??ref--0-1!/home/imanol/projects/ebegu/ebegu-web/node_modules/ts-loader/index.js??ref--0-2!/home/imanol/projects/ebegu/ebegu-web/src/core/errors/directive/dvb-error-messages/dvb-error-messages-panel.ts","cacheIdentifier":"cache-loader:1.1.0 test","dependencies":[{"path":"/home/imanol/projects/ebegu/ebegu-web/src/core/errors/directive/dvb-error-messages/dvb-error-messages-panel.ts","mtime":1512484412007},{"path":"/home/imanol/projects/ebegu/ebegu-web/node_modules/cache-loader/dist/cjs.js","mtime":1507514019000},{"path":"/home/imanol/projects/ebegu/ebegu-web/node_modules/thread-loader/dist/cjs.js","mtime":1507523420000},{"path":"/home/imanol/projects/ebegu/ebegu-web/node_modules/ts-loader/index.js","mtime":1508488471000}],"contextDependencies":[],"result":["\"use strict\";\n/*\n * Ki-Tax: System for the management of external childcare subsidies\n * Copyright (C) 2017 City of Bern Switzerland\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar TSErrorEvent_1 = require(\"../../../../models/enums/TSErrorEvent\");\nvar TSErrorLevel_1 = require(\"../../../../models/enums/TSErrorLevel\");\nvar TSRoleUtil_1 = require(\"../../../../utils/TSRoleUtil\");\nvar TSErrorAction_1 = require(\"../../../../models/enums/TSErrorAction\");\nvar RemoveDialogController_1 = require(\"../../../../gesuch/dialog/RemoveDialogController\");\nvar templ = require('./dvb-error-messages-panel.html');\nvar style = require('./dvb-error-messages-panel.less');\nvar removeDialogTemplate = require('../../../../gesuch/dialog/removeDialogTemplate.html');\nvar DvErrorMessagesPanelComponentConfig = /** @class */ (function () {\n    function DvErrorMessagesPanelComponentConfig() {\n        this.scope = {};\n        this.template = templ;\n        this.controller = DvErrorMessagesPanelComponent;\n        this.controllerAs = 'vm';\n    }\n    return DvErrorMessagesPanelComponentConfig;\n}());\nexports.DvErrorMessagesPanelComponentConfig = DvErrorMessagesPanelComponentConfig;\n/**\n * component that can display error messages\n */\nvar DvErrorMessagesPanelComponent = /** @class */ (function () {\n    /* @ngInject */\n    function DvErrorMessagesPanelComponent($scope, errorService, dvDialog, gesuchRS) {\n        var _this = this;\n        this.$scope = $scope;\n        this.errorService = errorService;\n        this.dvDialog = dvDialog;\n        this.gesuchRS = gesuchRS;\n        this.errors = [];\n        this.displayMessages = function (event, errors) {\n            _this.errors = errors;\n            _this.show();\n        };\n    }\n    DvErrorMessagesPanelComponent.prototype.$onInit = function () {\n        var _this = this;\n        this.TSRoleUtil = TSRoleUtil_1.TSRoleUtil;\n        this.$scope.$on(TSErrorEvent_1.TSMessageEvent[TSErrorEvent_1.TSMessageEvent.ERROR_UPDATE], this.displayMessages);\n        this.$scope.$on(TSErrorEvent_1.TSMessageEvent[TSErrorEvent_1.TSMessageEvent.INFO_UPDATE], this.displayMessages);\n        this.$scope.$on(TSErrorEvent_1.TSMessageEvent[TSErrorEvent_1.TSMessageEvent.CLEAR], function () {\n            _this.errors = [];\n        });\n    };\n    DvErrorMessagesPanelComponent.prototype.executeAction = function (error) {\n        if (error.action) {\n            if (error.action === TSErrorAction_1.TSErrorAction.REMOVE_ONLINE_MUTATION && error.argumentList.length > 0) {\n                this.removeOnlineMutation(error.objectId, error.argumentList[0]);\n            }\n            else if (error.action === TSErrorAction_1.TSErrorAction.REMOVE_ONLINE_ERNEUERUNGSGESUCH && error.argumentList.length > 0) {\n                this.removeOnlineErneuerungsgesuch(error.objectId, error.argumentList[0]);\n            }\n        }\n        this.clear();\n    };\n    DvErrorMessagesPanelComponent.prototype.removeOnlineMutation = function (objectId, gesuchsperiodeId) {\n        var _this = this;\n        this.dvDialog.showDialog(removeDialogTemplate, RemoveDialogController_1.RemoveDialogController, {\n            title: 'REMOVE_ONLINE_MUTATION_CONFIRMATION',\n            deleteText: 'REMOVE_ONLINE_MUTATION_BESCHREIBUNG',\n            parentController: undefined,\n            elementID: undefined\n        }).then(function () {\n            _this.gesuchRS.removeOnlineMutation(objectId, gesuchsperiodeId).then(function (response) { });\n        });\n    };\n    DvErrorMessagesPanelComponent.prototype.removeOnlineErneuerungsgesuch = function (objectId, gesuchsperiodeId) {\n        var _this = this;\n        this.dvDialog.showDialog(removeDialogTemplate, RemoveDialogController_1.RemoveDialogController, {\n            title: 'REMOVE_ONLINE_ERNEUERUNGSGESUCH_CONFIRMATION',\n            deleteText: 'REMOVE_ONLINE_ERNEUERUNGSGESUCH_BESCHREIBUNG',\n            parentController: undefined,\n            elementID: undefined\n        }).then(function () {\n            _this.gesuchRS.removeOnlineFolgegesuch(objectId, gesuchsperiodeId).then(function (response) { });\n        });\n    };\n    DvErrorMessagesPanelComponent.prototype.isActionDefined = function (error) {\n        return error.action !== undefined && error.action !== null;\n    };\n    DvErrorMessagesPanelComponent.prototype.show = function () {\n        // this.element.show();\n        angular.element('dvb-error-messages-panel').show(); //besser als $element injection fuer tests\n    };\n    DvErrorMessagesPanelComponent.prototype.clear = function () {\n        this.errorService.clearAll();\n    };\n    DvErrorMessagesPanelComponent.prototype.messageStyle = function () {\n        for (var _i = 0, _a = this.errors; _i < _a.length; _i++) {\n            var error = _a[_i];\n            if (error.severity !== TSErrorLevel_1.TSErrorLevel.INFO) {\n                return '';\n            }\n        }\n        return 'info';\n    };\n    DvErrorMessagesPanelComponent.$inject = ['$scope', 'ErrorService', 'DvDialog', 'GesuchRS'];\n    return DvErrorMessagesPanelComponent;\n}());\nexports.DvErrorMessagesPanelComponent = DvErrorMessagesPanelComponent;\n",{"version":3,"file":"/home/imanol/projects/ebegu/ebegu-web/src/core/errors/directive/dvb-error-messages/dvb-error-messages-panel.ts","sourceRoot":"","sources":["/home/imanol/projects/ebegu/ebegu-web/src/core/errors/directive/dvb-error-messages/dvb-error-messages-panel.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Ki-Tax: System for the management of external childcare subsidies\n * Copyright (C) 2017 City of Bern Switzerland\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport IComponentOptions = angular.IComponentOptions;\nimport IScope = angular.IScope;\nimport {TSMessageEvent} from '../../../../models/enums/TSErrorEvent';\nimport ErrorService from '../../service/ErrorService';\nimport TSExceptionReport from '../../../../models/TSExceptionReport';\nimport {TSErrorLevel} from '../../../../models/enums/TSErrorLevel';\nimport {TSRoleUtil} from '../../../../utils/TSRoleUtil';\nimport {TSErrorAction} from '../../../../models/enums/TSErrorAction';\nimport {DvDialog} from '../../../directive/dv-dialog/dv-dialog';\nimport {RemoveDialogController} from '../../../../gesuch/dialog/RemoveDialogController';\nimport GesuchRS from '../../../../gesuch/service/gesuchRS.rest';\n\nlet templ = require('./dvb-error-messages-panel.html');\nlet style = require('./dvb-error-messages-panel.less');\nlet removeDialogTemplate = require('../../../../gesuch/dialog/removeDialogTemplate.html');\n\nexport class DvErrorMessagesPanelComponentConfig implements IComponentOptions {\n\n    scope = {};\n    template = templ;\n    controller = DvErrorMessagesPanelComponent;\n    controllerAs = 'vm';\n}\n\n/**\n * component that can display error messages\n */\nexport class DvErrorMessagesPanelComponent {\n\n    errors: Array<TSExceptionReport> = [];\n    TSRoleUtil: any;\n\n\n    static $inject: string[] = ['$scope', 'ErrorService', 'DvDialog', 'GesuchRS'];\n    /* @ngInject */\n    constructor(private $scope: IScope, private errorService: ErrorService, private dvDialog: DvDialog,\n                private gesuchRS: GesuchRS) {\n    }\n\n    $onInit() {\n        this.TSRoleUtil = TSRoleUtil;\n        this.$scope.$on(TSMessageEvent[TSMessageEvent.ERROR_UPDATE], this.displayMessages);\n        this.$scope.$on(TSMessageEvent[TSMessageEvent.INFO_UPDATE], this.displayMessages);\n        this.$scope.$on(TSMessageEvent[TSMessageEvent.CLEAR], () => {\n            this.errors = [];\n        });\n    }\n\n    displayMessages = (event: any, errors: Array<TSExceptionReport>) => {\n        this.errors = errors;\n        this.show();\n    }\n\n    private executeAction(error: TSExceptionReport): void {\n        if (error.action) {\n            if (error.action === TSErrorAction.REMOVE_ONLINE_MUTATION && error.argumentList.length > 0) {\n                this.removeOnlineMutation(error.objectId, error.argumentList[0]);\n\n            } else if (error.action === TSErrorAction.REMOVE_ONLINE_ERNEUERUNGSGESUCH && error.argumentList.length > 0) {\n                this.removeOnlineErneuerungsgesuch(error.objectId, error.argumentList[0]);\n            }\n        }\n        this.clear();\n    }\n\n    private removeOnlineMutation(objectId: string, gesuchsperiodeId: string): void {\n        this.dvDialog.showDialog(removeDialogTemplate, RemoveDialogController, {\n            title: 'REMOVE_ONLINE_MUTATION_CONFIRMATION',\n            deleteText: 'REMOVE_ONLINE_MUTATION_BESCHREIBUNG',\n            parentController: undefined,\n            elementID: undefined\n        }).then(() => {   //User confirmed removal\n            this.gesuchRS.removeOnlineMutation(objectId, gesuchsperiodeId).then((response) => {});\n        });\n    }\n\n    private removeOnlineErneuerungsgesuch(objectId: string, gesuchsperiodeId: string): void {\n        this.dvDialog.showDialog(removeDialogTemplate, RemoveDialogController, {\n            title: 'REMOVE_ONLINE_ERNEUERUNGSGESUCH_CONFIRMATION',\n            deleteText: 'REMOVE_ONLINE_ERNEUERUNGSGESUCH_BESCHREIBUNG',\n            parentController: undefined,\n            elementID: undefined\n        }).then(() => {   //User confirmed removal\n            this.gesuchRS.removeOnlineFolgegesuch(objectId, gesuchsperiodeId).then((response) => {});\n        });\n    }\n\n    private isActionDefined(error: TSExceptionReport): boolean {\n        return error.action !== undefined && error.action !== null;\n    }\n\n    show() {\n        // this.element.show();\n        angular.element('dvb-error-messages-panel').show();     //besser als $element injection fuer tests\n    }\n\n    clear() {\n        this.errorService.clearAll();\n    }\n\n    messageStyle(): string {\n        for (let error of this.errors) {\n            if (error.severity !== TSErrorLevel.INFO) {\n                return '';\n            }\n        }\n        return 'info';\n    }\n\n}\n\n\n"]}]}