{"remainingRequest":"/home/imanol/projects/ebegu/ebegu-web/node_modules/thread-loader/dist/cjs.js??ref--0-1!/home/imanol/projects/ebegu/ebegu-web/node_modules/ts-loader/index.js??ref--0-2!/home/imanol/projects/ebegu/ebegu-web/src/core/service/NavigationLogger.ts","cacheIdentifier":"cache-loader:1.1.0 test","dependencies":[{"path":"/home/imanol/projects/ebegu/ebegu-web/src/core/service/NavigationLogger.ts","mtime":1512484412007},{"path":"/home/imanol/projects/ebegu/ebegu-web/node_modules/cache-loader/dist/cjs.js","mtime":1507514019000},{"path":"/home/imanol/projects/ebegu/ebegu-web/node_modules/thread-loader/dist/cjs.js","mtime":1507523420000},{"path":"/home/imanol/projects/ebegu/ebegu-web/node_modules/ts-loader/index.js","mtime":1508488471000}],"contextDependencies":[],"result":["\"use strict\";\n/*\n * Ki-Tax: System for the management of external childcare subsidies\n * Copyright (C) 2017 City of Bern Switzerland\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Dieser Service soll helfen die Events die vom angular-ui-route Service geworfen werden zu debuggen\n */\nvar NavigationLogger = /** @class */ (function () {\n    /* @ngInject */\n    function NavigationLogger($rootScope, $log) {\n        var _this = this;\n        this.$log = $log;\n        this.active = false;\n        $rootScope.$on('$stateChangeStart', function (event, toState, toParams, fromState, fromParams) {\n            if (_this.active) {\n                $log.debug('$stateChangeStart --- event, toState, toParams, fromState, fromParams');\n                $log.debug(event, toState, toParams, fromState, fromParams);\n            }\n        });\n        $rootScope.$on('$stateChangeError', function (event, toState, toParams, fromState, fromParams, error) {\n            if (_this.active) {\n                $log.debug('$stateChangeError --- event, toState, toParams, fromState, fromParams, error');\n                $log.debug(event, toState, toParams, fromState, fromParams, error);\n            }\n        });\n        $rootScope.$on('$stateChangeSuccess', function (event, toState, toParams, fromState, fromParams) {\n            if (_this.active) {\n                $log.debug('$stateChangeSuccess --- event, toState, toParams, fromState, fromParams');\n                $log.debug(event, toState, toParams, fromState, fromParams);\n            }\n        });\n        $rootScope.$on('$viewContentLoading', function (event, viewConfig) {\n            if (_this.active) {\n                $log.debug('$viewContentLoading --- event, viewConfig');\n                $log.debug(event, viewConfig);\n            }\n        });\n        $rootScope.$on('$viewContentLoaded', function (event) {\n            if (_this.active) {\n                $log.debug('$viewContentLoaded --- event');\n                $log.debug(event);\n            }\n        });\n        $rootScope.$on('$stateNotFound', function (event, unfoundState, fromState, fromParams) {\n            if (_this.active) {\n                $log.debug('$stateNotFound --- event, unfoundState, fromState, fromParams');\n                $log.debug(event, unfoundState, fromState, fromParams);\n            }\n        });\n    }\n    NavigationLogger.prototype.toggle = function () {\n        this.active = !this.active;\n    };\n    NavigationLogger.$inject = ['$rootScope', '$log'];\n    return NavigationLogger;\n}());\nexports.NavigationLogger = NavigationLogger;\n",{"version":3,"file":"/home/imanol/projects/ebegu/ebegu-web/src/core/service/NavigationLogger.ts","sourceRoot":"","sources":["/home/imanol/projects/ebegu/ebegu-web/src/core/service/NavigationLogger.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;GAaG;;AAKH;;GAEG;AACH;IAKI,eAAe;IACf,0BAAY,UAA6B,EAAU,IAAiB;QAApE,iBAuCC;QAvCkD,SAAI,GAAJ,IAAI,CAAa;QAJpE,WAAM,GAAY,KAAK,CAAC;QAMpB,UAAU,CAAC,GAAG,CAAC,mBAAmB,EAAG,UAAC,KAAK,EAAE,OAAO,EAAE,QAAQ,EAAE,SAAS,EAAE,UAAU;YACjF,EAAE,CAAC,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC,CAAC;gBACd,IAAI,CAAC,KAAK,CAAC,uEAAuE,CAAC,CAAC;gBACpF,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,OAAO,EAAE,QAAQ,EAAE,SAAS,EAAE,UAAU,CAAC,CAAC;YAChE,CAAC;QACL,CAAC,CAAC,CAAC;QACH,UAAU,CAAC,GAAG,CAAC,mBAAmB,EAAG,UAAC,KAAK,EAAE,OAAO,EAAE,QAAQ,EAAE,SAAS,EAAE,UAAU,EAAE,KAAK;YACxF,EAAE,CAAC,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC,CAAC;gBACd,IAAI,CAAC,KAAK,CAAC,8EAA8E,CAAC,CAAC;gBAC3F,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,OAAO,EAAE,QAAQ,EAAE,SAAS,EAAE,UAAU,EAAE,KAAK,CAAC,CAAC;YACvE,CAAC;QACL,CAAC,CAAC,CAAC;QACH,UAAU,CAAC,GAAG,CAAC,qBAAqB,EAAG,UAAC,KAAK,EAAE,OAAO,EAAE,QAAQ,EAAE,SAAS,EAAE,UAAU;YACnF,EAAE,CAAC,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC,CAAC;gBACd,IAAI,CAAC,KAAK,CAAC,yEAAyE,CAAC,CAAC;gBACtF,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,OAAO,EAAE,QAAQ,EAAE,SAAS,EAAE,UAAU,CAAC,CAAC;YAChE,CAAC;QACL,CAAC,CAAC,CAAC;QACH,UAAU,CAAC,GAAG,CAAC,qBAAqB,EAAG,UAAC,KAAK,EAAE,UAAU;YACrD,EAAE,CAAC,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC,CAAC;gBACd,IAAI,CAAC,KAAK,CAAC,2CAA2C,CAAC,CAAC;gBACxD,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,UAAU,CAAC,CAAC;YAClC,CAAC;QACL,CAAC,CAAC,CAAC;QACH,UAAU,CAAC,GAAG,CAAC,oBAAoB,EAAG,UAAC,KAAK;YACxC,EAAE,CAAC,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC,CAAC;gBACd,IAAI,CAAC,KAAK,CAAC,8BAA8B,CAAC,CAAC;gBAC3C,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;YACtB,CAAC;QACL,CAAC,CAAC,CAAC;QACH,UAAU,CAAC,GAAG,CAAC,gBAAgB,EAAG,UAAC,KAAK,EAAE,YAAY,EAAE,SAAS,EAAE,UAAU;YACzE,EAAE,CAAC,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC,CAAC;gBACd,IAAI,CAAC,KAAK,CAAC,+DAA+D,CAAC,CAAC;gBAC5E,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,YAAY,EAAE,SAAS,EAAE,UAAU,CAAC,CAAC;YAC3D,CAAC;QACL,CAAC,CAAC,CAAC;IAEP,CAAC;IAEM,iCAAM,GAAb;QACI,IAAI,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC;IAC/B,CAAC;IA7CM,wBAAO,GAAG,CAAC,YAAY,EAAE,MAAM,CAAC,CAAC;IA8C5C,uBAAC;CAAA,AAlDD,IAkDC;AAlDY,4CAAgB","sourcesContent":["/*\n * Ki-Tax: System for the management of external childcare subsidies\n * Copyright (C) 2017 City of Bern Switzerland\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport {ILogService} from 'angular';\nimport IRootScopeService = angular.IRootScopeService;\n\n/**\n * Dieser Service soll helfen die Events die vom angular-ui-route Service geworfen werden zu debuggen\n */\nexport class NavigationLogger {\n\n    active: boolean = false;\n\n    static $inject = ['$rootScope', '$log'];\n    /* @ngInject */\n    constructor($rootScope: IRootScopeService, private $log: ILogService) {\n\n        $rootScope.$on('$stateChangeStart',  (event, toState, toParams, fromState, fromParams)  => {\n            if (this.active) {\n                $log.debug('$stateChangeStart --- event, toState, toParams, fromState, fromParams');\n                $log.debug(event, toState, toParams, fromState, fromParams);\n            }\n        });\n        $rootScope.$on('$stateChangeError',  (event, toState, toParams, fromState, fromParams, error) => {\n            if (this.active) {\n                $log.debug('$stateChangeError --- event, toState, toParams, fromState, fromParams, error');\n                $log.debug(event, toState, toParams, fromState, fromParams, error);\n            }\n        });\n        $rootScope.$on('$stateChangeSuccess',  (event, toState, toParams, fromState, fromParams) => {\n            if (this.active) {\n                $log.debug('$stateChangeSuccess --- event, toState, toParams, fromState, fromParams');\n                $log.debug(event, toState, toParams, fromState, fromParams);\n            }\n        });\n        $rootScope.$on('$viewContentLoading',  (event, viewConfig) => {\n            if (this.active) {\n                $log.debug('$viewContentLoading --- event, viewConfig');\n                $log.debug(event, viewConfig);\n            }\n        });\n        $rootScope.$on('$viewContentLoaded',  (event) => {\n            if (this.active) {\n                $log.debug('$viewContentLoaded --- event');\n                $log.debug(event);\n            }\n        });\n        $rootScope.$on('$stateNotFound',  (event, unfoundState, fromState, fromParams) => {\n            if (this.active) {\n                $log.debug('$stateNotFound --- event, unfoundState, fromState, fromParams');\n                $log.debug(event, unfoundState, fromState, fromParams);\n            }\n        });\n\n    }\n\n    public toggle() {\n        this.active = !this.active;\n    }\n}\n"]}]}