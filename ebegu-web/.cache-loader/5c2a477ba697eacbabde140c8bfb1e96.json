{"remainingRequest":"/home/imanol/projects/ebegu/ebegu-web/node_modules/thread-loader/dist/cjs.js??ref--0-1!/home/imanol/projects/ebegu/ebegu-web/node_modules/ts-loader/index.js??ref--0-2!/home/imanol/projects/ebegu/ebegu-web/src/core/service/mitteilungRS.rest.ts","cacheIdentifier":"cache-loader:1.1.0 test","dependencies":[{"path":"/home/imanol/projects/ebegu/ebegu-web/src/core/service/mitteilungRS.rest.ts","mtime":1518612532794},{"path":"/home/imanol/projects/ebegu/ebegu-web/node_modules/cache-loader/dist/cjs.js","mtime":1507514019000},{"path":"/home/imanol/projects/ebegu/ebegu-web/node_modules/thread-loader/dist/cjs.js","mtime":1507523420000},{"path":"/home/imanol/projects/ebegu/ebegu-web/node_modules/ts-loader/index.js","mtime":1508488471000}],"contextDependencies":[],"result":["\"use strict\";\n/*\n * Ki-Tax: System for the management of external childcare subsidies\n * Copyright (C) 2017 City of Bern Switzerland\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar TSMitteilungStatus_1 = require(\"../../models/enums/TSMitteilungStatus\");\nvar TSMitteilungTeilnehmerTyp_1 = require(\"../../models/enums/TSMitteilungTeilnehmerTyp\");\nvar TSBetreuungsmitteilung_1 = require(\"../../models/TSBetreuungsmitteilung\");\nvar TSMitteilung_1 = require(\"../../models/TSMitteilung\");\nvar TSMitteilungSearchresultDTO_1 = require(\"../../models/TSMitteilungSearchresultDTO\");\nvar DateUtil_1 = require(\"../../utils/DateUtil\");\nvar MitteilungRS = /** @class */ (function () {\n    /* @ngInject */\n    function MitteilungRS($http, REST_API, ebeguRestUtil, $log, wizardStepManager, authServiceRS, $translate) {\n        this.$log = $log;\n        this.wizardStepManager = wizardStepManager;\n        this.authServiceRS = authServiceRS;\n        this.$translate = $translate;\n        this.serviceURL = REST_API + 'mitteilungen';\n        this.http = $http;\n        this.ebeguRestUtil = ebeguRestUtil;\n    }\n    MitteilungRS.prototype.getServiceName = function () {\n        return 'MitteilungRS';\n    };\n    MitteilungRS.prototype.findMitteilung = function (mitteilungID) {\n        var _this = this;\n        return this.http.get(this.serviceURL + '/' + encodeURIComponent(mitteilungID))\n            .then(function (response) {\n            _this.$log.debug('PARSING Mitteilung REST object ', response.data);\n            return _this.ebeguRestUtil.parseMitteilung(new TSMitteilung_1.default(), response.data);\n        });\n    };\n    MitteilungRS.prototype.sendMitteilung = function (mitteilung) {\n        var _this = this;\n        var restMitteilung = {};\n        restMitteilung = this.ebeguRestUtil.mitteilungToRestObject(restMitteilung, mitteilung);\n        return this.http.put(this.serviceURL + '/send', restMitteilung, {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }).then(function (response) {\n            _this.$log.debug('PARSING mitteilung REST object ', response.data);\n            return _this.ebeguRestUtil.parseMitteilung(new TSMitteilung_1.default(), response.data);\n        });\n    };\n    MitteilungRS.prototype.saveEntwurf = function (mitteilung) {\n        var _this = this;\n        var restMitteilung = {};\n        restMitteilung = this.ebeguRestUtil.mitteilungToRestObject(restMitteilung, mitteilung);\n        return this.http.put(this.serviceURL + '/entwurf', restMitteilung, {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }).then(function (response) {\n            _this.$log.debug('PARSING mitteilung REST object ', response.data);\n            return _this.ebeguRestUtil.parseMitteilung(new TSMitteilung_1.default(), response.data);\n        });\n    };\n    MitteilungRS.prototype.setMitteilungGelesen = function (mitteilungId) {\n        var _this = this;\n        return this.http.put(this.serviceURL + '/setgelesen/' + mitteilungId, null).then(function (response) {\n            _this.$log.debug('PARSING mitteilung REST object ', response.data);\n            return _this.ebeguRestUtil.parseMitteilung(new TSMitteilung_1.default(), response.data);\n        });\n    };\n    MitteilungRS.prototype.setMitteilungErledigt = function (mitteilungId) {\n        var _this = this;\n        return this.http.put(this.serviceURL + '/seterledigt/' + mitteilungId, null).then(function (response) {\n            _this.$log.debug('PARSING mitteilung REST object ', response.data);\n            return _this.ebeguRestUtil.parseMitteilung(new TSMitteilung_1.default(), response.data);\n        });\n    };\n    MitteilungRS.prototype.getEntwurfForCurrentRolleForFall = function (fallId) {\n        var _this = this;\n        return this.http.get(this.serviceURL + '/entwurf/fall/' + fallId).then(function (response) {\n            _this.$log.debug('PARSING mitteilung REST object ', response.data);\n            return _this.ebeguRestUtil.parseMitteilung(new TSMitteilung_1.default(), response.data);\n        });\n    };\n    MitteilungRS.prototype.getEntwurfForCurrentRolleForBetreuung = function (betreuungId) {\n        var _this = this;\n        return this.http.get(this.serviceURL + '/entwurf/betreuung/' + betreuungId).then(function (response) {\n            _this.$log.debug('PARSING mitteilung REST object ', response.data);\n            return _this.ebeguRestUtil.parseMitteilung(new TSMitteilung_1.default(), response.data);\n        });\n    };\n    MitteilungRS.prototype.getMitteilungenForCurrentRolleForFall = function (fallId) {\n        var _this = this;\n        return this.http.get(this.serviceURL + '/forrole/fall/' + fallId).then(function (response) {\n            _this.$log.debug('PARSING mitteilung REST object ', response.data);\n            return _this.ebeguRestUtil.parseMitteilungen(response.data.mitteilungen); // The response is a wrapper\n        });\n    };\n    MitteilungRS.prototype.getMitteilungenForCurrentRolleForBetreuung = function (betreuungId) {\n        var _this = this;\n        return this.http.get(this.serviceURL + '/forrole/betreuung/' + betreuungId).then(function (response) {\n            _this.$log.debug('PARSING mitteilung REST object ', response.data);\n            return _this.ebeguRestUtil.parseMitteilungen(response.data.mitteilungen); // The response is a wrapper\n        });\n    };\n    MitteilungRS.prototype.getAmountMitteilungenForCurrentBenutzer = function () {\n        return this.http.get(this.serviceURL + '/amountnewforuser/notokenrefresh').then(function (response) {\n            return response.data;\n        });\n    };\n    MitteilungRS.prototype.removeEntwurf = function (mitteilung) {\n        return this.http.delete(this.serviceURL + '/' + encodeURIComponent(mitteilung.id))\n            .then(function (response) {\n            return response;\n        });\n    };\n    MitteilungRS.prototype.setAllNewMitteilungenOfFallGelesen = function (fallId) {\n        var _this = this;\n        return this.http.put(this.serviceURL + '/setallgelesen/' + fallId, null).then(function (response) {\n            _this.$log.debug('PARSING mitteilungen REST objects ', response.data);\n            return _this.ebeguRestUtil.parseMitteilungen(response.data.mitteilungen); // The response is a wrapper\n        });\n    };\n    MitteilungRS.prototype.getAmountNewMitteilungenForCurrentRolle = function (fallId) {\n        return this.http.get(this.serviceURL + '/amountnew/' + fallId).then(function (response) {\n            return response.data;\n        });\n    };\n    MitteilungRS.prototype.sendbetreuungsmitteilung = function (fall, betreuung) {\n        var _this = this;\n        var mutationsmeldung = this.createBetreuungsmitteilung(fall, betreuung);\n        var restMitteilung = this.ebeguRestUtil.betreuungsmitteilungToRestObject({}, mutationsmeldung);\n        return this.http.put(this.serviceURL + '/sendbetreuungsmitteilung', restMitteilung, {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }).then(function (response) {\n            _this.$log.debug('PARSING Betreuungsmitteilung REST object ', response.data);\n            return _this.ebeguRestUtil.parseBetreuungsmitteilung(new TSBetreuungsmitteilung_1.default(), response.data);\n        });\n    };\n    MitteilungRS.prototype.applyBetreuungsmitteilung = function (betreuungsmitteilungId) {\n        return this.http.put(this.serviceURL + '/applybetreuungsmitteilung/' + betreuungsmitteilungId, null, {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }).then(function (response) {\n            return response.data;\n        });\n    };\n    MitteilungRS.prototype.getNewestBetreuungsmitteilung = function (betreuungId) {\n        var _this = this;\n        return this.http.get(this.serviceURL + '/newestBetreuunsmitteilung/' + betreuungId).then(function (response) {\n            _this.$log.debug('PARSING Betreuungsmitteilung REST object ', response.data);\n            return _this.ebeguRestUtil.parseBetreuungsmitteilung(new TSBetreuungsmitteilung_1.default(), response.data);\n        });\n    };\n    MitteilungRS.prototype.mitteilungUebergebenAnJugendamt = function (mitteilungId) {\n        var _this = this;\n        return this.http.get(this.serviceURL + '/delegation/jugendamt/' + mitteilungId).then(function (response) {\n            return _this.ebeguRestUtil.parseMitteilung(new TSMitteilung_1.default(), response.data);\n        });\n    };\n    MitteilungRS.prototype.mitteilungUebergebenAnSchulamt = function (mitteilungId) {\n        var _this = this;\n        return this.http.get(this.serviceURL + '/delegation/schulamt/' + mitteilungId).then(function (response) {\n            return _this.ebeguRestUtil.parseMitteilung(new TSMitteilung_1.default(), response.data);\n        });\n    };\n    MitteilungRS.prototype.searchMitteilungen = function (antragSearch, includeClosed) {\n        var _this = this;\n        return this.http.post(this.serviceURL + '/search/' + includeClosed, antragSearch, {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }).then(function (response) {\n            _this.$log.debug('PARSING antraege REST array object', response);\n            return new TSMitteilungSearchresultDTO_1.default(_this.ebeguRestUtil.parseMitteilungen(response.data.mitteilungDTOs), response.data.paginationDTO.totalItemCount);\n        });\n    };\n    MitteilungRS.prototype.createBetreuungsmitteilung = function (fall, betreuung) {\n        var mutationsmeldung = new TSBetreuungsmitteilung_1.default();\n        mutationsmeldung.fall = fall;\n        mutationsmeldung.betreuung = betreuung;\n        mutationsmeldung.senderTyp = TSMitteilungTeilnehmerTyp_1.TSMitteilungTeilnehmerTyp.INSTITUTION;\n        mutationsmeldung.empfaengerTyp = TSMitteilungTeilnehmerTyp_1.TSMitteilungTeilnehmerTyp.JUGENDAMT;\n        mutationsmeldung.sender = this.authServiceRS.getPrincipal();\n        mutationsmeldung.empfaenger = fall.besitzer ? fall.besitzer : undefined;\n        mutationsmeldung.subject = this.$translate.instant('MUTATIONSMELDUNG_BETREFF');\n        mutationsmeldung.message = this.createNachrichtForMutationsmeldung(betreuung);\n        mutationsmeldung.mitteilungStatus = TSMitteilungStatus_1.TSMitteilungStatus.ENTWURF;\n        mutationsmeldung.betreuungspensen = this.extractPensenFromBetreuung(betreuung);\n        return mutationsmeldung;\n    };\n    /**\n     * Erzeugt eine Nachricht mit einem Text mit allen Betreuungspensen der Betreuung.\n     */\n    MitteilungRS.prototype.createNachrichtForMutationsmeldung = function (betreuung) {\n        var _this = this;\n        var message = '';\n        var i = 1;\n        var betreuungspensumContainers = angular.copy(betreuung.betreuungspensumContainers); // to avoid changing something\n        betreuungspensumContainers\n            .sort(function (a, b) {\n            return DateUtil_1.default.compareDateTime(a.betreuungspensumJA.gueltigkeit.gueltigAb, b.betreuungspensumJA.gueltigkeit.gueltigAb);\n        }).forEach(function (betpenContainer) {\n            if (betpenContainer.betreuungspensumJA) {\n                // z.B. -> Pensum 1 vom 1.8.2017 bis 31.07.2018: 80%\n                if (i > 1) {\n                    message += '\\n';\n                }\n                var datumAb = DateUtil_1.default.momentToLocalDateFormat(betpenContainer.betreuungspensumJA.gueltigkeit.gueltigAb, 'DD.MM.YYYY');\n                var datumBis = DateUtil_1.default.momentToLocalDateFormat(betpenContainer.betreuungspensumJA.gueltigkeit.gueltigBis, 'DD.MM.YYYY');\n                datumBis = datumBis ? datumBis : DateUtil_1.default.momentToLocalDateFormat(betreuung.gesuchsperiode.gueltigkeit.gueltigBis, 'DD.MM.YYYY'); // by default Ende der Periode\n                message += _this.$translate.instant('MUTATIONSMELDUNG_PENSUM') + i\n                    + _this.$translate.instant('MUTATIONSMELDUNG_VON') + datumAb\n                    + _this.$translate.instant('MUTATIONSMELDUNG_BIS') + datumBis\n                    + ': ' + betpenContainer.betreuungspensumJA.pensum + '%';\n            }\n            i++;\n        });\n        return message;\n    };\n    /**\n     * Kopiert alle Betreuungspensen der gegebenen Betreuung in einer neuen Liste und\n     * gibt diese zurueck. By default wird eine leere Liste zurueckgegeben\n     */\n    MitteilungRS.prototype.extractPensenFromBetreuung = function (betreuung) {\n        var pensen = [];\n        betreuung.betreuungspensumContainers.forEach(function (betpenContainer) {\n            var pensumJA = angular.copy(betpenContainer.betreuungspensumJA);\n            pensumJA.id = undefined; // the id must be set to undefined in order no to duplicate it\n            pensen.push(pensumJA);\n        });\n        return pensen;\n    };\n    MitteilungRS.$inject = ['$http', 'REST_API', 'EbeguRestUtil', '$log', 'WizardStepManager',\n        'AuthServiceRS', '$translate'];\n    return MitteilungRS;\n}());\nexports.default = MitteilungRS;\n",{"version":3,"file":"/home/imanol/projects/ebegu/ebegu-web/src/core/service/mitteilungRS.rest.ts","sourceRoot":"","sources":["/home/imanol/projects/ebegu/ebegu-web/src/core/service/mitteilungRS.rest.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Ki-Tax: System for the management of external childcare subsidies\n * Copyright (C) 2017 City of Bern Switzerland\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport {IHttpService, ILogService, IPromise} from 'angular';\nimport AuthServiceRS from '../../authentication/service/AuthServiceRS.rest';\nimport WizardStepManager from '../../gesuch/service/wizardStepManager';\nimport {TSMitteilungStatus} from '../../models/enums/TSMitteilungStatus';\nimport {TSMitteilungTeilnehmerTyp} from '../../models/enums/TSMitteilungTeilnehmerTyp';\nimport TSBetreuung from '../../models/TSBetreuung';\nimport TSBetreuungsmitteilung from '../../models/TSBetreuungsmitteilung';\nimport TSBetreuungspensum from '../../models/TSBetreuungspensum';\nimport TSBetreuungspensumContainer from '../../models/TSBetreuungspensumContainer';\nimport TSFall from '../../models/TSFall';\nimport TSMitteilung from '../../models/TSMitteilung';\nimport TSMtteilungSearchresultDTO from '../../models/TSMitteilungSearchresultDTO';\nimport DateUtil from '../../utils/DateUtil';\nimport EbeguRestUtil from '../../utils/EbeguRestUtil';\nimport ITranslateService = angular.translate.ITranslateService;\n\nexport default class MitteilungRS {\n    serviceURL: string;\n    http: IHttpService;\n    ebeguRestUtil: EbeguRestUtil;\n\n    static $inject = ['$http', 'REST_API', 'EbeguRestUtil', '$log', 'WizardStepManager',\n        'AuthServiceRS', '$translate'];\n    /* @ngInject */\n    constructor($http: IHttpService, REST_API: string, ebeguRestUtil: EbeguRestUtil, private $log: ILogService,\n                private wizardStepManager: WizardStepManager, private authServiceRS: AuthServiceRS,\n                private $translate: ITranslateService) {\n        this.serviceURL = REST_API + 'mitteilungen';\n        this.http = $http;\n        this.ebeguRestUtil = ebeguRestUtil;\n    }\n\n    public getServiceName(): string {\n        return 'MitteilungRS';\n    }\n\n    public findMitteilung(mitteilungID: string): IPromise<TSMitteilung> {\n        return this.http.get(this.serviceURL + '/' + encodeURIComponent(mitteilungID))\n            .then((response: any) => {\n                this.$log.debug('PARSING Mitteilung REST object ', response.data);\n                return this.ebeguRestUtil.parseMitteilung(new TSMitteilung(), response.data);\n            });\n    }\n\n    public sendMitteilung(mitteilung: TSMitteilung): IPromise<TSMitteilung> {\n        let restMitteilung = {};\n        restMitteilung = this.ebeguRestUtil.mitteilungToRestObject(restMitteilung, mitteilung);\n        return this.http.put(this.serviceURL + '/send', restMitteilung, {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }).then((response: any) => {\n            this.$log.debug('PARSING mitteilung REST object ', response.data);\n            return this.ebeguRestUtil.parseMitteilung(new TSMitteilung(), response.data);\n        });\n    }\n\n    public saveEntwurf(mitteilung: TSMitteilung): IPromise<TSMitteilung> {\n        let restMitteilung = {};\n        restMitteilung = this.ebeguRestUtil.mitteilungToRestObject(restMitteilung, mitteilung);\n        return this.http.put(this.serviceURL + '/entwurf', restMitteilung, {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }).then((response: any) => {\n            this.$log.debug('PARSING mitteilung REST object ', response.data);\n            return this.ebeguRestUtil.parseMitteilung(new TSMitteilung(), response.data);\n        });\n    }\n\n    public setMitteilungGelesen(mitteilungId: string): IPromise<TSMitteilung> {\n        return this.http.put(this.serviceURL + '/setgelesen/' + mitteilungId, null).then((response: any) => {\n            this.$log.debug('PARSING mitteilung REST object ', response.data);\n            return this.ebeguRestUtil.parseMitteilung(new TSMitteilung(), response.data);\n        });\n    }\n\n    public setMitteilungErledigt(mitteilungId: string): IPromise<TSMitteilung> {\n        return this.http.put(this.serviceURL + '/seterledigt/' + mitteilungId, null).then((response: any) => {\n            this.$log.debug('PARSING mitteilung REST object ', response.data);\n            return this.ebeguRestUtil.parseMitteilung(new TSMitteilung(), response.data);\n        });\n    }\n\n    public getEntwurfForCurrentRolleForFall(fallId: string): IPromise<TSMitteilung> {\n        return this.http.get(this.serviceURL + '/entwurf/fall/' + fallId).then((response: any) => {\n            this.$log.debug('PARSING mitteilung REST object ', response.data);\n            return this.ebeguRestUtil.parseMitteilung(new TSMitteilung(), response.data);\n        });\n    }\n\n    public getEntwurfForCurrentRolleForBetreuung(betreuungId: string): IPromise<TSMitteilung> {\n        return this.http.get(this.serviceURL + '/entwurf/betreuung/' + betreuungId).then((response: any) => {\n            this.$log.debug('PARSING mitteilung REST object ', response.data);\n            return this.ebeguRestUtil.parseMitteilung(new TSMitteilung(), response.data);\n        });\n    }\n\n    public getMitteilungenForCurrentRolleForFall(fallId: string): IPromise<Array<TSMitteilung>> {\n        return this.http.get(this.serviceURL + '/forrole/fall/' + fallId).then((response: any) => {\n            this.$log.debug('PARSING mitteilung REST object ', response.data);\n            return this.ebeguRestUtil.parseMitteilungen(response.data.mitteilungen); // The response is a wrapper\n        });\n    }\n\n    public getMitteilungenForCurrentRolleForBetreuung(betreuungId: string): IPromise<Array<TSMitteilung>> {\n        return this.http.get(this.serviceURL + '/forrole/betreuung/' + betreuungId).then((response: any) => {\n            this.$log.debug('PARSING mitteilung REST object ', response.data);\n            return this.ebeguRestUtil.parseMitteilungen(response.data.mitteilungen); // The response is a wrapper\n        });\n    }\n\n    public getAmountMitteilungenForCurrentBenutzer(): IPromise<number> {\n        return this.http.get(this.serviceURL + '/amountnewforuser/notokenrefresh').then((response: any) => {\n            return response.data;\n        });\n    }\n\n    public removeEntwurf(mitteilung: TSMitteilung): IPromise<any> {\n        return this.http.delete(this.serviceURL + '/' + encodeURIComponent(mitteilung.id))\n            .then((response) => {\n                return response;\n            });\n    }\n\n    public setAllNewMitteilungenOfFallGelesen(fallId: string): IPromise<Array<TSMitteilung>> {\n        return this.http.put(this.serviceURL + '/setallgelesen/' + fallId, null).then((response: any) => {\n            this.$log.debug('PARSING mitteilungen REST objects ', response.data);\n            return this.ebeguRestUtil.parseMitteilungen(response.data.mitteilungen); // The response is a wrapper\n        });\n    }\n\n    public getAmountNewMitteilungenForCurrentRolle(fallId: string): IPromise<number> {\n        return this.http.get(this.serviceURL + '/amountnew/' + fallId).then((response: any) => {\n            return response.data;\n        });\n    }\n\n    public sendbetreuungsmitteilung(fall: TSFall, betreuung: TSBetreuung): IPromise<TSBetreuungsmitteilung> {\n        let mutationsmeldung: TSBetreuungsmitteilung = this.createBetreuungsmitteilung(fall, betreuung);\n        let restMitteilung: any = this.ebeguRestUtil.betreuungsmitteilungToRestObject({}, mutationsmeldung);\n        return this.http.put(this.serviceURL + '/sendbetreuungsmitteilung', restMitteilung, {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }).then((response: any) => {\n            this.$log.debug('PARSING Betreuungsmitteilung REST object ', response.data);\n            return this.ebeguRestUtil.parseBetreuungsmitteilung(new TSBetreuungsmitteilung(), response.data);\n        });\n    }\n\n    public applyBetreuungsmitteilung(betreuungsmitteilungId: string): IPromise<string> {\n        return this.http.put(this.serviceURL + '/applybetreuungsmitteilung/' + betreuungsmitteilungId, null, {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }).then((response: any) => {\n            return response.data;\n        });\n    }\n\n    public getNewestBetreuungsmitteilung(betreuungId: string): IPromise<TSBetreuungsmitteilung> {\n        return this.http.get(this.serviceURL + '/newestBetreuunsmitteilung/' + betreuungId).then((response: any) => {\n            this.$log.debug('PARSING Betreuungsmitteilung REST object ', response.data);\n            return this.ebeguRestUtil.parseBetreuungsmitteilung(new TSBetreuungsmitteilung(), response.data);\n        });\n    }\n\n    public mitteilungUebergebenAnJugendamt(mitteilungId: string): IPromise<TSMitteilung> {\n        return this.http.get(this.serviceURL + '/delegation/jugendamt/' + mitteilungId).then((response: any) => {\n            return this.ebeguRestUtil.parseMitteilung(new TSMitteilung(), response.data);\n        });\n    }\n\n    public mitteilungUebergebenAnSchulamt(mitteilungId: string): IPromise<TSMitteilung> {\n        return this.http.get(this.serviceURL + '/delegation/schulamt/' + mitteilungId).then((response: any) => {\n            return this.ebeguRestUtil.parseMitteilung(new TSMitteilung(), response.data);\n        });\n    }\n\n    public searchMitteilungen(antragSearch: any, includeClosed: boolean): IPromise<TSMtteilungSearchresultDTO> {\n        return this.http.post(this.serviceURL + '/search/' + includeClosed, antragSearch, {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }).then((response: any) => {\n            this.$log.debug('PARSING antraege REST array object', response);\n            return new TSMtteilungSearchresultDTO(this.ebeguRestUtil.parseMitteilungen(response.data.mitteilungDTOs), response.data.paginationDTO.totalItemCount);\n        });\n    }\n\n    private createBetreuungsmitteilung(fall: TSFall, betreuung: TSBetreuung): TSBetreuungsmitteilung {\n        let mutationsmeldung: TSBetreuungsmitteilung = new TSBetreuungsmitteilung();\n        mutationsmeldung.fall = fall;\n        mutationsmeldung.betreuung = betreuung;\n        mutationsmeldung.senderTyp = TSMitteilungTeilnehmerTyp.INSTITUTION;\n        mutationsmeldung.empfaengerTyp = TSMitteilungTeilnehmerTyp.JUGENDAMT;\n        mutationsmeldung.sender = this.authServiceRS.getPrincipal();\n        mutationsmeldung.empfaenger = fall.besitzer ? fall.besitzer : undefined;\n        mutationsmeldung.subject = this.$translate.instant('MUTATIONSMELDUNG_BETREFF');\n        mutationsmeldung.message = this.createNachrichtForMutationsmeldung(betreuung);\n        mutationsmeldung.mitteilungStatus = TSMitteilungStatus.ENTWURF;\n        mutationsmeldung.betreuungspensen = this.extractPensenFromBetreuung(betreuung);\n        return mutationsmeldung;\n    }\n\n    /**\n     * Erzeugt eine Nachricht mit einem Text mit allen Betreuungspensen der Betreuung.\n     */\n    private createNachrichtForMutationsmeldung(betreuung: TSBetreuung): string {\n        let message: string = '';\n        let i: number = 1;\n        let betreuungspensumContainers: Array<TSBetreuungspensumContainer> = angular.copy(betreuung.betreuungspensumContainers); // to avoid changing something\n        betreuungspensumContainers\n            .sort(\n                (a: TSBetreuungspensumContainer, b: TSBetreuungspensumContainer) => {\n                    return DateUtil.compareDateTime(a.betreuungspensumJA.gueltigkeit.gueltigAb, b.betreuungspensumJA.gueltigkeit.gueltigAb);\n                }\n            ).forEach(betpenContainer => {\n            if (betpenContainer.betreuungspensumJA) {\n                // z.B. -> Pensum 1 vom 1.8.2017 bis 31.07.2018: 80%\n                if (i > 1) {\n                    message += '\\n';\n                }\n                let datumAb: string = DateUtil.momentToLocalDateFormat(betpenContainer.betreuungspensumJA.gueltigkeit.gueltigAb, 'DD.MM.YYYY');\n                let datumBis: string = DateUtil.momentToLocalDateFormat(betpenContainer.betreuungspensumJA.gueltigkeit.gueltigBis, 'DD.MM.YYYY');\n                datumBis = datumBis ? datumBis : DateUtil.momentToLocalDateFormat(betreuung.gesuchsperiode.gueltigkeit.gueltigBis, 'DD.MM.YYYY'); // by default Ende der Periode\n                message += this.$translate.instant('MUTATIONSMELDUNG_PENSUM') + i\n                    + this.$translate.instant('MUTATIONSMELDUNG_VON') + datumAb\n                    + this.$translate.instant('MUTATIONSMELDUNG_BIS') + datumBis\n                    + ': ' + betpenContainer.betreuungspensumJA.pensum + '%';\n            }\n            i++;\n        });\n        return message;\n    }\n\n    /**\n     * Kopiert alle Betreuungspensen der gegebenen Betreuung in einer neuen Liste und\n     * gibt diese zurueck. By default wird eine leere Liste zurueckgegeben\n     */\n    private extractPensenFromBetreuung(betreuung: TSBetreuung): Array<TSBetreuungspensum> {\n        let pensen: Array<TSBetreuungspensum> = [];\n        betreuung.betreuungspensumContainers.forEach(betpenContainer => {\n            let pensumJA = angular.copy(betpenContainer.betreuungspensumJA);\n            pensumJA.id = undefined; // the id must be set to undefined in order no to duplicate it\n            pensen.push(pensumJA);\n        });\n        return pensen;\n    }\n}\n"]}]}