{"remainingRequest":"/home/imanol/projects/ebegu/ebegu-web/node_modules/thread-loader/dist/cjs.js??ref--0-1!/home/imanol/projects/ebegu/ebegu-web/node_modules/ts-loader/index.js??ref--0-2!/home/imanol/projects/ebegu/ebegu-web/src/core/core.route.ts","cacheIdentifier":"cache-loader:1.1.0 test","dependencies":[{"path":"/home/imanol/projects/ebegu/ebegu-web/src/core/core.route.ts","mtime":1512484412003},{"path":"/home/imanol/projects/ebegu/ebegu-web/node_modules/cache-loader/dist/cjs.js","mtime":1507514019000},{"path":"/home/imanol/projects/ebegu/ebegu-web/node_modules/thread-loader/dist/cjs.js","mtime":1507523420000},{"path":"/home/imanol/projects/ebegu/ebegu-web/node_modules/ts-loader/index.js","mtime":1508488471000}],"contextDependencies":[],"result":["\"use strict\";\n/*\n * Ki-Tax: System for the management of external childcare subsidies\n * Copyright (C) 2017 City of Bern Switzerland\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar TSAuthEvent_1 = require(\"../models/enums/TSAuthEvent\");\nvar TSRoleUtil_1 = require(\"../utils/TSRoleUtil\");\nappRun.$inject = ['angularMomentConfig', 'RouterHelper', 'ListResourceRS', 'MandantRS', '$injector', '$rootScope', 'hotkeys',\n    '$timeout', 'AuthServiceRS', '$state', '$location', '$window', '$log', 'ErrorService', 'GesuchModelManager', 'GesuchsperiodeRS'];\n/* @ngInject */\nfunction appRun(angularMomentConfig, routerHelper, listResourceRS, mandantRS, $injector, $rootScope, hotkeys, $timeout, authServiceRS, $state, $location, $window, $log, errorService, gesuchModelManager, gesuchsperiodeRS) {\n    // navigationLogger.toggle();\n    // Fehler beim Navigieren ueber ui-route ins Log schreiben\n    $rootScope.$on('$stateChangeError', function (event, toState, toParams, fromState, fromParams, error) {\n        $log.error('Fehler beim Navigieren');\n        $log.error('$stateChangeError --- event, toState, toParams, fromState, fromParams, error');\n        $log.error(event, toState, toParams, fromState, fromParams, error);\n    });\n    //Normale Benutzer duefen nicht auf admin Seite\n    $rootScope.$on('$stateChangeStart', function (event, toState, toParams, fromState, fromParams, options) {\n        var principal = authServiceRS.getPrincipal();\n        var forbiddenPlaces = ['admin', 'institution', 'parameter', 'traegerschaft'];\n        var isAdmin = authServiceRS.isOneOfRoles(TSRoleUtil_1.TSRoleUtil.getAdministratorRevisorRole());\n        if (toState && forbiddenPlaces.indexOf(toState.name) !== -1 && authServiceRS.getPrincipal() && !isAdmin) {\n            errorService.addMesageAsError('ERROR_UNAUTHORIZED');\n            $log.debug('prevented navigation to page because user is not admin');\n            event.preventDefault();\n        }\n    });\n    $rootScope.$on('$stateChangeSuccess', function (event, toState, toParams, fromState, fromParams) {\n        errorService.clearAll();\n    });\n    routerHelper.configureStates(getStates(), '/start');\n    angularMomentConfig.format = 'DD.MM.YYYY';\n    // dieser call macht mit tests probleme, daher wird er fuer test auskommentiert\n    // not used anymore?\n    $rootScope.$on(TSAuthEvent_1.TSAuthEvent[TSAuthEvent_1.TSAuthEvent.LOGIN_SUCCESS], function () {\n        //do stuff if needed\n        if (ENV !== 'test') {\n            listResourceRS.getLaenderList(); //initial aufruefen damit cache populiert wird\n            mandantRS.getFirst();\n        }\n        //since we will need these lists anyway we already load on login\n        gesuchsperiodeRS.updateActiveGesuchsperiodenList();\n        gesuchsperiodeRS.updateNichtAbgeschlosseneGesuchsperiodenList();\n        gesuchModelManager.updateFachstellenList();\n        gesuchModelManager.updateActiveInstitutionenList();\n    });\n    $rootScope.$on(TSAuthEvent_1.TSAuthEvent[TSAuthEvent_1.TSAuthEvent.NOT_AUTHENTICATED], function () {\n        //user is not yet authenticated, show loginpage\n        var currentPath = angular.copy($location.absUrl());\n        console.log('going to login page wiht current path ', currentPath);\n        //wenn wir schon auf der lognseite oder im redirect sind redirecten wir nicht\n        if (currentPath.indexOf('fedletSSOInit') === -1\n            && ($state.current !== undefined && $state.current.name !== 'login')\n            && ($state.current !== undefined && $state.current.name !== 'locallogin')\n            && ($state.current !== undefined && $state.current.name !== 'schulung')\n            && currentPath.indexOf('sendRedirectForValidation') === -1) {\n            $state.go('login', { relayPath: currentPath, type: 'login' });\n        }\n        else {\n            console.log('supressing redirect to ', currentPath);\n        }\n    });\n    // Attempt to restore a user session upon startup\n    if (authServiceRS.initWithCookie()) {\n        $log.debug('logged in from cookie');\n    }\n    if (ENV !== 'test') {\n        //Hintergrundfarbe anpassen (testsystem kann zB andere Farbe haben)\n        var applicationPropertyRS = $injector.get('ApplicationPropertyRS');\n        applicationPropertyRS.getBackgroundColor().then(function (prop) {\n            if (prop && prop.value !== '#FFFFFF') {\n                angular.element('#Intro').css('background-color', prop.value);\n                angular.element('.user-menu').find('button').first().css('background', prop.value);\n            }\n        });\n    }\n    // Wir meochten eigentlich ueberall mit einem hotkey das formular submitten koennen\n    //https://github.com/chieffancypants/angular-hotkeys#angular-hotkeys-\n    hotkeys.add({\n        combo: 'ctrl+shift+x',\n        description: 'Press the last button with style class .next',\n        callback: function () {\n            $timeout(function () { return angular.element('.next').last().click(); });\n        }\n    });\n}\nexports.appRun = appRun;\nfunction getStates() {\n    return [];\n}\n",{"version":3,"file":"/home/imanol/projects/ebegu/ebegu-web/src/core/core.route.ts","sourceRoot":"","sources":["/home/imanol/projects/ebegu/ebegu-web/src/core/core.route.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Ki-Tax: System for the management of external childcare subsidies\n * Copyright (C) 2017 City of Bern Switzerland\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport {RouterHelper} from '../dvbModules/router/route-helper-provider';\nimport {IState, IStateService} from 'angular-ui-router';\nimport ListResourceRS from './service/listResourceRS.rest';\nimport {MandantRS} from './service/mandantRS.rest';\nimport {TSAuthEvent} from '../models/enums/TSAuthEvent';\nimport AuthServiceRS from '../authentication/service/AuthServiceRS.rest';\nimport TSUser from '../models/TSUser';\nimport {TSRoleUtil} from '../utils/TSRoleUtil';\nimport ErrorService from './errors/service/ErrorService';\nimport {ApplicationPropertyRS} from '../admin/service/applicationPropertyRS.rest';\nimport TSApplicationProperty from '../models/TSApplicationProperty';\nimport GesuchModelManager from '../gesuch/service/gesuchModelManager';\nimport GesuchsperiodeRS from './service/gesuchsperiodeRS.rest';\nimport IRootScopeService = angular.IRootScopeService;\nimport ITimeoutService = angular.ITimeoutService;\nimport ILocationService = angular.ILocationService;\nimport ILogService = angular.ILogService;\nimport IInjectorService = angular.auto.IInjectorService;\n\nappRun.$inject = ['angularMomentConfig', 'RouterHelper', 'ListResourceRS', 'MandantRS', '$injector', '$rootScope', 'hotkeys',\n    '$timeout', 'AuthServiceRS', '$state', '$location', '$window', '$log', 'ErrorService', 'GesuchModelManager', 'GesuchsperiodeRS'];\n\n/* @ngInject */\nexport function appRun(angularMomentConfig: any, routerHelper: RouterHelper, listResourceRS: ListResourceRS,\n                       mandantRS: MandantRS, $injector: IInjectorService, $rootScope: IRootScopeService, hotkeys: any, $timeout: ITimeoutService,\n                       authServiceRS: AuthServiceRS, $state: IStateService, $location: ILocationService, $window: ng.IWindowService,\n                       $log: ILogService, errorService: ErrorService, gesuchModelManager: GesuchModelManager,\n                       gesuchsperiodeRS: GesuchsperiodeRS) {\n    // navigationLogger.toggle();\n\n    // Fehler beim Navigieren ueber ui-route ins Log schreiben\n    $rootScope.$on('$stateChangeError', (event, toState, toParams, fromState, fromParams, error) => {\n        $log.error('Fehler beim Navigieren');\n        $log.error('$stateChangeError --- event, toState, toParams, fromState, fromParams, error');\n        $log.error(event, toState, toParams, fromState, fromParams, error);\n    });\n    //Normale Benutzer duefen nicht auf admin Seite\n    $rootScope.$on('$stateChangeStart',\n        (event, toState, toParams, fromState, fromParams, options) => {\n            let principal: TSUser = authServiceRS.getPrincipal();\n            let forbiddenPlaces = ['admin', 'institution', 'parameter', 'traegerschaft'];\n            let isAdmin: boolean = authServiceRS.isOneOfRoles(TSRoleUtil.getAdministratorRevisorRole());\n            if (toState && forbiddenPlaces.indexOf(toState.name) !== -1 && authServiceRS.getPrincipal() && !isAdmin) {\n                errorService.addMesageAsError('ERROR_UNAUTHORIZED');\n                $log.debug('prevented navigation to page because user is not admin');\n                event.preventDefault();\n            }\n        });\n    $rootScope.$on('$stateChangeSuccess', (event, toState, toParams, fromState, fromParams) => {\n        errorService.clearAll();\n    });\n\n    routerHelper.configureStates(getStates(), '/start');\n    angularMomentConfig.format = 'DD.MM.YYYY';\n    // dieser call macht mit tests probleme, daher wird er fuer test auskommentiert\n\n    // not used anymore?\n    $rootScope.$on(TSAuthEvent[TSAuthEvent.LOGIN_SUCCESS], () => {\n        //do stuff if needed\n        if (ENV !== 'test') {\n            listResourceRS.getLaenderList();  //initial aufruefen damit cache populiert wird\n            mandantRS.getFirst();\n        }\n        //since we will need these lists anyway we already load on login\n        gesuchsperiodeRS.updateActiveGesuchsperiodenList();\n        gesuchsperiodeRS.updateNichtAbgeschlosseneGesuchsperiodenList();\n        gesuchModelManager.updateFachstellenList();\n        gesuchModelManager.updateActiveInstitutionenList();\n    });\n\n    $rootScope.$on(TSAuthEvent[TSAuthEvent.NOT_AUTHENTICATED], () => {\n        //user is not yet authenticated, show loginpage\n\n        let currentPath = angular.copy($location.absUrl());\n        console.log('going to login page wiht current path ', currentPath);\n\n        //wenn wir schon auf der lognseite oder im redirect sind redirecten wir nicht\n        if (currentPath.indexOf('fedletSSOInit') === -1\n            && ($state.current !== undefined && $state.current.name !== 'login')\n            && ($state.current !== undefined && $state.current.name !== 'locallogin')\n            && ($state.current !== undefined && $state.current.name !== 'schulung')\n            && currentPath.indexOf('sendRedirectForValidation') === -1) {\n            $state.go('login', {relayPath: currentPath, type: 'login'});\n        } else {\n            console.log('supressing redirect to ', currentPath);\n        }\n\n    });\n\n    // Attempt to restore a user session upon startup\n    if (authServiceRS.initWithCookie()) {\n        $log.debug('logged in from cookie');\n    }\n\n    if (ENV !== 'test') {\n        //Hintergrundfarbe anpassen (testsystem kann zB andere Farbe haben)\n        let applicationPropertyRS = $injector.get<ApplicationPropertyRS>('ApplicationPropertyRS');\n        applicationPropertyRS.getBackgroundColor().then((prop: TSApplicationProperty) => {\n            if (prop && prop.value !== '#FFFFFF') {\n                angular.element('#Intro').css('background-color', prop.value);\n                angular.element('.user-menu').find('button').first().css('background', prop.value);\n            }\n        });\n    }\n\n    // Wir meochten eigentlich ueberall mit einem hotkey das formular submitten koennen\n    //https://github.com/chieffancypants/angular-hotkeys#angular-hotkeys-\n    hotkeys.add({\n        combo: 'ctrl+shift+x',\n        description: 'Press the last button with style class .next',\n        callback: function () {\n            $timeout(() => angular.element('.next').last().click());\n        }\n    });\n\n}\n\nfunction getStates(): IState[] {\n    return [\n        /* Add New States Above */\n    ];\n}\n"]}]}