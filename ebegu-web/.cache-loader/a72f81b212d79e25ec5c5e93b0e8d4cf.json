{"remainingRequest":"/home/imanol/projects/ebegu/ebegu-web/node_modules/thread-loader/dist/cjs.js??ref--0-1!/home/imanol/projects/ebegu/ebegu-web/node_modules/ts-loader/index.js??ref--0-2!/home/imanol/projects/ebegu/ebegu-web/src/core/service/reportRS.rest.ts","cacheIdentifier":"cache-loader:1.1.0 test","dependencies":[{"path":"/home/imanol/projects/ebegu/ebegu-web/src/core/service/reportRS.rest.ts","mtime":1518535855220},{"path":"/home/imanol/projects/ebegu/ebegu-web/node_modules/cache-loader/dist/cjs.js","mtime":1507514019000},{"path":"/home/imanol/projects/ebegu/ebegu-web/node_modules/thread-loader/dist/cjs.js","mtime":1507523420000},{"path":"/home/imanol/projects/ebegu/ebegu-web/node_modules/ts-loader/index.js","mtime":1508488471000}],"contextDependencies":[],"result":["/*\n * Ki-Tax: System for the management of external childcare subsidies\n * Copyright (C) 2017 City of Bern Switzerland\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\ndefine([\"require\", \"exports\", \"../../models/TSDownloadFile\"], function (require, exports, TSDownloadFile_1) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    var ReportRS = /** @class */ (function () {\n        /* @ngInject */\n        function ReportRS($httpParamSerializer, REST_API, $log, $window, ebeguRestUtil, $http) {\n            this.$window = $window;\n            this.reportingTimeout = 240000;\n            this.serviceURL = REST_API + 'reporting';\n            this.httpParamSerializer = $httpParamSerializer;\n            this.log = $log;\n            this.ebeguRestUtil = ebeguRestUtil;\n            this.http = $http;\n        }\n        ReportRS.prototype.getGesuchStichtagReportExcel = function (dateTimeStichtag, gesuchPeriodeID) {\n            var _this = this;\n            var reportParams = this.httpParamSerializer({\n                dateTimeStichtag: dateTimeStichtag,\n                gesuchPeriodeID: gesuchPeriodeID\n            });\n            return this.http.get(this.serviceURL + '/excel/gesuchStichtag?' + reportParams, { timeout: this.reportingTimeout })\n                .then(function (response) {\n                _this.log.debug('PARSING DownloadFile REST object ', response.data);\n                return _this.ebeguRestUtil.parseDownloadFile(new TSDownloadFile_1.default(), response.data);\n            });\n        };\n        ReportRS.prototype.getGesuchZeitraumReportExcel = function (dateTimeFrom, dateTimeTo, gesuchPeriodeID) {\n            var _this = this;\n            var reportParams = this.httpParamSerializer({\n                dateTimeFrom: dateTimeFrom,\n                dateTimeTo: dateTimeTo,\n                gesuchPeriodeID: gesuchPeriodeID\n            });\n            return this.http.get(this.serviceURL + '/excel/gesuchZeitraum?' + reportParams, { timeout: this.reportingTimeout })\n                .then(function (response) {\n                _this.log.debug('PARSING DownloadFile REST object ', response.data);\n                return _this.ebeguRestUtil.parseDownloadFile(new TSDownloadFile_1.default(), response.data);\n            });\n        };\n        ReportRS.prototype.getKantonReportExcel = function (auswertungVon, auswertungBis) {\n            var _this = this;\n            var reportParams = this.httpParamSerializer({\n                auswertungVon: auswertungVon,\n                auswertungBis: auswertungBis\n            });\n            return this.http.get(this.serviceURL + '/excel/kanton?' + reportParams, { timeout: this.reportingTimeout })\n                .then(function (response) {\n                _this.log.debug('PARSING DownloadFile REST object ', response.data);\n                return _this.ebeguRestUtil.parseDownloadFile(new TSDownloadFile_1.default(), response.data);\n            });\n        };\n        ReportRS.prototype.getMitarbeiterinnenReportExcel = function (auswertungVon, auswertungBis) {\n            var _this = this;\n            var reportParams = this.httpParamSerializer({\n                auswertungVon: auswertungVon,\n                auswertungBis: auswertungBis\n            });\n            return this.http.get(this.serviceURL + '/excel/mitarbeiterinnen?' + reportParams, { timeout: this.reportingTimeout })\n                .then(function (response) {\n                _this.log.debug('PARSING DownloadFile REST object ', response.data);\n                return _this.ebeguRestUtil.parseDownloadFile(new TSDownloadFile_1.default(), response.data);\n            });\n        };\n        ReportRS.prototype.getZahlungsauftragReportExcel = function (zahlungsauftragID) {\n            var _this = this;\n            var reportParams = this.httpParamSerializer({\n                zahlungsauftragID: zahlungsauftragID\n            });\n            return this.http.get(this.serviceURL + '/excel/zahlungsauftrag?' + reportParams, { timeout: this.reportingTimeout })\n                .then(function (response) {\n                _this.log.debug('PARSING DownloadFile REST object ', response.data);\n                return _this.ebeguRestUtil.parseDownloadFile(new TSDownloadFile_1.default(), response.data);\n            });\n        };\n        ReportRS.prototype.getZahlungReportExcel = function (zahlungID) {\n            var _this = this;\n            var reportParams = this.httpParamSerializer({\n                zahlungID: zahlungID\n            });\n            return this.http.get(this.serviceURL + '/excel/zahlung?' + reportParams, { timeout: this.reportingTimeout })\n                .then(function (response) {\n                _this.log.debug('PARSING DownloadFile REST object ', response.data);\n                return _this.ebeguRestUtil.parseDownloadFile(new TSDownloadFile_1.default(), response.data);\n            });\n        };\n        ReportRS.prototype.getZahlungPeriodeReportExcel = function (gesuchsperiode) {\n            var _this = this;\n            var reportParams = this.httpParamSerializer({\n                gesuchsperiodeID: gesuchsperiode\n            });\n            return this.http.get(this.serviceURL + '/excel/zahlungperiode?' + reportParams, { timeout: this.reportingTimeout })\n                .then(function (response) {\n                _this.log.debug('PARSING DownloadFile REST object ', response.data);\n                return _this.ebeguRestUtil.parseDownloadFile(new TSDownloadFile_1.default(), response.data);\n            });\n        };\n        ReportRS.prototype.getGesuchstellerKinderBetreuungReportExcel = function (auswertungVon, auswertungBis, gesuchPeriodeID) {\n            var _this = this;\n            var reportParams = this.httpParamSerializer({\n                auswertungVon: auswertungVon,\n                auswertungBis: auswertungBis,\n                gesuchPeriodeID: gesuchPeriodeID\n            });\n            return this.http.get(this.serviceURL + '/excel/gesuchstellerkinderbetreuung?' + reportParams, { timeout: this.reportingTimeout })\n                .then(function (response) {\n                _this.log.debug('PARSING DownloadFile REST object ', response.data);\n                return _this.ebeguRestUtil.parseDownloadFile(new TSDownloadFile_1.default(), response.data);\n            });\n        };\n        ReportRS.prototype.getKinderReportExcel = function (auswertungVon, auswertungBis, gesuchPeriodeID) {\n            var _this = this;\n            var reportParams = this.httpParamSerializer({\n                auswertungVon: auswertungVon,\n                auswertungBis: auswertungBis,\n                gesuchPeriodeID: gesuchPeriodeID\n            });\n            return this.http.get(this.serviceURL + '/excel/kinder?' + reportParams, { timeout: this.reportingTimeout })\n                .then(function (response) {\n                _this.log.debug('PARSING DownloadFile REST object ', response.data);\n                return _this.ebeguRestUtil.parseDownloadFile(new TSDownloadFile_1.default(), response.data);\n            });\n        };\n        ReportRS.prototype.getGesuchstellerReportExcel = function (stichtag) {\n            var _this = this;\n            var reportParams = this.httpParamSerializer({\n                stichtag: stichtag\n            });\n            return this.http.get(this.serviceURL + '/excel/gesuchsteller?' + reportParams, { timeout: this.reportingTimeout })\n                .then(function (response) {\n                _this.log.debug('PARSING DownloadFile REST object ', response.data);\n                return _this.ebeguRestUtil.parseDownloadFile(new TSDownloadFile_1.default(), response.data);\n            });\n        };\n        ReportRS.prototype.getServiceName = function () {\n            return 'ReportRS';\n        };\n        ReportRS.$inject = ['$httpParamSerializer', 'REST_API', '$log', '$window', 'EbeguRestUtil', '$http'];\n        return ReportRS;\n    }());\n    exports.ReportRS = ReportRS;\n});\n",{"version":3,"file":"/home/imanol/projects/ebegu/ebegu-web/src/core/service/reportRS.rest.ts","sourceRoot":"","sources":["/home/imanol/projects/ebegu/ebegu-web/src/core/service/reportRS.rest.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Ki-Tax: System for the management of external childcare subsidies\n * Copyright (C) 2017 City of Bern Switzerland\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport {IHttpParamSerializer, ILogService} from 'angular';\nimport TSDownloadFile from '../../models/TSDownloadFile';\nimport EbeguRestUtil from '../../utils/EbeguRestUtil';\nimport IPromise = angular.IPromise;\nimport IHttpService = angular.IHttpService;\n\nexport class ReportRS {\n    serviceURL: string;\n    httpParamSerializer: IHttpParamSerializer;\n    log: ILogService;\n    ebeguRestUtil: EbeguRestUtil;\n    http: IHttpService;\n    reportingTimeout: number = 240000;\n\n    static $inject = ['$httpParamSerializer', 'REST_API', '$log', '$window', 'EbeguRestUtil', '$http'];\n    /* @ngInject */\n    constructor($httpParamSerializer: IHttpParamSerializer, REST_API: string, $log: ILogService, private $window: ng.IWindowService, ebeguRestUtil: EbeguRestUtil, $http: IHttpService) {\n        this.serviceURL = REST_API + 'reporting';\n        this.httpParamSerializer = $httpParamSerializer;\n        this.log = $log;\n        this.ebeguRestUtil = ebeguRestUtil;\n        this.http = $http;\n    }\n\n    public getGesuchStichtagReportExcel(dateTimeStichtag: string, gesuchPeriodeID: string): IPromise<TSDownloadFile> {\n\n        let reportParams: string = this.httpParamSerializer({\n            dateTimeStichtag: dateTimeStichtag,\n            gesuchPeriodeID: gesuchPeriodeID\n        });\n\n        return this.http.get(this.serviceURL + '/excel/gesuchStichtag?' + reportParams, {timeout: this.reportingTimeout})\n            .then((response: any) => {\n                this.log.debug('PARSING DownloadFile REST object ', response.data);\n                return this.ebeguRestUtil.parseDownloadFile(new TSDownloadFile(), response.data);\n            });\n\n    }\n\n    public getGesuchZeitraumReportExcel(dateTimeFrom: string, dateTimeTo: string, gesuchPeriodeID: string): IPromise<TSDownloadFile> {\n\n        let reportParams: string = this.httpParamSerializer({\n            dateTimeFrom: dateTimeFrom,\n            dateTimeTo: dateTimeTo,\n            gesuchPeriodeID: gesuchPeriodeID\n        });\n\n        return this.http.get(this.serviceURL + '/excel/gesuchZeitraum?' + reportParams, {timeout: this.reportingTimeout})\n            .then((response: any) => {\n                this.log.debug('PARSING DownloadFile REST object ', response.data);\n                return this.ebeguRestUtil.parseDownloadFile(new TSDownloadFile(), response.data);\n            });\n    }\n\n    public getKantonReportExcel(auswertungVon: string, auswertungBis: string): IPromise<TSDownloadFile> {\n\n        let reportParams: string = this.httpParamSerializer({\n            auswertungVon: auswertungVon,\n            auswertungBis: auswertungBis\n        });\n\n        return this.http.get(this.serviceURL + '/excel/kanton?' + reportParams, {timeout: this.reportingTimeout})\n            .then((response: any) => {\n                this.log.debug('PARSING DownloadFile REST object ', response.data);\n                return this.ebeguRestUtil.parseDownloadFile(new TSDownloadFile(), response.data);\n            });\n    }\n\n    public getMitarbeiterinnenReportExcel(auswertungVon: string, auswertungBis: string): IPromise<TSDownloadFile> {\n        let reportParams: string = this.httpParamSerializer({\n            auswertungVon: auswertungVon,\n            auswertungBis: auswertungBis\n        });\n        return this.http.get(this.serviceURL + '/excel/mitarbeiterinnen?' + reportParams, {timeout: this.reportingTimeout})\n            .then((response: any) => {\n                this.log.debug('PARSING DownloadFile REST object ', response.data);\n                return this.ebeguRestUtil.parseDownloadFile(new TSDownloadFile(), response.data);\n            });\n    }\n\n    public getZahlungsauftragReportExcel(zahlungsauftragID: string): IPromise<TSDownloadFile> {\n\n        let reportParams: string = this.httpParamSerializer({\n            zahlungsauftragID: zahlungsauftragID\n        });\n\n        return this.http.get(this.serviceURL + '/excel/zahlungsauftrag?' + reportParams, {timeout: this.reportingTimeout})\n            .then((response: any) => {\n                this.log.debug('PARSING DownloadFile REST object ', response.data);\n                return this.ebeguRestUtil.parseDownloadFile(new TSDownloadFile(), response.data);\n            });\n    }\n\n    public getZahlungReportExcel(zahlungID: string): IPromise<TSDownloadFile> {\n\n        let reportParams: string = this.httpParamSerializer({\n            zahlungID: zahlungID\n        });\n\n        return this.http.get(this.serviceURL + '/excel/zahlung?' + reportParams, {timeout: this.reportingTimeout})\n            .then((response: any) => {\n                this.log.debug('PARSING DownloadFile REST object ', response.data);\n                return this.ebeguRestUtil.parseDownloadFile(new TSDownloadFile(), response.data);\n            });\n    }\n\n    public getZahlungPeriodeReportExcel(gesuchsperiode: string): IPromise<TSDownloadFile> {\n        let reportParams: string = this.httpParamSerializer({\n            gesuchsperiodeID: gesuchsperiode\n        });\n\n        return this.http.get(this.serviceURL + '/excel/zahlungperiode?' + reportParams, {timeout: this.reportingTimeout})\n            .then((response: any) => {\n                this.log.debug('PARSING DownloadFile REST object ', response.data);\n                return this.ebeguRestUtil.parseDownloadFile(new TSDownloadFile(), response.data);\n            });\n\n    }\n\n    public getGesuchstellerKinderBetreuungReportExcel(auswertungVon: string, auswertungBis: string, gesuchPeriodeID: string): IPromise<TSDownloadFile> {\n        let reportParams: string = this.httpParamSerializer({\n            auswertungVon: auswertungVon,\n            auswertungBis: auswertungBis,\n            gesuchPeriodeID: gesuchPeriodeID\n        });\n        return this.http.get(this.serviceURL + '/excel/gesuchstellerkinderbetreuung?' + reportParams, {timeout: this.reportingTimeout})\n            .then((response: any) => {\n                this.log.debug('PARSING DownloadFile REST object ', response.data);\n                return this.ebeguRestUtil.parseDownloadFile(new TSDownloadFile(), response.data);\n            });\n    }\n\n    public getKinderReportExcel(auswertungVon: string, auswertungBis: string, gesuchPeriodeID: string): IPromise<TSDownloadFile> {\n        let reportParams: string = this.httpParamSerializer({\n            auswertungVon: auswertungVon,\n            auswertungBis: auswertungBis,\n            gesuchPeriodeID: gesuchPeriodeID\n        });\n        return this.http.get(this.serviceURL + '/excel/kinder?' + reportParams, {timeout: this.reportingTimeout})\n            .then((response: any) => {\n                this.log.debug('PARSING DownloadFile REST object ', response.data);\n                return this.ebeguRestUtil.parseDownloadFile(new TSDownloadFile(), response.data);\n            });\n    }\n\n    public getGesuchstellerReportExcel(stichtag: string): IPromise<TSDownloadFile> {\n        let reportParams: string = this.httpParamSerializer({\n            stichtag: stichtag\n        });\n        return this.http.get(this.serviceURL + '/excel/gesuchsteller?' + reportParams, {timeout: this.reportingTimeout})\n            .then((response: any) => {\n                this.log.debug('PARSING DownloadFile REST object ', response.data);\n                return this.ebeguRestUtil.parseDownloadFile(new TSDownloadFile(), response.data);\n            });\n    }\n\n\n    public getServiceName(): string {\n        return 'ReportRS';\n    }\n}\n"]}]}