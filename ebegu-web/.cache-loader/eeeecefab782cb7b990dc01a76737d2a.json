{"remainingRequest":"/home/imanol/projects/ebegu/ebegu-web/node_modules/thread-loader/dist/cjs.js??ref--0-1!/home/imanol/projects/ebegu/ebegu-web/node_modules/ts-loader/index.js??ref--0-2!/home/imanol/projects/ebegu/ebegu-web/src/gesuch/service/exportRS.rest.ts","cacheIdentifier":"cache-loader:1.1.0 test","dependencies":[{"path":"/home/imanol/projects/ebegu/ebegu-web/src/gesuch/service/exportRS.rest.ts","mtime":1512484412019},{"path":"/home/imanol/projects/ebegu/ebegu-web/node_modules/cache-loader/dist/cjs.js","mtime":1507514019000},{"path":"/home/imanol/projects/ebegu/ebegu-web/node_modules/thread-loader/dist/cjs.js","mtime":1507523420000},{"path":"/home/imanol/projects/ebegu/ebegu-web/node_modules/ts-loader/index.js","mtime":1508488471000}],"contextDependencies":[],"result":["\"use strict\";\n/*\n * Ki-Tax: System for the management of external childcare subsidies\n * Copyright (C) 2017 City of Bern Switzerland\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ExportRS = /** @class */ (function () {\n    /* @ngInject */\n    function ExportRS($http, REST_API, ebeguRestUtil, $log) {\n        this.$log = $log;\n        this.serviceURL = REST_API + 'export';\n        this.http = $http;\n        this.ebeguRestUtil = ebeguRestUtil;\n    }\n    ExportRS.prototype.exportVerfuegungenOfAntrag = function (gesuchID) {\n        var _this = this;\n        return this.http.get(this.serviceURL + '/gesuch/' + encodeURIComponent(gesuchID), {}).then(function (response) {\n            _this.$log.debug('PARSING fall REST object ', response.data);\n            return response.data;\n        });\n    };\n    ExportRS.prototype.getJsonSchemaString = function () {\n        return this.http.get(this.serviceURL + '/meta/jsonschema').then(function (response) {\n            return JSON.stringify(response.data, undefined, 2); //prettyprint\n        });\n    };\n    ExportRS.prototype.getXmlSchemaString = function () {\n        return this.http.get(this.serviceURL + '/meta/xsd').then(function (response) {\n            return response.data;\n        });\n    };\n    ExportRS.$inject = ['$http', 'REST_API', 'EbeguRestUtil', '$log'];\n    return ExportRS;\n}());\nexports.default = ExportRS;\n",{"version":3,"file":"/home/imanol/projects/ebegu/ebegu-web/src/gesuch/service/exportRS.rest.ts","sourceRoot":"","sources":["/home/imanol/projects/ebegu/ebegu-web/src/gesuch/service/exportRS.rest.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;GAaG;;AAKH;IAMI,eAAe;IACf,kBAAY,KAAmB,EAAE,QAAgB,EAAE,aAA4B,EAAU,IAAiB;QAAjB,SAAI,GAAJ,IAAI,CAAa;QACtG,IAAI,CAAC,UAAU,GAAG,QAAQ,GAAG,QAAQ,CAAC;QACtC,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;QAClB,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;IACvC,CAAC;IAEM,6CAA0B,GAAjC,UAAkC,QAAgB;QAAlD,iBAKC;QAJG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,GAAG,UAAU,GAAG,kBAAkB,CAAC,QAAQ,CAAC,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,UAAC,QAAa;YACrG,KAAI,CAAC,IAAI,CAAC,KAAK,CAAC,2BAA2B,EAAE,QAAQ,CAAC,IAAI,CAAC,CAAC;YAC5D,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC;QACzB,CAAC,CAAC,CAAC;IACP,CAAC;IAEM,sCAAmB,GAA1B;QACI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,GAAG,kBAAkB,CAAC,CAAC,IAAI,CAAC,UAAC,QAAa;YAC1E,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,EAAE,SAAS,EAAE,CAAC,CAAC,CAAC,CAAE,aAAa;QACtE,CAAC,CAAC,CAAC;IACP,CAAC;IAEM,qCAAkB,GAAzB;QACI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,GAAG,WAAW,CAAC,CAAC,IAAI,CAAC,UAAC,QAAa;YACnE,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC;QACzB,CAAC,CAAC,CAAC;IACP,CAAC;IAzBM,gBAAO,GAAG,CAAC,OAAO,EAAE,UAAU,EAAE,eAAe,EAAE,MAAM,CAAC,CAAC;IA2BpE,eAAC;CAAA,AAhCD,IAgCC;kBAhCoB,QAAQ","sourcesContent":["/*\n * Ki-Tax: System for the management of external childcare subsidies\n * Copyright (C) 2017 City of Bern Switzerland\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport {IHttpService, ILogService, IPromise} from 'angular';\nimport EbeguRestUtil from '../../utils/EbeguRestUtil';\n\nexport default class ExportRS {\n    serviceURL: string;\n    http: IHttpService;\n    ebeguRestUtil: EbeguRestUtil;\n\n    static $inject = ['$http', 'REST_API', 'EbeguRestUtil', '$log'];\n    /* @ngInject */\n    constructor($http: IHttpService, REST_API: string, ebeguRestUtil: EbeguRestUtil, private $log: ILogService) {\n        this.serviceURL = REST_API + 'export';\n        this.http = $http;\n        this.ebeguRestUtil = ebeguRestUtil;\n    }\n\n    public exportVerfuegungenOfAntrag(gesuchID: string): IPromise<any> {\n        return this.http.get(this.serviceURL + '/gesuch/' + encodeURIComponent(gesuchID), {}).then((response: any) => {\n            this.$log.debug('PARSING fall REST object ', response.data);\n            return response.data;\n        });\n    }\n\n    public getJsonSchemaString(): IPromise<any> {\n        return this.http.get(this.serviceURL + '/meta/jsonschema').then((response: any) => {\n            return JSON.stringify(response.data, undefined, 2);  //prettyprint\n        });\n    }\n\n    public getXmlSchemaString(): IPromise<any> {\n        return this.http.get(this.serviceURL + '/meta/xsd').then((response: any) => {\n            return response.data;\n        });\n    }\n\n}\n"]}]}