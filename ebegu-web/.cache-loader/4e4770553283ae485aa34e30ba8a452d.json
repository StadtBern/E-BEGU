{"remainingRequest":"/home/imanol/projects/ebegu/ebegu-web/node_modules/thread-loader/dist/cjs.js??ref--0-1!/home/imanol/projects/ebegu/ebegu-web/node_modules/ts-loader/index.js??ref--0-2!/home/imanol/projects/ebegu/ebegu-web/src/gesuch/component/einkommensverschlechterungResultateView/einkommensverschlechterungResultateView.ts","cacheIdentifier":"cache-loader:1.1.0 test","dependencies":[{"path":"/home/imanol/projects/ebegu/ebegu-web/src/gesuch/component/einkommensverschlechterungResultateView/einkommensverschlechterungResultateView.ts","mtime":1512484412011},{"path":"/home/imanol/projects/ebegu/ebegu-web/node_modules/cache-loader/dist/cjs.js","mtime":1507514019000},{"path":"/home/imanol/projects/ebegu/ebegu-web/node_modules/thread-loader/dist/cjs.js","mtime":1507523420000},{"path":"/home/imanol/projects/ebegu/ebegu-web/node_modules/ts-loader/index.js","mtime":1508488471000}],"contextDependencies":[],"result":["\"use strict\";\n/*\n * Ki-Tax: System for the management of external childcare subsidies\n * Copyright (C) 2017 City of Bern Switzerland\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar abstractGesuchView_1 = require(\"../abstractGesuchView\");\nvar TSWizardStepStatus_1 = require(\"../../../models/enums/TSWizardStepStatus\");\nvar TSWizardStepName_1 = require(\"../../../models/enums/TSWizardStepName\");\nvar TSFinanzModel_1 = require(\"../../../models/TSFinanzModel\");\nvar TSRoleUtil_1 = require(\"../../../utils/TSRoleUtil\");\nvar template = require('./einkommensverschlechterungResultateView.html');\nrequire('./einkommensverschlechterungResultateView.less');\nvar EinkommensverschlechterungResultateViewComponentConfig = /** @class */ (function () {\n    function EinkommensverschlechterungResultateViewComponentConfig() {\n        this.transclude = false;\n        this.template = template;\n        this.controller = EinkommensverschlechterungResultateViewController;\n        this.controllerAs = 'vm';\n    }\n    return EinkommensverschlechterungResultateViewComponentConfig;\n}());\nexports.EinkommensverschlechterungResultateViewComponentConfig = EinkommensverschlechterungResultateViewComponentConfig;\n/**\n * Controller fuer die Finanzielle Situation\n */\nvar EinkommensverschlechterungResultateViewController = /** @class */ (function (_super) {\n    __extends(EinkommensverschlechterungResultateViewController, _super);\n    /* @ngInject */\n    function EinkommensverschlechterungResultateViewController($stateParams, gesuchModelManager, berechnungsManager, errorService, wizardStepManager, $q, $scope, authServiceRS, $timeout) {\n        var _this = _super.call(this, gesuchModelManager, berechnungsManager, wizardStepManager, $scope, TSWizardStepName_1.TSWizardStepName.EINKOMMENSVERSCHLECHTERUNG, $timeout) || this;\n        _this.errorService = errorService;\n        _this.$q = $q;\n        _this.authServiceRS = authServiceRS;\n        var parsedBasisJahrPlusNum = parseInt($stateParams.basisjahrPlus, 10);\n        _this.model = new TSFinanzModel_1.default(_this.gesuchModelManager.getBasisjahr(), _this.gesuchModelManager.isGesuchsteller2Required(), null, parsedBasisJahrPlusNum);\n        _this.model.copyEkvDataFromGesuch(_this.gesuchModelManager.getGesuch());\n        _this.model.copyFinSitDataFromGesuch(_this.gesuchModelManager.getGesuch());\n        _this.gesuchModelManager.setBasisJahrPlusNumber(parsedBasisJahrPlusNum);\n        _this.calculate();\n        _this.resultatBasisjahr = null;\n        _this.calculateResultateVorjahr();\n        return _this;\n    }\n    EinkommensverschlechterungResultateViewController.prototype.showGS2 = function () {\n        return this.model.isGesuchsteller2Required();\n    };\n    EinkommensverschlechterungResultateViewController.prototype.showResult = function () {\n        if (this.model.getBasisJahrPlus() === 1) {\n            var ekvFuerBasisJahrPlus1 = this.model.einkommensverschlechterungInfoContainer.einkommensverschlechterungInfoJA.ekvFuerBasisJahrPlus1\n                && this.model.einkommensverschlechterungInfoContainer.einkommensverschlechterungInfoJA.ekvFuerBasisJahrPlus1 === true;\n            return ekvFuerBasisJahrPlus1 === true;\n        }\n        else {\n            return true;\n        }\n    };\n    EinkommensverschlechterungResultateViewController.prototype.save = function () {\n        var _this = this;\n        if (this.isGesuchValid()) {\n            if (!this.form.$dirty) {\n                // If there are no changes in form we don't need anything to update on Server and we could return the\n                // promise immediately\n                // Update wizardStepStatus also if the form is empty and not dirty\n                return this.updateStatus(false);\n            }\n            this.model.copyEkvSitDataToGesuch(this.gesuchModelManager.getGesuch());\n            this.errorService.clearAll();\n            if (this.gesuchModelManager.getGesuch().gesuchsteller1) {\n                this.gesuchModelManager.setGesuchstellerNumber(1);\n                if (this.gesuchModelManager.getGesuch().gesuchsteller2) {\n                    return this.gesuchModelManager.saveEinkommensverschlechterungContainer().then(function () {\n                        _this.gesuchModelManager.setGesuchstellerNumber(2);\n                        return _this.gesuchModelManager.saveEinkommensverschlechterungContainer().then(function () {\n                            return _this.updateStatus(true);\n                        });\n                    });\n                }\n                else {\n                    return this.gesuchModelManager.saveEinkommensverschlechterungContainer().then(function () {\n                        return _this.updateStatus(true);\n                    });\n                }\n            }\n        }\n        return undefined;\n    };\n    /**\n     * Hier wird der Status von WizardStep auf OK (MUTIERT fuer Mutationen) aktualisiert aber nur wenn es die letzt Seite EVResultate\n     * gespeichert wird. Sonst liefern wir einfach den aktuellen GS als Promise zurueck.\n     */\n    EinkommensverschlechterungResultateViewController.prototype.updateStatus = function (changes) {\n        if (this.isLastEinkVersStep()) {\n            if (this.gesuchModelManager.getGesuch().isMutation()) {\n                if (this.wizardStepManager.getCurrentStep().wizardStepStatus === TSWizardStepStatus_1.TSWizardStepStatus.NOK || changes) {\n                    return this.wizardStepManager.updateCurrentWizardStepStatusMutiert();\n                }\n            }\n            else {\n                return this.wizardStepManager.updateCurrentWizardStepStatus(TSWizardStepStatus_1.TSWizardStepStatus.OK);\n            }\n        }\n        return this.$q.when(this.gesuchModelManager.getStammdatenToWorkWith()); //wenn nichts gespeichert einfach den aktuellen GS zurueckgeben\n    };\n    EinkommensverschlechterungResultateViewController.prototype.calculate = function () {\n        var _this = this;\n        if (this.model && this.model.getBasisJahrPlus()) {\n            this.berechnungsManager\n                .calculateEinkommensverschlechterungTemp(this.model, this.model.getBasisJahrPlus())\n                .then(function () {\n                _this.resultatProzent = _this.calculateVeraenderung();\n            });\n        }\n        else {\n            console.log('No gesuch and Basisjahr to calculate');\n        }\n    };\n    EinkommensverschlechterungResultateViewController.prototype.getEinkommensverschlechterungContainerGS1 = function () {\n        return this.model.einkommensverschlechterungContainerGS1;\n    };\n    EinkommensverschlechterungResultateViewController.prototype.getEinkommensverschlechterungGS1_GS = function () {\n        if (this.model.getBasisJahrPlus() === 2) {\n            return this.getEinkommensverschlechterungContainerGS1().ekvGSBasisJahrPlus2;\n        }\n        else {\n            return this.getEinkommensverschlechterungContainerGS1().ekvGSBasisJahrPlus1;\n        }\n    };\n    EinkommensverschlechterungResultateViewController.prototype.getEinkommensverschlechterungGS1_JA = function () {\n        if (this.model.getBasisJahrPlus() === 2) {\n            return this.getEinkommensverschlechterungContainerGS1().ekvJABasisJahrPlus2;\n        }\n        else {\n            return this.getEinkommensverschlechterungContainerGS1().ekvJABasisJahrPlus1;\n        }\n    };\n    EinkommensverschlechterungResultateViewController.prototype.getEinkommensverschlechterungContainerGS2 = function () {\n        return this.model.einkommensverschlechterungContainerGS2;\n    };\n    EinkommensverschlechterungResultateViewController.prototype.getEinkommensverschlechterungGS2_GS = function () {\n        if (this.model.getBasisJahrPlus() === 2) {\n            return this.getEinkommensverschlechterungContainerGS2().ekvGSBasisJahrPlus2;\n        }\n        else {\n            return this.getEinkommensverschlechterungContainerGS2().ekvGSBasisJahrPlus1;\n        }\n    };\n    EinkommensverschlechterungResultateViewController.prototype.getEinkommensverschlechterungGS2_JA = function () {\n        if (this.model.getBasisJahrPlus() === 2) {\n            return this.getEinkommensverschlechterungContainerGS2().ekvJABasisJahrPlus2;\n        }\n        else {\n            return this.getEinkommensverschlechterungContainerGS2().ekvJABasisJahrPlus1;\n        }\n    };\n    EinkommensverschlechterungResultateViewController.prototype.getResultate = function () {\n        if (this.model.getBasisJahrPlus() === 2) {\n            return this.berechnungsManager.einkommensverschlechterungResultateBjP2;\n        }\n        else {\n            return this.berechnungsManager.einkommensverschlechterungResultateBjP1;\n        }\n    };\n    EinkommensverschlechterungResultateViewController.prototype.calculateResultateVorjahr = function () {\n        var _this = this;\n        this.berechnungsManager.calculateFinanzielleSituationTemp(this.model).then(function (resultatVorjahr) {\n            _this.resultatBasisjahr = resultatVorjahr;\n            _this.resultatProzent = _this.calculateVeraenderung();\n        });\n    };\n    /**\n     *\n     * @returns {string} Veraenderung im Prozent im vergleich zum Vorjahr\n     */\n    EinkommensverschlechterungResultateViewController.prototype.calculateVeraenderung = function () {\n        if (this.resultatBasisjahr) {\n            var massgebendesEinkVorAbzFamGr = this.getResultate().massgebendesEinkVorAbzFamGr;\n            var massgebendesEinkVorAbzFamGrBJ = this.resultatBasisjahr.massgebendesEinkVorAbzFamGr;\n            if (massgebendesEinkVorAbzFamGr && massgebendesEinkVorAbzFamGrBJ) {\n                // we divide it by 10000 because we need a result with two decimals\n                var promil = 10000 - (massgebendesEinkVorAbzFamGr * 10000 / massgebendesEinkVorAbzFamGrBJ);\n                var sign = void 0;\n                promil = Math.round(promil);\n                if (promil > 0) {\n                    sign = '- ';\n                }\n                else {\n                    sign = '+ ';\n                }\n                return sign + (Math.abs(promil) / 100).toFixed(2) + ' %';\n            }\n            else if (!massgebendesEinkVorAbzFamGr && !massgebendesEinkVorAbzFamGrBJ) {\n                // case: Kein Einkommen in diesem Jahr und im letzten Jahr\n                return '+ 0.00 %';\n            }\n            else if (!massgebendesEinkVorAbzFamGr) {\n                // case: Kein Einkommen in diesem Jahr aber Einkommen im letzten Jahr\n                return '- 100.00 %';\n            }\n            else {\n                // case: Kein Einkommen im letzten Jahr aber Einkommen in diesem Jahr\n                return '+ 100.00 %';\n            }\n        }\n        return '';\n    };\n    /**\n     * Prueft ob es die letzte Seite von EVResultate ist. Es ist die letzte Seite wenn es zum letzten EV-Jahr gehoert\n     * @returns {boolean}\n     */\n    EinkommensverschlechterungResultateViewController.prototype.isLastEinkVersStep = function () {\n        // Letztes Jahr haengt von den eingegebenen Daten ab\n        return (this.gesuchModelManager.getGesuch().extractEinkommensverschlechterungInfo().ekvFuerBasisJahrPlus2 && this.gesuchModelManager.basisJahrPlusNumber === 2)\n            || (!this.gesuchModelManager.getGesuch().extractEinkommensverschlechterungInfo().ekvFuerBasisJahrPlus2 && this.gesuchModelManager.basisJahrPlusNumber === 1);\n    };\n    /**\n     * Da fuer STEUERAMT der Step EINKOMMENSVERSCHLECHTERUNG der letzte ist, muss man den Button next verstecken, wenn wir\n     * wirklich im LastEinkVersStep sind.\n     * Fuer alle andere rollen wird der Button immer eingeblendet\n     */\n    EinkommensverschlechterungResultateViewController.prototype.isSteueramtLetzterStep = function () {\n        if (this.authServiceRS.isOneOfRoles(TSRoleUtil_1.TSRoleUtil.getSteueramtOnlyRoles())) {\n            return this.isLastEinkVersStep();\n        }\n        return false;\n    };\n    EinkommensverschlechterungResultateViewController.$inject = ['$stateParams', 'GesuchModelManager', 'BerechnungsManager', 'ErrorService',\n        'WizardStepManager', '$q', '$scope', 'AuthServiceRS', '$timeout'];\n    return EinkommensverschlechterungResultateViewController;\n}(abstractGesuchView_1.default));\nexports.EinkommensverschlechterungResultateViewController = EinkommensverschlechterungResultateViewController;\n",{"version":3,"file":"/home/imanol/projects/ebegu/ebegu-web/src/gesuch/component/einkommensverschlechterungResultateView/einkommensverschlechterungResultateView.ts","sourceRoot":"","sources":["/home/imanol/projects/ebegu/ebegu-web/src/gesuch/component/einkommensverschlechterungResultateView/einkommensverschlechterungResultateView.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Ki-Tax: System for the management of external childcare subsidies\n * Copyright (C) 2017 City of Bern Switzerland\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport {IComponentOptions, IPromise} from 'angular';\nimport AbstractGesuchViewController from '../abstractGesuchView';\nimport GesuchModelManager from '../../service/gesuchModelManager';\nimport {IEinkommensverschlechterungResultateStateParams} from '../../gesuch.route';\nimport BerechnungsManager from '../../service/berechnungsManager';\nimport TSFinanzielleSituationResultateDTO from '../../../models/dto/TSFinanzielleSituationResultateDTO';\nimport ErrorService from '../../../core/errors/service/ErrorService';\nimport TSEinkommensverschlechterungContainer from '../../../models/TSEinkommensverschlechterungContainer';\nimport TSEinkommensverschlechterung from '../../../models/TSEinkommensverschlechterung';\nimport WizardStepManager from '../../service/wizardStepManager';\nimport {TSWizardStepStatus} from '../../../models/enums/TSWizardStepStatus';\nimport {TSWizardStepName} from '../../../models/enums/TSWizardStepName';\nimport TSFinanzModel from '../../../models/TSFinanzModel';\nimport AuthServiceRS from '../../../authentication/service/AuthServiceRS.rest';\nimport {TSRoleUtil} from '../../../utils/TSRoleUtil';\nimport IQService = angular.IQService;\nimport IScope = angular.IScope;\nimport ITimeoutService = angular.ITimeoutService;\n\nlet template = require('./einkommensverschlechterungResultateView.html');\nrequire('./einkommensverschlechterungResultateView.less');\n\nexport class EinkommensverschlechterungResultateViewComponentConfig implements IComponentOptions {\n    transclude = false;\n    template = template;\n    controller = EinkommensverschlechterungResultateViewController;\n    controllerAs = 'vm';\n}\n\n/**\n * Controller fuer die Finanzielle Situation\n */\nexport class EinkommensverschlechterungResultateViewController extends AbstractGesuchViewController<TSFinanzModel> {\n\n    resultatBasisjahr: TSFinanzielleSituationResultateDTO;\n    resultatProzent: string;\n\n    static $inject: string[] = ['$stateParams', 'GesuchModelManager', 'BerechnungsManager', 'ErrorService',\n        'WizardStepManager', '$q', '$scope', 'AuthServiceRS', '$timeout'];\n\n    /* @ngInject */\n    constructor($stateParams: IEinkommensverschlechterungResultateStateParams, gesuchModelManager: GesuchModelManager,\n                berechnungsManager: BerechnungsManager, private errorService: ErrorService,\n                wizardStepManager: WizardStepManager, private $q: IQService, $scope: IScope, private authServiceRS: AuthServiceRS,\n                $timeout: ITimeoutService) {\n        super(gesuchModelManager, berechnungsManager, wizardStepManager, $scope, TSWizardStepName.EINKOMMENSVERSCHLECHTERUNG, $timeout);\n        let parsedBasisJahrPlusNum = parseInt($stateParams.basisjahrPlus, 10);\n        this.model = new TSFinanzModel(this.gesuchModelManager.getBasisjahr(), this.gesuchModelManager.isGesuchsteller2Required(), null, parsedBasisJahrPlusNum);\n        this.model.copyEkvDataFromGesuch(this.gesuchModelManager.getGesuch());\n        this.model.copyFinSitDataFromGesuch(this.gesuchModelManager.getGesuch());\n        this.gesuchModelManager.setBasisJahrPlusNumber(parsedBasisJahrPlusNum);\n        this.calculate();\n        this.resultatBasisjahr = null;\n        this.calculateResultateVorjahr();\n    }\n\n    showGS2(): boolean {\n        return this.model.isGesuchsteller2Required();\n    }\n\n    showResult(): boolean {\n        if (this.model.getBasisJahrPlus() === 1) {\n            let ekvFuerBasisJahrPlus1 = this.model.einkommensverschlechterungInfoContainer.einkommensverschlechterungInfoJA.ekvFuerBasisJahrPlus1\n                && this.model.einkommensverschlechterungInfoContainer.einkommensverschlechterungInfoJA.ekvFuerBasisJahrPlus1 === true;\n            return ekvFuerBasisJahrPlus1 === true;\n\n        } else {\n            return true;\n        }\n    }\n\n    private save(): IPromise<void> {\n        if (this.isGesuchValid()) {\n            if (!this.form.$dirty) {\n                // If there are no changes in form we don't need anything to update on Server and we could return the\n                // promise immediately\n                // Update wizardStepStatus also if the form is empty and not dirty\n                return this.updateStatus(false);\n            }\n\n            this.model.copyEkvSitDataToGesuch(this.gesuchModelManager.getGesuch());\n            this.errorService.clearAll();\n            if (this.gesuchModelManager.getGesuch().gesuchsteller1) {\n                this.gesuchModelManager.setGesuchstellerNumber(1);\n                if (this.gesuchModelManager.getGesuch().gesuchsteller2) {\n                    return this.gesuchModelManager.saveEinkommensverschlechterungContainer().then(() => {\n                        this.gesuchModelManager.setGesuchstellerNumber(2);\n                        return this.gesuchModelManager.saveEinkommensverschlechterungContainer().then(() => {\n                            return this.updateStatus(true);\n                        });\n                    });\n                } else {\n                    return this.gesuchModelManager.saveEinkommensverschlechterungContainer().then(() => {\n                        return this.updateStatus(true);\n                    });\n                }\n            }\n        }\n        return undefined;\n    }\n\n    /**\n     * Hier wird der Status von WizardStep auf OK (MUTIERT fuer Mutationen) aktualisiert aber nur wenn es die letzt Seite EVResultate\n     * gespeichert wird. Sonst liefern wir einfach den aktuellen GS als Promise zurueck.\n     */\n    private updateStatus(changes: boolean): IPromise<any> {\n        if (this.isLastEinkVersStep()) {\n            if (this.gesuchModelManager.getGesuch().isMutation()) {\n                if (this.wizardStepManager.getCurrentStep().wizardStepStatus === TSWizardStepStatus.NOK || changes) {\n                    return this.wizardStepManager.updateCurrentWizardStepStatusMutiert();\n                }\n            } else {\n                return this.wizardStepManager.updateCurrentWizardStepStatus(TSWizardStepStatus.OK);\n            }\n        }\n        return this.$q.when(this.gesuchModelManager.getStammdatenToWorkWith()); //wenn nichts gespeichert einfach den aktuellen GS zurueckgeben\n\n    }\n\n    calculate() {\n        if (this.model && this.model.getBasisJahrPlus()) {\n            this.berechnungsManager\n                .calculateEinkommensverschlechterungTemp(this.model, this.model.getBasisJahrPlus())\n                .then(() => {\n                    this.resultatProzent = this.calculateVeraenderung();\n                });\n        } else {\n            console.log('No gesuch and Basisjahr to calculate');\n        }\n    }\n\n    public getEinkommensverschlechterungContainerGS1(): TSEinkommensverschlechterungContainer {\n        return this.model.einkommensverschlechterungContainerGS1;\n    }\n\n    public getEinkommensverschlechterungGS1_GS(): TSEinkommensverschlechterung {\n        if (this.model.getBasisJahrPlus() === 2) {\n            return this.getEinkommensverschlechterungContainerGS1().ekvGSBasisJahrPlus2;\n        } else {\n            return this.getEinkommensverschlechterungContainerGS1().ekvGSBasisJahrPlus1;\n        }\n    }\n\n    public getEinkommensverschlechterungGS1_JA(): TSEinkommensverschlechterung {\n        if (this.model.getBasisJahrPlus() === 2) {\n            return this.getEinkommensverschlechterungContainerGS1().ekvJABasisJahrPlus2;\n        } else {\n            return this.getEinkommensverschlechterungContainerGS1().ekvJABasisJahrPlus1;\n        }\n    }\n\n    public getEinkommensverschlechterungContainerGS2(): TSEinkommensverschlechterungContainer {\n        return this.model.einkommensverschlechterungContainerGS2;\n    }\n\n    public getEinkommensverschlechterungGS2_GS(): TSEinkommensverschlechterung {\n        if (this.model.getBasisJahrPlus() === 2) {\n            return this.getEinkommensverschlechterungContainerGS2().ekvGSBasisJahrPlus2;\n        } else {\n            return this.getEinkommensverschlechterungContainerGS2().ekvGSBasisJahrPlus1;\n        }\n    }\n\n    public getEinkommensverschlechterungGS2_JA(): TSEinkommensverschlechterung {\n        if (this.model.getBasisJahrPlus() === 2) {\n            return this.getEinkommensverschlechterungContainerGS2().ekvJABasisJahrPlus2;\n        } else {\n            return this.getEinkommensverschlechterungContainerGS2().ekvJABasisJahrPlus1;\n        }\n    }\n\n    public getResultate(): TSFinanzielleSituationResultateDTO {\n        if (this.model.getBasisJahrPlus() === 2) {\n            return this.berechnungsManager.einkommensverschlechterungResultateBjP2;\n        } else {\n            return this.berechnungsManager.einkommensverschlechterungResultateBjP1;\n        }\n    }\n\n    public calculateResultateVorjahr() {\n\n        this.berechnungsManager.calculateFinanzielleSituationTemp(this.model).then((resultatVorjahr) => {\n            this.resultatBasisjahr = resultatVorjahr;\n            this.resultatProzent = this.calculateVeraenderung();\n        });\n    }\n\n    /**\n     *\n     * @returns {string} Veraenderung im Prozent im vergleich zum Vorjahr\n     */\n    public calculateVeraenderung(): string {\n        if (this.resultatBasisjahr) {\n\n            let massgebendesEinkVorAbzFamGr = this.getResultate().massgebendesEinkVorAbzFamGr;\n            let massgebendesEinkVorAbzFamGrBJ = this.resultatBasisjahr.massgebendesEinkVorAbzFamGr;\n            if (massgebendesEinkVorAbzFamGr && massgebendesEinkVorAbzFamGrBJ) {\n\n                // we divide it by 10000 because we need a result with two decimals\n                let promil: number = 10000 - (massgebendesEinkVorAbzFamGr * 10000 / massgebendesEinkVorAbzFamGrBJ);\n                let sign: string;\n                promil = Math.round(promil);\n                if (promil > 0) {\n                    sign = '- ';\n                } else {\n                    sign = '+ ';\n                }\n                return sign + (Math.abs(promil) / 100).toFixed(2) + ' %';\n            } else if (!massgebendesEinkVorAbzFamGr && !massgebendesEinkVorAbzFamGrBJ) {\n                // case: Kein Einkommen in diesem Jahr und im letzten Jahr\n                return '+ 0.00 %';\n            } else if (!massgebendesEinkVorAbzFamGr) {\n                // case: Kein Einkommen in diesem Jahr aber Einkommen im letzten Jahr\n                return '- 100.00 %';\n            } else {\n                // case: Kein Einkommen im letzten Jahr aber Einkommen in diesem Jahr\n                return '+ 100.00 %';\n            }\n        }\n        return '';\n    }\n\n    /**\n     * Prueft ob es die letzte Seite von EVResultate ist. Es ist die letzte Seite wenn es zum letzten EV-Jahr gehoert\n     * @returns {boolean}\n     */\n    private isLastEinkVersStep(): boolean {\n        // Letztes Jahr haengt von den eingegebenen Daten ab\n        return (this.gesuchModelManager.getGesuch().extractEinkommensverschlechterungInfo().ekvFuerBasisJahrPlus2 && this.gesuchModelManager.basisJahrPlusNumber === 2)\n            || (!this.gesuchModelManager.getGesuch().extractEinkommensverschlechterungInfo().ekvFuerBasisJahrPlus2 && this.gesuchModelManager.basisJahrPlusNumber === 1);\n    }\n\n    /**\n     * Da fuer STEUERAMT der Step EINKOMMENSVERSCHLECHTERUNG der letzte ist, muss man den Button next verstecken, wenn wir\n     * wirklich im LastEinkVersStep sind.\n     * Fuer alle andere rollen wird der Button immer eingeblendet\n     */\n    public isSteueramtLetzterStep(): boolean {\n        if (this.authServiceRS.isOneOfRoles(TSRoleUtil.getSteueramtOnlyRoles())) {\n            return this.isLastEinkVersStep();\n        }\n        return false;\n    }\n}\n"]}]}