{"remainingRequest":"/home/imanol/projects/ebegu/ebegu-web/node_modules/thread-loader/dist/cjs.js??ref--0-1!/home/imanol/projects/ebegu/ebegu-web/node_modules/ts-loader/index.js??ref--0-2!/home/imanol/projects/ebegu/ebegu-web/src/gesuch/component/betreuungListView/betreuungListView.ts","cacheIdentifier":"cache-loader:1.1.0 test","dependencies":[{"path":"/home/imanol/projects/ebegu/ebegu-web/src/gesuch/component/betreuungListView/betreuungListView.ts","mtime":1518612532798},{"path":"/home/imanol/projects/ebegu/ebegu-web/node_modules/cache-loader/dist/cjs.js","mtime":1507514019000},{"path":"/home/imanol/projects/ebegu/ebegu-web/node_modules/thread-loader/dist/cjs.js","mtime":1507523420000},{"path":"/home/imanol/projects/ebegu/ebegu-web/node_modules/ts-loader/index.js","mtime":1508488471000}],"contextDependencies":[],"result":["\"use strict\";\n/*\n * Ki-Tax: System for the management of external childcare subsidies\n * Copyright (C) 2017 City of Bern Switzerland\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar abstractGesuchView_1 = require(\"../abstractGesuchView\");\nvar TSBetreuungsangebotTyp_1 = require(\"../../../models/enums/TSBetreuungsangebotTyp\");\nvar RemoveDialogController_1 = require(\"../../dialog/RemoveDialogController\");\nvar TSWizardStepName_1 = require(\"../../../models/enums/TSWizardStepName\");\nvar TSWizardStepStatus_1 = require(\"../../../models/enums/TSWizardStepStatus\");\nvar TSRoleUtil_1 = require(\"../../../utils/TSRoleUtil\");\nvar TSBetreuungsstatus_1 = require(\"../../../models/enums/TSBetreuungsstatus\");\nvar TSAntragStatus_1 = require(\"../../../models/enums/TSAntragStatus\");\nvar template = require('./betreuungListView.html');\nrequire('./betreuungListView.less');\nvar removeDialogTemplate = require('../../dialog/removeDialogTemplate.html');\nvar BetreuungListViewComponentConfig = /** @class */ (function () {\n    function BetreuungListViewComponentConfig() {\n        this.transclude = false;\n        this.template = template;\n        this.controller = BetreuungListViewController;\n        this.controllerAs = 'vm';\n    }\n    return BetreuungListViewComponentConfig;\n}());\nexports.BetreuungListViewComponentConfig = BetreuungListViewComponentConfig;\n/**\n * View fuer die Liste der Betreeungen der eingegebenen Kinder\n */\nvar BetreuungListViewController = /** @class */ (function (_super) {\n    __extends(BetreuungListViewController, _super);\n    /* @ngInject */\n    function BetreuungListViewController($state, gesuchModelManager, $translate, DvDialog, ebeguUtil, berechnungsManager, errorService, wizardStepManager, authServiceRS, $scope, $log, $timeout) {\n        var _this = _super.call(this, gesuchModelManager, berechnungsManager, wizardStepManager, $scope, TSWizardStepName_1.TSWizardStepName.BETREUUNG, $timeout) || this;\n        _this.$state = $state;\n        _this.$translate = $translate;\n        _this.DvDialog = DvDialog;\n        _this.ebeguUtil = ebeguUtil;\n        _this.errorService = errorService;\n        _this.authServiceRS = authServiceRS;\n        _this.$log = $log;\n        _this.TSRoleUtil = TSRoleUtil_1.TSRoleUtil;\n        _this.wizardStepManager.updateCurrentWizardStepStatus(TSWizardStepStatus_1.TSWizardStepStatus.IN_BEARBEITUNG);\n        return _this;\n    }\n    BetreuungListViewController.prototype.editBetreuung = function (kind, betreuung) {\n        if (kind && betreuung) {\n            betreuung.isSelected = false; // damit die row in der Tabelle nicht mehr als \"selected\" markiert ist\n            this.openBetreuungView(betreuung.betreuungNummer, kind.kindNummer);\n        }\n    };\n    BetreuungListViewController.prototype.isNotAllowedToRemove = function (betreuung) {\n        if (betreuung.betreuungsstatus === TSBetreuungsstatus_1.TSBetreuungsstatus.ABGEWIESEN && this.authServiceRS.isOneOfRoles(this.TSRoleUtil.getAdministratorOrAmtRole())) {\n            return false;\n        }\n        else {\n            return this.isKorrekturModusJugendamt();\n        }\n    };\n    BetreuungListViewController.prototype.getKinderWithBetreuungList = function () {\n        return this.gesuchModelManager.getKinderWithBetreuungList();\n    };\n    BetreuungListViewController.prototype.hasBetreuungInStatusWarten = function () {\n        if (this.gesuchModelManager.getGesuch()) {\n            return this.gesuchModelManager.getGesuch().hasBetreuungInStatusWarten();\n        }\n        return false;\n    };\n    BetreuungListViewController.prototype.createBetreuung = function (kind) {\n        var kindIndex = this.gesuchModelManager.convertKindNumberToKindIndex(kind.kindNummer);\n        if (kindIndex >= 0) {\n            this.gesuchModelManager.setKindIndex(kindIndex);\n            this.openBetreuungView(undefined, kind.kindNummer);\n        }\n        else {\n            this.$log.error('kind nicht gefunden ', kind);\n        }\n    };\n    BetreuungListViewController.prototype.createAnmeldungFerieninsel = function (kind) {\n        this.createAnmeldungSchulamt(TSBetreuungsangebotTyp_1.TSBetreuungsangebotTyp.FERIENINSEL, kind);\n    };\n    BetreuungListViewController.prototype.createAnmeldungTagesschule = function (kind) {\n        this.createAnmeldungSchulamt(TSBetreuungsangebotTyp_1.TSBetreuungsangebotTyp.TAGESSCHULE, kind);\n    };\n    BetreuungListViewController.prototype.createAnmeldungSchulamt = function (betreuungstyp, kind) {\n        var kindIndex = this.gesuchModelManager.convertKindNumberToKindIndex(kind.kindNummer);\n        if (kindIndex >= 0) {\n            this.gesuchModelManager.setKindIndex(kindIndex);\n            this.openAnmeldungView(kind.kindNummer, betreuungstyp);\n        }\n        else {\n            this.$log.error('kind nicht gefunden ', kind);\n        }\n    };\n    BetreuungListViewController.prototype.removeBetreuung = function (kind, betreuung, index) {\n        var _this = this;\n        this.gesuchModelManager.findKind(kind); //kind index setzen\n        var remTitleText = this.$translate.instant('BETREUUNG_LOESCHEN', {\n            kindname: this.gesuchModelManager.getKindToWorkWith().kindJA.getFullName(),\n            betreuungsangebottyp: this.ebeguUtil.translateString(TSBetreuungsangebotTyp_1.TSBetreuungsangebotTyp[betreuung.institutionStammdaten.betreuungsangebotTyp])\n        });\n        this.DvDialog.showDialog(removeDialogTemplate, RemoveDialogController_1.RemoveDialogController, {\n            title: remTitleText,\n            deleteText: 'BETREUUNG_LOESCHEN_BESCHREIBUNG',\n            parentController: this,\n            elementID: 'removeBetreuungButton' + kind.kindNummer + '_' + index\n        }).then(function () {\n            _this.errorService.clearAll();\n            var betreuungIndex = _this.gesuchModelManager.findBetreuung(betreuung);\n            if (betreuungIndex >= 0) {\n                _this.gesuchModelManager.setBetreuungIndex(betreuungIndex);\n                _this.gesuchModelManager.removeBetreuung();\n            }\n            else {\n                _this.$log.error('betreuung nicht gefunden ', betreuung);\n            }\n        });\n    };\n    BetreuungListViewController.prototype.openBetreuungView = function (betreuungNumber, kindNumber) {\n        this.$state.go('gesuch.betreuung', {\n            betreuungNumber: betreuungNumber,\n            kindNumber: kindNumber,\n            gesuchId: this.getGesuchId()\n        });\n    };\n    BetreuungListViewController.prototype.openAnmeldungView = function (kindNumber, betreuungsangebotTyp) {\n        this.$state.go('gesuch.betreuung', {\n            betreuungNumber: undefined,\n            kindNumber: kindNumber,\n            gesuchId: this.getGesuchId(),\n            betreuungsangebotTyp: betreuungsangebotTyp.toString()\n        });\n    };\n    /**\n     * Gibt den Betreuungsangebottyp der Institution, die mit der gegebenen Betreuung verknuepft ist zurueck.\n     * By default wird ein Leerzeichen zurueckgeliefert.\n     * @param betreuung\n     * @returns {string}\n     */\n    BetreuungListViewController.prototype.getBetreuungsangebotTyp = function (betreuung) {\n        if (betreuung && betreuung.institutionStammdaten) {\n            return TSBetreuungsangebotTyp_1.TSBetreuungsangebotTyp[betreuung.institutionStammdaten.betreuungsangebotTyp];\n        }\n        return '';\n    };\n    BetreuungListViewController.prototype.getBetreuungDetails = function (betreuung) {\n        var detail = betreuung.institutionStammdaten.institution.name;\n        if (betreuung.isAngebotFerieninsel()) {\n            var ferien = this.$translate.instant(betreuung.belegungFerieninsel.ferienname.toLocaleString());\n            detail = detail + ' (' + ferien + ')';\n        }\n        return detail;\n    };\n    BetreuungListViewController.prototype.canRemoveBetreuung = function (betreuung) {\n        return !this.isGesuchReadonly() && !betreuung.vorgaengerId && !betreuung.isSchulamtangebotAusgeloest();\n    };\n    BetreuungListViewController.prototype.showMitteilung = function () {\n        return this.authServiceRS.isOneOfRoles(this.TSRoleUtil.getTraegerschaftInstitutionOnlyRoles());\n    };\n    BetreuungListViewController.prototype.gotoMitteilung = function (betreuung) {\n        this.$state.go('gesuch.mitteilung', {\n            fallId: this.gesuchModelManager.getGesuch().fall.id,\n            gesuchId: this.gesuchModelManager.getGesuch().id,\n            betreuungId: betreuung.id,\n            mitteilungId: undefined\n        });\n    };\n    BetreuungListViewController.prototype.setFocusBack = function (elementID) {\n        angular.element('#' + elementID).first().focus();\n    };\n    BetreuungListViewController.prototype.showButtonAnmeldungSchulamt = function () {\n        // Anmeldung Schulamt: Solange das Gesuch noch \"normal\" editiert werden kann, soll der Weg ueber \"Betreuung hinzufuegen\" verwendet werden\n        // Nachdem readonly: nur fuer Jugendamt, Schulamt und Gesuchsteller verfuegbar sein. Nur fuer GP.hasTagesschulenAnmeldung().\n        var isStatus = TSAntragStatus_1.isStatusVerfuegenVerfuegt(this.gesuchModelManager.getGesuch().status)\n            || this.gesuchModelManager.isGesuchReadonlyForRole()\n            || this.gesuchModelManager.isKorrekturModusJugendamt()\n            || this.gesuchModelManager.getGesuch().gesperrtWegenBeschwerde;\n        var isRole = this.authServiceRS.isOneOfRoles(TSRoleUtil_1.TSRoleUtil.getAdministratorJugendamtSchulamtGesuchstellerRoles());\n        var isGesuchsperiode = this.gesuchModelManager.getGesuchsperiode().hasTagesschulenAnmeldung();\n        var istNotStatusFreigabequittung = this.gesuchModelManager.getGesuch().status !== TSAntragStatus_1.TSAntragStatus.FREIGABEQUITTUNG;\n        return isStatus && isRole && isGesuchsperiode && istNotStatusFreigabequittung && this.gesuchModelManager.isNeuestesGesuch();\n    };\n    /**\n     * Betreuungen und auch anmeldungen duerfen in Status FREIGABEQUITTUNG nicht hinzugefuegt werden\n     */\n    BetreuungListViewController.prototype.isBetreuungenHinzufuegenDisabled = function () {\n        return this.gesuchModelManager.getGesuch().gesuchsperiode.hasTagesschulenAnmeldung() &&\n            this.gesuchModelManager.getGesuch().status === TSAntragStatus_1.TSAntragStatus.FREIGABEQUITTUNG;\n    };\n    BetreuungListViewController.prototype.hasOnlyFerieninsel = function () {\n        var gesuch = this.gesuchModelManager.getGesuch();\n        return !!gesuch && gesuch.areThereOnlyFerieninsel();\n    };\n    BetreuungListViewController.$inject = ['$state', 'GesuchModelManager', '$translate', 'DvDialog', 'EbeguUtil', 'BerechnungsManager',\n        'ErrorService', 'WizardStepManager', 'AuthServiceRS', '$scope', '$log', '$timeout'];\n    return BetreuungListViewController;\n}(abstractGesuchView_1.default));\nexports.BetreuungListViewController = BetreuungListViewController;\n",{"version":3,"file":"/home/imanol/projects/ebegu/ebegu-web/src/gesuch/component/betreuungListView/betreuungListView.ts","sourceRoot":"","sources":["/home/imanol/projects/ebegu/ebegu-web/src/gesuch/component/betreuungListView/betreuungListView.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Ki-Tax: System for the management of external childcare subsidies\n * Copyright (C) 2017 City of Bern Switzerland\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport {IComponentOptions} from 'angular';\nimport {IStateService} from 'angular-ui-router';\nimport AbstractGesuchViewController from '../abstractGesuchView';\nimport GesuchModelManager from '../../service/gesuchModelManager';\nimport TSKindContainer from '../../../models/TSKindContainer';\nimport TSBetreuung from '../../../models/TSBetreuung';\nimport {TSBetreuungsangebotTyp} from '../../../models/enums/TSBetreuungsangebotTyp';\nimport {DvDialog} from '../../../core/directive/dv-dialog/dv-dialog';\nimport BerechnungsManager from '../../service/berechnungsManager';\nimport {RemoveDialogController} from '../../dialog/RemoveDialogController';\nimport EbeguUtil from '../../../utils/EbeguUtil';\nimport ErrorService from '../../../core/errors/service/ErrorService';\nimport WizardStepManager from '../../service/wizardStepManager';\nimport {TSWizardStepName} from '../../../models/enums/TSWizardStepName';\nimport {TSWizardStepStatus} from '../../../models/enums/TSWizardStepStatus';\nimport AuthServiceRS from '../../../authentication/service/AuthServiceRS.rest';\nimport {TSRoleUtil} from '../../../utils/TSRoleUtil';\nimport {TSBetreuungsstatus} from '../../../models/enums/TSBetreuungsstatus';\nimport {IDVFocusableController} from '../../../core/component/IDVFocusableController';\nimport {isStatusVerfuegenVerfuegt, TSAntragStatus} from '../../../models/enums/TSAntragStatus';\nimport ITranslateService = angular.translate.ITranslateService;\nimport ITimeoutService = angular.ITimeoutService;\nimport IScope = angular.IScope;\nimport ILogService = angular.ILogService;\nimport TSGesuch from '../../../models/TSGesuch';\n\nlet template = require('./betreuungListView.html');\nrequire('./betreuungListView.less');\nlet removeDialogTemplate = require('../../dialog/removeDialogTemplate.html');\n\nexport class BetreuungListViewComponentConfig implements IComponentOptions {\n    transclude = false;\n    template = template;\n    controller = BetreuungListViewController;\n    controllerAs = 'vm';\n}\n\n/**\n * View fuer die Liste der Betreeungen der eingegebenen Kinder\n */\nexport class BetreuungListViewController extends AbstractGesuchViewController<any> implements IDVFocusableController {\n\n    TSRoleUtil = TSRoleUtil;\n\n    static $inject: string[] = ['$state', 'GesuchModelManager', '$translate', 'DvDialog', 'EbeguUtil', 'BerechnungsManager',\n        'ErrorService', 'WizardStepManager', 'AuthServiceRS', '$scope', '$log', '$timeout'];\n\n    /* @ngInject */\n    constructor(private $state: IStateService, gesuchModelManager: GesuchModelManager,\n                private $translate: ITranslateService,\n                private DvDialog: DvDialog, private ebeguUtil: EbeguUtil, berechnungsManager: BerechnungsManager,\n                private errorService: ErrorService, wizardStepManager: WizardStepManager,\n                private authServiceRS: AuthServiceRS, $scope: IScope, private $log: ILogService, $timeout: ITimeoutService) {\n        super(gesuchModelManager, berechnungsManager, wizardStepManager, $scope, TSWizardStepName.BETREUUNG, $timeout);\n        this.wizardStepManager.updateCurrentWizardStepStatus(TSWizardStepStatus.IN_BEARBEITUNG);\n\n    }\n\n    public editBetreuung(kind: TSKindContainer, betreuung: any): void {\n        if (kind && betreuung) {\n            betreuung.isSelected = false; // damit die row in der Tabelle nicht mehr als \"selected\" markiert ist\n            this.openBetreuungView(betreuung.betreuungNummer, kind.kindNummer);\n        }\n    }\n\n    public isNotAllowedToRemove(betreuung: TSBetreuung): boolean {\n        if (betreuung.betreuungsstatus === TSBetreuungsstatus.ABGEWIESEN && this.authServiceRS.isOneOfRoles(this.TSRoleUtil.getAdministratorOrAmtRole())) {\n            return false;\n        } else {\n            return this.isKorrekturModusJugendamt();\n        }\n    }\n\n    public getKinderWithBetreuungList(): Array<TSKindContainer> {\n        return this.gesuchModelManager.getKinderWithBetreuungList();\n    }\n\n    public hasBetreuungInStatusWarten(): boolean {\n        if (this.gesuchModelManager.getGesuch()) {\n            return this.gesuchModelManager.getGesuch().hasBetreuungInStatusWarten();\n        }\n        return false;\n    }\n\n    public createBetreuung(kind: TSKindContainer): void {\n        let kindIndex: number = this.gesuchModelManager.convertKindNumberToKindIndex(kind.kindNummer);\n        if (kindIndex >= 0) {\n            this.gesuchModelManager.setKindIndex(kindIndex);\n            this.openBetreuungView(undefined, kind.kindNummer);\n        } else {\n            this.$log.error('kind nicht gefunden ', kind);\n        }\n    }\n\n    public createAnmeldungFerieninsel(kind: TSKindContainer): void {\n       this.createAnmeldungSchulamt(TSBetreuungsangebotTyp.FERIENINSEL, kind);\n    }\n\n    public createAnmeldungTagesschule(kind: TSKindContainer): void {\n        this.createAnmeldungSchulamt(TSBetreuungsangebotTyp.TAGESSCHULE, kind);\n    }\n\n    private createAnmeldungSchulamt(betreuungstyp: TSBetreuungsangebotTyp, kind: TSKindContainer): void {\n        let kindIndex: number = this.gesuchModelManager.convertKindNumberToKindIndex(kind.kindNummer);\n        if (kindIndex >= 0) {\n            this.gesuchModelManager.setKindIndex(kindIndex);\n            this.openAnmeldungView(kind.kindNummer, betreuungstyp);\n        } else {\n            this.$log.error('kind nicht gefunden ', kind);\n        }\n    }\n\n    public removeBetreuung(kind: TSKindContainer, betreuung: TSBetreuung, index: any): void {\n        this.gesuchModelManager.findKind(kind);     //kind index setzen\n        let remTitleText: any = this.$translate.instant('BETREUUNG_LOESCHEN', {\n            kindname: this.gesuchModelManager.getKindToWorkWith().kindJA.getFullName(),\n            betreuungsangebottyp: this.ebeguUtil.translateString(TSBetreuungsangebotTyp[betreuung.institutionStammdaten.betreuungsangebotTyp])\n        });\n        this.DvDialog.showDialog(removeDialogTemplate, RemoveDialogController, {\n            title: remTitleText,\n            deleteText: 'BETREUUNG_LOESCHEN_BESCHREIBUNG',\n            parentController: this,\n            elementID: 'removeBetreuungButton' + kind.kindNummer + '_' + index\n        }).then(() => {   //User confirmed removal\n            this.errorService.clearAll();\n            let betreuungIndex: number = this.gesuchModelManager.findBetreuung(betreuung);\n            if (betreuungIndex >= 0) {\n                this.gesuchModelManager.setBetreuungIndex(betreuungIndex);\n                this.gesuchModelManager.removeBetreuung();\n            } else {\n                this.$log.error('betreuung nicht gefunden ', betreuung);\n            }\n        });\n    }\n\n    private openBetreuungView(betreuungNumber: number, kindNumber: number): void {\n        this.$state.go('gesuch.betreuung', {\n            betreuungNumber: betreuungNumber,\n            kindNumber: kindNumber,\n            gesuchId: this.getGesuchId()\n        });\n    }\n\n    private openAnmeldungView(kindNumber: number, betreuungsangebotTyp: TSBetreuungsangebotTyp): void {\n        this.$state.go('gesuch.betreuung', {\n            betreuungNumber: undefined,\n            kindNumber: kindNumber,\n            gesuchId: this.getGesuchId(),\n            betreuungsangebotTyp: betreuungsangebotTyp.toString()\n        });\n    }\n\n    /**\n     * Gibt den Betreuungsangebottyp der Institution, die mit der gegebenen Betreuung verknuepft ist zurueck.\n     * By default wird ein Leerzeichen zurueckgeliefert.\n     * @param betreuung\n     * @returns {string}\n     */\n    public getBetreuungsangebotTyp(betreuung: TSBetreuung): string {\n        if (betreuung && betreuung.institutionStammdaten) {\n            return TSBetreuungsangebotTyp[betreuung.institutionStammdaten.betreuungsangebotTyp];\n        }\n        return '';\n    }\n\n    public getBetreuungDetails(betreuung: TSBetreuung): string {\n        let detail: string = betreuung.institutionStammdaten.institution.name;\n        if (betreuung.isAngebotFerieninsel()) {\n            let ferien: string = this.$translate.instant(betreuung.belegungFerieninsel.ferienname.toLocaleString());\n            detail = detail + ' (' + ferien + ')';\n        }\n        return detail;\n    }\n\n    public canRemoveBetreuung(betreuung: TSBetreuung): boolean {\n        return !this.isGesuchReadonly() && !betreuung.vorgaengerId && !betreuung.isSchulamtangebotAusgeloest();\n    }\n\n    private showMitteilung(): boolean {\n        return this.authServiceRS.isOneOfRoles(this.TSRoleUtil.getTraegerschaftInstitutionOnlyRoles());\n    }\n\n    private gotoMitteilung(betreuung: TSBetreuung) {\n        this.$state.go('gesuch.mitteilung', {\n            fallId: this.gesuchModelManager.getGesuch().fall.id,\n            gesuchId: this.gesuchModelManager.getGesuch().id,\n            betreuungId: betreuung.id,\n            mitteilungId: undefined\n        });\n    }\n\n    public setFocusBack(elementID: string): void {\n        angular.element('#' + elementID).first().focus();\n    }\n\n    public showButtonAnmeldungSchulamt(): boolean {\n        // Anmeldung Schulamt: Solange das Gesuch noch \"normal\" editiert werden kann, soll der Weg ueber \"Betreuung hinzufuegen\" verwendet werden\n        // Nachdem readonly: nur fuer Jugendamt, Schulamt und Gesuchsteller verfuegbar sein. Nur fuer GP.hasTagesschulenAnmeldung().\n        let isStatus: boolean = isStatusVerfuegenVerfuegt(this.gesuchModelManager.getGesuch().status)\n            || this.gesuchModelManager.isGesuchReadonlyForRole()\n            || this.gesuchModelManager.isKorrekturModusJugendamt()\n            || this.gesuchModelManager.getGesuch().gesperrtWegenBeschwerde;\n        let isRole: boolean = this.authServiceRS.isOneOfRoles(TSRoleUtil.getAdministratorJugendamtSchulamtGesuchstellerRoles());\n        let isGesuchsperiode: boolean = this.gesuchModelManager.getGesuchsperiode().hasTagesschulenAnmeldung();\n        let istNotStatusFreigabequittung: boolean = this.gesuchModelManager.getGesuch().status !== TSAntragStatus.FREIGABEQUITTUNG;\n        return isStatus && isRole && isGesuchsperiode && istNotStatusFreigabequittung && this.gesuchModelManager.isNeuestesGesuch();\n    }\n\n    /**\n     * Betreuungen und auch anmeldungen duerfen in Status FREIGABEQUITTUNG nicht hinzugefuegt werden\n     */\n    public isBetreuungenHinzufuegenDisabled(): boolean {\n        return this.gesuchModelManager.getGesuch().gesuchsperiode.hasTagesschulenAnmeldung() &&\n                this.gesuchModelManager.getGesuch().status === TSAntragStatus.FREIGABEQUITTUNG;\n    }\n\n    public hasOnlyFerieninsel() {\n        let gesuch: TSGesuch = this.gesuchModelManager.getGesuch();\n        return !!gesuch && gesuch.areThereOnlyFerieninsel();\n    }\n}\n"]}]}