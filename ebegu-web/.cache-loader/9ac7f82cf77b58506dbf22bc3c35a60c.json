{"remainingRequest":"/home/imanol/projects/ebegu/ebegu-web/node_modules/thread-loader/dist/cjs.js??ref--0-1!/home/imanol/projects/ebegu/ebegu-web/node_modules/ts-loader/index.js??ref--0-2!/home/imanol/projects/ebegu/ebegu-web/src/gesuch/component/betreuungListView/betreuungListView.ts","cacheIdentifier":"cache-loader:1.1.0 test","dependencies":[{"path":"/home/imanol/projects/ebegu/ebegu-web/src/gesuch/component/betreuungListView/betreuungListView.ts","mtime":1518535855220},{"path":"/home/imanol/projects/ebegu/ebegu-web/node_modules/cache-loader/dist/cjs.js","mtime":1507514019000},{"path":"/home/imanol/projects/ebegu/ebegu-web/node_modules/thread-loader/dist/cjs.js","mtime":1507523420000},{"path":"/home/imanol/projects/ebegu/ebegu-web/node_modules/ts-loader/index.js","mtime":1508488471000}],"contextDependencies":[],"result":["/*\n * Ki-Tax: System for the management of external childcare subsidies\n * Copyright (C) 2017 City of Bern Switzerland\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\ndefine([\"require\", \"exports\", \"../abstractGesuchView\", \"../../../models/enums/TSBetreuungsangebotTyp\", \"../../dialog/RemoveDialogController\", \"../../../models/enums/TSWizardStepName\", \"../../../models/enums/TSWizardStepStatus\", \"../../../utils/TSRoleUtil\", \"../../../models/enums/TSBetreuungsstatus\"], function (require, exports, abstractGesuchView_1, TSBetreuungsangebotTyp_1, RemoveDialogController_1, TSWizardStepName_1, TSWizardStepStatus_1, TSRoleUtil_1, TSBetreuungsstatus_1) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    var template = require('./betreuungListView.html');\n    require('./betreuungListView.less');\n    var removeDialogTemplate = require('../../dialog/removeDialogTemplate.html');\n    var BetreuungListViewComponentConfig = /** @class */ (function () {\n        function BetreuungListViewComponentConfig() {\n            this.transclude = false;\n            this.template = template;\n            this.controller = BetreuungListViewController;\n            this.controllerAs = 'vm';\n        }\n        return BetreuungListViewComponentConfig;\n    }());\n    exports.BetreuungListViewComponentConfig = BetreuungListViewComponentConfig;\n    /**\n     * View fuer die Liste der Betreeungen der eingegebenen Kinder\n     */\n    var BetreuungListViewController = /** @class */ (function (_super) {\n        __extends(BetreuungListViewController, _super);\n        /* @ngInject */\n        function BetreuungListViewController($state, gesuchModelManager, $translate, DvDialog, ebeguUtil, berechnungsManager, errorService, wizardStepManager, authServiceRS, $scope, $log, $timeout) {\n            var _this = _super.call(this, gesuchModelManager, berechnungsManager, wizardStepManager, $scope, TSWizardStepName_1.TSWizardStepName.BETREUUNG, $timeout) || this;\n            _this.$state = $state;\n            _this.$translate = $translate;\n            _this.DvDialog = DvDialog;\n            _this.ebeguUtil = ebeguUtil;\n            _this.errorService = errorService;\n            _this.authServiceRS = authServiceRS;\n            _this.$log = $log;\n            _this.TSRoleUtil = TSRoleUtil_1.TSRoleUtil;\n            _this.wizardStepManager.updateCurrentWizardStepStatus(TSWizardStepStatus_1.TSWizardStepStatus.IN_BEARBEITUNG);\n            return _this;\n        }\n        BetreuungListViewController.prototype.editBetreuung = function (kind, betreuung) {\n            if (kind && betreuung) {\n                betreuung.isSelected = false; // damit die row in der Tabelle nicht mehr als \"selected\" markiert ist\n                this.openBetreuungView(betreuung.betreuungNummer, kind.kindNummer);\n            }\n        };\n        BetreuungListViewController.prototype.isNotAllowedToRemove = function (betreuung) {\n            if (betreuung.betreuungsstatus === TSBetreuungsstatus_1.TSBetreuungsstatus.ABGEWIESEN && this.authServiceRS.isOneOfRoles(this.TSRoleUtil.getAdministratorJugendamtRole())) {\n                return false;\n            }\n            else {\n                return this.isKorrekturModusJugendamt();\n            }\n        };\n        BetreuungListViewController.prototype.getKinderWithBetreuungList = function () {\n            return this.gesuchModelManager.getKinderWithBetreuungList();\n        };\n        BetreuungListViewController.prototype.hasBetreuungInStatusWarten = function () {\n            if (this.gesuchModelManager.getGesuch()) {\n                return this.gesuchModelManager.getGesuch().hasBetreuungInStatusWarten();\n            }\n            return false;\n        };\n        BetreuungListViewController.prototype.createBetreuung = function (kind) {\n            var kindIndex = this.gesuchModelManager.convertKindNumberToKindIndex(kind.kindNummer);\n            if (kindIndex >= 0) {\n                this.gesuchModelManager.setKindIndex(kindIndex);\n                this.openBetreuungView(undefined, kind.kindNummer);\n            }\n            else {\n                this.$log.error('kind nicht gefunden ', kind);\n            }\n        };\n        BetreuungListViewController.prototype.removeBetreuung = function (kind, betreuung, index) {\n            var _this = this;\n            this.gesuchModelManager.findKind(kind); //kind index setzen\n            var remTitleText = this.$translate.instant('BETREUUNG_LOESCHEN', {\n                kindname: this.gesuchModelManager.getKindToWorkWith().kindJA.getFullName(),\n                betreuungsangebottyp: this.ebeguUtil.translateString(TSBetreuungsangebotTyp_1.TSBetreuungsangebotTyp[betreuung.institutionStammdaten.betreuungsangebotTyp])\n            });\n            this.DvDialog.showDialog(removeDialogTemplate, RemoveDialogController_1.RemoveDialogController, {\n                title: remTitleText,\n                deleteText: 'BETREUUNG_LOESCHEN_BESCHREIBUNG',\n                parentController: this,\n                elementID: 'removeBetreuungButton' + kind.kindNummer + '_' + index\n            }).then(function () {\n                _this.errorService.clearAll();\n                var betreuungIndex = _this.gesuchModelManager.findBetreuung(betreuung);\n                if (betreuungIndex >= 0) {\n                    _this.gesuchModelManager.setBetreuungIndex(betreuungIndex);\n                    _this.gesuchModelManager.removeBetreuung();\n                }\n                else {\n                    _this.$log.error('betreuung nicht gefunden ', betreuung);\n                }\n            });\n        };\n        BetreuungListViewController.prototype.openBetreuungView = function (betreuungNumber, kindNumber) {\n            this.$state.go('gesuch.betreuung', {\n                betreuungNumber: betreuungNumber,\n                kindNumber: kindNumber,\n                gesuchId: this.getGesuchId()\n            });\n        };\n        /**\n         * Gibt den Betreuungsangebottyp der Institution, die mit der gegebenen Betreuung verknuepft ist zurueck.\n         * By default wird ein Leerzeichen zurueckgeliefert.\n         * @param betreuung\n         * @returns {string}\n         */\n        BetreuungListViewController.prototype.getBetreuungsangebotTyp = function (betreuung) {\n            if (betreuung && betreuung.institutionStammdaten) {\n                return TSBetreuungsangebotTyp_1.TSBetreuungsangebotTyp[betreuung.institutionStammdaten.betreuungsangebotTyp];\n            }\n            return '';\n        };\n        BetreuungListViewController.prototype.canRemoveBetreuung = function (betreuung) {\n            return !this.isGesuchReadonly() && !betreuung.vorgaengerId;\n        };\n        BetreuungListViewController.prototype.showMitteilung = function () {\n            return this.authServiceRS.isOneOfRoles(this.TSRoleUtil.getTraegerschaftInstitutionOnlyRoles());\n        };\n        BetreuungListViewController.prototype.gotoMitteilung = function (betreuung) {\n            this.$state.go('gesuch.mitteilung', {\n                fallId: this.gesuchModelManager.getGesuch().fall.id,\n                gesuchId: this.gesuchModelManager.getGesuch().id,\n                betreuungId: betreuung.id,\n                mitteilungId: undefined\n            });\n        };\n        BetreuungListViewController.prototype.setFocusBack = function (elementID) {\n            angular.element('#' + elementID).first().focus();\n        };\n        BetreuungListViewController.$inject = ['$state', 'GesuchModelManager', '$translate', 'DvDialog', 'EbeguUtil', 'BerechnungsManager',\n            'ErrorService', 'WizardStepManager', 'AuthServiceRS', '$scope', '$log', '$timeout'];\n        return BetreuungListViewController;\n    }(abstractGesuchView_1.default));\n    exports.BetreuungListViewController = BetreuungListViewController;\n});\n",{"version":3,"file":"/home/imanol/projects/ebegu/ebegu-web/src/gesuch/component/betreuungListView/betreuungListView.ts","sourceRoot":"","sources":["/home/imanol/projects/ebegu/ebegu-web/src/gesuch/component/betreuungListView/betreuungListView.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Ki-Tax: System for the management of external childcare subsidies\n * Copyright (C) 2017 City of Bern Switzerland\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport {IComponentOptions} from 'angular';\nimport {IStateService} from 'angular-ui-router';\nimport AbstractGesuchViewController from '../abstractGesuchView';\nimport GesuchModelManager from '../../service/gesuchModelManager';\nimport TSKindContainer from '../../../models/TSKindContainer';\nimport TSBetreuung from '../../../models/TSBetreuung';\nimport {TSBetreuungsangebotTyp} from '../../../models/enums/TSBetreuungsangebotTyp';\nimport {DvDialog} from '../../../core/directive/dv-dialog/dv-dialog';\nimport BerechnungsManager from '../../service/berechnungsManager';\nimport {RemoveDialogController} from '../../dialog/RemoveDialogController';\nimport EbeguUtil from '../../../utils/EbeguUtil';\nimport ErrorService from '../../../core/errors/service/ErrorService';\nimport WizardStepManager from '../../service/wizardStepManager';\nimport {TSWizardStepName} from '../../../models/enums/TSWizardStepName';\nimport {TSWizardStepStatus} from '../../../models/enums/TSWizardStepStatus';\nimport AuthServiceRS from '../../../authentication/service/AuthServiceRS.rest';\nimport {TSRoleUtil} from '../../../utils/TSRoleUtil';\nimport {TSBetreuungsstatus} from '../../../models/enums/TSBetreuungsstatus';\nimport {IDVFocusableController} from '../../../core/component/IDVFocusableController';\nimport ITranslateService = angular.translate.ITranslateService;\nimport ITimeoutService = angular.ITimeoutService;\nimport IScope = angular.IScope;\nimport ILogService = angular.ILogService;\n\nlet template = require('./betreuungListView.html');\nrequire('./betreuungListView.less');\nlet removeDialogTemplate = require('../../dialog/removeDialogTemplate.html');\n\nexport class BetreuungListViewComponentConfig implements IComponentOptions {\n    transclude = false;\n    template = template;\n    controller = BetreuungListViewController;\n    controllerAs = 'vm';\n}\n\n/**\n * View fuer die Liste der Betreeungen der eingegebenen Kinder\n */\nexport class BetreuungListViewController extends AbstractGesuchViewController<any> implements IDVFocusableController {\n\n    TSRoleUtil = TSRoleUtil;\n\n    static $inject: string[] = ['$state', 'GesuchModelManager', '$translate', 'DvDialog', 'EbeguUtil', 'BerechnungsManager',\n        'ErrorService', 'WizardStepManager', 'AuthServiceRS', '$scope', '$log', '$timeout'];\n\n    /* @ngInject */\n    constructor(private $state: IStateService, gesuchModelManager: GesuchModelManager,\n                private $translate: ITranslateService,\n                private DvDialog: DvDialog, private ebeguUtil: EbeguUtil, berechnungsManager: BerechnungsManager,\n                private errorService: ErrorService, wizardStepManager: WizardStepManager,\n                private authServiceRS: AuthServiceRS, $scope: IScope, private $log: ILogService, $timeout: ITimeoutService) {\n        super(gesuchModelManager, berechnungsManager, wizardStepManager, $scope, TSWizardStepName.BETREUUNG, $timeout);\n        this.wizardStepManager.updateCurrentWizardStepStatus(TSWizardStepStatus.IN_BEARBEITUNG);\n\n    }\n\n    public editBetreuung(kind: TSKindContainer, betreuung: any): void {\n        if (kind && betreuung) {\n            betreuung.isSelected = false; // damit die row in der Tabelle nicht mehr als \"selected\" markiert ist\n            this.openBetreuungView(betreuung.betreuungNummer, kind.kindNummer);\n        }\n    }\n\n    public isNotAllowedToRemove(betreuung: TSBetreuung): boolean {\n        if (betreuung.betreuungsstatus === TSBetreuungsstatus.ABGEWIESEN && this.authServiceRS.isOneOfRoles(this.TSRoleUtil.getAdministratorJugendamtRole())) {\n            return false;\n        } else {\n            return this.isKorrekturModusJugendamt();\n        }\n    }\n\n    public getKinderWithBetreuungList(): Array<TSKindContainer> {\n        return this.gesuchModelManager.getKinderWithBetreuungList();\n    }\n\n    public hasBetreuungInStatusWarten(): boolean {\n        if (this.gesuchModelManager.getGesuch()) {\n            return this.gesuchModelManager.getGesuch().hasBetreuungInStatusWarten();\n        }\n        return false;\n    }\n\n    public createBetreuung(kind: TSKindContainer): void {\n        let kindIndex: number = this.gesuchModelManager.convertKindNumberToKindIndex(kind.kindNummer);\n        if (kindIndex >= 0) {\n            this.gesuchModelManager.setKindIndex(kindIndex);\n            this.openBetreuungView(undefined, kind.kindNummer);\n        } else {\n            this.$log.error('kind nicht gefunden ', kind);\n        }\n    }\n\n    public removeBetreuung(kind: TSKindContainer, betreuung: TSBetreuung, index: any): void {\n        this.gesuchModelManager.findKind(kind);     //kind index setzen\n        let remTitleText: any = this.$translate.instant('BETREUUNG_LOESCHEN', {\n            kindname: this.gesuchModelManager.getKindToWorkWith().kindJA.getFullName(),\n            betreuungsangebottyp: this.ebeguUtil.translateString(TSBetreuungsangebotTyp[betreuung.institutionStammdaten.betreuungsangebotTyp])\n        });\n        this.DvDialog.showDialog(removeDialogTemplate, RemoveDialogController, {\n            title: remTitleText,\n            deleteText: 'BETREUUNG_LOESCHEN_BESCHREIBUNG',\n            parentController: this,\n            elementID: 'removeBetreuungButton' + kind.kindNummer + '_' + index\n        }).then(() => {   //User confirmed removal\n            this.errorService.clearAll();\n            let betreuungIndex: number = this.gesuchModelManager.findBetreuung(betreuung);\n            if (betreuungIndex >= 0) {\n                this.gesuchModelManager.setBetreuungIndex(betreuungIndex);\n                this.gesuchModelManager.removeBetreuung();\n            } else {\n                this.$log.error('betreuung nicht gefunden ', betreuung);\n            }\n        });\n    }\n\n    private openBetreuungView(betreuungNumber: number, kindNumber: number): void {\n        this.$state.go('gesuch.betreuung', {\n            betreuungNumber: betreuungNumber,\n            kindNumber: kindNumber,\n            gesuchId: this.getGesuchId()\n        });\n    }\n\n    /**\n     * Gibt den Betreuungsangebottyp der Institution, die mit der gegebenen Betreuung verknuepft ist zurueck.\n     * By default wird ein Leerzeichen zurueckgeliefert.\n     * @param betreuung\n     * @returns {string}\n     */\n    public getBetreuungsangebotTyp(betreuung: TSBetreuung): string {\n        if (betreuung && betreuung.institutionStammdaten) {\n            return TSBetreuungsangebotTyp[betreuung.institutionStammdaten.betreuungsangebotTyp];\n        }\n        return '';\n    }\n\n    public canRemoveBetreuung(betreuung: TSBetreuung): boolean {\n        return !this.isGesuchReadonly() && !betreuung.vorgaengerId;\n    }\n\n    private showMitteilung(): boolean {\n        return this.authServiceRS.isOneOfRoles(this.TSRoleUtil.getTraegerschaftInstitutionOnlyRoles());\n    }\n\n    private gotoMitteilung(betreuung: TSBetreuung) {\n        this.$state.go('gesuch.mitteilung', {\n            fallId: this.gesuchModelManager.getGesuch().fall.id,\n            gesuchId: this.gesuchModelManager.getGesuch().id,\n            betreuungId: betreuung.id,\n            mitteilungId: undefined\n        });\n    }\n\n    public setFocusBack(elementID: string): void {\n        angular.element('#' + elementID).first().focus();\n    }\n}\n"]}]}