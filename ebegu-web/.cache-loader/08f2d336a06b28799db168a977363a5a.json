{"remainingRequest":"/home/imanol/projects/ebegu/ebegu-web/node_modules/thread-loader/dist/cjs.js??ref--0-1!/home/imanol/projects/ebegu/ebegu-web/node_modules/ts-loader/index.js??ref--0-2!/home/imanol/projects/ebegu/ebegu-web/src/pendenzen/component/pendenzenListView/pendenzenListView.ts","cacheIdentifier":"cache-loader:1.1.0 test","dependencies":[{"path":"/home/imanol/projects/ebegu/ebegu-web/src/pendenzen/component/pendenzenListView/pendenzenListView.ts","mtime":1518535855236},{"path":"/home/imanol/projects/ebegu/ebegu-web/node_modules/cache-loader/dist/cjs.js","mtime":1507514019000},{"path":"/home/imanol/projects/ebegu/ebegu-web/node_modules/thread-loader/dist/cjs.js","mtime":1507523420000},{"path":"/home/imanol/projects/ebegu/ebegu-web/node_modules/ts-loader/index.js","mtime":1508488471000}],"contextDependencies":[],"result":["/*\n * Ki-Tax: System for the management of external childcare subsidies\n * Copyright (C) 2017 City of Bern Switzerland\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\ndefine([\"require\", \"exports\"], function (require, exports) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    var template = require('./pendenzenListView.html');\n    require('./pendenzenListView.less');\n    var PendenzenListViewComponentConfig = /** @class */ (function () {\n        function PendenzenListViewComponentConfig() {\n            this.transclude = false;\n            this.template = template;\n            this.controller = PendenzenListViewController;\n            this.controllerAs = 'vm';\n        }\n        return PendenzenListViewComponentConfig;\n    }());\n    exports.PendenzenListViewComponentConfig = PendenzenListViewComponentConfig;\n    var PendenzenListViewController = /** @class */ (function () {\n        function PendenzenListViewController(pendenzRS, CONSTANTS, authServiceRS) {\n            this.pendenzRS = pendenzRS;\n            this.CONSTANTS = CONSTANTS;\n            this.authServiceRS = authServiceRS;\n            this.totalResultCount = '0';\n            this.initViewModel();\n        }\n        PendenzenListViewController.prototype.initViewModel = function () {\n            // Initial werden die Pendenzen des eingeloggten Benutzers geladen\n            this.updatePendenzenList(this.authServiceRS.getPrincipal().username);\n        };\n        PendenzenListViewController.prototype.updatePendenzenList = function (username) {\n            var _this = this;\n            this.pendenzRS.getPendenzenListForUser(username).then(function (response) {\n                _this.pendenzenList = angular.copy(response);\n                if (_this.pendenzenList && _this.pendenzenList.length) {\n                    _this.totalResultCount = _this.pendenzenList.length.toString();\n                }\n                else {\n                    _this.totalResultCount = '0';\n                }\n            });\n        };\n        PendenzenListViewController.prototype.getPendenzenList = function () {\n            return this.pendenzenList;\n        };\n        PendenzenListViewController.prototype.userChanged = function (user) {\n            if (user) {\n                this.updatePendenzenList(user.username);\n            }\n        };\n        PendenzenListViewController.$inject = ['PendenzRS', 'CONSTANTS', 'AuthServiceRS'];\n        return PendenzenListViewController;\n    }());\n    exports.PendenzenListViewController = PendenzenListViewController;\n});\n",{"version":3,"file":"/home/imanol/projects/ebegu/ebegu-web/src/pendenzen/component/pendenzenListView/pendenzenListView.ts","sourceRoot":"","sources":["/home/imanol/projects/ebegu/ebegu-web/src/pendenzen/component/pendenzenListView/pendenzenListView.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;GAaG;;;;IASH,IAAI,QAAQ,GAAG,OAAO,CAAC,0BAA0B,CAAC,CAAC;IACnD,OAAO,CAAC,0BAA0B,CAAC,CAAC;IAEpC;QAAA;YACI,eAAU,GAAG,KAAK,CAAC;YACnB,aAAQ,GAAG,QAAQ,CAAC;YACpB,eAAU,GAAG,2BAA2B,CAAC;YACzC,iBAAY,GAAG,IAAI,CAAC;QACxB,CAAC;QAAD,uCAAC;IAAD,CAAC,AALD,IAKC;IALY,4EAAgC;IAO7C;QAOI,qCAAmB,SAAoB,EAAU,SAAc,EAAU,aAA4B;YAAlF,cAAS,GAAT,SAAS,CAAW;YAAU,cAAS,GAAT,SAAS,CAAK;YAAU,kBAAa,GAAb,aAAa,CAAe;YAJrG,qBAAgB,GAAW,GAAG,CAAC;YAK3B,IAAI,CAAC,aAAa,EAAE,CAAC;QACzB,CAAC;QAEO,mDAAa,GAArB;YACI,kEAAkE;YAClE,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,aAAa,CAAC,YAAY,EAAE,CAAC,QAAQ,CAAC,CAAC;QACzE,CAAC;QAEO,yDAAmB,GAA3B,UAA4B,QAAgB;YAA5C,iBASC;YARG,IAAI,CAAC,SAAS,CAAC,uBAAuB,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,UAAC,QAAa;gBAChE,KAAI,CAAC,aAAa,GAAG,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;gBAC5C,EAAE,CAAC,CAAC,KAAI,CAAC,aAAa,IAAI,KAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC,CAAC;oBAClD,KAAI,CAAC,gBAAgB,GAAG,KAAI,CAAC,aAAa,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC;gBACjE,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACJ,KAAI,CAAC,gBAAgB,GAAG,GAAG,CAAC;gBAChC,CAAC;YACL,CAAC,CAAC,CAAC;QACP,CAAC;QAEM,sDAAgB,GAAvB;YACI,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC;QAC9B,CAAC;QAEM,iDAAW,GAAlB,UAAmB,IAAY;YAC3B,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;gBACP,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YAC5C,CAAC;QACL,CAAC;QA9BM,mCAAO,GAAa,CAAC,WAAW,EAAE,WAAW,EAAE,eAAe,CAAC,CAAC;QA+B3E,kCAAC;KAAA,AApCD,IAoCC;IApCY,kEAA2B","sourcesContent":["/*\n * Ki-Tax: System for the management of external childcare subsidies\n * Copyright (C) 2017 City of Bern Switzerland\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport {IComponentOptions} from 'angular';\nimport TSAntragDTO from '../../../models/TSAntragDTO';\nimport PendenzRS from '../../service/PendenzRS.rest';\nimport * as moment from 'moment';\nimport TSUser from '../../../models/TSUser';\nimport AuthServiceRS from '../../../authentication/service/AuthServiceRS.rest';\n\nlet template = require('./pendenzenListView.html');\nrequire('./pendenzenListView.less');\n\nexport class PendenzenListViewComponentConfig implements IComponentOptions {\n    transclude = false;\n    template = template;\n    controller = PendenzenListViewController;\n    controllerAs = 'vm';\n}\n\nexport class PendenzenListViewController {\n\n    private pendenzenList: Array<TSAntragDTO>;\n    totalResultCount: string = '0';\n\n    static $inject: string[] = ['PendenzRS', 'CONSTANTS', 'AuthServiceRS'];\n\n    constructor(public pendenzRS: PendenzRS, private CONSTANTS: any, private authServiceRS: AuthServiceRS) {\n        this.initViewModel();\n    }\n\n    private initViewModel() {\n        // Initial werden die Pendenzen des eingeloggten Benutzers geladen\n        this.updatePendenzenList(this.authServiceRS.getPrincipal().username);\n    }\n\n    private updatePendenzenList(username: string) {\n        this.pendenzRS.getPendenzenListForUser(username).then((response: any) => {\n            this.pendenzenList = angular.copy(response);\n            if (this.pendenzenList && this.pendenzenList.length) {\n                this.totalResultCount = this.pendenzenList.length.toString();\n            } else {\n                this.totalResultCount = '0';\n            }\n        });\n    }\n\n    public getPendenzenList(): Array<TSAntragDTO> {\n        return this.pendenzenList;\n    }\n\n    public userChanged(user: TSUser): void {\n        if (user) {\n            this.updatePendenzenList(user.username);\n        }\n    }\n}\n"]}]}