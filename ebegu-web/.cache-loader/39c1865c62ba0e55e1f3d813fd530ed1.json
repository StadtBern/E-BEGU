{"remainingRequest":"/home/imanol/projects/ebegu/ebegu-web/node_modules/thread-loader/dist/cjs.js??ref--0-1!/home/imanol/projects/ebegu/ebegu-web/node_modules/ts-loader/index.js??ref--0-2!/home/imanol/projects/ebegu/ebegu-web/src/core/service/userRS.rest.ts","cacheIdentifier":"cache-loader:1.1.0 test","dependencies":[{"path":"/home/imanol/projects/ebegu/ebegu-web/src/core/service/userRS.rest.ts","mtime":1518535855220},{"path":"/home/imanol/projects/ebegu/ebegu-web/node_modules/cache-loader/dist/cjs.js","mtime":1507514019000},{"path":"/home/imanol/projects/ebegu/ebegu-web/node_modules/thread-loader/dist/cjs.js","mtime":1507523420000},{"path":"/home/imanol/projects/ebegu/ebegu-web/node_modules/ts-loader/index.js","mtime":1508488471000}],"contextDependencies":[],"result":["/*\n * Ki-Tax: System for the management of external childcare subsidies\n * Copyright (C) 2017 City of Bern Switzerland\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\ndefine([\"require\", \"exports\"], function (require, exports) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    var UserRS = /** @class */ (function () {\n        /* @ngInject */\n        function UserRS($http, REST_API, ebeguRestUtil, $log) {\n            this.$log = $log;\n            this.serviceURL = REST_API + 'benutzer';\n            this.http = $http;\n            this.ebeguRestUtil = ebeguRestUtil;\n        }\n        UserRS.prototype.getBenutzerJAorAdmin = function () {\n            var _this = this;\n            return this.http.get(this.serviceURL + '/JAorAdmin').then(function (response) {\n                _this.$log.debug('PARSING user REST array object', response.data);\n                return _this.ebeguRestUtil.parseUserList(response.data);\n            });\n        };\n        UserRS.prototype.getServiceName = function () {\n            return 'UserRS';\n        };\n        UserRS.prototype.getAllGesuchsteller = function () {\n            var _this = this;\n            return this.http.get(this.serviceURL + '/gesuchsteller').then(function (response) {\n                _this.$log.debug('PARSING user REST array object', response.data);\n                return _this.ebeguRestUtil.parseUserList(response.data);\n            });\n        };\n        UserRS.$inject = ['$http', 'REST_API', 'EbeguRestUtil', '$log'];\n        return UserRS;\n    }());\n    exports.default = UserRS;\n});\n",{"version":3,"file":"/home/imanol/projects/ebegu/ebegu-web/src/core/service/userRS.rest.ts","sourceRoot":"","sources":["/home/imanol/projects/ebegu/ebegu-web/src/core/service/userRS.rest.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;GAaG;;;;IAOH;QAMI,eAAe;QACf,gBAAY,KAAmB,EAAE,QAAgB,EAAE,aAA4B,EAAU,IAAiB;YAAjB,SAAI,GAAJ,IAAI,CAAa;YACtG,IAAI,CAAC,UAAU,GAAG,QAAQ,GAAG,UAAU,CAAC;YACxC,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;YAClB,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;QACvC,CAAC;QAEM,qCAAoB,GAA3B;YAAA,iBAKC;YAJG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,GAAG,YAAY,CAAC,CAAC,IAAI,CAAC,UAAC,QAAa;gBACpE,KAAI,CAAC,IAAI,CAAC,KAAK,CAAC,gCAAgC,EAAE,QAAQ,CAAC,IAAI,CAAC,CAAC;gBACjE,MAAM,CAAC,KAAI,CAAC,aAAa,CAAC,aAAa,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;YAC3D,CAAC,CAAC,CAAC;QACP,CAAC;QAEM,+BAAc,GAArB;YACI,MAAM,CAAC,QAAQ,CAAC;QACpB,CAAC;QAEM,oCAAmB,GAA1B;YAAA,iBAKC;YAJG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,GAAG,gBAAgB,CAAC,CAAC,IAAI,CAAC,UAAC,QAAa;gBACxE,KAAI,CAAC,IAAI,CAAC,KAAK,CAAC,gCAAgC,EAAE,QAAQ,CAAC,IAAI,CAAC,CAAC;gBACjE,MAAM,CAAC,KAAI,CAAC,aAAa,CAAC,aAAa,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;YAC3D,CAAC,CAAC,CAAC;QACP,CAAC;QAxBM,cAAO,GAAG,CAAC,OAAO,EAAE,UAAU,EAAE,eAAe,EAAE,MAAM,CAAC,CAAC;QAyBpE,aAAC;KAAA,AA9BD,IA8BC;sBA9BoB,MAAM","sourcesContent":["/*\n * Ki-Tax: System for the management of external childcare subsidies\n * Copyright (C) 2017 City of Bern Switzerland\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport {IEntityRS} from '../../core/service/iEntityRS.rest';\nimport {IHttpService, ILogService, IPromise} from 'angular';\nimport EbeguRestUtil from '../../utils/EbeguRestUtil';\nimport TSUser from '../../models/TSUser';\n\nexport default class UserRS implements IEntityRS {\n    serviceURL: string;\n    http: IHttpService;\n    ebeguRestUtil: EbeguRestUtil;\n\n    static $inject = ['$http', 'REST_API', 'EbeguRestUtil', '$log'];\n    /* @ngInject */\n    constructor($http: IHttpService, REST_API: string, ebeguRestUtil: EbeguRestUtil, private $log: ILogService) {\n        this.serviceURL = REST_API + 'benutzer';\n        this.http = $http;\n        this.ebeguRestUtil = ebeguRestUtil;\n    }\n\n    public getBenutzerJAorAdmin(): IPromise<TSUser[]> {\n        return this.http.get(this.serviceURL + '/JAorAdmin').then((response: any) => {\n            this.$log.debug('PARSING user REST array object', response.data);\n            return this.ebeguRestUtil.parseUserList(response.data);\n        });\n    }\n\n    public getServiceName(): string {\n        return 'UserRS';\n    }\n\n    public getAllGesuchsteller(): IPromise<TSUser[]> {\n        return this.http.get(this.serviceURL + '/gesuchsteller').then((response: any) => {\n            this.$log.debug('PARSING user REST array object', response.data);\n            return this.ebeguRestUtil.parseUserList(response.data);\n        });\n    }\n}\n"]}]}