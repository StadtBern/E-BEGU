{"remainingRequest":"/home/imanol/projects/ebegu/ebegu-web/node_modules/thread-loader/dist/cjs.js??ref--0-1!/home/imanol/projects/ebegu/ebegu-web/node_modules/ts-loader/index.js??ref--0-2!/home/imanol/projects/ebegu/ebegu-web/src/core/component/dv-posteingang/dv-posteingang.ts","cacheIdentifier":"cache-loader:1.1.0 test","dependencies":[{"path":"/home/imanol/projects/ebegu/ebegu-web/src/core/component/dv-posteingang/dv-posteingang.ts","mtime":1518612532790},{"path":"/home/imanol/projects/ebegu/ebegu-web/node_modules/cache-loader/dist/cjs.js","mtime":1507514019000},{"path":"/home/imanol/projects/ebegu/ebegu-web/node_modules/thread-loader/dist/cjs.js","mtime":1507523420000},{"path":"/home/imanol/projects/ebegu/ebegu-web/node_modules/ts-loader/index.js","mtime":1508488471000}],"contextDependencies":[],"result":["\"use strict\";\n/*\n * Ki-Tax: System for the management of external childcare subsidies\n * Copyright (C) 2017 City of Bern Switzerland\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar TSAuthEvent_1 = require(\"../../../models/enums/TSAuthEvent\");\nvar TSRoleUtil_1 = require(\"../../../utils/TSRoleUtil\");\nvar template = require('./dv-posteingang.html');\nvar DvPosteingangComponentConfig = /** @class */ (function () {\n    function DvPosteingangComponentConfig() {\n        this.transclude = false;\n        this.bindings = {};\n        this.template = template;\n        this.controller = DvPosteingangController;\n        this.controllerAs = 'vm';\n    }\n    return DvPosteingangComponentConfig;\n}());\nexports.DvPosteingangComponentConfig = DvPosteingangComponentConfig;\nvar DvPosteingangController = /** @class */ (function () {\n    function DvPosteingangController(mitteilungRS, $rootScope, authServiceRS, $log) {\n        var _this = this;\n        this.mitteilungRS = mitteilungRS;\n        this.$rootScope = $rootScope;\n        this.authServiceRS = authServiceRS;\n        this.$log = $log;\n        this.amountMitteilungen = 0;\n        this.getAmountNewMitteilungen();\n        this.$rootScope.$on('POSTEINGANG_MAY_CHANGED', function (event) {\n            _this.getAmountNewMitteilungen();\n        });\n        this.$rootScope.$on(TSAuthEvent_1.TSAuthEvent[TSAuthEvent_1.TSAuthEvent.LOGIN_SUCCESS], function () {\n            if (_this.authServiceRS.isOneOfRoles(TSRoleUtil_1.TSRoleUtil.getGesuchstellerJugendamtSchulamtRoles())) {\n                _this.getAmountNewMitteilungen(); // call it a first time\n                if (_this.authServiceRS.isOneOfRoles(TSRoleUtil_1.TSRoleUtil.getAdministratorOrAmtRole())) {\n                    // call every 5 minutes (5*60*1000)\n                    _this.reloadAmountMitteilungenInterval = window.setInterval(function () { return _this.getAmountNewMitteilungen(); }, 300000);\n                }\n            }\n        });\n        // Das Interval muss nach jedem LOGOUT entfernt werden, um zu vermeiden dass es bei Benutzern auftritt die\n        // keinen Mitteilungen haben\n        this.$rootScope.$on(TSAuthEvent_1.TSAuthEvent[TSAuthEvent_1.TSAuthEvent.LOGOUT_SUCCESS], function () {\n            clearInterval(_this.reloadAmountMitteilungenInterval);\n        });\n    }\n    DvPosteingangController.prototype.getAmountNewMitteilungen = function () {\n        var _this = this;\n        this.mitteilungRS.getAmountMitteilungenForCurrentBenutzer().then(function (response) {\n            if (!response || isNaN(response)) {\n                _this.amountMitteilungen = 0;\n            }\n            else {\n                _this.amountMitteilungen = response;\n            }\n        }).catch(function (err) {\n            //Fehler bei deisem request (notokenrefresh )werden bis hier ohne Behandlung\n            // (unerwarteter Fehler anzeige, redirect etc.) weitergeschlauft\n            _this.$log.debug('received error message while reading posteingang. Ignoring ...');\n            _this.amountMitteilungen = 0;\n        });\n    };\n    DvPosteingangController.$inject = ['MitteilungRS', '$rootScope', 'AuthServiceRS', '$log'];\n    return DvPosteingangController;\n}());\nexports.DvPosteingangController = DvPosteingangController;\n",{"version":3,"file":"/home/imanol/projects/ebegu/ebegu-web/src/core/component/dv-posteingang/dv-posteingang.ts","sourceRoot":"","sources":["/home/imanol/projects/ebegu/ebegu-web/src/core/component/dv-posteingang/dv-posteingang.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;GAaG;;AAIH,iEAA8D;AAC9D,wDAAqD;AAIrD,IAAI,QAAQ,GAAG,OAAO,CAAC,uBAAuB,CAAC,CAAC;AAEhD;IAAA;QACI,eAAU,GAAG,KAAK,CAAC;QACnB,aAAQ,GAAQ,EAAE,CAAC;QACnB,aAAQ,GAAG,QAAQ,CAAC;QACpB,eAAU,GAAG,uBAAuB,CAAC;QACrC,iBAAY,GAAG,IAAI,CAAC;IACxB,CAAC;IAAD,mCAAC;AAAD,CAAC,AAND,IAMC;AANY,oEAA4B;AAQzC;IAOI,iCAAoB,YAA0B,EAAU,UAA6B,EACjE,aAA4B,EAC5B,IAAiB;QAFrC,iBAyBC;QAzBmB,iBAAY,GAAZ,YAAY,CAAc;QAAU,eAAU,GAAV,UAAU,CAAmB;QACjE,kBAAa,GAAb,aAAa,CAAe;QAC5B,SAAI,GAAJ,IAAI,CAAa;QAPrC,uBAAkB,GAAW,CAAC,CAAC;QAQ3B,IAAI,CAAC,wBAAwB,EAAE,CAAC;QAEhC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,yBAAyB,EAAE,UAAC,KAAU;YACtD,KAAI,CAAC,wBAAwB,EAAE,CAAC;QACpC,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,yBAAW,CAAC,yBAAW,CAAC,aAAa,CAAC,EAAE;YACxD,EAAE,CAAC,CAAC,KAAI,CAAC,aAAa,CAAC,YAAY,CAAC,uBAAU,CAAC,sCAAsC,EAAE,CAAC,CAAC,CAAC,CAAC;gBACvF,KAAI,CAAC,wBAAwB,EAAE,CAAC,CAAC,uBAAuB;gBAExD,EAAE,CAAC,CAAC,KAAI,CAAC,aAAa,CAAC,YAAY,CAAC,uBAAU,CAAC,yBAAyB,EAAE,CAAC,CAAC,CAAC,CAAC;oBAC1E,mCAAmC;oBACnC,KAAI,CAAC,gCAAgC,GAAG,MAAM,CAAC,WAAW,CAAC,cAAM,OAAA,KAAI,CAAC,wBAAwB,EAAE,EAA/B,CAA+B,EAAE,MAAM,CAAC,CAAC;gBAC9G,CAAC;YACL,CAAC;QACL,CAAC,CAAC,CAAC;QAEH,0GAA0G;QAC1G,4BAA4B;QAC5B,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,yBAAW,CAAC,yBAAW,CAAC,cAAc,CAAC,EAAE;YACzD,aAAa,CAAC,KAAI,CAAC,gCAAgC,CAAC,CAAC;QACzD,CAAC,CAAC,CAAC;IACP,CAAC;IAEO,0DAAwB,GAAhC;QAAA,iBAaC;QAZG,IAAI,CAAC,YAAY,CAAC,uCAAuC,EAAE,CAAC,IAAI,CAAC,UAAC,QAAgB;YAC9E,EAAE,CAAC,CAAC,CAAC,QAAQ,IAAI,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;gBAC/B,KAAI,CAAC,kBAAkB,GAAG,CAAC,CAAC;YAChC,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,KAAI,CAAC,kBAAkB,GAAG,QAAQ,CAAC;YACvC,CAAC;QACL,CAAC,CAAC,CAAC,KAAK,CAAC,UAAC,GAAG;YACT,4EAA4E;YAC5E,gEAAgE;YAChE,KAAI,CAAC,IAAI,CAAC,KAAK,CAAC,gEAAgE,CAAC,CAAC;YAClF,KAAI,CAAC,kBAAkB,GAAG,CAAC,CAAC;QAChC,CAAC,CAAC,CAAC;IACP,CAAC;IA1CM,+BAAO,GAAU,CAAC,cAAc,EAAE,YAAY,EAAE,eAAe,EAAE,MAAM,CAAC,CAAC;IA4CpF,8BAAC;CAAA,AAjDD,IAiDC;AAjDY,0DAAuB","sourcesContent":["/*\n * Ki-Tax: System for the management of external childcare subsidies\n * Copyright (C) 2017 City of Bern Switzerland\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport {IComponentOptions, ILogService} from 'angular';\nimport AuthServiceRS from '../../../authentication/service/AuthServiceRS.rest';\nimport {TSAuthEvent} from '../../../models/enums/TSAuthEvent';\nimport {TSRoleUtil} from '../../../utils/TSRoleUtil';\nimport MitteilungRS from '../../service/mitteilungRS.rest';\nimport IRootScopeService = angular.IRootScopeService;\n\nlet template = require('./dv-posteingang.html');\n\nexport class DvPosteingangComponentConfig implements IComponentOptions {\n    transclude = false;\n    bindings: any = {};\n    template = template;\n    controller = DvPosteingangController;\n    controllerAs = 'vm';\n}\n\nexport class DvPosteingangController {\n\n    amountMitteilungen: number = 0;\n    reloadAmountMitteilungenInterval: number;\n\n    static $inject: any[] = ['MitteilungRS', '$rootScope', 'AuthServiceRS', '$log'];\n\n    constructor(private mitteilungRS: MitteilungRS, private $rootScope: IRootScopeService,\n                private authServiceRS: AuthServiceRS,\n                private $log: ILogService) {\n        this.getAmountNewMitteilungen();\n\n        this.$rootScope.$on('POSTEINGANG_MAY_CHANGED', (event: any) => {\n            this.getAmountNewMitteilungen();\n        });\n\n        this.$rootScope.$on(TSAuthEvent[TSAuthEvent.LOGIN_SUCCESS], () => {\n            if (this.authServiceRS.isOneOfRoles(TSRoleUtil.getGesuchstellerJugendamtSchulamtRoles())) {\n                this.getAmountNewMitteilungen(); // call it a first time\n\n                if (this.authServiceRS.isOneOfRoles(TSRoleUtil.getAdministratorOrAmtRole())) { // not for GS\n                    // call every 5 minutes (5*60*1000)\n                    this.reloadAmountMitteilungenInterval = window.setInterval(() => this.getAmountNewMitteilungen(), 300000);\n                }\n            }\n        });\n\n        // Das Interval muss nach jedem LOGOUT entfernt werden, um zu vermeiden dass es bei Benutzern auftritt die\n        // keinen Mitteilungen haben\n        this.$rootScope.$on(TSAuthEvent[TSAuthEvent.LOGOUT_SUCCESS], () => {\n            clearInterval(this.reloadAmountMitteilungenInterval);\n        });\n    }\n\n    private getAmountNewMitteilungen(): void {\n        this.mitteilungRS.getAmountMitteilungenForCurrentBenutzer().then((response: number) => {\n            if (!response || isNaN(response)) { //wenn keine gueltige antwort\n                this.amountMitteilungen = 0;\n            } else {\n                this.amountMitteilungen = response;\n            }\n        }).catch((err) => {\n            //Fehler bei deisem request (notokenrefresh )werden bis hier ohne Behandlung\n            // (unerwarteter Fehler anzeige, redirect etc.) weitergeschlauft\n            this.$log.debug('received error message while reading posteingang. Ignoring ...');\n            this.amountMitteilungen = 0;\n        });\n    }\n\n}\n"]}]}