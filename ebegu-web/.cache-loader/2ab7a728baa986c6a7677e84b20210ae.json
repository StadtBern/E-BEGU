{"remainingRequest":"/home/imanol/projects/ebegu/ebegu-web/node_modules/thread-loader/dist/cjs.js??ref--0-1!/home/imanol/projects/ebegu/ebegu-web/node_modules/ts-loader/index.js??ref--0-2!/home/imanol/projects/ebegu/ebegu-web/src/core/component/dv-posteingang/dv-posteingang.ts","cacheIdentifier":"cache-loader:1.1.0 test","dependencies":[{"path":"/home/imanol/projects/ebegu/ebegu-web/src/core/component/dv-posteingang/dv-posteingang.ts","mtime":1518535855212},{"path":"/home/imanol/projects/ebegu/ebegu-web/node_modules/cache-loader/dist/cjs.js","mtime":1507514019000},{"path":"/home/imanol/projects/ebegu/ebegu-web/node_modules/thread-loader/dist/cjs.js","mtime":1507523420000},{"path":"/home/imanol/projects/ebegu/ebegu-web/node_modules/ts-loader/index.js","mtime":1508488471000}],"contextDependencies":[],"result":["/*\n * Ki-Tax: System for the management of external childcare subsidies\n * Copyright (C) 2017 City of Bern Switzerland\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\ndefine([\"require\", \"exports\", \"../../../models/enums/TSAuthEvent\", \"../../../utils/TSRoleUtil\"], function (require, exports, TSAuthEvent_1, TSRoleUtil_1) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    var template = require('./dv-posteingang.html');\n    var DvPosteingangComponentConfig = /** @class */ (function () {\n        function DvPosteingangComponentConfig() {\n            this.transclude = false;\n            this.bindings = {};\n            this.template = template;\n            this.controller = DvPosteingangController;\n            this.controllerAs = 'vm';\n        }\n        return DvPosteingangComponentConfig;\n    }());\n    exports.DvPosteingangComponentConfig = DvPosteingangComponentConfig;\n    var DvPosteingangController = /** @class */ (function () {\n        function DvPosteingangController(mitteilungRS, $rootScope, authServiceRS, $log) {\n            var _this = this;\n            this.mitteilungRS = mitteilungRS;\n            this.$rootScope = $rootScope;\n            this.authServiceRS = authServiceRS;\n            this.$log = $log;\n            this.amountMitteilungen = 0;\n            this.getAmountNewMitteilungen();\n            this.$rootScope.$on('POSTEINGANG_MAY_CHANGED', function (event) {\n                _this.getAmountNewMitteilungen();\n            });\n            this.$rootScope.$on(TSAuthEvent_1.TSAuthEvent[TSAuthEvent_1.TSAuthEvent.LOGIN_SUCCESS], function () {\n                if (_this.authServiceRS.isOneOfRoles(TSRoleUtil_1.TSRoleUtil.getGesuchstellerJugendamtRoles())) {\n                    _this.getAmountNewMitteilungen(); // call it a first time\n                    if (_this.authServiceRS.isOneOfRoles(TSRoleUtil_1.TSRoleUtil.getAdministratorJugendamtRole())) {\n                        // call every 5 minutes (5*60*1000)\n                        _this.reloadAmountMitteilungenInterval = setInterval(function () { return _this.getAmountNewMitteilungen(); }, 300000);\n                    }\n                }\n            });\n            // Das Interval muss nach jedem LOGOUT entfernt werden, um zu vermeiden dass es bei Benutzern auftritt die keinen Mitteilungen haben\n            this.$rootScope.$on(TSAuthEvent_1.TSAuthEvent[TSAuthEvent_1.TSAuthEvent.LOGOUT_SUCCESS], function () {\n                clearInterval(_this.reloadAmountMitteilungenInterval);\n            });\n        }\n        DvPosteingangController.prototype.getAmountNewMitteilungen = function () {\n            var _this = this;\n            this.mitteilungRS.getAmountMitteilungenForCurrentBenutzer().then(function (response) {\n                if (!response || isNaN(response)) {\n                    _this.amountMitteilungen = 0;\n                }\n                else {\n                    _this.amountMitteilungen = response;\n                }\n            }).catch(function (err) {\n                //Fehler bei deisem request (notokenrefresh )werden bis hier ohne Behandlung\n                // (unerwarteter Fehler anzeige, redirect etc.) weitergeschlauft\n                _this.$log.debug('received error message while reading posteingang. Ignoring ...');\n                _this.amountMitteilungen = 0;\n            });\n        };\n        DvPosteingangController.$inject = ['MitteilungRS', '$rootScope', 'AuthServiceRS', '$log'];\n        return DvPosteingangController;\n    }());\n    exports.DvPosteingangController = DvPosteingangController;\n});\n",{"version":3,"file":"/home/imanol/projects/ebegu/ebegu-web/src/core/component/dv-posteingang/dv-posteingang.ts","sourceRoot":"","sources":["/home/imanol/projects/ebegu/ebegu-web/src/core/component/dv-posteingang/dv-posteingang.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;GAaG;;;;IAQH,IAAI,QAAQ,GAAG,OAAO,CAAC,uBAAuB,CAAC,CAAC;IAEhD;QAAA;YACI,eAAU,GAAG,KAAK,CAAC;YACnB,aAAQ,GAAQ,EAAE,CAAC;YACnB,aAAQ,GAAG,QAAQ,CAAC;YACpB,eAAU,GAAG,uBAAuB,CAAC;YACrC,iBAAY,GAAG,IAAI,CAAC;QACxB,CAAC;QAAD,mCAAC;IAAD,CAAC,AAND,IAMC;IANY,oEAA4B;IAQzC;QAOI,iCAAoB,YAA0B,EAAU,UAA6B,EAAU,aAA4B,EAC/G,IAAiB;YAD7B,iBAuBC;YAvBmB,iBAAY,GAAZ,YAAY,CAAc;YAAU,eAAU,GAAV,UAAU,CAAmB;YAAU,kBAAa,GAAb,aAAa,CAAe;YAC/G,SAAI,GAAJ,IAAI,CAAa;YAN7B,uBAAkB,GAAW,CAAC,CAAC;YAO3B,IAAI,CAAC,wBAAwB,EAAE,CAAC;YAEhC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,yBAAyB,EAAE,UAAC,KAAU;gBACtD,KAAI,CAAC,wBAAwB,EAAE,CAAC;YACpC,CAAC,CAAC,CAAC;YAEH,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,yBAAW,CAAC,yBAAW,CAAC,aAAa,CAAC,EAAE;gBACxD,EAAE,CAAC,CAAC,KAAI,CAAC,aAAa,CAAC,YAAY,CAAC,uBAAU,CAAC,8BAA8B,EAAE,CAAC,CAAC,CAAC,CAAC;oBAC/E,KAAI,CAAC,wBAAwB,EAAE,CAAC,CAAC,uBAAuB;oBAExD,EAAE,CAAC,CAAC,KAAI,CAAC,aAAa,CAAC,YAAY,CAAC,uBAAU,CAAC,6BAA6B,EAAE,CAAC,CAAC,CAAC,CAAC;wBAC9E,mCAAmC;wBACnC,KAAI,CAAC,gCAAgC,GAAG,WAAW,CAAC,cAAM,OAAA,KAAI,CAAC,wBAAwB,EAAE,EAA/B,CAA+B,EAAE,MAAM,CAAC,CAAC;oBACvG,CAAC;gBACL,CAAC;YACL,CAAC,CAAC,CAAC;YAEH,oIAAoI;YACpI,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,yBAAW,CAAC,yBAAW,CAAC,cAAc,CAAC,EAAE;gBACzD,aAAa,CAAC,KAAI,CAAC,gCAAgC,CAAC,CAAC;YACzD,CAAC,CAAC,CAAC;QACP,CAAC;QAEO,0DAAwB,GAAhC;YAAA,iBAaC;YAZG,IAAI,CAAC,YAAY,CAAC,uCAAuC,EAAE,CAAC,IAAI,CAAC,UAAC,QAAgB;gBAC9E,EAAE,CAAC,CAAC,CAAC,QAAQ,IAAI,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;oBAC/B,KAAI,CAAC,kBAAkB,GAAG,CAAC,CAAC;gBAChC,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACJ,KAAI,CAAC,kBAAkB,GAAG,QAAQ,CAAC;gBACvC,CAAC;YACL,CAAC,CAAC,CAAC,KAAK,CAAC,UAAC,GAAG;gBACT,4EAA4E;gBAC5E,gEAAgE;gBAChE,KAAI,CAAC,IAAI,CAAC,KAAK,CAAC,gEAAgE,CAAC,CAAC;gBAClF,KAAI,CAAC,kBAAkB,GAAG,CAAC,CAAC;YAChC,CAAC,CAAC,CAAC;QACP,CAAC;QAxCM,+BAAO,GAAU,CAAC,cAAc,EAAE,YAAY,EAAE,eAAe,EAAE,MAAM,CAAC,CAAC;QA0CpF,8BAAC;KAAA,AA/CD,IA+CC;IA/CY,0DAAuB","sourcesContent":["/*\n * Ki-Tax: System for the management of external childcare subsidies\n * Copyright (C) 2017 City of Bern Switzerland\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport {IComponentOptions, ILogService} from 'angular';\nimport MitteilungRS from '../../service/mitteilungRS.rest';\nimport {TSAuthEvent} from '../../../models/enums/TSAuthEvent';\nimport AuthServiceRS from '../../../authentication/service/AuthServiceRS.rest';\nimport {TSRoleUtil} from '../../../utils/TSRoleUtil';\nimport IRootScopeService = angular.IRootScopeService;\nlet template = require('./dv-posteingang.html');\n\nexport class DvPosteingangComponentConfig implements IComponentOptions {\n    transclude = false;\n    bindings: any = {};\n    template = template;\n    controller = DvPosteingangController;\n    controllerAs = 'vm';\n}\n\nexport class DvPosteingangController {\n\n    amountMitteilungen: number = 0;\n    reloadAmountMitteilungenInterval: number;\n\n    static $inject: any[] = ['MitteilungRS', '$rootScope', 'AuthServiceRS', '$log'];\n\n    constructor(private mitteilungRS: MitteilungRS, private $rootScope: IRootScopeService, private authServiceRS: AuthServiceRS,\n        private $log: ILogService) {\n        this.getAmountNewMitteilungen();\n\n        this.$rootScope.$on('POSTEINGANG_MAY_CHANGED', (event: any) => {\n            this.getAmountNewMitteilungen();\n        });\n\n        this.$rootScope.$on(TSAuthEvent[TSAuthEvent.LOGIN_SUCCESS], () => {\n            if (this.authServiceRS.isOneOfRoles(TSRoleUtil.getGesuchstellerJugendamtRoles())) {\n                this.getAmountNewMitteilungen(); // call it a first time\n\n                if (this.authServiceRS.isOneOfRoles(TSRoleUtil.getAdministratorJugendamtRole())) { // not for GS\n                    // call every 5 minutes (5*60*1000)\n                    this.reloadAmountMitteilungenInterval = setInterval(() => this.getAmountNewMitteilungen(), 300000);\n                }\n            }\n        });\n\n        // Das Interval muss nach jedem LOGOUT entfernt werden, um zu vermeiden dass es bei Benutzern auftritt die keinen Mitteilungen haben\n        this.$rootScope.$on(TSAuthEvent[TSAuthEvent.LOGOUT_SUCCESS], () => {\n            clearInterval(this.reloadAmountMitteilungenInterval);\n        });\n    }\n\n    private getAmountNewMitteilungen(): void {\n        this.mitteilungRS.getAmountMitteilungenForCurrentBenutzer().then((response: number) => {\n            if (!response || isNaN(response)) { //wenn keine gueltige antwort\n                this.amountMitteilungen = 0;\n            } else {\n                this.amountMitteilungen = response;\n            }\n        }).catch((err) => {\n            //Fehler bei deisem request (notokenrefresh )werden bis hier ohne Behandlung\n            // (unerwarteter Fehler anzeige, redirect etc.) weitergeschlauft\n            this.$log.debug('received error message while reading posteingang. Ignoring ...');\n            this.amountMitteilungen = 0;\n        });\n    }\n\n}\n"]}]}