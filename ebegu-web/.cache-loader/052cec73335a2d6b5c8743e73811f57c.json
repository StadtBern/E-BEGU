{"remainingRequest":"/home/imanol/projects/ebegu/ebegu-web/node_modules/thread-loader/dist/cjs.js??ref--0-1!/home/imanol/projects/ebegu/ebegu-web/node_modules/ts-loader/index.js??ref--0-2!/home/imanol/projects/ebegu/ebegu-web/src/gesuch/component/stammdatenView/stammdatenView.ts","cacheIdentifier":"cache-loader:1.1.0 test","dependencies":[{"path":"/home/imanol/projects/ebegu/ebegu-web/src/gesuch/component/stammdatenView/stammdatenView.ts","mtime":1518612532802},{"path":"/home/imanol/projects/ebegu/ebegu-web/node_modules/cache-loader/dist/cjs.js","mtime":1507514019000},{"path":"/home/imanol/projects/ebegu/ebegu-web/node_modules/thread-loader/dist/cjs.js","mtime":1507523420000},{"path":"/home/imanol/projects/ebegu/ebegu-web/node_modules/ts-loader/index.js","mtime":1508488471000}],"contextDependencies":[],"result":["\"use strict\";\n/*\n * Ki-Tax: System for the management of external childcare subsidies\n * Copyright (C) 2017 City of Bern Switzerland\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar TSAdressetyp_1 = require(\"../../../models/enums/TSAdressetyp\");\nvar TSGeschlecht_1 = require(\"../../../models/enums/TSGeschlecht\");\nvar TSGesuchEvent_1 = require(\"../../../models/enums/TSGesuchEvent\");\nvar TSWizardStepName_1 = require(\"../../../models/enums/TSWizardStepName\");\nvar TSWizardStepStatus_1 = require(\"../../../models/enums/TSWizardStepStatus\");\nvar TSAdresse_1 = require(\"../../../models/TSAdresse\");\nvar TSAdresseContainer_1 = require(\"../../../models/TSAdresseContainer\");\nvar DateUtil_1 = require(\"../../../utils/DateUtil\");\nvar EnumEx_1 = require(\"../../../utils/EnumEx\");\nvar TSRoleUtil_1 = require(\"../../../utils/TSRoleUtil\");\nvar abstractGesuchView_1 = require(\"../abstractGesuchView\");\nrequire(\"./stammdatenView.less\");\nvar template = require('./stammdatenView.html');\nrequire('./stammdatenView.less');\nvar StammdatenViewComponentConfig = /** @class */ (function () {\n    function StammdatenViewComponentConfig() {\n        this.transclude = false;\n        this.bindings = {};\n        this.template = template;\n        this.controller = StammdatenViewController;\n        this.controllerAs = 'vm';\n    }\n    return StammdatenViewComponentConfig;\n}());\nexports.StammdatenViewComponentConfig = StammdatenViewComponentConfig;\nvar StammdatenViewController = /** @class */ (function (_super) {\n    __extends(StammdatenViewController, _super);\n    /* @ngInject */\n    function StammdatenViewController($stateParams, ebeguRestUtil, gesuchModelManager, berechnungsManager, errorService, wizardStepManager, CONSTANTS, $q, $scope, $translate, authServiceRS, $rootScope, ewkRS, $timeout) {\n        var _this = _super.call(this, gesuchModelManager, berechnungsManager, wizardStepManager, $scope, TSWizardStepName_1.TSWizardStepName.GESUCHSTELLER, $timeout) || this;\n        _this.errorService = errorService;\n        _this.CONSTANTS = CONSTANTS;\n        _this.$q = $q;\n        _this.$translate = $translate;\n        _this.authServiceRS = authServiceRS;\n        _this.$rootScope = $rootScope;\n        _this.ewkRS = ewkRS;\n        _this.isLastVerfuegtesGesuch = false;\n        _this.ebeguRestUtil = ebeguRestUtil;\n        _this.gesuchstellerNumber = parseInt($stateParams.gesuchstellerNumber, 10);\n        _this.gesuchModelManager.setGesuchstellerNumber(_this.gesuchstellerNumber);\n        _this.initViewmodel();\n        return _this;\n    }\n    StammdatenViewController.prototype.initViewmodel = function () {\n        var _this = this;\n        this.gesuchModelManager.initStammdaten();\n        this.model = angular.copy(this.gesuchModelManager.getStammdatenToWorkWith());\n        this.initialModel = angular.copy(this.model);\n        this.wizardStepManager.updateCurrentWizardStepStatus(TSWizardStepStatus_1.TSWizardStepStatus.IN_BEARBEITUNG);\n        this.geschlechter = EnumEx_1.EnumEx.getNames(TSGeschlecht_1.TSGeschlecht);\n        this.showKorrespondadr = (this.model.korrespondenzAdresse && this.model.korrespondenzAdresse.adresseJA) ? true : false;\n        this.showKorrespondadrGS = (this.model.korrespondenzAdresse && this.model.korrespondenzAdresse.adresseGS) ? true : false;\n        this.showRechnungsadr = (this.model.rechnungsAdresse && this.model.rechnungsAdresse.adresseJA) ? true : false;\n        this.showRechnungsadrGS = (this.model.rechnungsAdresse && this.model.rechnungsAdresse.adresseGS) ? true : false;\n        this.allowedRoles = this.TSRoleUtil.getAllRolesButTraegerschaftInstitution();\n        this.getModel().showUmzug = this.getModel().showUmzug || this.getModel().isThereAnyUmzug();\n        this.setLastVerfuegtesGesuch();\n        this.$rootScope.$on(TSGesuchEvent_1.TSGesuchEvent[TSGesuchEvent_1.TSGesuchEvent.EWK_PERSON_SELECTED], function (event, gsNummer, ewkId) {\n            if (gsNummer === _this.gesuchModelManager.gesuchstellerNumber) {\n                _this.model.gesuchstellerJA.ewkPersonId = ewkId;\n                _this.model.gesuchstellerJA.ewkAbfrageDatum = DateUtil_1.default.today();\n                _this.form.$dirty = true;\n            }\n        });\n    };\n    StammdatenViewController.prototype.korrespondenzAdrClicked = function () {\n        if (this.showKorrespondadr) {\n            if (!this.model.korrespondenzAdresse) {\n                this.model.korrespondenzAdresse = this.initAdresse(TSAdressetyp_1.TSAdressetyp.KORRESPONDENZADRESSE);\n            }\n            else if (!this.model.korrespondenzAdresse.adresseJA) {\n                this.initKorrespondenzAdresseJA();\n            }\n        }\n    };\n    StammdatenViewController.prototype.rechnungsAdrClicked = function () {\n        if (this.showRechnungsadr) {\n            if (!this.model.rechnungsAdresse) {\n                this.model.rechnungsAdresse = this.initAdresse(TSAdressetyp_1.TSAdressetyp.RECHNUNGSADRESSE);\n            }\n            else if (!this.model.rechnungsAdresse.adresseJA) {\n                this.initRechnungsAdresseJA();\n            }\n        }\n    };\n    StammdatenViewController.prototype.setLastVerfuegtesGesuch = function () {\n        this.isLastVerfuegtesGesuch = this.gesuchModelManager.isNeuestesGesuch();\n    };\n    StammdatenViewController.prototype.save = function () {\n        if (this.isGesuchValid()) {\n            this.gesuchModelManager.setStammdatenToWorkWith(this.model);\n            if (!this.form.$dirty) {\n                // If there are no changes in form we don't need anything to update on Server and we could return the\n                // promise immediately\n                if ((this.gesuchModelManager.getGesuchstellerNumber() === 1 && !this.gesuchModelManager.isGesuchsteller2Required())\n                    || this.gesuchModelManager.getGesuchstellerNumber() === 2) {\n                    this.updateGSDependentWizardSteps();\n                }\n                return this.$q.when(this.model);\n            }\n            // wenn keine Korrespondenzaddr oder Rechnungsadr da ist koennen wir sie wegmachen\n            this.maybeResetKorrespondadr();\n            this.maybeResetRechnungsadr();\n            if ((this.gesuchModelManager.getGesuch().gesuchsteller1 && this.gesuchModelManager.getGesuch().gesuchsteller1.showUmzug)\n                || (this.gesuchModelManager.getGesuch().gesuchsteller2 && this.gesuchModelManager.getGesuch().gesuchsteller2.showUmzug)\n                || this.isMutation()) {\n                this.wizardStepManager.unhideStep(TSWizardStepName_1.TSWizardStepName.UMZUG);\n            }\n            else {\n                this.wizardStepManager.hideStep(TSWizardStepName_1.TSWizardStepName.UMZUG);\n            }\n            this.errorService.clearAll();\n            // todo bei Aenderungen von Kontaktdaten sollte man nicht den ganzen GS updaten sondern nur die Kontakdaten\n            return this.gesuchModelManager.updateGesuchsteller(false);\n        }\n        return undefined;\n    };\n    /**\n     * Aktualisiert alle Steps die Abhaengigkeiten mit dem Status von GS haben.\n     */\n    StammdatenViewController.prototype.updateGSDependentWizardSteps = function () {\n        this.wizardStepManager.updateCurrentWizardStepStatus(TSWizardStepStatus_1.TSWizardStepStatus.OK); // GESUCHSTELLER\n        if (this.wizardStepManager.hasStepGivenStatus(TSWizardStepName_1.TSWizardStepName.FINANZIELLE_SITUATION, TSWizardStepStatus_1.TSWizardStepStatus.NOK)) {\n            this.wizardStepManager.updateWizardStepStatus(TSWizardStepName_1.TSWizardStepName.FINANZIELLE_SITUATION, TSWizardStepStatus_1.TSWizardStepStatus.OK);\n        }\n        if (this.wizardStepManager.hasStepGivenStatus(TSWizardStepName_1.TSWizardStepName.EINKOMMENSVERSCHLECHTERUNG, TSWizardStepStatus_1.TSWizardStepStatus.NOK)) {\n            this.wizardStepManager.updateWizardStepStatus(TSWizardStepName_1.TSWizardStepName.EINKOMMENSVERSCHLECHTERUNG, TSWizardStepStatus_1.TSWizardStepStatus.OK);\n        }\n    };\n    StammdatenViewController.prototype.getModel = function () {\n        return this.model;\n    };\n    StammdatenViewController.prototype.getModelJA = function () {\n        return this.model.gesuchstellerJA;\n    };\n    /**\n     * Die Wohnadresse des GS2 darf bei Mutationen in denen der GS2 bereits existiert, nicht geaendert werden.\n     * Die Wohnadresse des GS1 darf bei Mutationen nie geaendert werden\n     * @returns {boolean}\n     */\n    StammdatenViewController.prototype.disableWohnadresseFor2GS = function () {\n        return this.isMutation() && (this.gesuchstellerNumber === 1\n            || (this.model.vorgaengerId !== null\n                && this.model.vorgaengerId !== undefined));\n    };\n    StammdatenViewController.prototype.isThereAnyUmzug = function () {\n        return this.gesuchModelManager.getGesuch().isThereAnyUmzug();\n    };\n    StammdatenViewController.prototype.maybeResetKorrespondadr = function () {\n        if (!this.showKorrespondadr && !this.showKorrespondadrGS) {\n            this.getModel().korrespondenzAdresse = undefined; //keine korrAdr weder von GS noch von JA -> entfernen\n        }\n        else if (!this.showKorrespondadr) {\n            this.getModel().korrespondenzAdresse.adresseJA = undefined; //nur adresse JA wird zurueckgesetzt die GS kann bleiben\n        }\n    };\n    StammdatenViewController.prototype.maybeResetRechnungsadr = function () {\n        if (!this.showRechnungsadr && !this.showRechnungsadrGS) {\n            this.getModel().rechnungsAdresse = undefined; //keine rechnungsAdresse weder von GS noch von JA -> entfernen\n        }\n        else if (!this.showRechnungsadr) {\n            this.getModel().rechnungsAdresse.adresseJA = undefined; //nur adresse JA wird zurueckgesetzt die GS kann bleiben\n        }\n    };\n    StammdatenViewController.prototype.initAdresse = function (adresstyp) {\n        var adresseContanier = new TSAdresseContainer_1.default();\n        var adresse = new TSAdresse_1.default();\n        adresse.adresseTyp = adresstyp;\n        adresseContanier.showDatumVon = false;\n        adresseContanier.adresseJA = adresse;\n        return adresseContanier;\n    };\n    StammdatenViewController.prototype.initKorrespondenzAdresseJA = function () {\n        var addr = new TSAdresse_1.default();\n        addr.adresseTyp = TSAdressetyp_1.TSAdressetyp.KORRESPONDENZADRESSE;\n        this.model.korrespondenzAdresse.adresseJA = addr;\n        this.model.korrespondenzAdresse.showDatumVon = false;\n    };\n    StammdatenViewController.prototype.initRechnungsAdresseJA = function () {\n        var addr = new TSAdresse_1.default();\n        addr.adresseTyp = TSAdressetyp_1.TSAdressetyp.RECHNUNGSADRESSE;\n        this.model.rechnungsAdresse.adresseJA = addr;\n        this.model.rechnungsAdresse.showDatumVon = false;\n    };\n    StammdatenViewController.prototype.getTextAddrKorrekturJA = function (adresseContainer) {\n        if (adresseContainer && adresseContainer.adresseGS) {\n            var adr = adresseContainer.adresseGS;\n            var organisation = adr.organisation ? adr.organisation : '-';\n            var strasse = adr.strasse ? adr.strasse : '-';\n            var hausnummer = adr.hausnummer ? adr.hausnummer : '-';\n            var zusatzzeile = adr.zusatzzeile ? adr.zusatzzeile : '-';\n            var plz = adr.plz ? adr.plz : '-';\n            var ort = adr.ort ? adr.ort : '-';\n            var land = this.$translate.instant('Land_' + adr.land);\n            return this.$translate.instant('JA_KORREKTUR_ADDR', {\n                organisation: organisation,\n                strasse: strasse,\n                hausnummer: hausnummer,\n                zusatzzeile: zusatzzeile,\n                plz: plz,\n                ort: ort,\n                land: land,\n            });\n        }\n        else {\n            return this.$translate.instant('LABEL_KEINE_ANGABE');\n        }\n    };\n    /**\n     * Checks whether the fields Email and Telefon are editable or not. The conditions for knowing if it is\n     * editable or not are the same ones of isGesuchReadonly(). But in this case, if the user is from the jugenadamt\n     * and the current gesuch is the newest one they may also edit those fields\n     */\n    StammdatenViewController.prototype.areEmailTelefonEditable = function () {\n        if (this.isLastVerfuegtesGesuch && this.authServiceRS.isOneOfRoles(TSRoleUtil_1.TSRoleUtil.getGesuchstellerJugendamtSchulamtRoles())) {\n            return true;\n        }\n        else {\n            return !this.isGesuchReadonly();\n        }\n    };\n    StammdatenViewController.prototype.checkAllEwkRelevantDataPresent = function () {\n        if (this.getModelJA()) {\n            // if (this.getModelJA().nachname &&\n            //     this.getModelJA().vorname &&\n            //     this.getModelJA().geschlecht &&\n            //     this.getModelJA().geburtsdatum) {\n            if (this.gesuchModelManager.gesuchstellerNumber === 1) {\n                this.ewkRS.gesuchsteller1 = this.getModel();\n            }\n            else if (this.gesuchModelManager.gesuchstellerNumber === 2) {\n                this.ewkRS.gesuchsteller2 = this.getModel();\n            }\n            else {\n                console.log('Unbekannte Gesuchstellernummer', this.gesuchstellerNumber);\n            }\n            // }\n        }\n    };\n    StammdatenViewController.$inject = ['$stateParams', 'EbeguRestUtil', 'GesuchModelManager', 'BerechnungsManager', 'ErrorService', 'WizardStepManager',\n        'CONSTANTS', '$q', '$scope', '$translate', 'AuthServiceRS', '$rootScope', 'EwkRS', '$timeout'];\n    return StammdatenViewController;\n}(abstractGesuchView_1.default));\nexports.StammdatenViewController = StammdatenViewController;\n",{"version":3,"file":"/home/imanol/projects/ebegu/ebegu-web/src/gesuch/component/stammdatenView/stammdatenView.ts","sourceRoot":"","sources":["/home/imanol/projects/ebegu/ebegu-web/src/gesuch/component/stammdatenView/stammdatenView.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Ki-Tax: System for the management of external childcare subsidies\n * Copyright (C) 2017 City of Bern Switzerland\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport {IComponentOptions} from 'angular';\nimport AuthServiceRS from '../../../authentication/service/AuthServiceRS.rest';\nimport ErrorService from '../../../core/errors/service/ErrorService';\nimport EwkRS from '../../../core/service/ewkRS.rest';\nimport {TSAdressetyp} from '../../../models/enums/TSAdressetyp';\nimport {TSGeschlecht} from '../../../models/enums/TSGeschlecht';\nimport {TSGesuchEvent} from '../../../models/enums/TSGesuchEvent';\nimport {TSRole} from '../../../models/enums/TSRole';\nimport {TSWizardStepName} from '../../../models/enums/TSWizardStepName';\nimport {TSWizardStepStatus} from '../../../models/enums/TSWizardStepStatus';\nimport TSAdresse from '../../../models/TSAdresse';\nimport TSAdresseContainer from '../../../models/TSAdresseContainer';\nimport TSGesuchstellerContainer from '../../../models/TSGesuchstellerContainer';\nimport DateUtil from '../../../utils/DateUtil';\nimport EbeguRestUtil from '../../../utils/EbeguRestUtil';\nimport {EnumEx} from '../../../utils/EnumEx';\nimport {TSRoleUtil} from '../../../utils/TSRoleUtil';\nimport {IStammdatenStateParams} from '../../gesuch.route';\nimport BerechnungsManager from '../../service/berechnungsManager';\nimport GesuchModelManager from '../../service/gesuchModelManager';\nimport WizardStepManager from '../../service/wizardStepManager';\nimport AbstractGesuchViewController from '../abstractGesuchView';\nimport './stammdatenView.less';\nimport IQService = angular.IQService;\nimport IPromise = angular.IPromise;\nimport IScope = angular.IScope;\nimport ITranslateService = angular.translate.ITranslateService;\nimport IRootScopeService = angular.IRootScopeService;\nimport ITimeoutService = angular.ITimeoutService;\n\nlet template = require('./stammdatenView.html');\nrequire('./stammdatenView.less');\n\nexport class StammdatenViewComponentConfig implements IComponentOptions {\n    transclude = false;\n    bindings: any = {};\n    template = template;\n    controller = StammdatenViewController;\n    controllerAs = 'vm';\n}\n\nexport class StammdatenViewController extends AbstractGesuchViewController<TSGesuchstellerContainer> {\n    geschlechter: Array<string>;\n    showKorrespondadr: boolean;\n    showKorrespondadrGS: boolean;\n    showRechnungsadr: boolean;\n    showRechnungsadrGS: boolean;\n    ebeguRestUtil: EbeguRestUtil;\n    allowedRoles: Array<TSRole>;\n    gesuchstellerNumber: number;\n    private initialModel: TSGesuchstellerContainer;\n    private isLastVerfuegtesGesuch: boolean = false;\n\n    static $inject = ['$stateParams', 'EbeguRestUtil', 'GesuchModelManager', 'BerechnungsManager', 'ErrorService', 'WizardStepManager',\n        'CONSTANTS', '$q', '$scope', '$translate', 'AuthServiceRS', '$rootScope', 'EwkRS', '$timeout'];\n\n    /* @ngInject */\n    constructor($stateParams: IStammdatenStateParams, ebeguRestUtil: EbeguRestUtil, gesuchModelManager: GesuchModelManager,\n                berechnungsManager: BerechnungsManager, private errorService: ErrorService,\n                wizardStepManager: WizardStepManager, private CONSTANTS: any, private $q: IQService, $scope: IScope,\n                private $translate: ITranslateService, private authServiceRS: AuthServiceRS, private $rootScope: IRootScopeService,\n                private ewkRS: EwkRS, $timeout: ITimeoutService) {\n        super(gesuchModelManager, berechnungsManager, wizardStepManager, $scope, TSWizardStepName.GESUCHSTELLER, $timeout);\n        this.ebeguRestUtil = ebeguRestUtil;\n        this.gesuchstellerNumber = parseInt($stateParams.gesuchstellerNumber, 10);\n        this.gesuchModelManager.setGesuchstellerNumber(this.gesuchstellerNumber);\n        this.initViewmodel();\n    }\n\n    private initViewmodel() {\n        this.gesuchModelManager.initStammdaten();\n        this.model = angular.copy(this.gesuchModelManager.getStammdatenToWorkWith());\n        this.initialModel = angular.copy(this.model);\n        this.wizardStepManager.updateCurrentWizardStepStatus(TSWizardStepStatus.IN_BEARBEITUNG);\n        this.geschlechter = EnumEx.getNames(TSGeschlecht);\n        this.showKorrespondadr = (this.model.korrespondenzAdresse && this.model.korrespondenzAdresse.adresseJA) ? true : false;\n        this.showKorrespondadrGS = (this.model.korrespondenzAdresse && this.model.korrespondenzAdresse.adresseGS) ? true : false;\n        this.showRechnungsadr = (this.model.rechnungsAdresse && this.model.rechnungsAdresse.adresseJA) ? true : false;\n        this.showRechnungsadrGS = (this.model.rechnungsAdresse && this.model.rechnungsAdresse.adresseGS) ? true : false;\n        this.allowedRoles = this.TSRoleUtil.getAllRolesButTraegerschaftInstitution();\n        this.getModel().showUmzug = this.getModel().showUmzug || this.getModel().isThereAnyUmzug();\n        this.setLastVerfuegtesGesuch();\n\n        this.$rootScope.$on(TSGesuchEvent[TSGesuchEvent.EWK_PERSON_SELECTED], (event: any, gsNummer: number, ewkId: string) => {\n            if (gsNummer === this.gesuchModelManager.gesuchstellerNumber) {\n                this.model.gesuchstellerJA.ewkPersonId = ewkId;\n                this.model.gesuchstellerJA.ewkAbfrageDatum = DateUtil.today();\n                this.form.$dirty = true;\n            }\n        });\n    }\n\n    korrespondenzAdrClicked() {\n        if (this.showKorrespondadr) {\n            if (!this.model.korrespondenzAdresse) {\n                this.model.korrespondenzAdresse = this.initAdresse(TSAdressetyp.KORRESPONDENZADRESSE);\n            } else if (!this.model.korrespondenzAdresse.adresseJA) {\n                this.initKorrespondenzAdresseJA();\n            }\n        }\n    }\n\n    rechnungsAdrClicked() {\n        if (this.showRechnungsadr) {\n            if (!this.model.rechnungsAdresse) {\n                this.model.rechnungsAdresse = this.initAdresse(TSAdressetyp.RECHNUNGSADRESSE);\n            } else if (!this.model.rechnungsAdresse.adresseJA) {\n                this.initRechnungsAdresseJA();\n            }\n        }\n    }\n\n    private setLastVerfuegtesGesuch(): void {\n        this.isLastVerfuegtesGesuch = this.gesuchModelManager.isNeuestesGesuch();\n    }\n\n    private save(): IPromise<TSGesuchstellerContainer> {\n        if (this.isGesuchValid()) {\n            this.gesuchModelManager.setStammdatenToWorkWith(this.model);\n            if (!this.form.$dirty) {\n                // If there are no changes in form we don't need anything to update on Server and we could return the\n                // promise immediately\n                if ((this.gesuchModelManager.getGesuchstellerNumber() === 1 && !this.gesuchModelManager.isGesuchsteller2Required())\n                    || this.gesuchModelManager.getGesuchstellerNumber() === 2) {\n                    this.updateGSDependentWizardSteps();\n                }\n\n                return this.$q.when(this.model);\n            }\n            // wenn keine Korrespondenzaddr oder Rechnungsadr da ist koennen wir sie wegmachen\n            this.maybeResetKorrespondadr();\n            this.maybeResetRechnungsadr();\n\n            if ((this.gesuchModelManager.getGesuch().gesuchsteller1 && this.gesuchModelManager.getGesuch().gesuchsteller1.showUmzug)\n                || (this.gesuchModelManager.getGesuch().gesuchsteller2 && this.gesuchModelManager.getGesuch().gesuchsteller2.showUmzug)\n                || this.isMutation()) {\n                this.wizardStepManager.unhideStep(TSWizardStepName.UMZUG);\n            } else {\n                this.wizardStepManager.hideStep(TSWizardStepName.UMZUG);\n            }\n            this.errorService.clearAll();\n            // todo bei Aenderungen von Kontaktdaten sollte man nicht den ganzen GS updaten sondern nur die Kontakdaten\n            return this.gesuchModelManager.updateGesuchsteller(false);\n        }\n        return undefined;\n    }\n\n    /**\n     * Aktualisiert alle Steps die Abhaengigkeiten mit dem Status von GS haben.\n     */\n    private updateGSDependentWizardSteps() {\n        this.wizardStepManager.updateCurrentWizardStepStatus(TSWizardStepStatus.OK); // GESUCHSTELLER\n        if (this.wizardStepManager.hasStepGivenStatus(TSWizardStepName.FINANZIELLE_SITUATION, TSWizardStepStatus.NOK)) {\n            this.wizardStepManager.updateWizardStepStatus(TSWizardStepName.FINANZIELLE_SITUATION, TSWizardStepStatus.OK);\n        }\n        if (this.wizardStepManager.hasStepGivenStatus(TSWizardStepName.EINKOMMENSVERSCHLECHTERUNG, TSWizardStepStatus.NOK)) {\n            this.wizardStepManager.updateWizardStepStatus(TSWizardStepName.EINKOMMENSVERSCHLECHTERUNG, TSWizardStepStatus.OK);\n        }\n    }\n\n    public getModel(): TSGesuchstellerContainer {\n        return this.model;\n    }\n\n    public getModelJA() {\n        return this.model.gesuchstellerJA;\n    }\n\n    /**\n     * Die Wohnadresse des GS2 darf bei Mutationen in denen der GS2 bereits existiert, nicht geaendert werden.\n     * Die Wohnadresse des GS1 darf bei Mutationen nie geaendert werden\n     * @returns {boolean}\n     */\n    public disableWohnadresseFor2GS(): boolean {\n        return this.isMutation() && (this.gesuchstellerNumber === 1\n            || (this.model.vorgaengerId !== null\n            && this.model.vorgaengerId !== undefined));\n    }\n\n    public isThereAnyUmzug(): boolean {\n        return this.gesuchModelManager.getGesuch().isThereAnyUmzug();\n    }\n\n    private maybeResetKorrespondadr(): void {\n        if (!this.showKorrespondadr && !this.showKorrespondadrGS) {\n            this.getModel().korrespondenzAdresse = undefined; //keine korrAdr weder von GS noch von JA -> entfernen\n        } else if (!this.showKorrespondadr) {\n            this.getModel().korrespondenzAdresse.adresseJA = undefined; //nur adresse JA wird zurueckgesetzt die GS kann bleiben\n        }\n    }\n\n    private maybeResetRechnungsadr(): void {\n        if (!this.showRechnungsadr && !this.showRechnungsadrGS) {\n            this.getModel().rechnungsAdresse = undefined; //keine rechnungsAdresse weder von GS noch von JA -> entfernen\n        } else if (!this.showRechnungsadr) {\n            this.getModel().rechnungsAdresse.adresseJA = undefined; //nur adresse JA wird zurueckgesetzt die GS kann bleiben\n        }\n    }\n\n    private initAdresse(adresstyp: TSAdressetyp) {\n        let adresseContanier: TSAdresseContainer = new TSAdresseContainer();\n        let adresse = new TSAdresse();\n        adresse.adresseTyp = adresstyp;\n        adresseContanier.showDatumVon = false;\n        adresseContanier.adresseJA = adresse;\n        return adresseContanier;\n    }\n\n    private initKorrespondenzAdresseJA() {\n        let addr = new TSAdresse();\n        addr.adresseTyp = TSAdressetyp.KORRESPONDENZADRESSE;\n        this.model.korrespondenzAdresse.adresseJA = addr;\n        this.model.korrespondenzAdresse.showDatumVon = false;\n    }\n\n    private initRechnungsAdresseJA() {\n        let addr = new TSAdresse();\n        addr.adresseTyp = TSAdressetyp.RECHNUNGSADRESSE;\n        this.model.rechnungsAdresse.adresseJA = addr;\n        this.model.rechnungsAdresse.showDatumVon = false;\n    }\n\n    public getTextAddrKorrekturJA(adresseContainer: TSAdresseContainer): string {\n        if (adresseContainer && adresseContainer.adresseGS) {\n            let adr: TSAdresse = adresseContainer.adresseGS;\n            let organisation: string = adr.organisation ? adr.organisation : '-';\n            let strasse: string = adr.strasse ? adr.strasse : '-';\n            let hausnummer: string = adr.hausnummer ? adr.hausnummer : '-';\n            let zusatzzeile: string = adr.zusatzzeile ? adr.zusatzzeile : '-';\n            let plz: string = adr.plz ? adr.plz : '-';\n            let ort: string = adr.ort ? adr.ort : '-';\n            let land: string = this.$translate.instant('Land_' + adr.land);\n            return this.$translate.instant('JA_KORREKTUR_ADDR', {\n                organisation: organisation,\n                strasse: strasse,\n                hausnummer: hausnummer,\n                zusatzzeile: zusatzzeile,\n                plz: plz,\n                ort: ort,\n                land: land,\n            });\n        } else {\n            return this.$translate.instant('LABEL_KEINE_ANGABE');\n        }\n\n    }\n\n    /**\n     * Checks whether the fields Email and Telefon are editable or not. The conditions for knowing if it is\n     * editable or not are the same ones of isGesuchReadonly(). But in this case, if the user is from the jugenadamt\n     * and the current gesuch is the newest one they may also edit those fields\n     */\n    public areEmailTelefonEditable(): boolean {\n        if (this.isLastVerfuegtesGesuch && this.authServiceRS.isOneOfRoles(TSRoleUtil.getGesuchstellerJugendamtSchulamtRoles())) {\n            return true;\n        } else {\n            return !this.isGesuchReadonly();\n        }\n    }\n\n    public checkAllEwkRelevantDataPresent(): void {\n        if (this.getModelJA()) {\n            // if (this.getModelJA().nachname &&\n            //     this.getModelJA().vorname &&\n            //     this.getModelJA().geschlecht &&\n            //     this.getModelJA().geburtsdatum) {\n            if (this.gesuchModelManager.gesuchstellerNumber === 1) {\n                this.ewkRS.gesuchsteller1 = this.getModel();\n            } else if (this.gesuchModelManager.gesuchstellerNumber === 2) {\n                this.ewkRS.gesuchsteller2 = this.getModel();\n            } else {\n                console.log('Unbekannte Gesuchstellernummer', this.gesuchstellerNumber);\n            }\n            // }\n        }\n    }\n}\n"]}]}