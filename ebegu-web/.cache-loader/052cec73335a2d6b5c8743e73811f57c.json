{"remainingRequest":"/home/imanol/projects/ebegu/ebegu-web/node_modules/thread-loader/dist/cjs.js??ref--0-1!/home/imanol/projects/ebegu/ebegu-web/node_modules/ts-loader/index.js??ref--0-2!/home/imanol/projects/ebegu/ebegu-web/src/gesuch/component/stammdatenView/stammdatenView.ts","cacheIdentifier":"cache-loader:1.1.0 test","dependencies":[{"path":"/home/imanol/projects/ebegu/ebegu-web/src/gesuch/component/stammdatenView/stammdatenView.ts","mtime":1518535855228},{"path":"/home/imanol/projects/ebegu/ebegu-web/node_modules/cache-loader/dist/cjs.js","mtime":1507514019000},{"path":"/home/imanol/projects/ebegu/ebegu-web/node_modules/thread-loader/dist/cjs.js","mtime":1507523420000},{"path":"/home/imanol/projects/ebegu/ebegu-web/node_modules/ts-loader/index.js","mtime":1508488471000}],"contextDependencies":[],"result":["/*\n * Ki-Tax: System for the management of external childcare subsidies\n * Copyright (C) 2017 City of Bern Switzerland\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\ndefine([\"require\", \"exports\", \"../../../utils/EnumEx\", \"../abstractGesuchView\", \"../../../models/enums/TSGeschlecht\", \"../../../models/enums/TSWizardStepName\", \"../../../models/enums/TSWizardStepStatus\", \"../../../models/TSAdresseContainer\", \"../../../models/TSAdresse\", \"../../../models/enums/TSAdressetyp\", \"../../../utils/TSRoleUtil\", \"../../../models/enums/TSGesuchEvent\", \"../../../utils/DateUtil\", \"./stammdatenView.less\"], function (require, exports, EnumEx_1, abstractGesuchView_1, TSGeschlecht_1, TSWizardStepName_1, TSWizardStepStatus_1, TSAdresseContainer_1, TSAdresse_1, TSAdressetyp_1, TSRoleUtil_1, TSGesuchEvent_1, DateUtil_1) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    var template = require('./stammdatenView.html');\n    require('./stammdatenView.less');\n    var StammdatenViewComponentConfig = /** @class */ (function () {\n        function StammdatenViewComponentConfig() {\n            this.transclude = false;\n            this.bindings = {};\n            this.template = template;\n            this.controller = StammdatenViewController;\n            this.controllerAs = 'vm';\n        }\n        return StammdatenViewComponentConfig;\n    }());\n    exports.StammdatenViewComponentConfig = StammdatenViewComponentConfig;\n    var StammdatenViewController = /** @class */ (function (_super) {\n        __extends(StammdatenViewController, _super);\n        /* @ngInject */\n        function StammdatenViewController($stateParams, ebeguRestUtil, gesuchModelManager, berechnungsManager, errorService, wizardStepManager, CONSTANTS, $q, $scope, $translate, authServiceRS, $rootScope, ewkRS, $timeout) {\n            var _this = _super.call(this, gesuchModelManager, berechnungsManager, wizardStepManager, $scope, TSWizardStepName_1.TSWizardStepName.GESUCHSTELLER, $timeout) || this;\n            _this.errorService = errorService;\n            _this.CONSTANTS = CONSTANTS;\n            _this.$q = $q;\n            _this.$translate = $translate;\n            _this.authServiceRS = authServiceRS;\n            _this.$rootScope = $rootScope;\n            _this.ewkRS = ewkRS;\n            _this.isLastVerfuegtesGesuch = false;\n            _this.ebeguRestUtil = ebeguRestUtil;\n            _this.gesuchstellerNumber = parseInt($stateParams.gesuchstellerNumber, 10);\n            _this.gesuchModelManager.setGesuchstellerNumber(_this.gesuchstellerNumber);\n            _this.initViewmodel();\n            return _this;\n        }\n        StammdatenViewController.prototype.initViewmodel = function () {\n            var _this = this;\n            this.gesuchModelManager.initStammdaten();\n            this.model = angular.copy(this.gesuchModelManager.getStammdatenToWorkWith());\n            this.initialModel = angular.copy(this.model);\n            this.wizardStepManager.updateCurrentWizardStepStatus(TSWizardStepStatus_1.TSWizardStepStatus.IN_BEARBEITUNG);\n            this.geschlechter = EnumEx_1.EnumEx.getNames(TSGeschlecht_1.TSGeschlecht);\n            this.showKorrespondadr = (this.model.korrespondenzAdresse && this.model.korrespondenzAdresse.adresseJA) ? true : false;\n            this.showKorrespondadrGS = (this.model.korrespondenzAdresse && this.model.korrespondenzAdresse.adresseGS) ? true : false;\n            this.allowedRoles = this.TSRoleUtil.getAllRolesButTraegerschaftInstitution();\n            this.getModel().showUmzug = this.getModel().showUmzug || this.getModel().isThereAnyUmzug();\n            this.setLastVerfuegtesGesuch();\n            this.$rootScope.$on(TSGesuchEvent_1.TSGesuchEvent[TSGesuchEvent_1.TSGesuchEvent.EWK_PERSON_SELECTED], function (event, gsNummer, ewkId) {\n                if (gsNummer === _this.gesuchModelManager.gesuchstellerNumber) {\n                    _this.model.gesuchstellerJA.ewkPersonId = ewkId;\n                    _this.model.gesuchstellerJA.ewkAbfrageDatum = DateUtil_1.default.today();\n                    _this.form.$dirty = true;\n                }\n            });\n        };\n        StammdatenViewController.prototype.korrespondenzAdrClicked = function () {\n            if (this.showKorrespondadr) {\n                if (!this.model.korrespondenzAdresse) {\n                    this.model.korrespondenzAdresse = this.initKorrespondenzAdresse();\n                }\n                else if (!this.model.korrespondenzAdresse.adresseJA) {\n                    this.initKorrespondenzAdresseJA();\n                }\n            }\n        };\n        StammdatenViewController.prototype.setLastVerfuegtesGesuch = function () {\n            var _this = this;\n            this.gesuchModelManager.isNeuestesGesuch().then(function (response) {\n                _this.isLastVerfuegtesGesuch = response;\n            });\n        };\n        StammdatenViewController.prototype.save = function () {\n            if (this.isGesuchValid()) {\n                this.gesuchModelManager.setStammdatenToWorkWith(this.model);\n                if (!this.form.$dirty) {\n                    // If there are no changes in form we don't need anything to update on Server and we could return the\n                    // promise immediately\n                    if ((this.gesuchModelManager.getGesuchstellerNumber() === 1 && !this.gesuchModelManager.isGesuchsteller2Required())\n                        || this.gesuchModelManager.getGesuchstellerNumber() === 2) {\n                        this.updateGSDependentWizardSteps();\n                    }\n                    return this.$q.when(this.model);\n                }\n                // wenn keine Korrespondenzaddr da ist koennen wir sie wegmachen\n                this.maybeResetKorrespondadr();\n                if ((this.gesuchModelManager.getGesuch().gesuchsteller1 && this.gesuchModelManager.getGesuch().gesuchsteller1.showUmzug)\n                    || (this.gesuchModelManager.getGesuch().gesuchsteller2 && this.gesuchModelManager.getGesuch().gesuchsteller2.showUmzug)\n                    || this.isMutation()) {\n                    this.wizardStepManager.unhideStep(TSWizardStepName_1.TSWizardStepName.UMZUG);\n                }\n                else {\n                    this.wizardStepManager.hideStep(TSWizardStepName_1.TSWizardStepName.UMZUG);\n                }\n                this.errorService.clearAll();\n                return this.gesuchModelManager.updateGesuchsteller(false);\n            }\n            return undefined;\n        };\n        /**\n         * Aktualisiert alle Steps die Abhaengigkeiten mit dem Status von GS haben.\n         */\n        StammdatenViewController.prototype.updateGSDependentWizardSteps = function () {\n            this.wizardStepManager.updateCurrentWizardStepStatus(TSWizardStepStatus_1.TSWizardStepStatus.OK); // GESUCHSTELLER\n            if (this.wizardStepManager.hasStepGivenStatus(TSWizardStepName_1.TSWizardStepName.FINANZIELLE_SITUATION, TSWizardStepStatus_1.TSWizardStepStatus.NOK)) {\n                this.wizardStepManager.updateWizardStepStatus(TSWizardStepName_1.TSWizardStepName.FINANZIELLE_SITUATION, TSWizardStepStatus_1.TSWizardStepStatus.OK);\n            }\n            if (this.wizardStepManager.hasStepGivenStatus(TSWizardStepName_1.TSWizardStepName.EINKOMMENSVERSCHLECHTERUNG, TSWizardStepStatus_1.TSWizardStepStatus.NOK)) {\n                this.wizardStepManager.updateWizardStepStatus(TSWizardStepName_1.TSWizardStepName.EINKOMMENSVERSCHLECHTERUNG, TSWizardStepStatus_1.TSWizardStepStatus.OK);\n            }\n        };\n        StammdatenViewController.prototype.getModel = function () {\n            return this.model;\n        };\n        StammdatenViewController.prototype.getModelJA = function () {\n            return this.model.gesuchstellerJA;\n        };\n        /**\n         * Die Wohnadresse des GS2 darf bei Mutationen in denen der GS2 bereits existiert, nicht geaendert werden.\n         * Die Wohnadresse des GS1 darf bei Mutationen nie geaendert werden\n         * @returns {boolean}\n         */\n        StammdatenViewController.prototype.disableWohnadresseFor2GS = function () {\n            return this.isMutation() && (this.gesuchstellerNumber === 1\n                || (this.model.vorgaengerId !== null\n                    && this.model.vorgaengerId !== undefined));\n        };\n        StammdatenViewController.prototype.isThereAnyUmzug = function () {\n            return this.gesuchModelManager.getGesuch().isThereAnyUmzug();\n        };\n        StammdatenViewController.prototype.maybeResetKorrespondadr = function () {\n            if (!this.showKorrespondadr && !this.showKorrespondadrGS) {\n                this.getModel().korrespondenzAdresse = undefined; //keine korrAdr weder von GS noch von JA -> entfernen\n            }\n            else if (!this.showKorrespondadr) {\n                this.getModel().korrespondenzAdresse.adresseJA = undefined; //nur adresse JA wird zurueckgesetzt die GS kann bleiben\n            }\n        };\n        StammdatenViewController.prototype.initKorrespondenzAdresse = function () {\n            var korrespAdresseContanier = new TSAdresseContainer_1.default();\n            var korrAdr = new TSAdresse_1.default();\n            korrAdr.adresseTyp = TSAdressetyp_1.TSAdressetyp.KORRESPONDENZADRESSE;\n            korrespAdresseContanier.showDatumVon = false;\n            korrespAdresseContanier.adresseJA = korrAdr;\n            return korrespAdresseContanier;\n        };\n        StammdatenViewController.prototype.initKorrespondenzAdresseJA = function () {\n            var korrAdr = new TSAdresse_1.default();\n            korrAdr.adresseTyp = TSAdressetyp_1.TSAdressetyp.KORRESPONDENZADRESSE;\n            this.model.korrespondenzAdresse.adresseJA = korrAdr;\n            this.model.korrespondenzAdresse.showDatumVon = false;\n        };\n        StammdatenViewController.prototype.getTextKorrespondenzaddrKorrekturJA = function () {\n            if (this.model.korrespondenzAdresse && this.model.korrespondenzAdresse.adresseGS) {\n                var adr = this.model.korrespondenzAdresse.adresseGS;\n                var organisation = adr.organisation ? adr.organisation : '-';\n                var strasse = adr.strasse ? adr.strasse : '-';\n                var hausnummer = adr.hausnummer ? adr.hausnummer : '-';\n                var zusatzzeile = adr.zusatzzeile ? adr.zusatzzeile : '-';\n                var plz = adr.plz ? adr.plz : '-';\n                var ort = adr.ort ? adr.ort : '-';\n                var land = this.$translate.instant('Land_' + adr.land);\n                return this.$translate.instant('JA_KORREKTUR_KORRESPONDENZ_ADDR', {\n                    organisation: organisation,\n                    strasse: strasse,\n                    hausnummer: hausnummer,\n                    zusatzzeile: zusatzzeile,\n                    plz: plz,\n                    ort: ort,\n                    land: land,\n                });\n            }\n            else {\n                return this.$translate.instant('LABEL_KEINE_ANGABE');\n            }\n        };\n        /**\n         * Checks whether the fields Email and Telefon are editable or not. The conditions for knowing if it is\n         * editable or not are the same ones of isGesuchReadonly(). But in this case, if the user is from the jugenadamt\n         * and the current gesuch is the newest one they may also edit those fields\n         */\n        StammdatenViewController.prototype.areEmailTelefonEditable = function () {\n            if (this.isLastVerfuegtesGesuch && this.authServiceRS.isOneOfRoles(TSRoleUtil_1.TSRoleUtil.getGesuchstellerJugendamtRoles())) {\n                return true;\n            }\n            else {\n                return !this.isGesuchReadonly();\n            }\n        };\n        StammdatenViewController.prototype.checkAllEwkRelevantDataPresent = function () {\n            if (this.getModelJA()) {\n                // if (this.getModelJA().nachname &&\n                //     this.getModelJA().vorname &&\n                //     this.getModelJA().geschlecht &&\n                //     this.getModelJA().geburtsdatum) {\n                if (this.gesuchModelManager.gesuchstellerNumber === 1) {\n                    this.ewkRS.gesuchsteller1 = this.getModel();\n                }\n                else if (this.gesuchModelManager.gesuchstellerNumber === 2) {\n                    this.ewkRS.gesuchsteller2 = this.getModel();\n                }\n                else {\n                    console.log('Unbekannte Gesuchstellernummer', this.gesuchstellerNumber);\n                }\n                // }\n            }\n        };\n        StammdatenViewController.$inject = ['$stateParams', 'EbeguRestUtil', 'GesuchModelManager', 'BerechnungsManager', 'ErrorService', 'WizardStepManager',\n            'CONSTANTS', '$q', '$scope', '$translate', 'AuthServiceRS', '$rootScope', 'EwkRS', '$timeout'];\n        return StammdatenViewController;\n    }(abstractGesuchView_1.default));\n    exports.StammdatenViewController = StammdatenViewController;\n});\n",{"version":3,"file":"/home/imanol/projects/ebegu/ebegu-web/src/gesuch/component/stammdatenView/stammdatenView.ts","sourceRoot":"","sources":["/home/imanol/projects/ebegu/ebegu-web/src/gesuch/component/stammdatenView/stammdatenView.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Ki-Tax: System for the management of external childcare subsidies\n * Copyright (C) 2017 City of Bern Switzerland\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport EbeguRestUtil from '../../../utils/EbeguRestUtil';\nimport {EnumEx} from '../../../utils/EnumEx';\nimport {IComponentOptions} from 'angular';\nimport AbstractGesuchViewController from '../abstractGesuchView';\nimport {TSGeschlecht} from '../../../models/enums/TSGeschlecht';\nimport {IStammdatenStateParams} from '../../gesuch.route';\nimport './stammdatenView.less';\nimport GesuchModelManager from '../../service/gesuchModelManager';\nimport BerechnungsManager from '../../service/berechnungsManager';\nimport ErrorService from '../../../core/errors/service/ErrorService';\nimport {TSRole} from '../../../models/enums/TSRole';\nimport WizardStepManager from '../../service/wizardStepManager';\nimport {TSWizardStepName} from '../../../models/enums/TSWizardStepName';\nimport {TSWizardStepStatus} from '../../../models/enums/TSWizardStepStatus';\nimport TSGesuchstellerContainer from '../../../models/TSGesuchstellerContainer';\nimport TSAdresseContainer from '../../../models/TSAdresseContainer';\nimport TSAdresse from '../../../models/TSAdresse';\nimport {TSAdressetyp} from '../../../models/enums/TSAdressetyp';\nimport AuthServiceRS from '../../../authentication/service/AuthServiceRS.rest';\nimport {TSRoleUtil} from '../../../utils/TSRoleUtil';\nimport {TSGesuchEvent} from '../../../models/enums/TSGesuchEvent';\nimport DateUtil from '../../../utils/DateUtil';\nimport EwkRS from '../../../core/service/ewkRS.rest';\nimport IQService = angular.IQService;\nimport IPromise = angular.IPromise;\nimport IScope = angular.IScope;\nimport ITranslateService = angular.translate.ITranslateService;\nimport IRootScopeService = angular.IRootScopeService;\nimport ITimeoutService = angular.ITimeoutService;\n\nlet template = require('./stammdatenView.html');\nrequire('./stammdatenView.less');\n\nexport class StammdatenViewComponentConfig implements IComponentOptions {\n    transclude = false;\n    bindings: any = {};\n    template = template;\n    controller = StammdatenViewController;\n    controllerAs = 'vm';\n}\n\nexport class StammdatenViewController extends AbstractGesuchViewController<TSGesuchstellerContainer> {\n    geschlechter: Array<string>;\n    showKorrespondadr: boolean;\n    showKorrespondadrGS: boolean;\n    ebeguRestUtil: EbeguRestUtil;\n    allowedRoles: Array<TSRole>;\n    gesuchstellerNumber: number;\n    private initialModel: TSGesuchstellerContainer;\n    private isLastVerfuegtesGesuch: boolean = false;\n\n    static $inject = ['$stateParams', 'EbeguRestUtil', 'GesuchModelManager', 'BerechnungsManager', 'ErrorService', 'WizardStepManager',\n        'CONSTANTS', '$q', '$scope', '$translate', 'AuthServiceRS', '$rootScope', 'EwkRS', '$timeout'];\n\n    /* @ngInject */\n    constructor($stateParams: IStammdatenStateParams, ebeguRestUtil: EbeguRestUtil, gesuchModelManager: GesuchModelManager,\n                berechnungsManager: BerechnungsManager, private errorService: ErrorService,\n                wizardStepManager: WizardStepManager, private CONSTANTS: any, private $q: IQService, $scope: IScope,\n                private $translate: ITranslateService, private authServiceRS: AuthServiceRS, private $rootScope: IRootScopeService,\n                private ewkRS: EwkRS, $timeout: ITimeoutService) {\n        super(gesuchModelManager, berechnungsManager, wizardStepManager, $scope, TSWizardStepName.GESUCHSTELLER, $timeout);\n        this.ebeguRestUtil = ebeguRestUtil;\n        this.gesuchstellerNumber = parseInt($stateParams.gesuchstellerNumber, 10);\n        this.gesuchModelManager.setGesuchstellerNumber(this.gesuchstellerNumber);\n        this.initViewmodel();\n    }\n\n    private initViewmodel() {\n        this.gesuchModelManager.initStammdaten();\n        this.model = angular.copy(this.gesuchModelManager.getStammdatenToWorkWith());\n        this.initialModel = angular.copy(this.model);\n        this.wizardStepManager.updateCurrentWizardStepStatus(TSWizardStepStatus.IN_BEARBEITUNG);\n        this.geschlechter = EnumEx.getNames(TSGeschlecht);\n        this.showKorrespondadr = (this.model.korrespondenzAdresse && this.model.korrespondenzAdresse.adresseJA) ? true : false;\n        this.showKorrespondadrGS = (this.model.korrespondenzAdresse && this.model.korrespondenzAdresse.adresseGS) ? true : false;\n        this.allowedRoles = this.TSRoleUtil.getAllRolesButTraegerschaftInstitution();\n        this.getModel().showUmzug = this.getModel().showUmzug || this.getModel().isThereAnyUmzug();\n        this.setLastVerfuegtesGesuch();\n\n        this.$rootScope.$on(TSGesuchEvent[TSGesuchEvent.EWK_PERSON_SELECTED], (event: any, gsNummer: number, ewkId: string) => {\n            if (gsNummer === this.gesuchModelManager.gesuchstellerNumber) {\n                this.model.gesuchstellerJA.ewkPersonId = ewkId;\n                this.model.gesuchstellerJA.ewkAbfrageDatum = DateUtil.today();\n                this.form.$dirty = true;\n            }\n        });\n    }\n\n    korrespondenzAdrClicked() {\n        if (this.showKorrespondadr) {\n            if (!this.model.korrespondenzAdresse) {\n                this.model.korrespondenzAdresse = this.initKorrespondenzAdresse();\n            } else if (!this.model.korrespondenzAdresse.adresseJA) {\n                this.initKorrespondenzAdresseJA();\n            }\n        }\n    }\n\n    private setLastVerfuegtesGesuch(): void {\n        this.gesuchModelManager.isNeuestesGesuch().then((response: boolean) => {\n            this.isLastVerfuegtesGesuch = response;\n        });\n    }\n\n    private save(): IPromise<TSGesuchstellerContainer> {\n        if (this.isGesuchValid()) {\n            this.gesuchModelManager.setStammdatenToWorkWith(this.model);\n            if (!this.form.$dirty) {\n                // If there are no changes in form we don't need anything to update on Server and we could return the\n                // promise immediately\n                if ((this.gesuchModelManager.getGesuchstellerNumber() === 1 && !this.gesuchModelManager.isGesuchsteller2Required())\n                    || this.gesuchModelManager.getGesuchstellerNumber() === 2) {\n                    this.updateGSDependentWizardSteps();\n                }\n\n                return this.$q.when(this.model);\n            }\n            // wenn keine Korrespondenzaddr da ist koennen wir sie wegmachen\n            this.maybeResetKorrespondadr();\n\n            if ((this.gesuchModelManager.getGesuch().gesuchsteller1 && this.gesuchModelManager.getGesuch().gesuchsteller1.showUmzug)\n                || (this.gesuchModelManager.getGesuch().gesuchsteller2 && this.gesuchModelManager.getGesuch().gesuchsteller2.showUmzug)\n                || this.isMutation()) {\n                this.wizardStepManager.unhideStep(TSWizardStepName.UMZUG);\n            } else {\n                this.wizardStepManager.hideStep(TSWizardStepName.UMZUG);\n            }\n            this.errorService.clearAll();\n            return this.gesuchModelManager.updateGesuchsteller(false);\n        }\n        return undefined;\n    }\n\n    /**\n     * Aktualisiert alle Steps die Abhaengigkeiten mit dem Status von GS haben.\n     */\n    private updateGSDependentWizardSteps() {\n        this.wizardStepManager.updateCurrentWizardStepStatus(TSWizardStepStatus.OK); // GESUCHSTELLER\n        if (this.wizardStepManager.hasStepGivenStatus(TSWizardStepName.FINANZIELLE_SITUATION, TSWizardStepStatus.NOK)) {\n            this.wizardStepManager.updateWizardStepStatus(TSWizardStepName.FINANZIELLE_SITUATION, TSWizardStepStatus.OK);\n        }\n        if (this.wizardStepManager.hasStepGivenStatus(TSWizardStepName.EINKOMMENSVERSCHLECHTERUNG, TSWizardStepStatus.NOK)) {\n            this.wizardStepManager.updateWizardStepStatus(TSWizardStepName.EINKOMMENSVERSCHLECHTERUNG, TSWizardStepStatus.OK);\n        }\n    }\n\n    public getModel(): TSGesuchstellerContainer {\n        return this.model;\n    }\n\n    public getModelJA() {\n        return this.model.gesuchstellerJA;\n    }\n\n    /**\n     * Die Wohnadresse des GS2 darf bei Mutationen in denen der GS2 bereits existiert, nicht geaendert werden.\n     * Die Wohnadresse des GS1 darf bei Mutationen nie geaendert werden\n     * @returns {boolean}\n     */\n    public disableWohnadresseFor2GS(): boolean {\n        return this.isMutation() && (this.gesuchstellerNumber === 1\n            || (this.model.vorgaengerId !== null\n                && this.model.vorgaengerId !== undefined));\n    }\n\n    public isThereAnyUmzug(): boolean {\n        return this.gesuchModelManager.getGesuch().isThereAnyUmzug();\n    }\n\n    private maybeResetKorrespondadr(): void {\n        if (!this.showKorrespondadr && !this.showKorrespondadrGS) {\n            this.getModel().korrespondenzAdresse = undefined; //keine korrAdr weder von GS noch von JA -> entfernen\n        } else if (!this.showKorrespondadr) {\n            this.getModel().korrespondenzAdresse.adresseJA = undefined; //nur adresse JA wird zurueckgesetzt die GS kann bleiben\n        }\n\n    }\n\n    private initKorrespondenzAdresse(): TSAdresseContainer {\n        let korrespAdresseContanier: TSAdresseContainer = new TSAdresseContainer();\n        let korrAdr = new TSAdresse();\n        korrAdr.adresseTyp = TSAdressetyp.KORRESPONDENZADRESSE;\n        korrespAdresseContanier.showDatumVon = false;\n        korrespAdresseContanier.adresseJA = korrAdr;\n        return korrespAdresseContanier;\n    }\n\n    private initKorrespondenzAdresseJA() {\n        let korrAdr = new TSAdresse();\n        korrAdr.adresseTyp = TSAdressetyp.KORRESPONDENZADRESSE;\n        this.model.korrespondenzAdresse.adresseJA = korrAdr;\n        this.model.korrespondenzAdresse.showDatumVon = false;\n    }\n\n    public getTextKorrespondenzaddrKorrekturJA(): string {\n        if (this.model.korrespondenzAdresse && this.model.korrespondenzAdresse.adresseGS) {\n            let adr: TSAdresse = this.model.korrespondenzAdresse.adresseGS;\n            let organisation: string = adr.organisation ? adr.organisation : '-';\n            let strasse: string = adr.strasse ? adr.strasse : '-';\n            let hausnummer: string = adr.hausnummer ? adr.hausnummer : '-';\n            let zusatzzeile: string = adr.zusatzzeile ? adr.zusatzzeile : '-';\n            let plz: string = adr.plz ? adr.plz : '-';\n            let ort: string = adr.ort ? adr.ort : '-';\n            let land: string = this.$translate.instant('Land_' + adr.land);\n            return this.$translate.instant('JA_KORREKTUR_KORRESPONDENZ_ADDR', {\n                organisation: organisation,\n                strasse: strasse,\n                hausnummer: hausnummer,\n                zusatzzeile: zusatzzeile,\n                plz: plz,\n                ort: ort,\n                land: land,\n            });\n        } else {\n            return this.$translate.instant('LABEL_KEINE_ANGABE');\n        }\n\n    }\n\n    /**\n     * Checks whether the fields Email and Telefon are editable or not. The conditions for knowing if it is\n     * editable or not are the same ones of isGesuchReadonly(). But in this case, if the user is from the jugenadamt\n     * and the current gesuch is the newest one they may also edit those fields\n     */\n    public areEmailTelefonEditable(): boolean {\n        if (this.isLastVerfuegtesGesuch && this.authServiceRS.isOneOfRoles(TSRoleUtil.getGesuchstellerJugendamtRoles())) {\n            return true;\n        } else {\n            return !this.isGesuchReadonly();\n        }\n    }\n\n    public checkAllEwkRelevantDataPresent(): void {\n        if (this.getModelJA()) {\n            // if (this.getModelJA().nachname &&\n            //     this.getModelJA().vorname &&\n            //     this.getModelJA().geschlecht &&\n            //     this.getModelJA().geburtsdatum) {\n            if (this.gesuchModelManager.gesuchstellerNumber === 1) {\n                this.ewkRS.gesuchsteller1 = this.getModel();\n            } else if (this.gesuchModelManager.gesuchstellerNumber === 2) {\n                this.ewkRS.gesuchsteller2 = this.getModel();\n            } else {\n                console.log('Unbekannte Gesuchstellernummer', this.gesuchstellerNumber);\n            }\n            // }\n        }\n    }\n}\n"]}]}