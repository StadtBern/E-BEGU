{"remainingRequest":"/home/imanol/projects/ebegu/ebegu-web/node_modules/thread-loader/dist/cjs.js??ref--0-1!/home/imanol/projects/ebegu/ebegu-web/node_modules/ts-loader/index.js??ref--0-2!/home/imanol/projects/ebegu/ebegu-web/src/core/service/institutionRS.rest.ts","cacheIdentifier":"cache-loader:1.1.0 test","dependencies":[{"path":"/home/imanol/projects/ebegu/ebegu-web/src/core/service/institutionRS.rest.ts","mtime":1512484412011},{"path":"/home/imanol/projects/ebegu/ebegu-web/node_modules/cache-loader/dist/cjs.js","mtime":1507514019000},{"path":"/home/imanol/projects/ebegu/ebegu-web/node_modules/thread-loader/dist/cjs.js","mtime":1507523420000},{"path":"/home/imanol/projects/ebegu/ebegu-web/node_modules/ts-loader/index.js","mtime":1508488471000}],"contextDependencies":[],"result":["\"use strict\";\n/*\n * Ki-Tax: System for the management of external childcare subsidies\n * Copyright (C) 2017 City of Bern Switzerland\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar TSInstitution_1 = require(\"../../models/TSInstitution\");\nvar InstitutionRS = /** @class */ (function () {\n    /* @ngInject */\n    function InstitutionRS($http, REST_API, ebeguRestUtil, $log) {\n        this.serviceURL = REST_API + 'institutionen';\n        this.http = $http;\n        this.ebeguRestUtil = ebeguRestUtil;\n        this.log = $log;\n    }\n    InstitutionRS.prototype.findInstitution = function (institutionID) {\n        var _this = this;\n        return this.http.get(this.serviceURL + '/id/' + encodeURIComponent(institutionID))\n            .then(function (response) {\n            _this.log.debug('PARSING institution REST object ', response.data);\n            return _this.ebeguRestUtil.parseInstitution(new TSInstitution_1.default(), response.data);\n        });\n    };\n    InstitutionRS.prototype.updateInstitution = function (institution) {\n        var _this = this;\n        var restInstitution = {};\n        restInstitution = this.ebeguRestUtil.institutionToRestObject(restInstitution, institution);\n        return this.http.put(this.serviceURL, restInstitution, {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }).then(function (response) {\n            _this.log.debug('PARSING institution REST object ', response.data);\n            return _this.ebeguRestUtil.parseInstitution(new TSInstitution_1.default(), response.data);\n        });\n    };\n    InstitutionRS.prototype.createInstitution = function (institution) {\n        var _this = this;\n        var _institution = {};\n        _institution = this.ebeguRestUtil.institutionToRestObject(_institution, institution);\n        return this.http.post(this.serviceURL, _institution, {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }).then(function (response) {\n            _this.log.debug('PARSING institution REST object ', response.data);\n            return _this.ebeguRestUtil.parseInstitution(new TSInstitution_1.default(), response.data);\n        });\n    };\n    InstitutionRS.prototype.removeInstitution = function (institutionID) {\n        return this.http.delete(this.serviceURL + '/' + encodeURIComponent(institutionID));\n    };\n    InstitutionRS.prototype.getAllInstitutionen = function () {\n        var _this = this;\n        return this.http.get(this.serviceURL).then(function (response) {\n            _this.log.debug('PARSING institutionen REST array object', response.data);\n            return _this.ebeguRestUtil.parseInstitutionen(response.data);\n        });\n    };\n    InstitutionRS.prototype.getAllActiveInstitutionen = function () {\n        var _this = this;\n        return this.http.get(this.serviceURL + '/' + 'active').then(function (response) {\n            _this.log.debug('PARSING institutionen REST array object', response.data);\n            return _this.ebeguRestUtil.parseInstitutionen(response.data);\n        });\n    };\n    InstitutionRS.prototype.getInstitutionenForCurrentBenutzer = function () {\n        var _this = this;\n        return this.http.get(this.serviceURL + '/' + 'currentuser').then(function (response) {\n            _this.log.debug('PARSING institutionen REST array object', response.data);\n            return _this.ebeguRestUtil.parseInstitutionen(response.data);\n        });\n    };\n    InstitutionRS.prototype.getServiceName = function () {\n        return 'InstitutionRS';\n    };\n    InstitutionRS.prototype.synchronizeInstitutions = function () {\n        var _this = this;\n        return this.http.post(this.serviceURL + '/' + 'synchronizeWithOpenIdm', null, {\n            headers: {\n                'Content-Type': 'text/plain'\n            }\n        }).then(function (response) {\n            _this.log.debug('synchronizeWithOpenIdm returns: ', response.data);\n            return response;\n        });\n    };\n    InstitutionRS.$inject = ['$http', 'REST_API', 'EbeguRestUtil', '$log'];\n    return InstitutionRS;\n}());\nexports.InstitutionRS = InstitutionRS;\n",{"version":3,"file":"/home/imanol/projects/ebegu/ebegu-web/src/core/service/institutionRS.rest.ts","sourceRoot":"","sources":["/home/imanol/projects/ebegu/ebegu-web/src/core/service/institutionRS.rest.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;GAaG;;AAIH,4DAAuD;AAEvD;IAOI,eAAe;IACf,uBAAY,KAAmB,EAAE,QAAgB,EAAE,aAA4B,EAAE,IAAiB;QAC9F,IAAI,CAAC,UAAU,GAAG,QAAQ,GAAG,eAAe,CAAC;QAC7C,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;QAClB,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;QACnC,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC;IACpB,CAAC;IAEM,uCAAe,GAAtB,UAAuB,aAAqB;QAA5C,iBAMC;QALG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,GAAG,MAAM,GAAG,kBAAkB,CAAC,aAAa,CAAC,CAAC;aAC7E,IAAI,CAAC,UAAC,QAAa;YAChB,KAAI,CAAC,GAAG,CAAC,KAAK,CAAC,kCAAkC,EAAE,QAAQ,CAAC,IAAI,CAAC,CAAC;YAClE,MAAM,CAAC,KAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC,IAAI,uBAAa,EAAE,EAAE,QAAQ,CAAC,IAAI,CAAC,CAAC;QACnF,CAAC,CAAC,CAAC;IACX,CAAC;IAEM,yCAAiB,GAAxB,UAAyB,WAA0B;QAAnD,iBAWC;QAVG,IAAI,eAAe,GAAG,EAAE,CAAC;QACzB,eAAe,GAAG,IAAI,CAAC,aAAa,CAAC,uBAAuB,CAAC,eAAe,EAAE,WAAW,CAAC,CAAC;QAC3F,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,EAAE,eAAe,EAAE;YACnD,OAAO,EAAE;gBACL,cAAc,EAAE,kBAAkB;aACrC;SACJ,CAAC,CAAC,IAAI,CAAC,UAAC,QAAa;YAClB,KAAI,CAAC,GAAG,CAAC,KAAK,CAAC,kCAAkC,EAAE,QAAQ,CAAC,IAAI,CAAC,CAAC;YAClE,MAAM,CAAC,KAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC,IAAI,uBAAa,EAAE,EAAE,QAAQ,CAAC,IAAI,CAAC,CAAC;QACnF,CAAC,CAAC,CAAC;IACP,CAAC;IAEM,yCAAiB,GAAxB,UAAyB,WAA0B;QAAnD,iBAYC;QAXG,IAAI,YAAY,GAAG,EAAE,CAAC;QACtB,YAAY,GAAG,IAAI,CAAC,aAAa,CAAC,uBAAuB,CAAC,YAAY,EAAE,WAAW,CAAC,CAAC;QACrF,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE,YAAY,EAAE;YACjD,OAAO,EAAE;gBACL,cAAc,EAAE,kBAAkB;aACrC;SACJ,CAAC,CAAC,IAAI,CAAC,UAAC,QAAa;YAClB,KAAI,CAAC,GAAG,CAAC,KAAK,CAAC,kCAAkC,EAAE,QAAQ,CAAC,IAAI,CAAC,CAAC;YAClE,MAAM,CAAC,KAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC,IAAI,uBAAa,EAAE,EAAE,QAAQ,CAAC,IAAI,CAAC,CAAC;QACnF,CAAC,CAAC,CAAC;IAEP,CAAC;IAEM,yCAAiB,GAAxB,UAAyB,aAAqB;QAC1C,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,GAAG,GAAG,GAAG,kBAAkB,CAAC,aAAa,CAAC,CAAC,CAAC;IACvF,CAAC;IAEM,2CAAmB,GAA1B;QAAA,iBAKC;QAJG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,UAAC,QAAa;YACrD,KAAI,CAAC,GAAG,CAAC,KAAK,CAAC,yCAAyC,EAAE,QAAQ,CAAC,IAAI,CAAC,CAAC;YACzE,MAAM,CAAC,KAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;QAChE,CAAC,CAAC,CAAC;IACP,CAAC;IAEM,iDAAyB,GAAhC;QAAA,iBAKC;QAJG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,GAAG,GAAG,GAAG,QAAQ,CAAC,CAAC,IAAI,CAAC,UAAC,QAAa;YACtE,KAAI,CAAC,GAAG,CAAC,KAAK,CAAC,yCAAyC,EAAE,QAAQ,CAAC,IAAI,CAAC,CAAC;YACzE,MAAM,CAAC,KAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;QAChE,CAAC,CAAC,CAAC;IACP,CAAC;IAEM,0DAAkC,GAAzC;QAAA,iBAKC;QAJG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,GAAG,GAAG,GAAG,aAAa,CAAC,CAAC,IAAI,CAAC,UAAC,QAAa;YAC3E,KAAI,CAAC,GAAG,CAAC,KAAK,CAAC,yCAAyC,EAAE,QAAQ,CAAC,IAAI,CAAC,CAAC;YACzE,MAAM,CAAC,KAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;QAChE,CAAC,CAAC,CAAC;IACP,CAAC;IAEM,sCAAc,GAArB;QACI,MAAM,CAAC,eAAe,CAAC;IAC3B,CAAC;IAED,+CAAuB,GAAvB;QAAA,iBASC;QARG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,GAAG,GAAG,GAAG,wBAAwB,EAAE,IAAI,EAAE;YAC1E,OAAO,EAAE;gBACL,cAAc,EAAE,YAAY;aAC/B;SACJ,CAAC,CAAC,IAAI,CAAC,UAAC,QAAa;YAClB,KAAI,CAAC,GAAG,CAAC,KAAK,CAAC,kCAAkC,EAAE,QAAQ,CAAC,IAAI,CAAC,CAAC;YAClE,MAAM,CAAC,QAAQ,CAAC;QACpB,CAAC,CAAC,CAAC;IACP,CAAC;IAlFM,qBAAO,GAAG,CAAC,OAAO,EAAE,UAAU,EAAE,eAAe,EAAE,MAAM,CAAC,CAAC;IAmFpE,oBAAC;CAAA,AAzFD,IAyFC;AAzFY,sCAAa","sourcesContent":["/*\n * Ki-Tax: System for the management of external childcare subsidies\n * Copyright (C) 2017 City of Bern Switzerland\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport {IHttpPromise, IHttpService, ILogService, IPromise} from 'angular';\nimport EbeguRestUtil from '../../utils/EbeguRestUtil';\nimport TSInstitution from '../../models/TSInstitution';\n\nexport class InstitutionRS {\n    serviceURL: string;\n    http: IHttpService;\n    ebeguRestUtil: EbeguRestUtil;\n    log: ILogService;\n\n    static $inject = ['$http', 'REST_API', 'EbeguRestUtil', '$log'];\n    /* @ngInject */\n    constructor($http: IHttpService, REST_API: string, ebeguRestUtil: EbeguRestUtil, $log: ILogService) {\n        this.serviceURL = REST_API + 'institutionen';\n        this.http = $http;\n        this.ebeguRestUtil = ebeguRestUtil;\n        this.log = $log;\n    }\n\n    public findInstitution(institutionID: string): IPromise<TSInstitution> {\n        return this.http.get(this.serviceURL + '/id/' + encodeURIComponent(institutionID))\n            .then((response: any) => {\n                this.log.debug('PARSING institution REST object ', response.data);\n                return this.ebeguRestUtil.parseInstitution(new TSInstitution(), response.data);\n            });\n    }\n\n    public updateInstitution(institution: TSInstitution): IPromise<TSInstitution> {\n        let restInstitution = {};\n        restInstitution = this.ebeguRestUtil.institutionToRestObject(restInstitution, institution);\n        return this.http.put(this.serviceURL, restInstitution, {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }).then((response: any) => {\n            this.log.debug('PARSING institution REST object ', response.data);\n            return this.ebeguRestUtil.parseInstitution(new TSInstitution(), response.data);\n        });\n    }\n\n    public createInstitution(institution: TSInstitution): IPromise<TSInstitution> {\n        let _institution = {};\n        _institution = this.ebeguRestUtil.institutionToRestObject(_institution, institution);\n        return this.http.post(this.serviceURL, _institution, {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }).then((response: any) => {\n            this.log.debug('PARSING institution REST object ', response.data);\n            return this.ebeguRestUtil.parseInstitution(new TSInstitution(), response.data);\n        });\n\n    }\n\n    public removeInstitution(institutionID: string): IHttpPromise<any> {\n        return this.http.delete(this.serviceURL + '/' + encodeURIComponent(institutionID));\n    }\n\n    public getAllInstitutionen(): IPromise<TSInstitution[]> {\n        return this.http.get(this.serviceURL).then((response: any) => {\n            this.log.debug('PARSING institutionen REST array object', response.data);\n            return this.ebeguRestUtil.parseInstitutionen(response.data);\n        });\n    }\n\n    public getAllActiveInstitutionen(): IPromise<TSInstitution[]> {\n        return this.http.get(this.serviceURL + '/' + 'active').then((response: any) => {\n            this.log.debug('PARSING institutionen REST array object', response.data);\n            return this.ebeguRestUtil.parseInstitutionen(response.data);\n        });\n    }\n\n    public getInstitutionenForCurrentBenutzer(): IPromise<TSInstitution[]> {\n        return this.http.get(this.serviceURL + '/' + 'currentuser').then((response: any) => {\n            this.log.debug('PARSING institutionen REST array object', response.data);\n            return this.ebeguRestUtil.parseInstitutionen(response.data);\n        });\n    }\n\n    public getServiceName(): string {\n        return 'InstitutionRS';\n    }\n\n    synchronizeInstitutions(): IPromise<any> {\n        return this.http.post(this.serviceURL + '/' + 'synchronizeWithOpenIdm', null, {\n            headers: {\n                'Content-Type': 'text/plain'\n            }\n        }).then((response: any) => {\n            this.log.debug('synchronizeWithOpenIdm returns: ', response.data);\n            return response;\n        });\n    }\n}\n"]}]}