{"remainingRequest":"/home/imanol/projects/ebegu/ebegu-web/node_modules/thread-loader/dist/cjs.js??ref--0-1!/home/imanol/projects/ebegu/ebegu-web/node_modules/ts-loader/index.js??ref--0-2!/home/imanol/projects/ebegu/ebegu-web/src/gesuch/service/mahnungRS.rest.ts","cacheIdentifier":"cache-loader:1.1.0 test","dependencies":[{"path":"/home/imanol/projects/ebegu/ebegu-web/src/gesuch/service/mahnungRS.rest.ts","mtime":1512484412023},{"path":"/home/imanol/projects/ebegu/ebegu-web/node_modules/cache-loader/dist/cjs.js","mtime":1507514019000},{"path":"/home/imanol/projects/ebegu/ebegu-web/node_modules/thread-loader/dist/cjs.js","mtime":1507523420000},{"path":"/home/imanol/projects/ebegu/ebegu-web/node_modules/ts-loader/index.js","mtime":1508488471000}],"contextDependencies":[],"result":["\"use strict\";\n/*\n * Ki-Tax: System for the management of external childcare subsidies\n * Copyright (C) 2017 City of Bern Switzerland\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar TSGesuch_1 = require(\"../../models/TSGesuch\");\nvar TSMahnung_1 = require(\"../../models/TSMahnung\");\nvar MahnungRS = /** @class */ (function () {\n    /* @ngInject */\n    function MahnungRS($http, REST_API, ebeguRestUtil, $log) {\n        this.$log = $log;\n        this.serviceURL = REST_API + 'mahnung';\n        this.http = $http;\n        this.ebeguRestUtil = ebeguRestUtil;\n    }\n    MahnungRS.prototype.saveMahnung = function (mahnung) {\n        var _this = this;\n        var sentMahnung = {};\n        sentMahnung = this.ebeguRestUtil.mahnungToRestObject(sentMahnung, mahnung);\n        return this.http.post(this.serviceURL, sentMahnung, {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }).then(function (response) {\n            _this.$log.debug('PARSING gesuch REST object ', response.data);\n            return _this.ebeguRestUtil.parseMahnung(new TSMahnung_1.default(), response.data);\n        });\n    };\n    MahnungRS.prototype.findMahnungen = function (gesuchId) {\n        var _this = this;\n        return this.http.get(this.serviceURL + '/' + encodeURIComponent(gesuchId))\n            .then(function (response) {\n            return _this.ebeguRestUtil.parseMahnungen(response.data);\n        });\n    };\n    MahnungRS.prototype.mahnlaufBeenden = function (gesuch) {\n        var _this = this;\n        return this.http.put(this.serviceURL + '/' + encodeURIComponent(gesuch.id), {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }).then(function (response) {\n            _this.$log.debug('PARSING gesuch REST object ', response.data);\n            return _this.ebeguRestUtil.parseGesuch(new TSGesuch_1.default(), response.data);\n        });\n    };\n    MahnungRS.prototype.getInitialeBemerkungen = function (gesuch) {\n        return this.http.get(this.serviceURL + '/bemerkungen/' + encodeURIComponent(gesuch.id), {\n            headers: {\n                'Content-Type': 'text/plain'\n            }\n        });\n    };\n    MahnungRS.$inject = ['$http', 'REST_API', 'EbeguRestUtil', '$log'];\n    return MahnungRS;\n}());\nexports.default = MahnungRS;\n",{"version":3,"file":"/home/imanol/projects/ebegu/ebegu-web/src/gesuch/service/mahnungRS.rest.ts","sourceRoot":"","sources":["/home/imanol/projects/ebegu/ebegu-web/src/gesuch/service/mahnungRS.rest.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;GAaG;;AAIH,kDAA6C;AAE7C,oDAA+C;AAE/C;IAOI,eAAe;IACf,mBAAY,KAAmB,EAAE,QAAgB,EAAE,aAA4B,EAAU,IAAiB;QAAjB,SAAI,GAAJ,IAAI,CAAa;QACtG,IAAI,CAAC,UAAU,GAAG,QAAQ,GAAG,SAAS,CAAC;QACvC,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;QAClB,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;IACvC,CAAC;IAEM,+BAAW,GAAlB,UAAmB,OAAkB;QAArC,iBAWC;QAVG,IAAI,WAAW,GAAG,EAAE,CAAC;QACrB,WAAW,GAAG,IAAI,CAAC,aAAa,CAAC,mBAAmB,CAAC,WAAW,EAAE,OAAO,CAAC,CAAC;QAC3E,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE,WAAW,EAAE;YAChD,OAAO,EAAE;gBACL,cAAc,EAAE,kBAAkB;aACrC;SACJ,CAAC,CAAC,IAAI,CAAC,UAAC,QAAa;YAClB,KAAI,CAAC,IAAI,CAAC,KAAK,CAAC,6BAA6B,EAAE,QAAQ,CAAC,IAAI,CAAC,CAAC;YAC9D,MAAM,CAAC,KAAI,CAAC,aAAa,CAAC,YAAY,CAAC,IAAI,mBAAS,EAAE,EAAE,QAAQ,CAAC,IAAI,CAAC,CAAC;QAC3E,CAAC,CAAC,CAAC;IACP,CAAC;IAEM,iCAAa,GAApB,UAAqB,QAAgB;QAArC,iBAKC;QAJG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,GAAG,GAAG,GAAG,kBAAkB,CAAC,QAAQ,CAAC,CAAC;aACrE,IAAI,CAAC,UAAC,QAAa;YAChB,MAAM,CAAC,KAAI,CAAC,aAAa,CAAC,cAAc,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;QAC5D,CAAC,CAAC,CAAC;IACX,CAAC;IAEM,mCAAe,GAAtB,UAAuB,MAAgB;QAAvC,iBASC;QARG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,GAAG,GAAG,GAAG,kBAAkB,CAAC,MAAM,CAAC,EAAE,CAAC,EAAE;YACxE,OAAO,EAAE;gBACL,cAAc,EAAE,kBAAkB;aACrC;SACJ,CAAC,CAAC,IAAI,CAAC,UAAC,QAAiC;YACtC,KAAI,CAAC,IAAI,CAAC,KAAK,CAAC,6BAA6B,EAAE,QAAQ,CAAC,IAAI,CAAC,CAAC;YAC9D,MAAM,CAAC,KAAI,CAAC,aAAa,CAAC,WAAW,CAAC,IAAI,kBAAQ,EAAE,EAAE,QAAQ,CAAC,IAAI,CAAC,CAAC;QACzE,CAAC,CAAC,CAAC;IACP,CAAC;IAEM,0CAAsB,GAA7B,UAA8B,MAAgB;QAC1C,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,GAAG,eAAe,GAAG,kBAAkB,CAAC,MAAM,CAAC,EAAE,CAAC,EAAE;YACpF,OAAO,EAAE;gBACL,cAAc,EAAE,YAAY;aAC/B;SACJ,CAAC,CAAC;IACP,CAAC;IA7CM,iBAAO,GAAG,CAAC,OAAO,EAAE,UAAU,EAAE,eAAe,EAAE,MAAM,CAAC,CAAC;IA8CpE,gBAAC;CAAA,AApDD,IAoDC;kBApDoB,SAAS","sourcesContent":["/*\n * Ki-Tax: System for the management of external childcare subsidies\n * Copyright (C) 2017 City of Bern Switzerland\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport {IEntityRS} from '../../core/service/iEntityRS.rest';\nimport {IHttpPromise, IHttpResponse, IHttpService, ILogService, IPromise} from 'angular';\nimport TSGesuch from '../../models/TSGesuch';\nimport EbeguRestUtil from '../../utils/EbeguRestUtil';\nimport TSMahnung from '../../models/TSMahnung';\n\nexport default class MahnungRS implements IEntityRS {\n\n    serviceURL: string;\n    http: IHttpService;\n    ebeguRestUtil: EbeguRestUtil;\n\n    static $inject = ['$http', 'REST_API', 'EbeguRestUtil', '$log'];\n    /* @ngInject */\n    constructor($http: IHttpService, REST_API: string, ebeguRestUtil: EbeguRestUtil, private $log: ILogService) {\n        this.serviceURL = REST_API + 'mahnung';\n        this.http = $http;\n        this.ebeguRestUtil = ebeguRestUtil;\n    }\n\n    public saveMahnung(mahnung: TSMahnung): IPromise<TSMahnung> {\n        let sentMahnung = {};\n        sentMahnung = this.ebeguRestUtil.mahnungToRestObject(sentMahnung, mahnung);\n        return this.http.post(this.serviceURL, sentMahnung, {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }).then((response: any) => {\n            this.$log.debug('PARSING gesuch REST object ', response.data);\n            return this.ebeguRestUtil.parseMahnung(new TSMahnung(), response.data);\n        });\n    }\n\n    public findMahnungen(gesuchId: string): IPromise<TSMahnung[]> {\n        return this.http.get(this.serviceURL + '/' + encodeURIComponent(gesuchId))\n            .then((response: any) => {\n                return this.ebeguRestUtil.parseMahnungen(response.data);\n            });\n    }\n\n    public mahnlaufBeenden(gesuch: TSGesuch): IPromise<TSGesuch> {\n        return this.http.put(this.serviceURL + '/' + encodeURIComponent(gesuch.id), {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }).then((response: IHttpResponse<TSGesuch>) => {\n            this.$log.debug('PARSING gesuch REST object ', response.data);\n            return this.ebeguRestUtil.parseGesuch(new TSGesuch(), response.data);\n        });\n    }\n\n    public getInitialeBemerkungen(gesuch: TSGesuch): IHttpPromise<string> {\n        return this.http.get(this.serviceURL + '/bemerkungen/' + encodeURIComponent(gesuch.id), {\n            headers: {\n                'Content-Type': 'text/plain'\n            }\n        });\n    }\n}\n"]}]}