{"remainingRequest":"/home/imanol/projects/ebegu/ebegu-web/node_modules/thread-loader/dist/cjs.js??ref--0-1!/home/imanol/projects/ebegu/ebegu-web/node_modules/ts-loader/index.js??ref--0-2!/home/imanol/projects/ebegu/ebegu-web/src/admin/component/parameterView/parameterView.ts","cacheIdentifier":"cache-loader:1.1.0 test","dependencies":[{"path":"/home/imanol/projects/ebegu/ebegu-web/src/admin/component/parameterView/parameterView.ts","mtime":1518535855204},{"path":"/home/imanol/projects/ebegu/ebegu-web/node_modules/cache-loader/dist/cjs.js","mtime":1507514019000},{"path":"/home/imanol/projects/ebegu/ebegu-web/node_modules/thread-loader/dist/cjs.js","mtime":1507523420000},{"path":"/home/imanol/projects/ebegu/ebegu-web/node_modules/ts-loader/index.js","mtime":1508488471000}],"contextDependencies":[],"result":["/*\n * Ki-Tax: System for the management of external childcare subsidies\n * Copyright (C) 2017 City of Bern Switzerland\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\ndefine([\"require\", \"exports\", \"../../../models/TSGesuchsperiode\", \"../../../models/types/TSDateRange\", \"../../../utils/EbeguUtil\", \"../../../gesuch/dialog/RemoveDialogController\", \"../../../models/enums/TSCacheTyp\", \"../../abstractAdminView\", \"../../../models/enums/TSGesuchsperiodeStatus\", \"../../../utils/TSRoleUtil\", \"./parameterView.less\"], function (require, exports, TSGesuchsperiode_1, TSDateRange_1, EbeguUtil_1, RemoveDialogController_1, TSCacheTyp_1, abstractAdminView_1, TSGesuchsperiodeStatus_1, TSRoleUtil_1) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    var template = require('./parameterView.html');\n    var style = require('./parameterView.less');\n    var removeDialogTemplate = require('../../../gesuch/dialog/removeDialogTemplate.html');\n    var ParameterViewComponentConfig = /** @class */ (function () {\n        function ParameterViewComponentConfig() {\n            this.transclude = false;\n            this.template = template;\n            this.controller = ParameterViewController;\n            this.controllerAs = 'vm';\n        }\n        return ParameterViewComponentConfig;\n    }());\n    exports.ParameterViewComponentConfig = ParameterViewComponentConfig;\n    var ParameterViewController = /** @class */ (function (_super) {\n        __extends(ParameterViewController, _super);\n        /* @ngInject */\n        function ParameterViewController(ebeguParameterRS, gesuchsperiodeRS, ebeguRestUtil, $translate, ebeguVorlageRS, ebeguUtil, dvDialog, $log, globalCacheService, gesuchModelManager, $timeout, $window, authServiceRS) {\n            var _this = _super.call(this, authServiceRS) || this;\n            _this.gesuchsperiodeRS = gesuchsperiodeRS;\n            _this.$translate = $translate;\n            _this.ebeguVorlageRS = ebeguVorlageRS;\n            _this.ebeguUtil = ebeguUtil;\n            _this.dvDialog = dvDialog;\n            _this.$log = $log;\n            _this.globalCacheService = globalCacheService;\n            _this.gesuchModelManager = gesuchModelManager;\n            _this.$timeout = $timeout;\n            _this.$window = $window;\n            _this.gesuchsperiodenList = [];\n            _this.ebeguJahresabhParameter = []; // enthält alle Jahresabhängigen Params für alle Jahre\n            _this.statusChanged = false;\n            _this.ebeguParameterRS = ebeguParameterRS;\n            _this.ebeguRestUtil = ebeguRestUtil;\n            $timeout(function () {\n                _this.readGesuchsperioden();\n                _this.updateJahresabhParamList();\n            });\n            return _this;\n        }\n        ParameterViewController.prototype.readGesuchsperioden = function () {\n            var _this = this;\n            this.gesuchsperiodeRS.getAllGesuchsperioden().then(function (response) {\n                _this.gesuchsperiodenList = response; //angular.copy(response);\n            });\n        };\n        ParameterViewController.prototype.readEbeguParameterByGesuchsperiode = function () {\n            var _this = this;\n            this.ebeguParameterRS.getEbeguParameterByGesuchsperiode(this.gesuchsperiode.id).then(function (response) {\n                _this.ebeguParameterListGesuchsperiode = response;\n            });\n        };\n        ParameterViewController.prototype.readEbeguParameterByJahr = function () {\n            var _this = this;\n            this.ebeguParameterRS.getEbeguParameterByJahr(this.jahr).then(function (response) {\n                _this.ebeguParameterListJahr = response;\n            });\n        };\n        ParameterViewController.prototype.gesuchsperiodeClicked = function (gesuchsperiode) {\n            if (gesuchsperiode.isSelected) {\n                this.gesuchsperiode = gesuchsperiode;\n                this.readEbeguParameterByGesuchsperiode();\n            }\n            else {\n                this.cancelGesuchsperiode();\n            }\n        };\n        ParameterViewController.prototype.jahresabhParamSelected = function (parameter) {\n            this.jahr = parameter.gueltigkeit.gueltigAb.get('year');\n            this.jahrChanged();\n        };\n        ParameterViewController.prototype.createGesuchsperiode = function () {\n            this.gesuchsperiode = new TSGesuchsperiode_1.default(TSGesuchsperiodeStatus_1.TSGesuchsperiodeStatus.ENTWURF, new TSDateRange_1.TSDateRange());\n            if (this.gesuchsperiodenList) {\n                var prevGesPer = this.gesuchsperiodenList[0];\n                this.gesuchsperiode.gueltigkeit.gueltigAb = prevGesPer.gueltigkeit.gueltigAb.clone().add('years', 1);\n                this.gesuchsperiode.gueltigkeit.gueltigBis = prevGesPer.gueltigkeit.gueltigBis.clone().add('years', 1);\n            }\n        };\n        ParameterViewController.prototype.saveGesuchsperiode = function () {\n            var _this = this;\n            // Den Dialog nur aufrufen, wenn der Status geändert wurde (oder die GP neu ist)\n            if (this.gesuchsperiode.isNew() || this.statusChanged === true) {\n                var dialogText = this.getGesuchsperiodeSaveDialogText();\n                this.dvDialog.showDialog(removeDialogTemplate, RemoveDialogController_1.RemoveDialogController, {\n                    title: 'GESUCHSPERIODE_DIALOG_TITLE',\n                    deleteText: dialogText,\n                    parentController: undefined,\n                    elementID: undefined\n                }).then(function () {\n                    _this.doSave();\n                });\n            }\n            else {\n                this.doSave();\n            }\n        };\n        ParameterViewController.prototype.doSave = function () {\n            var _this = this;\n            this.gesuchsperiodeRS.updateGesuchsperiode(this.gesuchsperiode).then(function (response) {\n                _this.gesuchsperiode = response;\n                var index = EbeguUtil_1.default.getIndexOfElementwithID(response, _this.gesuchsperiodenList);\n                if (index !== -1) {\n                    _this.gesuchsperiodenList[index] = response;\n                }\n                else {\n                    _this.gesuchsperiodenList.push(response);\n                }\n                _this.globalCacheService.getCache(TSCacheTyp_1.TSCacheTyp.EBEGU_PARAMETER).removeAll();\n                // Die E-BEGU-Parameter für die neue Periode lesen bzw. erstellen, wenn noch nicht vorhanden\n                _this.readEbeguParameterByGesuchsperiode();\n                // Dasselbe fuer die jahresabhaengigen fuer die beiden Halbjahre der Periode\n                _this.ebeguParameterRS.getEbeguParameterByJahr(_this.gesuchsperiode.gueltigkeit.gueltigAb.year()).then(function (response) {\n                    _this.ebeguParameterRS.getEbeguParameterByJahr(_this.gesuchsperiode.gueltigkeit.gueltigBis.year()).then(function (response) {\n                        _this.updateJahresabhParamList();\n                    });\n                });\n                _this.gesuchsperiodeRS.updateActiveGesuchsperiodenList(); //reset gesuchperioden in manager\n                _this.gesuchsperiodeRS.updateNichtAbgeschlosseneGesuchsperiodenList();\n                _this.statusChanged = false;\n            });\n        };\n        ParameterViewController.prototype.setStatusChanged = function () {\n            this.statusChanged = true;\n        };\n        ParameterViewController.prototype.getGesuchsperiodeSaveDialogText = function () {\n            if (this.gesuchsperiode.status === TSGesuchsperiodeStatus_1.TSGesuchsperiodeStatus.ENTWURF) {\n                return 'GESUCHSPERIODE_DIALOG_TEXT_ENTWURF';\n            }\n            else if (this.gesuchsperiode.status === TSGesuchsperiodeStatus_1.TSGesuchsperiodeStatus.AKTIV) {\n                return 'GESUCHSPERIODE_DIALOG_TEXT_AKTIV';\n            }\n            else if (this.gesuchsperiode.status === TSGesuchsperiodeStatus_1.TSGesuchsperiodeStatus.INAKTIV) {\n                return 'GESUCHSPERIODE_DIALOG_TEXT_INAKTIV';\n            }\n            else if (this.gesuchsperiode.status === TSGesuchsperiodeStatus_1.TSGesuchsperiodeStatus.GESCHLOSSEN) {\n                return 'GESUCHSPERIODE_DIALOG_TEXT_GESCHLOSSEN';\n            }\n            else {\n                this.$log.warn('Achtung, Status unbekannt: ', this.gesuchsperiode.status);\n                return null;\n            }\n        };\n        ParameterViewController.prototype.cancelGesuchsperiode = function () {\n            this.gesuchsperiode = undefined;\n            this.ebeguParameterListGesuchsperiode = undefined;\n        };\n        ParameterViewController.prototype.cancelJahresabhaengig = function () {\n            this.jahr = undefined;\n        };\n        ParameterViewController.prototype.jahrChanged = function () {\n            this.readEbeguParameterByJahr();\n        };\n        ParameterViewController.prototype.saveParameterByGesuchsperiode = function () {\n            for (var i = 0; i < this.ebeguParameterListGesuchsperiode.length; i++) {\n                var param = this.ebeguParameterListGesuchsperiode[i];\n                this.ebeguParameterRS.saveEbeguParameter(param);\n            }\n            this.globalCacheService.getCache(TSCacheTyp_1.TSCacheTyp.EBEGU_PARAMETER).removeAll();\n            this.gesuchsperiodeRS.updateActiveGesuchsperiodenList();\n            this.gesuchsperiodeRS.updateNichtAbgeschlosseneGesuchsperiodenList();\n            this.gesuchsperiode = undefined;\n        };\n        ParameterViewController.prototype.saveParameterByJahr = function () {\n            var _this = this;\n            if (this.ebeguParameterListJahr.length !== 1) {\n                this.$log.error('Aktuell kann diese oberflaeche nur einene einzelnen Jahresabg. Param speichern.');\n            }\n            else {\n                var param = this.ebeguParameterListJahr[0];\n                this.ebeguParameterRS.saveEbeguParameter(param).then(function (response) {\n                    _this.updateJahresabhParamList();\n                });\n            }\n        };\n        ParameterViewController.prototype.updateJahresabhParamList = function () {\n            var _this = this;\n            this.ebeguParameterRS.getJahresabhParameter().then(function (response) {\n                _this.ebeguJahresabhParameter = response;\n            });\n        };\n        ParameterViewController.prototype.getTSGesuchsperiodeStatusValues = function () {\n            return TSGesuchsperiodeStatus_1.getTSGesuchsperiodeStatusValues();\n        };\n        ParameterViewController.prototype.periodenaParamsEditableForPeriode = function (gesuchsperiode) {\n            if (gesuchsperiode && gesuchsperiode.status) {\n                // Fuer SuperAdmin immer auch editierbar, wenn AKTIV oder INAKTIV, sonst nur ENTWURF\n                if (TSGesuchsperiodeStatus_1.TSGesuchsperiodeStatus.GESCHLOSSEN === gesuchsperiode.status) {\n                    return false;\n                }\n                else if (this.authServiceRS.isOneOfRoles(TSRoleUtil_1.TSRoleUtil.getSuperAdminRoles())) {\n                    return true;\n                }\n                else {\n                    return TSGesuchsperiodeStatus_1.TSGesuchsperiodeStatus.ENTWURF === gesuchsperiode.status;\n                }\n            }\n            return false;\n        };\n        ParameterViewController.prototype.periodenaParamsEditable = function () {\n            return this.periodenaParamsEditableForPeriode(this.gesuchsperiode);\n        };\n        ParameterViewController.prototype.jahresParamsEditable = function () {\n            // Wenn die Periode, die in dem Jahr *endet* noch ENTWURF ist\n            for (var _i = 0, _a = this.gesuchsperiodenList; _i < _a.length; _i++) {\n                var gp = _a[_i];\n                if (gp.gueltigkeit.gueltigBis.year() === this.jahr) {\n                    return this.periodenaParamsEditableForPeriode(gp);\n                }\n            }\n            return true;\n        };\n        ParameterViewController.$inject = ['EbeguParameterRS', 'GesuchsperiodeRS', 'EbeguRestUtil', '$translate', 'EbeguVorlageRS',\n            'EbeguUtil', 'DvDialog', '$log', 'GlobalCacheService', 'GesuchModelManager', '$timeout',\n            '$window', 'AuthServiceRS'];\n        return ParameterViewController;\n    }(abstractAdminView_1.default));\n    exports.ParameterViewController = ParameterViewController;\n});\n",{"version":3,"file":"/home/imanol/projects/ebegu/ebegu-web/src/admin/component/parameterView/parameterView.ts","sourceRoot":"","sources":["/home/imanol/projects/ebegu/ebegu-web/src/admin/component/parameterView/parameterView.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;GAaG;;;;;;;;;;;;;;IAuBH,IAAI,QAAQ,GAAG,OAAO,CAAC,sBAAsB,CAAC,CAAC;IAC/C,IAAI,KAAK,GAAG,OAAO,CAAC,sBAAsB,CAAC,CAAC;IAC5C,IAAI,oBAAoB,GAAG,OAAO,CAAC,kDAAkD,CAAC,CAAC;IAEvF;QAAA;YACI,eAAU,GAAY,KAAK,CAAC;YAC5B,aAAQ,GAAW,QAAQ,CAAC;YAC5B,eAAU,GAAQ,uBAAuB,CAAC;YAC1C,iBAAY,GAAW,IAAI,CAAC;QAChC,CAAC;QAAD,mCAAC;IAAD,CAAC,AALD,IAKC;IALY,oEAA4B;IAOzC;QAA6C,2CAA2B;QAmBpE,eAAe;QACf,iCAAY,gBAAkC,EAAU,gBAAkC,EAC9E,aAA4B,EAAU,UAA6B,EAC3D,cAA8B,EAAU,SAAoB,EAC5D,QAAkB,EAAU,IAAiB,EAC7C,kBAAsC,EAAU,kBAAsC,EACtF,QAAyB,EAAU,OAA0B,EAAE,aAA4B;YAL/G,YAMI,kBAAM,aAAa,CAAC,SAOvB;YAbuD,sBAAgB,GAAhB,gBAAgB,CAAkB;YACxC,gBAAU,GAAV,UAAU,CAAmB;YAC3D,oBAAc,GAAd,cAAc,CAAgB;YAAU,eAAS,GAAT,SAAS,CAAW;YAC5D,cAAQ,GAAR,QAAQ,CAAU;YAAU,UAAI,GAAJ,IAAI,CAAa;YAC7C,wBAAkB,GAAlB,kBAAkB,CAAoB;YAAU,wBAAkB,GAAlB,kBAAkB,CAAoB;YACtF,cAAQ,GAAR,QAAQ,CAAiB;YAAU,aAAO,GAAP,OAAO,CAAmB;YAjBjF,yBAAmB,GAA4B,EAAE,CAAC;YAIlD,6BAAuB,GAAuB,EAAE,CAAC,CAAC,sDAAsD;YAKxG,mBAAa,GAAY,KAAK,CAAC;YAU3B,KAAI,CAAC,gBAAgB,GAAG,gBAAgB,CAAC;YACzC,KAAI,CAAC,aAAa,GAAG,aAAa,CAAC;YACnC,QAAQ,CAAC;gBACL,KAAI,CAAC,mBAAmB,EAAE,CAAC;gBAC3B,KAAI,CAAC,wBAAwB,EAAE,CAAC;YACpC,CAAC,CAAC,CAAC;;QACP,CAAC;QAEO,qDAAmB,GAA3B;YAAA,iBAIC;YAHG,IAAI,CAAC,gBAAgB,CAAC,qBAAqB,EAAE,CAAC,IAAI,CAAC,UAAC,QAAiC;gBACjF,KAAI,CAAC,mBAAmB,GAAI,QAAQ,CAAC,CAAC,yBAAyB;YACnE,CAAC,CAAC,CAAC;QACP,CAAC;QAEO,oEAAkC,GAA1C;YAAA,iBAIC;YAHG,IAAI,CAAC,gBAAgB,CAAC,iCAAiC,CAAC,IAAI,CAAC,cAAc,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,UAAC,QAA4B;gBAC9G,KAAI,CAAC,gCAAgC,GAAG,QAAQ,CAAC;YACrD,CAAC,CAAC,CAAC;QACP,CAAC;QAEO,0DAAwB,GAAhC;YAAA,iBAIC;YAHG,IAAI,CAAC,gBAAgB,CAAC,uBAAuB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,UAAC,QAA4B;gBACvF,KAAI,CAAC,sBAAsB,GAAG,QAAQ,CAAC;YAC3C,CAAC,CAAC,CAAC;QACP,CAAC;QAED,uDAAqB,GAArB,UAAsB,cAAmB;YACrC,EAAE,CAAC,CAAC,cAAc,CAAC,UAAU,CAAC,CAAC,CAAC;gBAC5B,IAAI,CAAC,cAAc,GAAG,cAAc,CAAC;gBACrC,IAAI,CAAC,kCAAkC,EAAE,CAAC;YAC9C,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,IAAI,CAAC,oBAAoB,EAAE,CAAC;YAChC,CAAC;QACL,CAAC;QAED,wDAAsB,GAAtB,UAAuB,SAA2B;YAC9C,IAAI,CAAC,IAAI,GAAG,SAAS,CAAC,WAAW,CAAC,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;YACxD,IAAI,CAAC,WAAW,EAAE,CAAC;QACvB,CAAC;QAED,sDAAoB,GAApB;YACI,IAAI,CAAC,cAAc,GAAG,IAAI,0BAAgB,CAAC,+CAAsB,CAAC,OAAO,EAAE,IAAI,yBAAW,EAAE,CAAC,CAAC;YAC9F,EAAE,CAAC,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC,CAAC;gBAC3B,IAAI,UAAU,GAAqB,IAAI,CAAC,mBAAmB,CAAC,CAAC,CAAC,CAAC;gBAC/D,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,SAAS,GAAG,UAAU,CAAC,WAAW,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;gBACrG,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,UAAU,GAAG,UAAU,CAAC,WAAW,CAAC,UAAU,CAAC,KAAK,EAAE,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;YAC3G,CAAC;QACL,CAAC;QAED,oDAAkB,GAAlB;YAAA,iBAeC;YAdG,gFAAgF;YAChF,EAAE,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,IAAI,IAAI,CAAC,aAAa,KAAK,IAAI,CAAC,CAAC,CAAC;gBAC7D,IAAI,UAAU,GAAG,IAAI,CAAC,+BAA+B,EAAE,CAAC;gBACxD,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,oBAAoB,EAAE,+CAAsB,EAAE;oBACnE,KAAK,EAAE,6BAA6B;oBACpC,UAAU,EAAE,UAAU;oBACtB,gBAAgB,EAAE,SAAS;oBAC3B,SAAS,EAAE,SAAS;iBACvB,CAAC,CAAC,IAAI,CAAC;oBACJ,KAAI,CAAC,MAAM,EAAE,CAAC;gBAClB,CAAC,CAAC,CAAC;YACP,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,IAAI,CAAC,MAAM,EAAE,CAAC;YAClB,CAAC;QACL,CAAC;QAEO,wCAAM,GAAd;YAAA,iBAuBC;YAtBG,IAAI,CAAC,gBAAgB,CAAC,oBAAoB,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,IAAI,CAAC,UAAC,QAA0B;gBAC5F,KAAI,CAAC,cAAc,GAAG,QAAQ,CAAC;gBAE/B,IAAI,KAAK,GAAW,mBAAS,CAAC,uBAAuB,CAAC,QAAQ,EAAE,KAAI,CAAC,mBAAmB,CAAC,CAAC;gBAC1F,EAAE,CAAC,CAAC,KAAK,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;oBACf,KAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC,GAAG,QAAQ,CAAC;gBAC/C,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACJ,KAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;gBAC5C,CAAC;gBACD,KAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,uBAAU,CAAC,eAAe,CAAC,CAAC,SAAS,EAAE,CAAC;gBACzE,4FAA4F;gBAC5F,KAAI,CAAC,kCAAkC,EAAE,CAAC;gBAC1C,4EAA4E;gBAC5E,KAAI,CAAC,gBAAgB,CAAC,uBAAuB,CAAC,KAAI,CAAC,cAAc,CAAC,WAAW,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC,CAAC,IAAI,CAAC,UAAC,QAA4B;oBAC9H,KAAI,CAAC,gBAAgB,CAAC,uBAAuB,CAAC,KAAI,CAAC,cAAc,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC,CAAC,IAAI,CAAC,UAAC,QAA4B;wBAC/H,KAAI,CAAC,wBAAwB,EAAE,CAAC;oBACpC,CAAC,CAAC,CAAC;gBACP,CAAC,CAAC,CAAC;gBACH,KAAI,CAAC,gBAAgB,CAAC,+BAA+B,EAAE,CAAC,CAAC,iCAAiC;gBAC1F,KAAI,CAAC,gBAAgB,CAAC,4CAA4C,EAAE,CAAC;gBACrE,KAAI,CAAC,aAAa,GAAG,KAAK,CAAC;YAC/B,CAAC,CAAC,CAAC;QACP,CAAC;QAED,kDAAgB,GAAhB;YACI,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;QAC9B,CAAC;QAEO,iEAA+B,GAAvC;YACI,EAAE,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,MAAM,KAAK,+CAAsB,CAAC,OAAO,CAAC,CAAC,CAAC;gBAChE,MAAM,CAAC,oCAAoC,CAAC;YAChD,CAAC;YAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,MAAM,KAAK,+CAAsB,CAAC,KAAK,CAAC,CAAC,CAAC;gBACrE,MAAM,CAAC,kCAAkC,CAAC;YAC9C,CAAC;YAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,MAAM,KAAK,+CAAsB,CAAC,OAAO,CAAC,CAAC,CAAC;gBACvE,MAAM,CAAC,oCAAoC,CAAC;YAChD,CAAC;YAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,MAAM,KAAK,+CAAsB,CAAC,WAAW,CAAC,CAAC,CAAC;gBAC3E,MAAM,CAAC,wCAAwC,CAAC;YACpD,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,6BAA6B,EAAE,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC;gBAC1E,MAAM,CAAC,IAAI,CAAC;YAChB,CAAC;QACL,CAAC;QAED,sDAAoB,GAApB;YACI,IAAI,CAAC,cAAc,GAAG,SAAS,CAAC;YAChC,IAAI,CAAC,gCAAgC,GAAG,SAAS,CAAC;QACtD,CAAC;QAED,uDAAqB,GAArB;YACI,IAAI,CAAC,IAAI,GAAG,SAAS,CAAC;QAC1B,CAAC;QAED,6CAAW,GAAX;YACI,IAAI,CAAC,wBAAwB,EAAE,CAAC;QACpC,CAAC;QAED,+DAA6B,GAA7B;YACI,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,gCAAgC,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;gBACpE,IAAI,KAAK,GAAG,IAAI,CAAC,gCAAgC,CAAC,CAAC,CAAC,CAAC;gBACrD,IAAI,CAAC,gBAAgB,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC;YACpD,CAAC;YACD,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,uBAAU,CAAC,eAAe,CAAC,CAAC,SAAS,EAAE,CAAC;YACzE,IAAI,CAAC,gBAAgB,CAAC,+BAA+B,EAAE,CAAC;YACxD,IAAI,CAAC,gBAAgB,CAAC,4CAA4C,EAAE,CAAC;YACrE,IAAI,CAAC,cAAc,GAAG,SAAS,CAAC;QACpC,CAAC;QAED,qDAAmB,GAAnB;YAAA,iBASC;YARG,EAAE,CAAC,CAAC,IAAI,CAAC,sBAAsB,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC;gBAC3C,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,iFAAiF,CAAC,CAAC;YACvG,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,IAAI,KAAK,GAAG,IAAI,CAAC,sBAAsB,CAAC,CAAC,CAAC,CAAC;gBAC3C,IAAI,CAAC,gBAAgB,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,UAAC,QAAQ;oBAC1D,KAAI,CAAC,wBAAwB,EAAE,CAAC;gBACpC,CAAC,CAAC,CAAC;YACP,CAAC;QACL,CAAC;QAEO,0DAAwB,GAAhC;YAAA,iBAIC;YAHG,IAAI,CAAC,gBAAgB,CAAC,qBAAqB,EAAE,CAAC,IAAI,CAAC,UAAC,QAAiC;gBACjF,KAAI,CAAC,uBAAuB,GAAG,QAAQ,CAAC;YAC5C,CAAC,CAAC,CAAC;QACP,CAAC;QAED,iEAA+B,GAA/B;YACI,MAAM,CAAC,wDAA+B,EAAE,CAAC;QAC7C,CAAC;QAEO,mEAAiC,GAAzC,UAA0C,cAAgC;YACtE,EAAE,CAAC,CAAC,cAAc,IAAI,cAAc,CAAC,MAAM,CAAC,CAAC,CAAC;gBAC1C,oFAAoF;gBACpF,EAAE,CAAC,CAAC,+CAAsB,CAAC,WAAW,KAAK,cAAc,CAAC,MAAM,CAAC,CAAC,CAAC;oBAC/D,MAAM,CAAC,KAAK,CAAC;gBACjB,CAAC;gBAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,uBAAU,CAAC,kBAAkB,EAAE,CAAC,CAAC,CAAC,CAAC;oBAC1E,MAAM,CAAC,IAAI,CAAC;gBAChB,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACJ,MAAM,CAAC,+CAAsB,CAAC,OAAO,KAAK,cAAc,CAAC,MAAM,CAAC;gBACpE,CAAC;YACL,CAAC;YACD,MAAM,CAAC,KAAK,CAAC;QACjB,CAAC;QAEM,yDAAuB,GAA9B;YACI,MAAM,CAAC,IAAI,CAAC,iCAAiC,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;QACvE,CAAC;QAEM,sDAAoB,GAA3B;YACI,6DAA6D;YAC7D,GAAG,CAAC,CAAW,UAAwB,EAAxB,KAAA,IAAI,CAAC,mBAAmB,EAAxB,cAAwB,EAAxB,IAAwB;gBAAlC,IAAI,EAAE,SAAA;gBACP,EAAE,CAAC,CAAC,EAAE,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,EAAE,KAAK,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;oBACjD,MAAM,CAAC,IAAI,CAAC,iCAAiC,CAAC,EAAE,CAAC,CAAC;gBACtD,CAAC;aACJ;YACD,MAAM,CAAC,IAAI,CAAC;QAChB,CAAC;QA/MM,+BAAO,GAAG,CAAC,kBAAkB,EAAE,kBAAkB,EAAE,eAAe,EAAE,YAAY,EAAE,gBAAgB;YACrG,WAAW,EAAE,UAAU,EAAE,MAAM,EAAE,oBAAoB,EAAE,oBAAoB,EAAE,UAAU;YACvF,SAAS,EAAE,eAAe,CAAC,CAAC;QA8MpC,8BAAC;KAAA,AAjND,CAA6C,2BAA2B,GAiNvE;IAjNY,0DAAuB","sourcesContent":["/*\n * Ki-Tax: System for the management of external childcare subsidies\n * Copyright (C) 2017 City of Bern Switzerland\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport TSEbeguParameter from '../../../models/TSEbeguParameter';\nimport {EbeguParameterRS} from '../../service/ebeguParameterRS.rest';\nimport EbeguRestUtil from '../../../utils/EbeguRestUtil';\nimport {IComponentOptions, ILogService} from 'angular';\nimport './parameterView.less';\nimport TSGesuchsperiode from '../../../models/TSGesuchsperiode';\nimport GesuchsperiodeRS from '../../../core/service/gesuchsperiodeRS.rest';\nimport {TSDateRange} from '../../../models/types/TSDateRange';\nimport {EbeguVorlageRS} from '../../service/ebeguVorlageRS.rest';\nimport EbeguUtil from '../../../utils/EbeguUtil';\nimport {RemoveDialogController} from '../../../gesuch/dialog/RemoveDialogController';\nimport {DvDialog} from '../../../core/directive/dv-dialog/dv-dialog';\nimport GlobalCacheService from '../../../gesuch/service/globalCacheService';\nimport {TSCacheTyp} from '../../../models/enums/TSCacheTyp';\nimport GesuchModelManager from '../../../gesuch/service/gesuchModelManager';\nimport AbstractAdminViewController from '../../abstractAdminView';\nimport AuthServiceRS from '../../../authentication/service/AuthServiceRS.rest';\nimport {getTSGesuchsperiodeStatusValues, TSGesuchsperiodeStatus} from '../../../models/enums/TSGesuchsperiodeStatus';\nimport {TSRoleUtil} from '../../../utils/TSRoleUtil';\nimport ITranslateService = angular.translate.ITranslateService;\nimport ITimeoutService = angular.ITimeoutService;\nlet template = require('./parameterView.html');\nlet style = require('./parameterView.less');\nlet removeDialogTemplate = require('../../../gesuch/dialog/removeDialogTemplate.html');\n\nexport class ParameterViewComponentConfig implements IComponentOptions {\n    transclude: boolean = false;\n    template: string = template;\n    controller: any = ParameterViewController;\n    controllerAs: string = 'vm';\n}\n\nexport class ParameterViewController extends AbstractAdminViewController {\n    static $inject = ['EbeguParameterRS', 'GesuchsperiodeRS', 'EbeguRestUtil', '$translate', 'EbeguVorlageRS',\n        'EbeguUtil', 'DvDialog', '$log', 'GlobalCacheService', 'GesuchModelManager', '$timeout',\n        '$window', 'AuthServiceRS'];\n\n    ebeguParameterRS: EbeguParameterRS;\n    ebeguRestUtil: EbeguRestUtil;\n\n    gesuchsperiodenList: Array<TSGesuchsperiode> = [];\n    gesuchsperiode: TSGesuchsperiode;\n\n    jahr: number;\n    ebeguJahresabhParameter: TSEbeguParameter[] = []; // enthält alle Jahresabhängigen Params für alle Jahre\n\n    ebeguParameterListGesuchsperiode: TSEbeguParameter[];\n    ebeguParameterListJahr: TSEbeguParameter[]; // enthält alle Params für nur 1 Jahr\n\n    statusChanged: boolean = false;\n\n    /* @ngInject */\n    constructor(ebeguParameterRS: EbeguParameterRS, private gesuchsperiodeRS: GesuchsperiodeRS,\n                ebeguRestUtil: EbeguRestUtil, private $translate: ITranslateService,\n                private ebeguVorlageRS: EbeguVorlageRS, private ebeguUtil: EbeguUtil,\n                private dvDialog: DvDialog, private $log: ILogService,\n                private globalCacheService: GlobalCacheService, private gesuchModelManager: GesuchModelManager,\n                private $timeout: ITimeoutService, private $window: ng.IWindowService, authServiceRS: AuthServiceRS) {\n        super(authServiceRS);\n        this.ebeguParameterRS = ebeguParameterRS;\n        this.ebeguRestUtil = ebeguRestUtil;\n        $timeout(() => {\n            this.readGesuchsperioden();\n            this.updateJahresabhParamList();\n        });\n    }\n\n    private readGesuchsperioden(): void {\n        this.gesuchsperiodeRS.getAllGesuchsperioden().then((response: Array<TSGesuchsperiode>) => {\n            this.gesuchsperiodenList =  response; //angular.copy(response);\n        });\n    }\n\n    private readEbeguParameterByGesuchsperiode(): void {\n        this.ebeguParameterRS.getEbeguParameterByGesuchsperiode(this.gesuchsperiode.id).then((response: TSEbeguParameter[]) => {\n            this.ebeguParameterListGesuchsperiode = response;\n        });\n    }\n\n    private readEbeguParameterByJahr(): void {\n        this.ebeguParameterRS.getEbeguParameterByJahr(this.jahr).then((response: TSEbeguParameter[]) => {\n            this.ebeguParameterListJahr = response;\n        });\n    }\n\n    gesuchsperiodeClicked(gesuchsperiode: any) {\n        if (gesuchsperiode.isSelected) {\n            this.gesuchsperiode = gesuchsperiode;\n            this.readEbeguParameterByGesuchsperiode();\n        } else {\n            this.cancelGesuchsperiode();\n        }\n    }\n\n    jahresabhParamSelected(parameter: TSEbeguParameter) {\n        this.jahr = parameter.gueltigkeit.gueltigAb.get('year');\n        this.jahrChanged();\n    }\n\n    createGesuchsperiode(): void {\n        this.gesuchsperiode = new TSGesuchsperiode(TSGesuchsperiodeStatus.ENTWURF, new TSDateRange());\n        if (this.gesuchsperiodenList) {\n            let prevGesPer: TSGesuchsperiode = this.gesuchsperiodenList[0];\n            this.gesuchsperiode.gueltigkeit.gueltigAb = prevGesPer.gueltigkeit.gueltigAb.clone().add('years', 1);\n            this.gesuchsperiode.gueltigkeit.gueltigBis = prevGesPer.gueltigkeit.gueltigBis.clone().add('years', 1);\n        }\n    }\n\n    saveGesuchsperiode(): void {\n        // Den Dialog nur aufrufen, wenn der Status geändert wurde (oder die GP neu ist)\n        if (this.gesuchsperiode.isNew() || this.statusChanged === true) {\n            let dialogText = this.getGesuchsperiodeSaveDialogText();\n            this.dvDialog.showDialog(removeDialogTemplate, RemoveDialogController, {\n                title: 'GESUCHSPERIODE_DIALOG_TITLE',\n                deleteText: dialogText,\n                parentController: undefined,\n                elementID: undefined\n            }).then(() => {\n                this.doSave();\n            });\n        } else {\n            this.doSave();\n        }\n    }\n\n    private doSave(): void {\n        this.gesuchsperiodeRS.updateGesuchsperiode(this.gesuchsperiode).then((response: TSGesuchsperiode) => {\n            this.gesuchsperiode = response;\n\n            let index: number = EbeguUtil.getIndexOfElementwithID(response, this.gesuchsperiodenList);\n            if (index !== -1) {\n                this.gesuchsperiodenList[index] = response;\n            } else {\n                this.gesuchsperiodenList.push(response);\n            }\n            this.globalCacheService.getCache(TSCacheTyp.EBEGU_PARAMETER).removeAll();\n            // Die E-BEGU-Parameter für die neue Periode lesen bzw. erstellen, wenn noch nicht vorhanden\n            this.readEbeguParameterByGesuchsperiode();\n            // Dasselbe fuer die jahresabhaengigen fuer die beiden Halbjahre der Periode\n            this.ebeguParameterRS.getEbeguParameterByJahr(this.gesuchsperiode.gueltigkeit.gueltigAb.year()).then((response: TSEbeguParameter[]) => {\n                this.ebeguParameterRS.getEbeguParameterByJahr(this.gesuchsperiode.gueltigkeit.gueltigBis.year()).then((response: TSEbeguParameter[]) => {\n                    this.updateJahresabhParamList();\n                });\n            });\n            this.gesuchsperiodeRS.updateActiveGesuchsperiodenList(); //reset gesuchperioden in manager\n            this.gesuchsperiodeRS.updateNichtAbgeschlosseneGesuchsperiodenList();\n            this.statusChanged = false;\n        });\n    }\n\n    setStatusChanged(): void {\n        this.statusChanged = true;\n    }\n\n    private getGesuchsperiodeSaveDialogText(): string {\n        if (this.gesuchsperiode.status === TSGesuchsperiodeStatus.ENTWURF) {\n            return 'GESUCHSPERIODE_DIALOG_TEXT_ENTWURF';\n        } else if (this.gesuchsperiode.status === TSGesuchsperiodeStatus.AKTIV) {\n            return 'GESUCHSPERIODE_DIALOG_TEXT_AKTIV';\n        } else if (this.gesuchsperiode.status === TSGesuchsperiodeStatus.INAKTIV) {\n            return 'GESUCHSPERIODE_DIALOG_TEXT_INAKTIV';\n        } else if (this.gesuchsperiode.status === TSGesuchsperiodeStatus.GESCHLOSSEN) {\n            return 'GESUCHSPERIODE_DIALOG_TEXT_GESCHLOSSEN';\n        } else {\n            this.$log.warn('Achtung, Status unbekannt: ', this.gesuchsperiode.status);\n            return null;\n        }\n    }\n\n    cancelGesuchsperiode(): void {\n        this.gesuchsperiode = undefined;\n        this.ebeguParameterListGesuchsperiode = undefined;\n    }\n\n    cancelJahresabhaengig(): void {\n        this.jahr = undefined;\n    }\n\n    jahrChanged(): void {\n        this.readEbeguParameterByJahr();\n    }\n\n    saveParameterByGesuchsperiode(): void {\n        for (let i = 0; i < this.ebeguParameterListGesuchsperiode.length; i++) {\n            let param = this.ebeguParameterListGesuchsperiode[i];\n            this.ebeguParameterRS.saveEbeguParameter(param);\n        }\n        this.globalCacheService.getCache(TSCacheTyp.EBEGU_PARAMETER).removeAll();\n        this.gesuchsperiodeRS.updateActiveGesuchsperiodenList();\n        this.gesuchsperiodeRS.updateNichtAbgeschlosseneGesuchsperiodenList();\n        this.gesuchsperiode = undefined;\n    }\n\n    saveParameterByJahr(): void {\n        if (this.ebeguParameterListJahr.length !== 1) {\n            this.$log.error('Aktuell kann diese oberflaeche nur einene einzelnen Jahresabg. Param speichern.');\n        } else {\n            let param = this.ebeguParameterListJahr[0];\n            this.ebeguParameterRS.saveEbeguParameter(param).then((response) => {\n                this.updateJahresabhParamList();\n            });\n        }\n    }\n\n    private updateJahresabhParamList() {\n        this.ebeguParameterRS.getJahresabhParameter().then((response: Array<TSEbeguParameter>) => {\n            this.ebeguJahresabhParameter = response;\n        });\n    }\n\n    getTSGesuchsperiodeStatusValues(): Array<TSGesuchsperiodeStatus> {\n        return getTSGesuchsperiodeStatusValues();\n    }\n\n    private periodenaParamsEditableForPeriode(gesuchsperiode: TSGesuchsperiode): boolean {\n        if (gesuchsperiode && gesuchsperiode.status) {\n            // Fuer SuperAdmin immer auch editierbar, wenn AKTIV oder INAKTIV, sonst nur ENTWURF\n            if (TSGesuchsperiodeStatus.GESCHLOSSEN === gesuchsperiode.status) {\n                return false;\n            } else if (this.authServiceRS.isOneOfRoles(TSRoleUtil.getSuperAdminRoles())) {\n                return true;\n            } else {\n                return TSGesuchsperiodeStatus.ENTWURF === gesuchsperiode.status;\n            }\n        }\n        return false;\n    }\n\n    public periodenaParamsEditable(): boolean {\n        return this.periodenaParamsEditableForPeriode(this.gesuchsperiode);\n    }\n\n    public jahresParamsEditable(): boolean {\n        // Wenn die Periode, die in dem Jahr *endet* noch ENTWURF ist\n        for (let gp of this.gesuchsperiodenList) {\n            if (gp.gueltigkeit.gueltigBis.year() === this.jahr) {\n                return this.periodenaParamsEditableForPeriode(gp);\n            }\n        }\n        return true;\n    }\n}\n"]}]}