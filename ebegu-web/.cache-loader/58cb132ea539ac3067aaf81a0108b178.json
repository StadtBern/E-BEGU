{"remainingRequest":"/home/imanol/projects/ebegu/ebegu-web/node_modules/thread-loader/dist/cjs.js??ref--0-1!/home/imanol/projects/ebegu/ebegu-web/node_modules/ts-loader/index.js??ref--0-2!/home/imanol/projects/ebegu/ebegu-web/src/core/service/downloadRS.rest.ts","cacheIdentifier":"cache-loader:1.1.0 test","dependencies":[{"path":"/home/imanol/projects/ebegu/ebegu-web/src/core/service/downloadRS.rest.ts","mtime":1518612532794},{"path":"/home/imanol/projects/ebegu/ebegu-web/node_modules/cache-loader/dist/cjs.js","mtime":1507514019000},{"path":"/home/imanol/projects/ebegu/ebegu-web/node_modules/thread-loader/dist/cjs.js","mtime":1507523420000},{"path":"/home/imanol/projects/ebegu/ebegu-web/node_modules/ts-loader/index.js","mtime":1508488471000}],"contextDependencies":[],"result":["\"use strict\";\n/*\n * Ki-Tax: System for the management of external childcare subsidies\n * Copyright (C) 2017 City of Bern Switzerland\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar TSDownloadFile_1 = require(\"../../models/TSDownloadFile\");\nvar TSGeneratedDokumentTyp_1 = require(\"../../models/enums/TSGeneratedDokumentTyp\");\nvar EbeguUtil_1 = require(\"../../utils/EbeguUtil\");\nvar DownloadRS = /** @class */ (function () {\n    /* @ngInject */\n    function DownloadRS($http, REST_API, ebeguRestUtil, $log, $window, $interval) {\n        this.$window = $window;\n        this.$interval = $interval;\n        this.serviceURL = REST_API + 'blobs/temp';\n        this.http = $http;\n        this.ebeguRestUtil = ebeguRestUtil;\n        this.log = $log;\n    }\n    DownloadRS.prototype.getAccessTokenDokument = function (dokumentID) {\n        var _this = this;\n        return this.http.get(this.serviceURL + '/' + encodeURIComponent(dokumentID) + '/dokument')\n            .then(function (response) {\n            _this.log.debug('PARSING DownloadFile REST object ', response.data);\n            return _this.ebeguRestUtil.parseDownloadFile(new TSDownloadFile_1.default(), response.data);\n        });\n    };\n    DownloadRS.prototype.getAccessTokenVorlage = function (vorlageID) {\n        var _this = this;\n        return this.http.get(this.serviceURL + '/' + encodeURIComponent(vorlageID) + '/vorlage')\n            .then(function (response) {\n            _this.log.debug('PARSING DownloadFile REST object ', response.data);\n            return _this.ebeguRestUtil.parseDownloadFile(new TSDownloadFile_1.default(), response.data);\n        });\n    };\n    DownloadRS.prototype.getFinSitDokumentAccessTokenGeneratedDokument = function (gesuchId) {\n        var _this = this;\n        return this.http.get(this.serviceURL + '/' + encodeURIComponent(gesuchId) + '/FINANZIELLE_SITUATION/generated')\n            .then(function (response) {\n            _this.log.debug('PARSING DownloadFile REST object ', response.data);\n            return _this.ebeguRestUtil.parseDownloadFile(new TSDownloadFile_1.default(), response.data);\n        });\n    };\n    DownloadRS.prototype.getBegleitschreibenDokumentAccessTokenGeneratedDokument = function (gesuchId, forceCreation) {\n        var _this = this;\n        return this.http.get(this.serviceURL + '/' + encodeURIComponent(gesuchId) + '/BEGLEITSCHREIBEN/' + forceCreation + '/generated')\n            .then(function (response) {\n            _this.log.debug('PARSING DownloadFile REST object ', response.data);\n            return _this.ebeguRestUtil.parseDownloadFile(new TSDownloadFile_1.default(), response.data);\n        });\n    };\n    DownloadRS.prototype.getFreigabequittungAccessTokenGeneratedDokument = function (gesuchId, forceCreation) {\n        var _this = this;\n        return this.http.get(this.serviceURL + '/' + encodeURIComponent(gesuchId) + '/'\n            + encodeURIComponent(TSGeneratedDokumentTyp_1.TSGeneratedDokumentTyp[TSGeneratedDokumentTyp_1.TSGeneratedDokumentTyp.FREIGABEQUITTUNG]) + '/' + forceCreation + '/generated')\n            .then(function (response) {\n            _this.log.debug('PARSING DownloadFile REST object ', response.data);\n            return _this.ebeguRestUtil.parseDownloadFile(new TSDownloadFile_1.default(), response.data);\n        });\n    };\n    DownloadRS.prototype.getAccessTokenMahnungGeneratedDokument = function (mahnung) {\n        var _this = this;\n        var restMahnung = {};\n        restMahnung = this.ebeguRestUtil.mahnungToRestObject(restMahnung, mahnung);\n        return this.http.put(this.serviceURL + '/' + encodeURIComponent(TSGeneratedDokumentTyp_1.TSGeneratedDokumentTyp[TSGeneratedDokumentTyp_1.TSGeneratedDokumentTyp.MAHNUNG]) + '/generated', restMahnung, {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }).then(function (response) {\n            _this.log.debug('PARSING DownloadFile REST object ', response.data);\n            return _this.ebeguRestUtil.parseDownloadFile(new TSDownloadFile_1.default(), response.data);\n        });\n    };\n    DownloadRS.prototype.getAccessTokenVerfuegungGeneratedDokument = function (gesuchId, betreuungId, forceCreation, manuelleBemerkungen) {\n        var _this = this;\n        return this.http.post(this.serviceURL + '/' + encodeURIComponent(gesuchId) + '/' + encodeURIComponent(betreuungId)\n            + '/' + encodeURIComponent(TSGeneratedDokumentTyp_1.TSGeneratedDokumentTyp[TSGeneratedDokumentTyp_1.TSGeneratedDokumentTyp.VERFUEGUNG]) + '/' + forceCreation + '/generated', manuelleBemerkungen, {\n            headers: {\n                'Content-Type': 'text/plain'\n            }\n        }).then(function (response) {\n            _this.log.debug('PARSING DownloadFile REST object ', response.data);\n            return _this.ebeguRestUtil.parseDownloadFile(new TSDownloadFile_1.default(), response.data);\n        });\n    };\n    DownloadRS.prototype.getAccessTokenNichteintretenGeneratedDokument = function (betreuungId, forceCreation) {\n        var _this = this;\n        return this.http.get(this.serviceURL + '/' + encodeURIComponent(betreuungId)\n            + '/' + encodeURIComponent(TSGeneratedDokumentTyp_1.TSGeneratedDokumentTyp[TSGeneratedDokumentTyp_1.TSGeneratedDokumentTyp.NICHTEINTRETEN]) + '/' + forceCreation + '/generated')\n            .then(function (response) {\n            _this.log.debug('PARSING DownloadFile REST object ', response.data);\n            return _this.ebeguRestUtil.parseDownloadFile(new TSDownloadFile_1.default(), response.data);\n        });\n    };\n    DownloadRS.prototype.getPain001AccessTokenGeneratedDokument = function (zahlungsauftragId) {\n        var _this = this;\n        return this.http.get(this.serviceURL + '/' + encodeURIComponent(zahlungsauftragId) + '/'\n            + encodeURIComponent(TSGeneratedDokumentTyp_1.TSGeneratedDokumentTyp[TSGeneratedDokumentTyp_1.TSGeneratedDokumentTyp.PAIN001]) + '/generated')\n            .then(function (response) {\n            _this.log.debug('PARSING DownloadFile REST object ', response.data);\n            return _this.ebeguRestUtil.parseDownloadFile(new TSDownloadFile_1.default(), response.data);\n        });\n    };\n    DownloadRS.prototype.getDokumentAccessTokenVerfuegungExport = function (betreuungId) {\n        var _this = this;\n        return this.http.get(this.serviceURL + '/' + encodeURIComponent(betreuungId) + '/EXPORT')\n            .then(function (response) {\n            _this.log.debug('PARSING DownloadFile REST object ', response.data);\n            return _this.ebeguRestUtil.parseDownloadFile(new TSDownloadFile_1.default(), response.data);\n        });\n    };\n    DownloadRS.prototype.getAccessTokenBenutzerhandbuch = function () {\n        var _this = this;\n        return this.http.get(this.serviceURL + '/BENUTZERHANDBUCH')\n            .then(function (response) {\n            _this.log.debug('PARSING DownloadFile REST object ', response.data);\n            return _this.ebeguRestUtil.parseDownloadFile(new TSDownloadFile_1.default(), response.data);\n        });\n    };\n    DownloadRS.prototype.getServiceName = function () {\n        return 'DownloadRS';\n    };\n    /**\n     *\n     * @param accessToken\n     * @param dokumentName\n     * @param attachment\n     * @param myWindow -> Das Window muss als Parameter mitgegeben werden, damit der Popup Blocker das Oeffnen dieses Fesnters nicht als Popup identifiziert.\n     * @returns {boolean}\n     */\n    DownloadRS.prototype.startDownload = function (accessToken, dokumentName, attachment, myWindow) {\n        if (myWindow) {\n            var href = this.serviceURL + '/blobdata/' + accessToken;\n            if (attachment) {\n                // add MatrixParam for to download file instead of opening it inline\n                href += ';attachment=true;';\n            }\n            else {\n                myWindow.focus();\n            }\n            //as soon as the window is ready send it to the download\n            this.addCloseButtonHandler(myWindow);\n            this.redirectWindowToDownloadWhenReady(myWindow, href, accessToken);\n            //This would be the way to open file in new window (for now it's better to open in new tab)\n            //this.$window.open(href, name, 'toolbar=0,location=0,menubar=0');\n        }\n        else {\n            this.log.error('Download popup window was not initialized');\n        }\n    };\n    DownloadRS.prototype.prepareDownloadWindow = function () {\n        return this.$window.open('./src/assets/downloadWindow/downloadWindow.html', EbeguUtil_1.default.generateRandomName(5));\n    };\n    DownloadRS.prototype.redirectWindowToDownloadWhenReady = function (win, href, name) {\n        var _this = this;\n        //wir pruefen den dokumentstatus alle 100ms, insgesamt maximal 300 mal\n        var readyTimer = this.$interval(function () {\n            if (win.document.readyState !== 'complete') {\n                return;\n            }\n            _this.$interval.cancel(readyTimer);\n            //do stuff\n            _this.hideSpinner(win);\n            win.open(href, win.name);\n        }, 100, 300);\n    };\n    /**\n     * Es kann sein, dass das popup noch gar nicht fertig gerendert ist bevor wir den spinner schon wieder verstecken wollen\n     * in diesem fall warten wir noch bis das popup in den readyState 'conplete' wechselt und verstecken den spinner dann\n     */\n    DownloadRS.prototype.hideSpinner = function (win) {\n        this.log.debug('hiding spinner');\n        var element = win.document.getElementById('spinnerCont');\n        if (element) {\n            element.style.display = 'none';\n        }\n        else {\n            console.log('element not found, can not hide spinner');\n        }\n        var buttonElement = win.document.getElementById('closeButton');\n        if (buttonElement) {\n            buttonElement.style.display = 'block';\n            this.addCloseButtonHandler(win);\n        }\n    };\n    DownloadRS.prototype.addCloseButtonHandler = function (win) {\n        var element = win.document.getElementById('closeButton');\n        if (element) {\n            element.addEventListener('click', function () {\n                win.close();\n            }, false);\n        }\n        else {\n            console.log('element not found, can not attach window close handler spinner');\n        }\n    };\n    DownloadRS.$inject = ['$http', 'REST_API', 'EbeguRestUtil', '$log', '$window', '$interval'];\n    return DownloadRS;\n}());\nexports.DownloadRS = DownloadRS;\n",{"version":3,"file":"/home/imanol/projects/ebegu/ebegu-web/src/core/service/downloadRS.rest.ts","sourceRoot":"","sources":["/home/imanol/projects/ebegu/ebegu-web/src/core/service/downloadRS.rest.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Ki-Tax: System for the management of external childcare subsidies\n * Copyright (C) 2017 City of Bern Switzerland\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport {IHttpService, IIntervalService, ILogService, IPromise} from 'angular';\nimport EbeguRestUtil from '../../utils/EbeguRestUtil';\nimport TSDownloadFile from '../../models/TSDownloadFile';\nimport {TSGeneratedDokumentTyp} from '../../models/enums/TSGeneratedDokumentTyp';\nimport TSMahnung from '../../models/TSMahnung';\nimport EbeguUtil from '../../utils/EbeguUtil';\n\nexport class DownloadRS {\n    serviceURL: string;\n    http: IHttpService;\n    ebeguRestUtil: EbeguRestUtil;\n    log: ILogService;\n\n    static $inject = ['$http', 'REST_API', 'EbeguRestUtil', '$log', '$window', '$interval'];\n    /* @ngInject */\n    constructor($http: IHttpService, REST_API: string, ebeguRestUtil: EbeguRestUtil, $log: ILogService, private $window: ng.IWindowService,\n                private $interval: IIntervalService) {\n        this.serviceURL = REST_API + 'blobs/temp';\n        this.http = $http;\n        this.ebeguRestUtil = ebeguRestUtil;\n        this.log = $log;\n    }\n\n    public getAccessTokenDokument(dokumentID: string): IPromise<TSDownloadFile> {\n        return this.http.get(this.serviceURL + '/' + encodeURIComponent(dokumentID) + '/dokument')\n            .then((response: any) => {\n                this.log.debug('PARSING DownloadFile REST object ', response.data);\n                return this.ebeguRestUtil.parseDownloadFile(new TSDownloadFile(), response.data);\n            });\n    }\n\n    public getAccessTokenVorlage(vorlageID: string): IPromise<TSDownloadFile> {\n        return this.http.get(this.serviceURL + '/' + encodeURIComponent(vorlageID) + '/vorlage')\n            .then((response: any) => {\n                this.log.debug('PARSING DownloadFile REST object ', response.data);\n                return this.ebeguRestUtil.parseDownloadFile(new TSDownloadFile(), response.data);\n            });\n    }\n\n    public getFinSitDokumentAccessTokenGeneratedDokument(gesuchId: string): IPromise<TSDownloadFile> {\n        return this.http.get(this.serviceURL + '/' + encodeURIComponent(gesuchId) + '/FINANZIELLE_SITUATION/generated')\n            .then((response: any) => {\n                this.log.debug('PARSING DownloadFile REST object ', response.data);\n                return this.ebeguRestUtil.parseDownloadFile(new TSDownloadFile(), response.data);\n            });\n    }\n\n    public getBegleitschreibenDokumentAccessTokenGeneratedDokument(gesuchId: string, forceCreation: boolean): IPromise<TSDownloadFile> {\n        return this.http.get(this.serviceURL + '/' + encodeURIComponent(gesuchId) + '/BEGLEITSCHREIBEN/' + forceCreation + '/generated')\n            .then((response: any) => {\n                this.log.debug('PARSING DownloadFile REST object ', response.data);\n                return this.ebeguRestUtil.parseDownloadFile(new TSDownloadFile(), response.data);\n            });\n    }\n\n    public getFreigabequittungAccessTokenGeneratedDokument(gesuchId: string, forceCreation: boolean): IPromise<TSDownloadFile> {\n        return this.http.get(this.serviceURL + '/' + encodeURIComponent(gesuchId) + '/'\n            + encodeURIComponent(TSGeneratedDokumentTyp[TSGeneratedDokumentTyp.FREIGABEQUITTUNG]) + '/' + forceCreation + '/generated')\n            .then((response: any) => {\n                this.log.debug('PARSING DownloadFile REST object ', response.data);\n                return this.ebeguRestUtil.parseDownloadFile(new TSDownloadFile(), response.data);\n            });\n    }\n\n    public getAccessTokenMahnungGeneratedDokument(mahnung: TSMahnung): IPromise<TSDownloadFile> {\n        let restMahnung = {};\n        restMahnung = this.ebeguRestUtil.mahnungToRestObject(restMahnung, mahnung);\n        return this.http.put(this.serviceURL + '/' + encodeURIComponent(TSGeneratedDokumentTyp[TSGeneratedDokumentTyp.MAHNUNG]) + '/generated', restMahnung, {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }).then((response: any) => {\n            this.log.debug('PARSING DownloadFile REST object ', response.data);\n            return this.ebeguRestUtil.parseDownloadFile(new TSDownloadFile(), response.data);\n        });\n    }\n\n    public getAccessTokenVerfuegungGeneratedDokument(gesuchId: string, betreuungId: string, forceCreation: boolean, manuelleBemerkungen: string): IPromise<TSDownloadFile> {\n        return this.http.post(this.serviceURL + '/' + encodeURIComponent(gesuchId) + '/' + encodeURIComponent(betreuungId)\n            + '/' + encodeURIComponent(TSGeneratedDokumentTyp[TSGeneratedDokumentTyp.VERFUEGUNG]) + '/' + forceCreation + '/generated', manuelleBemerkungen, {\n            headers: {\n                'Content-Type': 'text/plain'\n            }\n        }).then((response: any) => {\n            this.log.debug('PARSING DownloadFile REST object ', response.data);\n            return this.ebeguRestUtil.parseDownloadFile(new TSDownloadFile(), response.data);\n        });\n    }\n\n    public getAccessTokenNichteintretenGeneratedDokument(betreuungId: string, forceCreation: boolean): IPromise<TSDownloadFile> {\n        return this.http.get(this.serviceURL + '/' + encodeURIComponent(betreuungId)\n            + '/' + encodeURIComponent(TSGeneratedDokumentTyp[TSGeneratedDokumentTyp.NICHTEINTRETEN]) + '/' + forceCreation + '/generated')\n            .then((response: any) => {\n                this.log.debug('PARSING DownloadFile REST object ', response.data);\n                return this.ebeguRestUtil.parseDownloadFile(new TSDownloadFile(), response.data);\n            });\n    }\n\n    public getPain001AccessTokenGeneratedDokument(zahlungsauftragId: string): IPromise<TSDownloadFile> {\n        return this.http.get(this.serviceURL + '/' + encodeURIComponent(zahlungsauftragId) + '/'\n            + encodeURIComponent(TSGeneratedDokumentTyp[TSGeneratedDokumentTyp.PAIN001]) + '/generated')\n            .then((response: any) => {\n                this.log.debug('PARSING DownloadFile REST object ', response.data);\n                return this.ebeguRestUtil.parseDownloadFile(new TSDownloadFile(), response.data);\n            });\n    }\n\n    public getDokumentAccessTokenVerfuegungExport(betreuungId: string): IPromise<TSDownloadFile> {\n        return this.http.get(this.serviceURL + '/' + encodeURIComponent(betreuungId) + '/EXPORT')\n            .then((response: any) => {\n                this.log.debug('PARSING DownloadFile REST object ', response.data);\n                return this.ebeguRestUtil.parseDownloadFile(new TSDownloadFile(), response.data);\n            });\n    }\n\n    public getAccessTokenBenutzerhandbuch(): IPromise<TSDownloadFile> {\n        return this.http.get(this.serviceURL + '/BENUTZERHANDBUCH')\n            .then((response: any) => {\n                this.log.debug('PARSING DownloadFile REST object ', response.data);\n                return this.ebeguRestUtil.parseDownloadFile(new TSDownloadFile(), response.data);\n            });\n    }\n\n\n    public getServiceName(): string {\n        return 'DownloadRS';\n    }\n\n    /**\n     *\n     * @param accessToken\n     * @param dokumentName\n     * @param attachment\n     * @param myWindow -> Das Window muss als Parameter mitgegeben werden, damit der Popup Blocker das Oeffnen dieses Fesnters nicht als Popup identifiziert.\n     * @returns {boolean}\n     */\n    public startDownload(accessToken: string, dokumentName: string, attachment: boolean, myWindow: Window) {\n        if (myWindow) {\n            let href: string = this.serviceURL + '/blobdata/' + accessToken;\n            if (attachment) {\n                // add MatrixParam for to download file instead of opening it inline\n                href += ';attachment=true;';\n            } else {\n                myWindow.focus();\n            }\n            //as soon as the window is ready send it to the download\n            this.addCloseButtonHandler(myWindow);\n            this.redirectWindowToDownloadWhenReady(myWindow, href, accessToken);\n\n            //This would be the way to open file in new window (for now it's better to open in new tab)\n            //this.$window.open(href, name, 'toolbar=0,location=0,menubar=0');\n        } else {\n            this.log.error('Download popup window was not initialized');\n        }\n    }\n\n    prepareDownloadWindow(): Window {\n        return this.$window.open('./src/assets/downloadWindow/downloadWindow.html', EbeguUtil.generateRandomName(5));\n    }\n\n    private redirectWindowToDownloadWhenReady(win: Window, href: string, name: string) {\n        //wir pruefen den dokumentstatus alle 100ms, insgesamt maximal 300 mal\n        let readyTimer: IPromise<any> = this.$interval(() => {\n            if (win.document.readyState !== 'complete') {\n                return;\n            }\n            this.$interval.cancel(readyTimer);\n            //do stuff\n            this.hideSpinner(win);\n            win.open(href, win.name);\n        }, 100, 300);\n    }\n\n    /**\n     * Es kann sein, dass das popup noch gar nicht fertig gerendert ist bevor wir den spinner schon wieder verstecken wollen\n     * in diesem fall warten wir noch bis das popup in den readyState 'conplete' wechselt und verstecken den spinner dann\n     */\n    public  hideSpinner(win: Window) {\n        this.log.debug('hiding spinner');\n        let element = win.document.getElementById('spinnerCont');\n        if (element) {\n            element.style.display = 'none';\n        } else {\n            console.log('element not found, can not hide spinner');\n        }\n        let buttonElement = win.document.getElementById('closeButton');\n        if (buttonElement) {\n            buttonElement.style.display = 'block';\n            this.addCloseButtonHandler(win);\n        }\n    }\n\n    public addCloseButtonHandler(win: Window) {\n        let element = win.document.getElementById('closeButton');\n        if (element) {\n            element.addEventListener('click', () => {\n                win.close();\n            }, false);\n        } else {\n            console.log('element not found, can not attach window close handler spinner');\n        }\n    }\n}\n"]}]}