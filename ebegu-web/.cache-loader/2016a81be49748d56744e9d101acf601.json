{"remainingRequest":"/home/imanol/projects/ebegu/ebegu-web/node_modules/thread-loader/dist/cjs.js??ref--0-1!/home/imanol/projects/ebegu/ebegu-web/node_modules/ts-loader/index.js??ref--0-2!/home/imanol/projects/ebegu/ebegu-web/src/gesuch/component/finanzielleSituationResultateView/finanzielleSituationResultateView.ts","cacheIdentifier":"cache-loader:1.1.0 test","dependencies":[{"path":"/home/imanol/projects/ebegu/ebegu-web/src/gesuch/component/finanzielleSituationResultateView/finanzielleSituationResultateView.ts","mtime":1512486020267},{"path":"/home/imanol/projects/ebegu/ebegu-web/node_modules/cache-loader/dist/cjs.js","mtime":1507514019000},{"path":"/home/imanol/projects/ebegu/ebegu-web/node_modules/thread-loader/dist/cjs.js","mtime":1507523420000},{"path":"/home/imanol/projects/ebegu/ebegu-web/node_modules/ts-loader/index.js","mtime":1508488471000}],"contextDependencies":[],"result":["\"use strict\";\n/*\n * Ki-Tax: System for the management of external childcare subsidies\n * Copyright (C) 2017 City of Bern Switzerland\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar abstractGesuchView_1 = require(\"../abstractGesuchView\");\nvar TSWizardStepStatus_1 = require(\"../../../models/enums/TSWizardStepStatus\");\nvar TSFinanzModel_1 = require(\"../../../models/TSFinanzModel\");\nvar TSWizardStepName_1 = require(\"../../../models/enums/TSWizardStepName\");\nvar template = require('./finanzielleSituationResultateView.html');\nrequire('./finanzielleSituationResultateView.less');\nvar FinanzielleSituationResultateViewComponentConfig = /** @class */ (function () {\n    function FinanzielleSituationResultateViewComponentConfig() {\n        this.transclude = false;\n        this.template = template;\n        this.controller = FinanzielleSituationResultateViewController;\n        this.controllerAs = 'vm';\n    }\n    return FinanzielleSituationResultateViewComponentConfig;\n}());\nexports.FinanzielleSituationResultateViewComponentConfig = FinanzielleSituationResultateViewComponentConfig;\n/**\n * Controller fuer die Finanzielle Situation\n */\nvar FinanzielleSituationResultateViewController = /** @class */ (function (_super) {\n    __extends(FinanzielleSituationResultateViewController, _super);\n    /* @ngInject */\n    function FinanzielleSituationResultateViewController($stateParams, gesuchModelManager, berechnungsManager, errorService, wizardStepManager, $scope, $timeout) {\n        var _this = _super.call(this, gesuchModelManager, berechnungsManager, wizardStepManager, $scope, TSWizardStepName_1.TSWizardStepName.FINANZIELLE_SITUATION, $timeout) || this;\n        _this.errorService = errorService;\n        _this.model = new TSFinanzModel_1.default(_this.gesuchModelManager.getBasisjahr(), _this.gesuchModelManager.isGesuchsteller2Required(), null);\n        _this.model.copyFinSitDataFromGesuch(_this.gesuchModelManager.getGesuch());\n        _this.initialModel = angular.copy(_this.model);\n        _this.calculate();\n        return _this;\n    }\n    FinanzielleSituationResultateViewController.prototype.showGS2 = function () {\n        return this.model.isGesuchsteller2Required();\n    };\n    FinanzielleSituationResultateViewController.prototype.save = function () {\n        var _this = this;\n        if (this.isGesuchValid()) {\n            this.model.copyFinSitDataToGesuch(this.gesuchModelManager.getGesuch());\n            if (!this.form.$dirty) {\n                // If there are no changes in form we don't need anything to update on Server and we could return the\n                // promise immediately\n                // Update wizardStepStatus also if the form is empty and not dirty\n                return this.updateWizardStepStatus();\n            }\n            this.errorService.clearAll();\n            if (this.gesuchModelManager.getGesuch().gesuchsteller1) {\n                this.gesuchModelManager.setGesuchstellerNumber(1);\n                if (this.gesuchModelManager.getGesuch().gesuchsteller2) {\n                    return this.gesuchModelManager.saveFinanzielleSituation().then(function () {\n                        _this.gesuchModelManager.setGesuchstellerNumber(2);\n                        return _this.saveFinanzielleSituation();\n                    });\n                }\n                else {\n                    return this.saveFinanzielleSituation();\n                }\n            }\n        }\n        return undefined;\n    };\n    FinanzielleSituationResultateViewController.prototype.saveFinanzielleSituation = function () {\n        var _this = this;\n        return this.gesuchModelManager.saveFinanzielleSituation().then(function () {\n            return _this.updateWizardStepStatus();\n        });\n    };\n    /**\n     * updates the Status of the Step depending on whether the Gesuch is a Mutation or not\n     */\n    FinanzielleSituationResultateViewController.prototype.updateWizardStepStatus = function () {\n        if (this.gesuchModelManager.getGesuch().isMutation()) {\n            return this.wizardStepManager.updateCurrentWizardStepStatusMutiert();\n        }\n        else {\n            return this.wizardStepManager.updateCurrentWizardStepStatus(TSWizardStepStatus_1.TSWizardStepStatus.OK);\n        }\n    };\n    FinanzielleSituationResultateViewController.prototype.calculate = function () {\n        this.berechnungsManager.calculateFinanzielleSituationTemp(this.model);\n    };\n    //init weg\n    FinanzielleSituationResultateViewController.prototype.getFinanzielleSituationGS1 = function () {\n        return this.model.finanzielleSituationContainerGS1;\n    };\n    FinanzielleSituationResultateViewController.prototype.getFinanzielleSituationGS2 = function () {\n        return this.model.finanzielleSituationContainerGS2;\n    };\n    FinanzielleSituationResultateViewController.prototype.getResultate = function () {\n        return this.berechnungsManager.finanzielleSituationResultate;\n    };\n    FinanzielleSituationResultateViewController.$inject = ['$stateParams', 'GesuchModelManager', 'BerechnungsManager', 'ErrorService',\n        'WizardStepManager', '$scope', '$timeout'];\n    return FinanzielleSituationResultateViewController;\n}(abstractGesuchView_1.default));\nexports.FinanzielleSituationResultateViewController = FinanzielleSituationResultateViewController;\n",{"version":3,"file":"/home/imanol/projects/ebegu/ebegu-web/src/gesuch/component/finanzielleSituationResultateView/finanzielleSituationResultateView.ts","sourceRoot":"","sources":["/home/imanol/projects/ebegu/ebegu-web/src/gesuch/component/finanzielleSituationResultateView/finanzielleSituationResultateView.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Ki-Tax: System for the management of external childcare subsidies\n * Copyright (C) 2017 City of Bern Switzerland\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport {IComponentOptions, IPromise} from 'angular';\nimport AbstractGesuchViewController from '../abstractGesuchView';\nimport GesuchModelManager from '../../service/gesuchModelManager';\nimport {IStammdatenStateParams} from '../../gesuch.route';\nimport TSFinanzielleSituationContainer from '../../../models/TSFinanzielleSituationContainer';\nimport BerechnungsManager from '../../service/berechnungsManager';\nimport TSFinanzielleSituationResultateDTO from '../../../models/dto/TSFinanzielleSituationResultateDTO';\nimport ErrorService from '../../../core/errors/service/ErrorService';\nimport WizardStepManager from '../../service/wizardStepManager';\nimport {TSWizardStepStatus} from '../../../models/enums/TSWizardStepStatus';\nimport TSFinanzModel from '../../../models/TSFinanzModel';\nimport {TSWizardStepName} from '../../../models/enums/TSWizardStepName';\nimport IScope = angular.IScope;\nimport ITimeoutService = angular.ITimeoutService;\n\nlet template = require('./finanzielleSituationResultateView.html');\nrequire('./finanzielleSituationResultateView.less');\n\nexport class FinanzielleSituationResultateViewComponentConfig implements IComponentOptions {\n    transclude = false;\n    template = template;\n    controller = FinanzielleSituationResultateViewController;\n    controllerAs = 'vm';\n}\n\n/**\n * Controller fuer die Finanzielle Situation\n */\nexport class FinanzielleSituationResultateViewController extends AbstractGesuchViewController<TSFinanzModel> {\n\n    private initialModel: TSFinanzModel;\n\n    static $inject: string[] = ['$stateParams', 'GesuchModelManager', 'BerechnungsManager', 'ErrorService',\n        'WizardStepManager', '$scope', '$timeout'];\n\n    /* @ngInject */\n    constructor($stateParams: IStammdatenStateParams, gesuchModelManager: GesuchModelManager,\n                berechnungsManager: BerechnungsManager, private errorService: ErrorService,\n                wizardStepManager: WizardStepManager, $scope: IScope, $timeout: ITimeoutService) {\n        super(gesuchModelManager, berechnungsManager, wizardStepManager, $scope, TSWizardStepName.FINANZIELLE_SITUATION, $timeout);\n\n        this.model = new TSFinanzModel(this.gesuchModelManager.getBasisjahr(), this.gesuchModelManager.isGesuchsteller2Required(), null);\n        this.model.copyFinSitDataFromGesuch(this.gesuchModelManager.getGesuch());\n        this.initialModel = angular.copy(this.model);\n\n        this.calculate();\n    }\n\n    showGS2(): boolean {\n        return this.model.isGesuchsteller2Required();\n    }\n\n    private save(): IPromise<void> {\n        if (this.isGesuchValid()) {\n            this.model.copyFinSitDataToGesuch(this.gesuchModelManager.getGesuch());\n            if (!this.form.$dirty) {\n                // If there are no changes in form we don't need anything to update on Server and we could return the\n                // promise immediately\n                // Update wizardStepStatus also if the form is empty and not dirty\n                return this.updateWizardStepStatus();\n            }\n            this.errorService.clearAll();\n            if (this.gesuchModelManager.getGesuch().gesuchsteller1) {\n                this.gesuchModelManager.setGesuchstellerNumber(1);\n                if (this.gesuchModelManager.getGesuch().gesuchsteller2) {\n                    return this.gesuchModelManager.saveFinanzielleSituation().then(() => {\n                        this.gesuchModelManager.setGesuchstellerNumber(2);\n                        return this.saveFinanzielleSituation();\n                    });\n                } else {\n                    return this.saveFinanzielleSituation();\n                }\n            }\n        }\n        return undefined;\n    }\n\n    private saveFinanzielleSituation(): IPromise<void> {\n        return this.gesuchModelManager.saveFinanzielleSituation().then(() => {\n            return this.updateWizardStepStatus();\n        });\n    }\n\n    /**\n     * updates the Status of the Step depending on whether the Gesuch is a Mutation or not\n     */\n    private updateWizardStepStatus(): IPromise<void> {\n        if (this.gesuchModelManager.getGesuch().isMutation()) {\n            return this.wizardStepManager.updateCurrentWizardStepStatusMutiert();\n        } else {\n            return this.wizardStepManager.updateCurrentWizardStepStatus(TSWizardStepStatus.OK);\n        }\n    }\n\n    calculate() {\n        this.berechnungsManager.calculateFinanzielleSituationTemp(this.model);\n    }\n\n    //init weg\n\n    public getFinanzielleSituationGS1(): TSFinanzielleSituationContainer {\n        return this.model.finanzielleSituationContainerGS1;\n\n    }\n\n    public getFinanzielleSituationGS2(): TSFinanzielleSituationContainer {\n        return this.model.finanzielleSituationContainerGS2;\n    }\n\n    public getResultate(): TSFinanzielleSituationResultateDTO {\n        return this.berechnungsManager.finanzielleSituationResultate;\n    }\n}\n"]}]}