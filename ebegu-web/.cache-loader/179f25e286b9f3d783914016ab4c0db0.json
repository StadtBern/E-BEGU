{"remainingRequest":"/home/imanol/projects/ebegu/ebegu-web/node_modules/thread-loader/dist/cjs.js??ref--0-1!/home/imanol/projects/ebegu/ebegu-web/node_modules/ts-loader/index.js??ref--0-2!/home/imanol/projects/ebegu/ebegu-web/src/core/service/zahlungRS.rest.ts","cacheIdentifier":"cache-loader:1.1.0 test","dependencies":[{"path":"/home/imanol/projects/ebegu/ebegu-web/src/core/service/zahlungRS.rest.ts","mtime":1512484412011},{"path":"/home/imanol/projects/ebegu/ebegu-web/node_modules/cache-loader/dist/cjs.js","mtime":1507514019000},{"path":"/home/imanol/projects/ebegu/ebegu-web/node_modules/thread-loader/dist/cjs.js","mtime":1507523420000},{"path":"/home/imanol/projects/ebegu/ebegu-web/node_modules/ts-loader/index.js","mtime":1508488471000}],"contextDependencies":[],"result":["\"use strict\";\n/*\n * Ki-Tax: System for the management of external childcare subsidies\n * Copyright (C) 2017 City of Bern Switzerland\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar TSZahlungsauftrag_1 = require(\"../../models/TSZahlungsauftrag\");\nvar DateUtil_1 = require(\"../../utils/DateUtil\");\nvar TSZahlung_1 = require(\"../../models/TSZahlung\");\nvar ZahlungRS = /** @class */ (function () {\n    /* @ngInject */\n    function ZahlungRS($http, REST_API, ebeguRestUtil, $log) {\n        this.$log = $log;\n        this.serviceURL = REST_API + 'zahlungen';\n        this.http = $http;\n        this.ebeguRestUtil = ebeguRestUtil;\n        this.log = $log;\n    }\n    ZahlungRS.prototype.getServiceName = function () {\n        return 'ZahlungRS';\n    };\n    ZahlungRS.prototype.getAllZahlungsauftraege = function () {\n        var _this = this;\n        return this.http.get(this.serviceURL + '/all').then(function (response) {\n            _this.$log.debug('PARSING user REST array object', response.data);\n            return _this.ebeguRestUtil.parseZahlungsauftragList(response.data);\n        });\n    };\n    ZahlungRS.prototype.getAllZahlungsauftraegeInstitution = function () {\n        var _this = this;\n        return this.http.get(this.serviceURL + '/institution').then(function (response) {\n            _this.$log.debug('PARSING user REST array object', response.data);\n            return _this.ebeguRestUtil.parseZahlungsauftragList(response.data);\n        });\n    };\n    ZahlungRS.prototype.getZahlungsauftrag = function (zahlungsauftragId) {\n        var _this = this;\n        return this.http.get(this.serviceURL + '/zahlungsauftrag' + '/' + encodeURIComponent(zahlungsauftragId)).then(function (response) {\n            _this.$log.debug('PARSING user REST array object', response.data);\n            return _this.ebeguRestUtil.parseZahlungsauftrag(new TSZahlungsauftrag_1.default(), response.data);\n        });\n    };\n    ZahlungRS.prototype.getZahlungsauftragInstitution = function (zahlungsauftragId) {\n        var _this = this;\n        return this.http.get(this.serviceURL + '/zahlungsauftraginstitution' + '/' + encodeURIComponent(zahlungsauftragId)).then(function (response) {\n            _this.$log.debug('PARSING user REST array object', response.data);\n            return _this.ebeguRestUtil.parseZahlungsauftrag(new TSZahlungsauftrag_1.default(), response.data);\n        });\n    };\n    ZahlungRS.prototype.zahlungsauftragAusloesen = function (zahlungsauftragId) {\n        var _this = this;\n        return this.http.put(this.serviceURL + '/ausloesen' + '/' + encodeURIComponent(zahlungsauftragId), null).then(function (response) {\n            _this.$log.debug('PARSING user REST array object', response.data);\n            return _this.ebeguRestUtil.parseZahlungsauftrag(new TSZahlungsauftrag_1.default(), response.data);\n        });\n    };\n    ZahlungRS.prototype.deleteAllZahlungsauftraege = function () {\n        return this.http.delete(this.serviceURL + '/delete', null);\n    };\n    ZahlungRS.prototype.zahlungBestaetigen = function (zahlungId) {\n        var _this = this;\n        return this.http.put(this.serviceURL + '/bestaetigen' + '/' + encodeURIComponent(zahlungId), null).then(function (response) {\n            _this.$log.debug('PARSING user REST array object', response.data);\n            return _this.ebeguRestUtil.parseZahlung(new TSZahlung_1.default(), response.data);\n        });\n    };\n    ZahlungRS.prototype.createZahlungsauftrag = function (beschrieb, faelligkeitsdatum, datumGeneriert) {\n        var _this = this;\n        return this.http.get(this.serviceURL + '/create', {\n            params: {\n                faelligkeitsdatum: DateUtil_1.default.momentToLocalDate(faelligkeitsdatum),\n                beschrieb: beschrieb,\n                datumGeneriert: DateUtil_1.default.momentToLocalDate(datumGeneriert)\n            }\n        }).then(function (httpresponse) {\n            _this.log.debug('PARSING Zahlungsauftrag REST object ', httpresponse.data);\n            return _this.ebeguRestUtil.parseZahlungsauftrag(new TSZahlungsauftrag_1.default(), httpresponse.data);\n        });\n    };\n    ZahlungRS.prototype.updateZahlungsauftrag = function (beschrieb, faelligkeitsdatum, id) {\n        var _this = this;\n        return this.http.get(this.serviceURL + '/update', {\n            params: {\n                beschrieb: beschrieb,\n                faelligkeitsdatum: DateUtil_1.default.momentToLocalDate(faelligkeitsdatum),\n                id: id\n            }\n        }).then(function (httpresponse) {\n            _this.log.debug('PARSING Zahlungsauftrag REST object ', httpresponse.data);\n            return _this.ebeguRestUtil.parseZahlungsauftrag(new TSZahlungsauftrag_1.default(), httpresponse.data);\n        });\n    };\n    ZahlungRS.prototype.zahlungenKontrollieren = function () {\n        var _this = this;\n        return this.http.get(this.serviceURL + '/kontrollieren').then(function (response) {\n            _this.$log.debug('PARSING user REST array object', response.data);\n        });\n    };\n    ZahlungRS.$inject = ['$http', 'REST_API', 'EbeguRestUtil', '$log'];\n    return ZahlungRS;\n}());\nexports.default = ZahlungRS;\n",{"version":3,"file":"/home/imanol/projects/ebegu/ebegu-web/src/core/service/zahlungRS.rest.ts","sourceRoot":"","sources":["/home/imanol/projects/ebegu/ebegu-web/src/core/service/zahlungRS.rest.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Ki-Tax: System for the management of external childcare subsidies\n * Copyright (C) 2017 City of Bern Switzerland\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport EbeguRestUtil from '../../utils/EbeguRestUtil';\nimport {IHttpService, ILogService, IPromise} from 'angular';\nimport TSZahlungsauftrag from '../../models/TSZahlungsauftrag';\nimport DateUtil from '../../utils/DateUtil';\nimport TSZahlung from '../../models/TSZahlung';\nimport * as moment from 'moment';\nimport IHttpPromise = angular.IHttpPromise;\n\nexport default class ZahlungRS {\n    serviceURL: string;\n    http: IHttpService;\n    ebeguRestUtil: EbeguRestUtil;\n    log: ILogService;\n\n    static $inject = ['$http', 'REST_API', 'EbeguRestUtil', '$log'];\n    /* @ngInject */\n    constructor($http: IHttpService, REST_API: string, ebeguRestUtil: EbeguRestUtil, private  $log: ILogService) {\n        this.serviceURL = REST_API + 'zahlungen';\n        this.http = $http;\n        this.ebeguRestUtil = ebeguRestUtil;\n        this.log = $log;\n    }\n\n    public getServiceName(): string {\n        return 'ZahlungRS';\n    }\n\n    public getAllZahlungsauftraege(): IPromise<TSZahlungsauftrag[]> {\n        return this.http.get(this.serviceURL + '/all').then((response: any) => {\n            this.$log.debug('PARSING user REST array object', response.data);\n            return this.ebeguRestUtil.parseZahlungsauftragList(response.data);\n        });\n    }\n\n    public getAllZahlungsauftraegeInstitution(): IPromise<TSZahlungsauftrag[]> {\n        return this.http.get(this.serviceURL + '/institution').then((response: any) => {\n            this.$log.debug('PARSING user REST array object', response.data);\n            return this.ebeguRestUtil.parseZahlungsauftragList(response.data);\n        });\n    }\n\n    public getZahlungsauftrag(zahlungsauftragId: string): IPromise<TSZahlungsauftrag> {\n        return this.http.get(this.serviceURL + '/zahlungsauftrag' + '/' + encodeURIComponent(zahlungsauftragId)).then((response: any) => {\n            this.$log.debug('PARSING user REST array object', response.data);\n            return this.ebeguRestUtil.parseZahlungsauftrag(new TSZahlungsauftrag(), response.data);\n        });\n    }\n\n    public getZahlungsauftragInstitution(zahlungsauftragId: string): IPromise<TSZahlungsauftrag> {\n        return this.http.get(this.serviceURL + '/zahlungsauftraginstitution' + '/' + encodeURIComponent(zahlungsauftragId)).then((response: any) => {\n            this.$log.debug('PARSING user REST array object', response.data);\n            return this.ebeguRestUtil.parseZahlungsauftrag(new TSZahlungsauftrag(), response.data);\n        });\n    }\n\n    public zahlungsauftragAusloesen(zahlungsauftragId: string): IPromise<TSZahlungsauftrag> {\n        return this.http.put(this.serviceURL + '/ausloesen' + '/' + encodeURIComponent(zahlungsauftragId), null).then((response: any) => {\n            this.$log.debug('PARSING user REST array object', response.data);\n            return this.ebeguRestUtil.parseZahlungsauftrag(new TSZahlungsauftrag(), response.data);\n        });\n    }\n\n    public deleteAllZahlungsauftraege(): IHttpPromise<any> {\n        return this.http.delete(this.serviceURL + '/delete', null);\n    }\n\n    public zahlungBestaetigen(zahlungId: string): IPromise<TSZahlung> {\n        return this.http.put(this.serviceURL + '/bestaetigen' + '/' + encodeURIComponent(zahlungId), null).then((response: any) => {\n            this.$log.debug('PARSING user REST array object', response.data);\n            return this.ebeguRestUtil.parseZahlung(new TSZahlung(), response.data);\n        });\n    }\n\n    public createZahlungsauftrag(beschrieb: string, faelligkeitsdatum: moment.Moment, datumGeneriert: moment.Moment): IPromise<TSZahlungsauftrag> {\n        return this.http.get(this.serviceURL + '/create',\n            {\n                params: {\n                    faelligkeitsdatum: DateUtil.momentToLocalDate(faelligkeitsdatum),\n                    beschrieb: beschrieb,\n                    datumGeneriert: DateUtil.momentToLocalDate(datumGeneriert)\n                }\n            }).then((httpresponse: any) => {\n            this.log.debug('PARSING Zahlungsauftrag REST object ', httpresponse.data);\n            return this.ebeguRestUtil.parseZahlungsauftrag(new TSZahlungsauftrag(), httpresponse.data);\n        });\n    }\n\n    public updateZahlungsauftrag(beschrieb: string, faelligkeitsdatum: moment.Moment, id: string): IPromise<TSZahlungsauftrag> {\n        return this.http.get(this.serviceURL + '/update',\n            {\n                params: {\n                    beschrieb: beschrieb,\n                    faelligkeitsdatum: DateUtil.momentToLocalDate(faelligkeitsdatum),\n                    id: id\n                }\n            }).then((httpresponse: any) => {\n            this.log.debug('PARSING Zahlungsauftrag REST object ', httpresponse.data);\n            return this.ebeguRestUtil.parseZahlungsauftrag(new TSZahlungsauftrag(), httpresponse.data);\n        });\n    }\n\n    public zahlungenKontrollieren(): IPromise<void> {\n        return this.http.get(this.serviceURL + '/kontrollieren').then((response: any) => {\n            this.$log.debug('PARSING user REST array object', response.data);\n        });\n    }\n}\n"]}]}