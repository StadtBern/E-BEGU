{"remainingRequest":"/home/imanol/projects/ebegu/ebegu-web/node_modules/thread-loader/dist/cjs.js??ref--0-1!/home/imanol/projects/ebegu/ebegu-web/node_modules/ts-loader/index.js??ref--0-2!/home/imanol/projects/ebegu/ebegu-web/src/core/service/gesuchsperiodeRS.rest.ts","cacheIdentifier":"cache-loader:1.1.0 test","dependencies":[{"path":"/home/imanol/projects/ebegu/ebegu-web/src/core/service/gesuchsperiodeRS.rest.ts","mtime":1518612532794},{"path":"/home/imanol/projects/ebegu/ebegu-web/node_modules/cache-loader/dist/cjs.js","mtime":1507514019000},{"path":"/home/imanol/projects/ebegu/ebegu-web/node_modules/thread-loader/dist/cjs.js","mtime":1507523420000},{"path":"/home/imanol/projects/ebegu/ebegu-web/node_modules/ts-loader/index.js","mtime":1508488471000}],"contextDependencies":[],"result":["\"use strict\";\n/*\n * Ki-Tax: System for the management of external childcare subsidies\n * Copyright (C) 2017 City of Bern Switzerland\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar TSGesuchsperiode_1 = require(\"../../models/TSGesuchsperiode\");\nvar GesuchsperiodeRS = /** @class */ (function () {\n    /* @ngInject */\n    function GesuchsperiodeRS($http, REST_API, ebeguRestUtil, $log, $q) {\n        this.$q = $q;\n        this.serviceURL = REST_API + 'gesuchsperioden';\n        this.http = $http;\n        this.ebeguRestUtil = ebeguRestUtil;\n        this.log = $log;\n    }\n    GesuchsperiodeRS.prototype.getServiceName = function () {\n        return 'GesuchsperiodeRS';\n    };\n    GesuchsperiodeRS.prototype.findGesuchsperiode = function (gesuchsperiodeID) {\n        var _this = this;\n        return this.http.get(this.serviceURL + '/gesuchsperiode/' + encodeURIComponent(gesuchsperiodeID))\n            .then(function (response) {\n            _this.log.debug('PARSING Gesuchsperiode REST object ', response.data);\n            return _this.ebeguRestUtil.parseGesuchsperiode(new TSGesuchsperiode_1.default(), response.data);\n        });\n    };\n    GesuchsperiodeRS.prototype.createGesuchsperiode = function (gesuchsperiode) {\n        return this.saveGesuchsperiode(gesuchsperiode);\n    };\n    GesuchsperiodeRS.prototype.updateGesuchsperiode = function (gesuchsperiode) {\n        return this.saveGesuchsperiode(gesuchsperiode);\n    };\n    GesuchsperiodeRS.prototype.saveGesuchsperiode = function (gesuchsperiode) {\n        var _this = this;\n        var restGesuchsperiode = {};\n        restGesuchsperiode = this.ebeguRestUtil.gesuchsperiodeToRestObject(restGesuchsperiode, gesuchsperiode);\n        return this.http.put(this.serviceURL, restGesuchsperiode, {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }).then(function (response) {\n            _this.log.debug('PARSING Gesuchsperiode REST object ', response.data);\n            return _this.ebeguRestUtil.parseGesuchsperiode(new TSGesuchsperiode_1.default(), response.data);\n        });\n    };\n    GesuchsperiodeRS.prototype.removeGesuchsperiode = function (gesuchsperiodeId) {\n        return this.http.delete(this.serviceURL + '/' + encodeURIComponent(gesuchsperiodeId));\n    };\n    GesuchsperiodeRS.prototype.updateActiveGesuchsperiodenList = function () {\n        var _this = this;\n        return this.http.get(this.serviceURL + '/active').then(function (response) {\n            var gesuchsperioden = _this.ebeguRestUtil.parseGesuchsperioden(response.data);\n            _this.activeGesuchsperiodenList = angular.copy(gesuchsperioden);\n            return _this.activeGesuchsperiodenList;\n        });\n    };\n    GesuchsperiodeRS.prototype.getAllActiveGesuchsperioden = function () {\n        var _this = this;\n        if (!this.activeGesuchsperiodenList || this.activeGesuchsperiodenList.length <= 0) {\n            return this.updateActiveGesuchsperiodenList().then(function () {\n                return _this.activeGesuchsperiodenList;\n            });\n        }\n        return this.$q.when(this.activeGesuchsperiodenList); // we need to return a promise\n    };\n    GesuchsperiodeRS.prototype.getAllGesuchsperioden = function () {\n        var _this = this;\n        return this.http.get(this.serviceURL + '/').then(function (response) {\n            return _this.ebeguRestUtil.parseGesuchsperioden(response.data);\n        });\n    };\n    GesuchsperiodeRS.prototype.updateNichtAbgeschlosseneGesuchsperiodenList = function () {\n        var _this = this;\n        return this.http.get(this.serviceURL + '/unclosed').then(function (response) {\n            var gesuchsperioden = _this.ebeguRestUtil.parseGesuchsperioden(response.data);\n            _this.nichtAbgeschlosseneGesuchsperiodenList = angular.copy(gesuchsperioden);\n            return _this.nichtAbgeschlosseneGesuchsperiodenList;\n        });\n    };\n    GesuchsperiodeRS.prototype.getAllNichtAbgeschlosseneGesuchsperioden = function () {\n        var _this = this;\n        if (!this.nichtAbgeschlosseneGesuchsperiodenList || this.nichtAbgeschlosseneGesuchsperiodenList.length <= 0) {\n            return this.updateNichtAbgeschlosseneGesuchsperiodenList().then(function () {\n                return _this.nichtAbgeschlosseneGesuchsperiodenList;\n            });\n        }\n        return this.$q.when(this.nichtAbgeschlosseneGesuchsperiodenList); // we need to return a promise\n    };\n    GesuchsperiodeRS.prototype.getAllNichtAbgeschlosseneNichtVerwendeteGesuchsperioden = function (fallId) {\n        var _this = this;\n        return this.http.get(this.serviceURL + '/unclosed/' + fallId).then(function (response) {\n            return _this.ebeguRestUtil.parseGesuchsperioden(response.data);\n        });\n    };\n    GesuchsperiodeRS.prototype.getNewestGesuchsperiode = function () {\n        var _this = this;\n        return this.http.get(this.serviceURL + '/newestGesuchsperiode/')\n            .then(function (response) {\n            _this.log.debug('PARSING Gesuchsperiode REST object ', response.data);\n            return _this.ebeguRestUtil.parseGesuchsperiode(new TSGesuchsperiode_1.default(), response.data);\n        });\n    };\n    GesuchsperiodeRS.$inject = ['$http', 'REST_API', 'EbeguRestUtil', '$log', '$q'];\n    return GesuchsperiodeRS;\n}());\nexports.default = GesuchsperiodeRS;\n",{"version":3,"file":"/home/imanol/projects/ebegu/ebegu-web/src/core/service/gesuchsperiodeRS.rest.ts","sourceRoot":"","sources":["/home/imanol/projects/ebegu/ebegu-web/src/core/service/gesuchsperiodeRS.rest.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Ki-Tax: System for the management of external childcare subsidies\n * Copyright (C) 2017 City of Bern Switzerland\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport {IHttpPromise, IHttpService, ILogService, IPromise, IQService} from 'angular';\nimport EbeguRestUtil from '../../utils/EbeguRestUtil';\nimport TSGesuchsperiode from '../../models/TSGesuchsperiode';\n\nexport default class GesuchsperiodeRS {\n    serviceURL: string;\n    http: IHttpService;\n    ebeguRestUtil: EbeguRestUtil;\n    log: ILogService;\n\n    private activeGesuchsperiodenList: Array<TSGesuchsperiode>;\n    private nichtAbgeschlosseneGesuchsperiodenList: Array<TSGesuchsperiode>;\n\n    static $inject = ['$http', 'REST_API', 'EbeguRestUtil', '$log', '$q'];\n    /* @ngInject */\n    constructor($http: IHttpService, REST_API: string, ebeguRestUtil: EbeguRestUtil, $log: ILogService, private $q: IQService) {\n        this.serviceURL = REST_API + 'gesuchsperioden';\n        this.http = $http;\n        this.ebeguRestUtil = ebeguRestUtil;\n        this.log = $log;\n    }\n\n    public getServiceName(): string {\n        return 'GesuchsperiodeRS';\n    }\n\n    public findGesuchsperiode(gesuchsperiodeID: string): IPromise<TSGesuchsperiode> {\n        return this.http.get(this.serviceURL + '/gesuchsperiode/' + encodeURIComponent(gesuchsperiodeID))\n            .then((response: any) => {\n                this.log.debug('PARSING Gesuchsperiode REST object ', response.data);\n                return this.ebeguRestUtil.parseGesuchsperiode(new TSGesuchsperiode(), response.data);\n            });\n    }\n\n    public createGesuchsperiode(gesuchsperiode: TSGesuchsperiode): IPromise<TSGesuchsperiode> {\n        return this.saveGesuchsperiode(gesuchsperiode);\n    }\n\n    public updateGesuchsperiode(gesuchsperiode: TSGesuchsperiode): IPromise<TSGesuchsperiode> {\n        return this.saveGesuchsperiode(gesuchsperiode);\n    }\n\n    private saveGesuchsperiode(gesuchsperiode: TSGesuchsperiode): IPromise<TSGesuchsperiode> {\n        let restGesuchsperiode = {};\n        restGesuchsperiode = this.ebeguRestUtil.gesuchsperiodeToRestObject(restGesuchsperiode, gesuchsperiode);\n        return this.http.put(this.serviceURL, restGesuchsperiode, {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }).then((response: any) => {\n            this.log.debug('PARSING Gesuchsperiode REST object ', response.data);\n            return this.ebeguRestUtil.parseGesuchsperiode(new TSGesuchsperiode(), response.data);\n        });\n    }\n\n    public removeGesuchsperiode(gesuchsperiodeId: string): IHttpPromise<TSGesuchsperiode> {\n        return this.http.delete(this.serviceURL + '/' + encodeURIComponent(gesuchsperiodeId));\n    }\n\n    public updateActiveGesuchsperiodenList(): IPromise<TSGesuchsperiode[]> {\n        return this.http.get(this.serviceURL + '/active').then((response: any) => {\n            let gesuchsperioden: TSGesuchsperiode[] = this.ebeguRestUtil.parseGesuchsperioden(response.data);\n            this.activeGesuchsperiodenList = angular.copy(gesuchsperioden);\n            return this.activeGesuchsperiodenList;\n        });\n    }\n\n    public getAllActiveGesuchsperioden(): IPromise<TSGesuchsperiode[]> {\n        if (!this.activeGesuchsperiodenList || this.activeGesuchsperiodenList.length <= 0) { // if the list is empty, reload it\n            return this.updateActiveGesuchsperiodenList().then(() => {\n                return this.activeGesuchsperiodenList;\n            });\n        }\n        return this.$q.when(this.activeGesuchsperiodenList); // we need to return a promise\n    }\n\n    public getAllGesuchsperioden(): IPromise<TSGesuchsperiode[]> {\n        return this.http.get(this.serviceURL + '/').then((response: any) => {\n            return this.ebeguRestUtil.parseGesuchsperioden(response.data);\n        });\n    }\n\n    public updateNichtAbgeschlosseneGesuchsperiodenList(): IPromise<TSGesuchsperiode[]> {\n        return this.http.get(this.serviceURL + '/unclosed').then((response: any) => {\n            let gesuchsperioden: TSGesuchsperiode[] = this.ebeguRestUtil.parseGesuchsperioden(response.data);\n            this.nichtAbgeschlosseneGesuchsperiodenList = angular.copy(gesuchsperioden);\n            return this.nichtAbgeschlosseneGesuchsperiodenList;\n        });\n    }\n\n    public getAllNichtAbgeschlosseneGesuchsperioden(): IPromise<TSGesuchsperiode[]> {\n        if (!this.nichtAbgeschlosseneGesuchsperiodenList || this.nichtAbgeschlosseneGesuchsperiodenList.length <= 0) { // if the list is empty, reload it\n            return this.updateNichtAbgeschlosseneGesuchsperiodenList().then(() => {\n                return this.nichtAbgeschlosseneGesuchsperiodenList;\n            });\n        }\n        return this.$q.when(this.nichtAbgeschlosseneGesuchsperiodenList); // we need to return a promise\n    }\n\n    public getAllNichtAbgeschlosseneNichtVerwendeteGesuchsperioden(fallId: string): IPromise<TSGesuchsperiode[]> {\n        return this.http.get(this.serviceURL + '/unclosed/' + fallId).then((response: any) => {\n            return this.ebeguRestUtil.parseGesuchsperioden(response.data);\n        });\n    }\n\n    public getNewestGesuchsperiode(): IPromise<TSGesuchsperiode> {\n        return this.http.get(this.serviceURL + '/newestGesuchsperiode/')\n            .then((response: any) => {\n                this.log.debug('PARSING Gesuchsperiode REST object ', response.data);\n                return this.ebeguRestUtil.parseGesuchsperiode(new TSGesuchsperiode(), response.data);\n            });\n    }\n}\n"]}]}