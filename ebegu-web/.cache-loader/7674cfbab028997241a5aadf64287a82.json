{"remainingRequest":"/home/imanol/projects/ebegu/ebegu-web/node_modules/thread-loader/dist/cjs.js??ref--0-1!/home/imanol/projects/ebegu/ebegu-web/node_modules/ts-loader/index.js??ref--0-2!/home/imanol/projects/ebegu/ebegu-web/src/authentication/service/HttpBuffer.ts","cacheIdentifier":"cache-loader:1.1.0 test","dependencies":[{"path":"/home/imanol/projects/ebegu/ebegu-web/src/authentication/service/HttpBuffer.ts","mtime":1512484411995},{"path":"/home/imanol/projects/ebegu/ebegu-web/node_modules/cache-loader/dist/cjs.js","mtime":1507514019000},{"path":"/home/imanol/projects/ebegu/ebegu-web/node_modules/thread-loader/dist/cjs.js","mtime":1507523420000},{"path":"/home/imanol/projects/ebegu/ebegu-web/node_modules/ts-loader/index.js","mtime":1508488471000}],"contextDependencies":[],"result":["\"use strict\";\n/*\n * Ki-Tax: System for the management of external childcare subsidies\n * Copyright (C) 2017 City of Bern Switzerland\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Code from Kita-Projekt, den wir in Typescript geschrieben haben\n * Adapted from https://github.com/witoldsz/angular-http-auth\n */\nvar HttpBuffer = /** @class */ (function () {\n    function HttpBuffer($injector) {\n        this.$injector = $injector;\n        /** Holds all the requests, so they can be re-requested in future. */\n        this.buffer = [];\n    }\n    HttpBuffer.prototype.retryHttpRequest = function (config, deferred) {\n        function successCallback(response) {\n            deferred.resolve(response);\n        }\n        function errorCallback(response) {\n            deferred.reject(response);\n        }\n        this.$http = this.$http || this.$injector.get('$http');\n        this.$http(config).then(successCallback, errorCallback);\n    };\n    /**\n     * Appends HTTP request configuration object with deferred response attached to buffer.\n     */\n    HttpBuffer.prototype.append = function (config, deferred) {\n        this.buffer.push({\n            config: config,\n            deferred: deferred\n        });\n    };\n    /**\n     * Abandon or reject (if reason provided) all the buffered requests.\n     */\n    HttpBuffer.prototype.rejectAll = function (reason) {\n        if (reason) {\n            for (var i = 0; i < this.buffer.length; ++i) {\n                this.buffer[i].deferred.reject(reason);\n            }\n        }\n        this.buffer = [];\n    };\n    /**\n     * Retries all the buffered requests clears the buffer.\n     */\n    HttpBuffer.prototype.retryAll = function (updater) {\n        for (var i = 0; i < this.buffer.length; ++i) {\n            this.retryHttpRequest(updater(this.buffer[i].config), this.buffer[i].deferred);\n        }\n        this.buffer = [];\n    };\n    HttpBuffer.$inject = ['$injector'];\n    return HttpBuffer;\n}());\nexports.default = HttpBuffer;\n",{"version":3,"file":"/home/imanol/projects/ebegu/ebegu-web/src/authentication/service/HttpBuffer.ts","sourceRoot":"","sources":["/home/imanol/projects/ebegu/ebegu-web/src/authentication/service/HttpBuffer.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;GAaG;;AAKH;;;GAGG;AACH;IASI,oBAAoB,SAA2B;QAA3B,cAAS,GAAT,SAAS,CAAkB;QAP/C,qEAAqE;QACrE,WAAM,GAAe,EAAE,CAAC;IAOxB,CAAC;IAEO,qCAAgB,GAAxB,UAAyB,MAAsB,EAAE,QAAwB;QACrE,yBAAyB,QAAa;YAClC,QAAQ,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;QAC/B,CAAC;QAED,uBAAuB,QAAa;YAChC,QAAQ,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;QAC9B,CAAC;QAED,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;QACvD,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,eAAe,EAAE,aAAa,CAAC,CAAC;IAC5D,CAAC;IAGD;;OAEG;IACI,2BAAM,GAAb,UAAc,MAAsB,EAAE,QAAwB;QAC1D,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC;YACb,MAAM,EAAE,MAAM;YACd,QAAQ,EAAE,QAAQ;SACrB,CAAC,CAAC;IACP,CAAC;IAED;;OAEG;IACI,8BAAS,GAAhB,UAAiB,MAAW;QACxB,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;YACT,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE,CAAC;gBAC1C,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;YAC3C,CAAC;QACL,CAAC;QACD,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;IACrB,CAAC;IAED;;OAEG;IACI,6BAAQ,GAAf,UAAgB,OAAY;QACxB,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE,CAAC;YAC1C,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;QACnF,CAAC;QACD,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;IACrB,CAAC;IAhDM,kBAAO,GAAG,CAAC,WAAW,CAAC,CAAC;IAiDnC,iBAAC;CAAA,AAzDD,IAyDC;kBAzDoB,UAAU","sourcesContent":["/*\n * Ki-Tax: System for the management of external childcare subsidies\n * Copyright (C) 2017 City of Bern Switzerland\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport IInjectorService = angular.auto.IInjectorService;\nimport {IDeferred, IHttpService, IRequestConfig} from 'angular';\n\n/**\n * Code from Kita-Projekt, den wir in Typescript geschrieben haben\n * Adapted from https://github.com/witoldsz/angular-http-auth\n */\nexport default class HttpBuffer {\n\n    /** Holds all the requests, so they can be re-requested in future. */\n    buffer: Array<any> = [];\n\n    /** Service initialized later because of circular dependency problem. */\n    $http: IHttpService;\n\n    static $inject = ['$injector'];\n    constructor(private $injector: IInjectorService) {\n    }\n\n    private retryHttpRequest(config: IRequestConfig, deferred: IDeferred<any>) {\n        function successCallback(response: any) {\n            deferred.resolve(response);\n        }\n\n        function errorCallback(response: any) {\n            deferred.reject(response);\n        }\n\n        this.$http = this.$http || this.$injector.get('$http');\n        this.$http(config).then(successCallback, errorCallback);\n    }\n\n\n    /**\n     * Appends HTTP request configuration object with deferred response attached to buffer.\n     */\n    public append(config: IRequestConfig, deferred: IDeferred<any>) {\n        this.buffer.push({\n            config: config,\n            deferred: deferred\n        });\n    }\n\n    /**\n     * Abandon or reject (if reason provided) all the buffered requests.\n     */\n    public rejectAll(reason: any) {\n        if (reason) {\n            for (let i = 0; i < this.buffer.length; ++i) {\n                this.buffer[i].deferred.reject(reason);\n            }\n        }\n        this.buffer = [];\n    }\n\n    /**\n     * Retries all the buffered requests clears the buffer.\n     */\n    public retryAll(updater: any) {\n        for (let i = 0; i < this.buffer.length; ++i) {\n            this.retryHttpRequest(updater(this.buffer[i].config), this.buffer[i].deferred);\n        }\n        this.buffer = [];\n    }\n}\n"]}]}