{"remainingRequest":"/home/imanol/projects/ebegu/ebegu-web/node_modules/thread-loader/dist/cjs.js??ref--0-1!/home/imanol/projects/ebegu/ebegu-web/node_modules/ts-loader/index.js??ref--0-2!/home/imanol/projects/ebegu/ebegu-web/src/core/component/dv-search/dv-quicksearchbox/dv-quicksearchbox.ts","cacheIdentifier":"cache-loader:1.1.0 test","dependencies":[{"path":"/home/imanol/projects/ebegu/ebegu-web/src/core/component/dv-search/dv-quicksearchbox/dv-quicksearchbox.ts","mtime":1512484412003},{"path":"/home/imanol/projects/ebegu/ebegu-web/node_modules/cache-loader/dist/cjs.js","mtime":1507514019000},{"path":"/home/imanol/projects/ebegu/ebegu-web/node_modules/thread-loader/dist/cjs.js","mtime":1507523420000},{"path":"/home/imanol/projects/ebegu/ebegu-web/node_modules/ts-loader/index.js","mtime":1508488471000}],"contextDependencies":[],"result":["\"use strict\";\n/*\n * Ki-Tax: System for the management of external childcare subsidies\n * Copyright (C) 2017 City of Bern Switzerland\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar TSSearchResultEntry_1 = require(\"../../../../models/dto/TSSearchResultEntry\");\nvar TSRoleUtil_1 = require(\"../../../../utils/TSRoleUtil\");\nvar TSAntragStatus_1 = require(\"../../../../models/enums/TSAntragStatus\");\nvar TSAntragDTO_1 = require(\"../../../../models/TSAntragDTO\");\nvar template = require('./dv-quicksearchbox.html');\nrequire('./dv-quicksearchbox.less');\nvar DvQuicksearchboxComponentConfig = /** @class */ (function () {\n    function DvQuicksearchboxComponentConfig() {\n        this.transclude = false;\n        this.template = template;\n        this.controller = DvQuicksearchboxController;\n        this.controllerAs = 'vm';\n    }\n    return DvQuicksearchboxComponentConfig;\n}());\nexports.DvQuicksearchboxComponentConfig = DvQuicksearchboxComponentConfig;\nvar DvQuicksearchboxController = /** @class */ (function () {\n    /* @ngInject */\n    function DvQuicksearchboxController(ebeguUtil, $timeout, $log, $q, searchIndexRS, CONSTANTS, $filter, $translate, $state, authServiceRS, $injector) {\n        this.ebeguUtil = ebeguUtil;\n        this.$timeout = $timeout;\n        this.$log = $log;\n        this.$q = $q;\n        this.searchIndexRS = searchIndexRS;\n        this.CONSTANTS = CONSTANTS;\n        this.$filter = $filter;\n        this.$translate = $translate;\n        this.$state = $state;\n        this.authServiceRS = authServiceRS;\n        this.$injector = $injector;\n        this.noCache = true;\n        this.delay = 250;\n        this.TSRoleUtil = TSRoleUtil_1.TSRoleUtil;\n    }\n    //wird von angular aufgerufen\n    DvQuicksearchboxController.prototype.$onInit = function () {\n        this.selectedItem = undefined;\n    };\n    DvQuicksearchboxController.prototype.querySearch = function (query) {\n        var _this = this;\n        this.searchString = query;\n        var deferred = this.$q.defer();\n        this.searchIndexRS.quickSearch(query).then(function (quickSearchResult) {\n            _this.limitResultsize(quickSearchResult);\n            deferred.resolve(quickSearchResult.resultEntities);\n        }).catch(function (ee) {\n            deferred.resolve([]);\n            _this.$log.warn('error during quicksearch', ee);\n        });\n        return deferred.promise;\n    };\n    DvQuicksearchboxController.prototype.limitResultsize = function (quickSearchResult) {\n        var limitedResults = this.$filter('limitTo')(quickSearchResult.resultEntities, 8);\n        // if (limitedResults.length < quickSearchResult.length) { //total immer anzeigen\n        this.addFakeTotalResultEntry(quickSearchResult, limitedResults);\n    };\n    DvQuicksearchboxController.prototype.addFakeTotalResultEntry = function (quickSearchResult, limitedResults) {\n        if (angular.isArray(limitedResults) && limitedResults.length > 0) {\n            var totalResEntry = new TSSearchResultEntry_1.default();\n            var alleFaelleEntry = new TSAntragDTO_1.default();\n            alleFaelleEntry.familienName = this.$translate.instant('QUICKSEARCH_ALL_RESULTS', { totalNum: quickSearchResult.totalResultSize });\n            totalResEntry.entity = 'ALL';\n            totalResEntry.antragDTO = alleFaelleEntry;\n            limitedResults.push(totalResEntry);\n        }\n        quickSearchResult.resultEntities = limitedResults;\n    };\n    DvQuicksearchboxController.prototype.selectItemChanged = function () {\n        this.navigateToFall();\n        this.selectedItem = undefined;\n    };\n    DvQuicksearchboxController.prototype.navigateToFall = function () {\n        if (this.selectedItem) {\n            if (this.selectedItem.antragDTO instanceof TSAntragDTO_1.default && this.selectedItem.gesuchID) {\n                if (this.authServiceRS.isOneOfRoles(TSRoleUtil_1.TSRoleUtil.getTraegerschaftInstitutionRoles()) && this.selectedItem.antragDTO) {\n                    // Reload Gesuch in gesuchModelManager on Init in fallCreationView because  maybe it has been changed since last time\n                    if (!this.gesuchModelManager) {\n                        this.gesuchModelManager = this.$injector.get('GesuchModelManager');\n                    }\n                    this.gesuchModelManager.clearGesuch();\n                    if (TSAntragStatus_1.isAnyStatusOfVerfuegt(this.selectedItem.antragDTO.status)) {\n                        this.openGesuch(this.selectedItem.gesuchID, 'gesuch.verfuegen');\n                    }\n                    else {\n                        this.openGesuch(this.selectedItem.gesuchID, 'gesuch.betreuungen');\n                    }\n                }\n                else {\n                    this.openGesuch(this.selectedItem.gesuchID, 'gesuch.fallcreation');\n                }\n            }\n            else if (this.selectedItem.entity === 'FALL') {\n                //open mitteilung\n                this.$state.go('mitteilungen', { fallId: this.selectedItem.fallID });\n            }\n            else {\n                this.$state.go('search', { searchString: this.searchString });\n            }\n        }\n    };\n    /**\n     * Oeffnet das Gesuch und geht zur gegebenen Seite (route)\n     * @param antragId\n     * @param urlToGoTo\n     * @param inNewTab true if fall should be opend in new tab\n     */\n    DvQuicksearchboxController.prototype.openGesuch = function (antragId, urlToGoTo, inNewTab) {\n        if (antragId) {\n            if (inNewTab) {\n                var url = this.$state.href(urlToGoTo, { createNew: false, gesuchId: antragId });\n                window.open(url, '_blank');\n            }\n            else {\n                this.$state.go(urlToGoTo, { createNew: false, gesuchId: antragId });\n            }\n        }\n    };\n    DvQuicksearchboxController.$inject = ['EbeguUtil', '$timeout', '$log', '$q', 'SearchIndexRS', 'CONSTANTS', '$filter', '$translate',\n        '$state', 'AuthServiceRS', '$injector'];\n    return DvQuicksearchboxController;\n}());\nexports.DvQuicksearchboxController = DvQuicksearchboxController;\n",{"version":3,"file":"/home/imanol/projects/ebegu/ebegu-web/src/core/component/dv-search/dv-quicksearchbox/dv-quicksearchbox.ts","sourceRoot":"","sources":["/home/imanol/projects/ebegu/ebegu-web/src/core/component/dv-search/dv-quicksearchbox/dv-quicksearchbox.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Ki-Tax: System for the management of external childcare subsidies\n * Copyright (C) 2017 City of Bern Switzerland\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport {IComponentOptions, IFilterService, ILogService, IPromise, IQService} from 'angular';\nimport TSSearchResultEntry from '../../../../models/dto/TSSearchResultEntry';\nimport TSQuickSearchResult from '../../../../models/dto/TSQuickSearchResult';\nimport {IStateService} from 'angular-ui-router';\nimport AuthServiceRS from '../../../../authentication/service/AuthServiceRS.rest';\nimport {TSRoleUtil} from '../../../../utils/TSRoleUtil';\nimport {isAnyStatusOfVerfuegt} from '../../../../models/enums/TSAntragStatus';\nimport GesuchModelManager from '../../../../gesuch/service/gesuchModelManager';\nimport EbeguUtil from '../../../../utils/EbeguUtil';\nimport {SearchIndexRS} from '../../../service/searchIndexRS.rest';\nimport TSAntragDTO from '../../../../models/TSAntragDTO';\nimport ITranslateService = angular.translate.ITranslateService;\nimport IInjectorService = angular.auto.IInjectorService;\nlet template = require('./dv-quicksearchbox.html');\nrequire('./dv-quicksearchbox.less');\n\n\nexport class DvQuicksearchboxComponentConfig implements IComponentOptions {\n    transclude = false;\n    template = template;\n    controller = DvQuicksearchboxController;\n    controllerAs = 'vm';\n\n}\n\nexport class DvQuicksearchboxController {\n\n    noCache: boolean = true;\n    delay: number = 250;\n\n    selectedItem: TSSearchResultEntry;\n    searchQuery: string;\n    searchString: string;\n    TSRoleUtil: TSRoleUtil;\n    gesuchModelManager: GesuchModelManager;\n\n    static $inject: any[] = ['EbeguUtil', '$timeout', '$log', '$q', 'SearchIndexRS', 'CONSTANTS', '$filter', '$translate',\n        '$state', 'AuthServiceRS', '$injector'];\n    /* @ngInject */\n    constructor(private ebeguUtil: EbeguUtil, private $timeout: IFilterService, private $log: ILogService,\n                private $q: IQService, private searchIndexRS: SearchIndexRS, private CONSTANTS: any,\n                private $filter: IFilterService, private $translate: ITranslateService,\n                private $state: IStateService, private authServiceRS: AuthServiceRS, private $injector: IInjectorService) {\n        this.TSRoleUtil = TSRoleUtil;\n    }\n\n    //wird von angular aufgerufen\n    $onInit() {\n        this.selectedItem = undefined;\n    }\n\n\n    public querySearch(query: string): IPromise<Array<TSSearchResultEntry>> {\n        this.searchString = query;\n        let deferred = this.$q.defer<Array<TSSearchResultEntry>>();\n        this.searchIndexRS.quickSearch(query).then((quickSearchResult: TSQuickSearchResult) => {\n            this.limitResultsize(quickSearchResult);\n            deferred.resolve(quickSearchResult.resultEntities);\n        }).catch((ee) => {\n            deferred.resolve([]);\n            this.$log.warn('error during quicksearch', ee);\n        });\n\n        return deferred.promise;\n\n    }\n\n    private limitResultsize(quickSearchResult: TSQuickSearchResult) {\n\n        let limitedResults = this.$filter('limitTo')(quickSearchResult.resultEntities, 8);\n        // if (limitedResults.length < quickSearchResult.length) { //total immer anzeigen\n        this.addFakeTotalResultEntry(quickSearchResult, limitedResults);\n    }\n\n    private addFakeTotalResultEntry(quickSearchResult: TSQuickSearchResult, limitedResults: TSSearchResultEntry[]) {\n        if (angular.isArray(limitedResults) && limitedResults.length > 0) {\n            let totalResEntry: TSSearchResultEntry = new TSSearchResultEntry();\n            let alleFaelleEntry = new TSAntragDTO();\n            alleFaelleEntry.familienName = this.$translate.instant('QUICKSEARCH_ALL_RESULTS', {totalNum: quickSearchResult.totalResultSize});\n            totalResEntry.entity = 'ALL';\n            totalResEntry.antragDTO = alleFaelleEntry;\n            limitedResults.push(totalResEntry);\n        }\n        quickSearchResult.resultEntities = limitedResults;\n    }\n\n    private selectItemChanged() {\n        this.navigateToFall();\n        this.selectedItem = undefined;\n\n    }\n\n    private navigateToFall() {\n        if (this.selectedItem) {\n            if (this.selectedItem.antragDTO instanceof TSAntragDTO && this.selectedItem.gesuchID) {\n                if (this.authServiceRS.isOneOfRoles(TSRoleUtil.getTraegerschaftInstitutionRoles()) && this.selectedItem.antragDTO) {\n                    // Reload Gesuch in gesuchModelManager on Init in fallCreationView because  maybe it has been changed since last time\n                    if (!this.gesuchModelManager) {\n                        this.gesuchModelManager = this.$injector.get<GesuchModelManager>('GesuchModelManager');\n                    }\n                    this.gesuchModelManager.clearGesuch();\n                    if (isAnyStatusOfVerfuegt(this.selectedItem.antragDTO.status)) {\n\n                        this.openGesuch(this.selectedItem.gesuchID, 'gesuch.verfuegen');\n                    } else {\n                        this.openGesuch(this.selectedItem.gesuchID, 'gesuch.betreuungen');\n                    }\n                } else {\n                    this.openGesuch(this.selectedItem.gesuchID, 'gesuch.fallcreation');\n                }\n            } else if (this.selectedItem.entity === 'FALL') {\n                //open mitteilung\n                this.$state.go('mitteilungen', {fallId: this.selectedItem.fallID});\n            } else {\n\n                this.$state.go('search', {searchString: this.searchString});\n            }\n        }\n    }\n\n    /**\n     * Oeffnet das Gesuch und geht zur gegebenen Seite (route)\n     * @param antragId\n     * @param urlToGoTo\n     * @param inNewTab true if fall should be opend in new tab\n     */\n    private openGesuch(antragId: string, urlToGoTo: string, inNewTab?: boolean): void {\n        if (antragId) {\n            if (inNewTab) {\n                let url = this.$state.href(urlToGoTo, {createNew: false, gesuchId: antragId});\n                window.open(url, '_blank');\n            } else {\n                this.$state.go(urlToGoTo, {createNew: false, gesuchId: antragId});\n            }\n        }\n    }\n}\n"]}]}