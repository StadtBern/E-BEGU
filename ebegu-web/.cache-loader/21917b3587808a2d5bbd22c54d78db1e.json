{"remainingRequest":"/home/imanol/projects/ebegu/ebegu-web/node_modules/thread-loader/dist/cjs.js??ref--0-1!/home/imanol/projects/ebegu/ebegu-web/node_modules/ts-loader/index.js??ref--0-2!/home/imanol/projects/ebegu/ebegu-web/src/admin/service/applicationPropertyRS.rest.ts","cacheIdentifier":"cache-loader:1.1.0 test","dependencies":[{"path":"/home/imanol/projects/ebegu/ebegu-web/src/admin/service/applicationPropertyRS.rest.ts","mtime":1518535855208},{"path":"/home/imanol/projects/ebegu/ebegu-web/node_modules/cache-loader/dist/cjs.js","mtime":1507514019000},{"path":"/home/imanol/projects/ebegu/ebegu-web/node_modules/thread-loader/dist/cjs.js","mtime":1507523420000},{"path":"/home/imanol/projects/ebegu/ebegu-web/node_modules/ts-loader/index.js","mtime":1508488471000}],"contextDependencies":[],"result":["/*\n * Ki-Tax: System for the management of external childcare subsidies\n * Copyright (C) 2017 City of Bern Switzerland\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\ndefine([\"require\", \"exports\", \"../../models/TSApplicationProperty\"], function (require, exports, TSApplicationProperty_1) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    var ApplicationPropertyRS = /** @class */ (function () {\n        /* @ngInject */\n        function ApplicationPropertyRS($http, REST_API, ebeguRestUtil) {\n            this.serviceURL = REST_API + 'application-properties';\n            this.http = $http;\n            this.ebeguRestUtil = ebeguRestUtil;\n        }\n        ApplicationPropertyRS.prototype.getAllowedMimetypes = function () {\n            var _this = this;\n            return this.http.get(this.serviceURL + '/public/' + encodeURIComponent('UPLOAD_FILETYPES_WHITELIST'), { cache: true })\n                .then(function (response) {\n                return _this.ebeguRestUtil.parseApplicationProperty(new TSApplicationProperty_1.default(), response.data);\n            });\n        };\n        ApplicationPropertyRS.prototype.getByName = function (name) {\n            var _this = this;\n            return this.http.get(this.serviceURL + '/key/' + encodeURIComponent(name)).then(function (response) {\n                return _this.ebeguRestUtil.parseApplicationProperty(new TSApplicationProperty_1.default(), response.data);\n            });\n        };\n        ApplicationPropertyRS.prototype.isDevMode = function () {\n            return this.http.get(this.serviceURL + '/public/devmode', { cache: true }).then(function (response) {\n                return response.data;\n            });\n        };\n        ApplicationPropertyRS.prototype.isDummyMode = function () {\n            return this.http.get(this.serviceURL + '/public/dummy').then(function (response) {\n                return response.data;\n            });\n        };\n        ApplicationPropertyRS.prototype.getBackgroundColor = function () {\n            var _this = this;\n            return this.http.get(this.serviceURL + '/public/background').then(function (response) {\n                return _this.ebeguRestUtil.parseApplicationProperty(new TSApplicationProperty_1.default, response.data);\n            });\n        };\n        ApplicationPropertyRS.prototype.create = function (name, value) {\n            return this.http.post(this.serviceURL + '/' + encodeURIComponent(name), value, {\n                headers: {\n                    'Content-Type': 'text/plain'\n                }\n            });\n        };\n        ApplicationPropertyRS.prototype.update = function (name, value) {\n            return this.http.post(this.serviceURL + '/' + encodeURIComponent(name), value, {\n                headers: {\n                    'Content-Type': 'text/plain'\n                }\n            });\n        };\n        ApplicationPropertyRS.prototype.remove = function (name) {\n            return this.http.delete(this.serviceURL + '/' + encodeURIComponent(name));\n        };\n        ApplicationPropertyRS.prototype.getAllApplicationProperties = function () {\n            var _this = this;\n            return this.http.get(this.serviceURL + '/').then(function (response) { return _this.ebeguRestUtil.parseApplicationProperties(response.data); });\n        };\n        ApplicationPropertyRS.prototype.isZahlungenTestMode = function () {\n            return this.http.get(this.serviceURL + '/public/zahlungentestmode', { cache: true }).then(function (response) {\n                return response.data;\n            });\n        };\n        ApplicationPropertyRS.$inject = ['$http', 'REST_API', 'EbeguRestUtil'];\n        return ApplicationPropertyRS;\n    }());\n    exports.ApplicationPropertyRS = ApplicationPropertyRS;\n});\n",{"version":3,"file":"/home/imanol/projects/ebegu/ebegu-web/src/admin/service/applicationPropertyRS.rest.ts","sourceRoot":"","sources":["/home/imanol/projects/ebegu/ebegu-web/src/admin/service/applicationPropertyRS.rest.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Ki-Tax: System for the management of external childcare subsidies\n * Copyright (C) 2017 City of Bern Switzerland\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport EbeguRestUtil from '../../utils/EbeguRestUtil';\nimport TSApplicationProperty from '../../models/TSApplicationProperty';\nimport {IHttpPromise, IHttpResponse, IHttpService, IPromise} from 'angular';\n\nexport class ApplicationPropertyRS {\n    serviceURL: string;\n    http: IHttpService;\n    ebeguRestUtil: EbeguRestUtil;\n\n    static $inject = ['$http', 'REST_API', 'EbeguRestUtil'];\n\n    /* @ngInject */\n    constructor($http: IHttpService, REST_API: string, ebeguRestUtil: EbeguRestUtil) {\n        this.serviceURL = REST_API + 'application-properties';\n        this.http = $http;\n        this.ebeguRestUtil = ebeguRestUtil;\n    }\n\n    getAllowedMimetypes(): IPromise<TSApplicationProperty> {\n        return this.http.get(this.serviceURL + '/public/' + encodeURIComponent('UPLOAD_FILETYPES_WHITELIST'),\n            {cache: true})\n        .then((response: IHttpResponse<TSApplicationProperty>) => {\n            return this.ebeguRestUtil.parseApplicationProperty(new TSApplicationProperty(), response.data);\n        });\n    }\n\n    getByName(name: string): IPromise<TSApplicationProperty> {\n        return this.http.get(this.serviceURL + '/key/' + encodeURIComponent(name)).then(\n            (response: any) => {\n                return this.ebeguRestUtil.parseApplicationProperty(new TSApplicationProperty(), response.data);\n            }\n        );\n    }\n\n    isDevMode(): IPromise<boolean> {\n        return this.http.get(this.serviceURL + '/public/devmode', {cache: true}).then((response) => {\n            return response.data;\n        });\n    }\n\n    isDummyMode(): IPromise<boolean> {\n        return this.http.get(this.serviceURL + '/public/dummy').then((response) => {\n            return response.data;\n        });\n    }\n\n    getBackgroundColor(): IPromise<TSApplicationProperty> {\n        return this.http.get(this.serviceURL + '/public/background').then((response) => {\n            return this.ebeguRestUtil.parseApplicationProperty(new TSApplicationProperty, response.data);\n        });\n    }\n\n    create(name: string, value: string): IHttpPromise<any> {\n        return this.http.post(this.serviceURL + '/' + encodeURIComponent(name), value, {\n            headers: {\n                'Content-Type': 'text/plain'\n            }\n        });\n    }\n\n    update(name: string, value: string): IHttpPromise<any> {\n        return this.http.post(this.serviceURL + '/' + encodeURIComponent(name), value, {\n            headers: {\n                'Content-Type': 'text/plain'\n            }\n        });\n    }\n\n    remove(name: string): IHttpPromise<any> {\n        return this.http.delete(this.serviceURL + '/' + encodeURIComponent(name));\n    }\n\n    getAllApplicationProperties(): IPromise<TSApplicationProperty[]> {\n        return this.http.get(this.serviceURL + '/').then(\n            (response: any) => this.ebeguRestUtil.parseApplicationProperties(response.data)\n        );\n    }\n\n    isZahlungenTestMode(): IPromise<boolean> {\n        return this.http.get(this.serviceURL + '/public/zahlungentestmode', {cache: true}).then((response) => {\n            return response.data;\n        });\n    }\n}\n\n"]}]}