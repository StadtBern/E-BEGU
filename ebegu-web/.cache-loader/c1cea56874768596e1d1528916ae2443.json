{"remainingRequest":"/home/imanol/projects/ebegu/ebegu-web/node_modules/thread-loader/dist/cjs.js??ref--0-1!/home/imanol/projects/ebegu/ebegu-web/node_modules/ts-loader/index.js??ref--0-2!/home/imanol/projects/ebegu/ebegu-web/src/faelle/component/faelleListView.ts","cacheIdentifier":"cache-loader:1.1.0 test","dependencies":[{"path":"/home/imanol/projects/ebegu/ebegu-web/src/faelle/component/faelleListView.ts","mtime":1518612532794},{"path":"/home/imanol/projects/ebegu/ebegu-web/node_modules/cache-loader/dist/cjs.js","mtime":1507514019000},{"path":"/home/imanol/projects/ebegu/ebegu-web/node_modules/thread-loader/dist/cjs.js","mtime":1507523420000},{"path":"/home/imanol/projects/ebegu/ebegu-web/node_modules/ts-loader/index.js","mtime":1508488471000}],"contextDependencies":[],"result":["\"use strict\";\n/*\n * Ki-Tax: System for the management of external childcare subsidies\n * Copyright (C) 2017 City of Bern Switzerland\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar TSAntragStatus_1 = require(\"../../models/enums/TSAntragStatus\");\nvar TSRoleUtil_1 = require(\"../../utils/TSRoleUtil\");\nvar template = require('./faelleListView.html');\nrequire('./faelleListView.less');\nvar FaelleListViewComponentConfig = /** @class */ (function () {\n    function FaelleListViewComponentConfig() {\n        this.transclude = false;\n        this.template = template;\n        this.controller = FaelleListViewController;\n        this.controllerAs = 'vm';\n    }\n    return FaelleListViewComponentConfig;\n}());\nexports.FaelleListViewComponentConfig = FaelleListViewComponentConfig;\nvar FaelleListViewController = /** @class */ (function () {\n    function FaelleListViewController($filter, gesuchModelManager, $state, $log, authServiceRS, searchRS) {\n        var _this = this;\n        this.$filter = $filter;\n        this.gesuchModelManager = gesuchModelManager;\n        this.$state = $state;\n        this.$log = $log;\n        this.authServiceRS = authServiceRS;\n        this.searchRS = searchRS;\n        this.totalResultCount = '0';\n        this.passFilterToServer = function (tableFilterState) {\n            _this.$log.debug('Triggering ServerFiltering with Filter Object', tableFilterState);\n            return _this.searchRS.searchAntraege(tableFilterState).then(function (response) {\n                _this.totalResultCount = response.totalResultSize ? response.totalResultSize.toString() : '0';\n                _this.antragList = response.antragDTOs;\n                return response;\n            });\n        };\n        this.initViewModel();\n    }\n    FaelleListViewController.prototype.initViewModel = function () {\n        // this.updateAntragList();\n    };\n    FaelleListViewController.prototype.getAntragList = function () {\n        return this.antragList;\n    };\n    /**\n     * Fuer Benutzer mit der Rolle SACHBEARBEITER_INSTITUTION oder SACHBEARBEITER_TRAEGERSCHAFT oeffnet es das Gesuch mit beschraenkten Daten\n     * Fuer anderen Benutzer wird das Gesuch mit allen Daten geoeffnet\n     * @param antrag\n     * @param event optinally this function can check if ctrl was clicked when opeing\n     */\n    FaelleListViewController.prototype.editFall = function (antrag, event) {\n        if (antrag) {\n            var isCtrlKeyPressed = (event && event.ctrlKey);\n            if (this.authServiceRS.isOneOfRoles(TSRoleUtil_1.TSRoleUtil.getTraegerschaftInstitutionOnlyRoles())) {\n                // Reload Gesuch in gesuchModelManager on Init in fallCreationView because it has been changed since last time\n                this.gesuchModelManager.clearGesuch();\n                if (TSAntragStatus_1.isAnyStatusOfVerfuegt(antrag.status)) {\n                    this.openGesuch(antrag.antragId, 'gesuch.verfuegen', isCtrlKeyPressed);\n                }\n                else {\n                    this.openGesuch(antrag.antragId, 'gesuch.betreuungen', isCtrlKeyPressed);\n                }\n            }\n            else {\n                this.openGesuch(antrag.antragId, 'gesuch.fallcreation', isCtrlKeyPressed);\n            }\n        }\n    };\n    /**\n     * Oeffnet das Gesuch und geht zur gegebenen Seite (route)\n     * @param antragId\n     * @param urlToGoTo\n     * @param isCtrlKeyPressed true if user pressed ctrl when clicking\n     */\n    FaelleListViewController.prototype.openGesuch = function (antragId, urlToGoTo, isCtrlKeyPressed) {\n        if (antragId) {\n            if (isCtrlKeyPressed) {\n                var url = this.$state.href(urlToGoTo, { createNew: false, gesuchId: antragId });\n                window.open(url, '_blank');\n            }\n            else {\n                this.$state.go(urlToGoTo, { createNew: false, gesuchId: antragId });\n            }\n        }\n    };\n    FaelleListViewController.$inject = ['$filter', 'GesuchModelManager', '$state', '$log', 'AuthServiceRS', 'SearchRS'];\n    return FaelleListViewController;\n}());\nexports.FaelleListViewController = FaelleListViewController;\n",{"version":3,"file":"/home/imanol/projects/ebegu/ebegu-web/src/faelle/component/faelleListView.ts","sourceRoot":"","sources":["/home/imanol/projects/ebegu/ebegu-web/src/faelle/component/faelleListView.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Ki-Tax: System for the management of external childcare subsidies\n * Copyright (C) 2017 City of Bern Switzerland\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport {IComponentOptions, IFilterService} from 'angular';\nimport {IStateService} from 'angular-ui-router';\nimport GesuchModelManager from '../../gesuch/service/gesuchModelManager';\nimport BerechnungsManager from '../../gesuch/service/berechnungsManager';\nimport TSAntragDTO from '../../models/TSAntragDTO';\nimport TSAntragSearchresultDTO from '../../models/TSAntragSearchresultDTO';\nimport AuthServiceRS from '../../authentication/service/AuthServiceRS.rest';\nimport {isAnyStatusOfVerfuegt} from '../../models/enums/TSAntragStatus';\nimport {TSRoleUtil} from '../../utils/TSRoleUtil';\nimport IPromise = angular.IPromise;\nimport ILogService = angular.ILogService;\nimport IQService = angular.IQService;\nimport SearchRS from '../../gesuch/service/searchRS.rest';\nlet template = require('./faelleListView.html');\nrequire('./faelleListView.less');\n\nexport class FaelleListViewComponentConfig implements IComponentOptions {\n    transclude = false;\n    template = template;\n    controller = FaelleListViewController;\n    controllerAs = 'vm';\n}\n\nexport class FaelleListViewController {\n\n    private antragList: Array<TSAntragDTO>;\n    totalResultCount: string = '0';\n\n\n    static $inject: string[] = ['$filter', 'GesuchModelManager', '$state', '$log', 'AuthServiceRS', 'SearchRS'];\n\n    constructor(private $filter: IFilterService, private gesuchModelManager: GesuchModelManager,\n                private $state: IStateService, private $log: ILogService,\n                private authServiceRS: AuthServiceRS, private searchRS: SearchRS) {\n        this.initViewModel();\n    }\n\n    private initViewModel() {\n        // this.updateAntragList();\n\n    }\n\n\n    public passFilterToServer = (tableFilterState: any): IPromise<TSAntragSearchresultDTO> => {\n        this.$log.debug('Triggering ServerFiltering with Filter Object', tableFilterState);\n        return this.searchRS.searchAntraege(tableFilterState).then((response: TSAntragSearchresultDTO) => {\n            this.totalResultCount = response.totalResultSize ? response.totalResultSize.toString() : '0';\n            this.antragList = response.antragDTOs;\n            return response;\n        });\n\n    }\n\n    public getAntragList(): Array<TSAntragDTO> {\n        return this.antragList;\n    }\n\n    /**\n     * Fuer Benutzer mit der Rolle SACHBEARBEITER_INSTITUTION oder SACHBEARBEITER_TRAEGERSCHAFT oeffnet es das Gesuch mit beschraenkten Daten\n     * Fuer anderen Benutzer wird das Gesuch mit allen Daten geoeffnet\n     * @param antrag\n     * @param event optinally this function can check if ctrl was clicked when opeing\n     */\n    public editFall(antrag: TSAntragDTO, event: any): void {\n        if (antrag) {\n            let isCtrlKeyPressed: boolean = (event && event.ctrlKey);\n            if (this.authServiceRS.isOneOfRoles(TSRoleUtil.getTraegerschaftInstitutionOnlyRoles())) {\n                // Reload Gesuch in gesuchModelManager on Init in fallCreationView because it has been changed since last time\n                this.gesuchModelManager.clearGesuch();\n                if (isAnyStatusOfVerfuegt(antrag.status)) {\n                    this.openGesuch(antrag.antragId, 'gesuch.verfuegen', isCtrlKeyPressed);\n                } else {\n                    this.openGesuch(antrag.antragId, 'gesuch.betreuungen', isCtrlKeyPressed);\n                }\n            } else {\n                this.openGesuch(antrag.antragId, 'gesuch.fallcreation', isCtrlKeyPressed);\n            }\n        }\n    }\n\n    /**\n     * Oeffnet das Gesuch und geht zur gegebenen Seite (route)\n     * @param antragId\n     * @param urlToGoTo\n     * @param isCtrlKeyPressed true if user pressed ctrl when clicking\n     */\n    private openGesuch(antragId: string, urlToGoTo: string, isCtrlKeyPressed: boolean): void {\n        if (antragId) {\n            if (isCtrlKeyPressed) {\n                let url = this.$state.href(urlToGoTo, {createNew: false, gesuchId: antragId});\n                window.open(url, '_blank');\n            } else {\n                this.$state.go(urlToGoTo, {createNew: false, gesuchId: antragId});\n            }\n        }\n    }\n}\n"]}]}