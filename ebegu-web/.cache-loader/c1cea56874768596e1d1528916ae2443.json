{"remainingRequest":"/home/imanol/projects/ebegu/ebegu-web/node_modules/thread-loader/dist/cjs.js??ref--0-1!/home/imanol/projects/ebegu/ebegu-web/node_modules/ts-loader/index.js??ref--0-2!/home/imanol/projects/ebegu/ebegu-web/src/faelle/component/faelleListView.ts","cacheIdentifier":"cache-loader:1.1.0 test","dependencies":[{"path":"/home/imanol/projects/ebegu/ebegu-web/src/faelle/component/faelleListView.ts","mtime":1518535855220},{"path":"/home/imanol/projects/ebegu/ebegu-web/node_modules/cache-loader/dist/cjs.js","mtime":1507514019000},{"path":"/home/imanol/projects/ebegu/ebegu-web/node_modules/thread-loader/dist/cjs.js","mtime":1507523420000},{"path":"/home/imanol/projects/ebegu/ebegu-web/node_modules/ts-loader/index.js","mtime":1508488471000}],"contextDependencies":[],"result":["/*\n * Ki-Tax: System for the management of external childcare subsidies\n * Copyright (C) 2017 City of Bern Switzerland\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\ndefine([\"require\", \"exports\", \"../../models/enums/TSAntragStatus\", \"../../utils/TSRoleUtil\"], function (require, exports, TSAntragStatus_1, TSRoleUtil_1) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    var template = require('./faelleListView.html');\n    require('./faelleListView.less');\n    var FaelleListViewComponentConfig = /** @class */ (function () {\n        function FaelleListViewComponentConfig() {\n            this.transclude = false;\n            this.template = template;\n            this.controller = FaelleListViewController;\n            this.controllerAs = 'vm';\n        }\n        return FaelleListViewComponentConfig;\n    }());\n    exports.FaelleListViewComponentConfig = FaelleListViewComponentConfig;\n    var FaelleListViewController = /** @class */ (function () {\n        function FaelleListViewController($filter, gesuchRS, gesuchModelManager, berechnungsManager, $state, $log, CONSTANTS, authServiceRS, $q) {\n            var _this = this;\n            this.$filter = $filter;\n            this.gesuchRS = gesuchRS;\n            this.gesuchModelManager = gesuchModelManager;\n            this.berechnungsManager = berechnungsManager;\n            this.$state = $state;\n            this.$log = $log;\n            this.CONSTANTS = CONSTANTS;\n            this.authServiceRS = authServiceRS;\n            this.$q = $q;\n            this.totalResultCount = '0';\n            this.passFilterToServer = function (tableFilterState) {\n                _this.$log.debug('Triggering ServerFiltering with Filter Object', tableFilterState);\n                return _this.gesuchRS.searchAntraege(tableFilterState).then(function (response) {\n                    _this.totalResultCount = response.totalResultSize ? response.totalResultSize.toString() : '0';\n                    _this.antragList = response.antragDTOs;\n                    return response;\n                });\n            };\n            this.initViewModel();\n        }\n        FaelleListViewController.prototype.initViewModel = function () {\n            // this.updateAntragList();\n        };\n        FaelleListViewController.prototype.getAntragList = function () {\n            return this.antragList;\n        };\n        /**\n         * Fuer Benutzer mit der Rolle SACHBEARBEITER_INSTITUTION oder SACHBEARBEITER_TRAEGERSCHAFT oeffnet es das Gesuch mit beschraenkten Daten\n         * Fuer anderen Benutzer wird das Gesuch mit allen Daten geoeffnet\n         * @param antrag\n         * @param event optinally this function can check if ctrl was clicked when opeing\n         */\n        FaelleListViewController.prototype.editFall = function (antrag, event) {\n            if (antrag) {\n                var isCtrlKeyPressed = (event && event.ctrlKey);\n                if (this.authServiceRS.isOneOfRoles(TSRoleUtil_1.TSRoleUtil.getTraegerschaftInstitutionOnlyRoles())) {\n                    // Reload Gesuch in gesuchModelManager on Init in fallCreationView because it has been changed since last time\n                    this.gesuchModelManager.clearGesuch();\n                    if (TSAntragStatus_1.isAnyStatusOfVerfuegt(antrag.status)) {\n                        this.openGesuch(antrag.antragId, 'gesuch.verfuegen', isCtrlKeyPressed);\n                    }\n                    else {\n                        this.openGesuch(antrag.antragId, 'gesuch.betreuungen', isCtrlKeyPressed);\n                    }\n                }\n                else {\n                    this.openGesuch(antrag.antragId, 'gesuch.fallcreation', isCtrlKeyPressed);\n                }\n            }\n        };\n        /**\n         * Oeffnet das Gesuch und geht zur gegebenen Seite (route)\n         * @param antragId\n         * @param urlToGoTo\n         * @param isCtrlKeyPressed true if user pressed ctrl when clicking\n         */\n        FaelleListViewController.prototype.openGesuch = function (antragId, urlToGoTo, isCtrlKeyPressed) {\n            if (antragId) {\n                if (isCtrlKeyPressed) {\n                    var url = this.$state.href(urlToGoTo, { createNew: false, gesuchId: antragId });\n                    window.open(url, '_blank');\n                }\n                else {\n                    this.$state.go(urlToGoTo, { createNew: false, gesuchId: antragId });\n                }\n            }\n        };\n        FaelleListViewController.$inject = ['$filter', 'GesuchRS', 'GesuchModelManager',\n            'BerechnungsManager', '$state', '$log', 'CONSTANTS', 'AuthServiceRS', '$q'];\n        return FaelleListViewController;\n    }());\n    exports.FaelleListViewController = FaelleListViewController;\n});\n",{"version":3,"file":"/home/imanol/projects/ebegu/ebegu-web/src/faelle/component/faelleListView.ts","sourceRoot":"","sources":["/home/imanol/projects/ebegu/ebegu-web/src/faelle/component/faelleListView.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Ki-Tax: System for the management of external childcare subsidies\n * Copyright (C) 2017 City of Bern Switzerland\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport {IComponentOptions, IFilterService} from 'angular';\nimport {IStateService} from 'angular-ui-router';\nimport GesuchRS from '../../gesuch/service/gesuchRS.rest';\nimport GesuchModelManager from '../../gesuch/service/gesuchModelManager';\nimport BerechnungsManager from '../../gesuch/service/berechnungsManager';\nimport TSAntragDTO from '../../models/TSAntragDTO';\nimport TSAntragSearchresultDTO from '../../models/TSAntragSearchresultDTO';\nimport AuthServiceRS from '../../authentication/service/AuthServiceRS.rest';\nimport {isAnyStatusOfVerfuegt} from '../../models/enums/TSAntragStatus';\nimport {TSRoleUtil} from '../../utils/TSRoleUtil';\nimport IPromise = angular.IPromise;\nimport ILogService = angular.ILogService;\nimport IQService = angular.IQService;\nlet template = require('./faelleListView.html');\nrequire('./faelleListView.less');\n\nexport class FaelleListViewComponentConfig implements IComponentOptions {\n    transclude = false;\n    template = template;\n    controller = FaelleListViewController;\n    controllerAs = 'vm';\n}\n\nexport class FaelleListViewController {\n\n    private antragList: Array<TSAntragDTO>;\n    totalResultCount: string = '0';\n\n\n    static $inject: string[] = ['$filter', 'GesuchRS', 'GesuchModelManager',\n        'BerechnungsManager', '$state', '$log', 'CONSTANTS', 'AuthServiceRS', '$q'];\n\n    constructor(private $filter: IFilterService, private gesuchRS: GesuchRS,\n                private gesuchModelManager: GesuchModelManager, private berechnungsManager: BerechnungsManager,\n                private $state: IStateService, private $log: ILogService, private CONSTANTS: any,\n                private authServiceRS: AuthServiceRS, private $q: IQService) {\n        this.initViewModel();\n    }\n\n    private initViewModel() {\n        // this.updateAntragList();\n\n    }\n\n\n    public passFilterToServer = (tableFilterState: any): IPromise<TSAntragSearchresultDTO> => {\n        this.$log.debug('Triggering ServerFiltering with Filter Object', tableFilterState);\n        return this.gesuchRS.searchAntraege(tableFilterState).then((response: TSAntragSearchresultDTO) => {\n            this.totalResultCount = response.totalResultSize ? response.totalResultSize.toString() : '0';\n            this.antragList = response.antragDTOs;\n            return response;\n        });\n\n    }\n\n\n    public getAntragList(): Array<TSAntragDTO> {\n        return this.antragList;\n    }\n\n    /**\n     * Fuer Benutzer mit der Rolle SACHBEARBEITER_INSTITUTION oder SACHBEARBEITER_TRAEGERSCHAFT oeffnet es das Gesuch mit beschraenkten Daten\n     * Fuer anderen Benutzer wird das Gesuch mit allen Daten geoeffnet\n     * @param antrag\n     * @param event optinally this function can check if ctrl was clicked when opeing\n     */\n    public editFall(antrag: TSAntragDTO, event: any): void {\n        if (antrag) {\n            let isCtrlKeyPressed: boolean = (event && event.ctrlKey);\n            if (this.authServiceRS.isOneOfRoles(TSRoleUtil.getTraegerschaftInstitutionOnlyRoles())) {\n                // Reload Gesuch in gesuchModelManager on Init in fallCreationView because it has been changed since last time\n                this.gesuchModelManager.clearGesuch();\n                if (isAnyStatusOfVerfuegt(antrag.status)) {\n                    this.openGesuch(antrag.antragId, 'gesuch.verfuegen', isCtrlKeyPressed);\n                } else {\n                    this.openGesuch(antrag.antragId, 'gesuch.betreuungen', isCtrlKeyPressed);\n                }\n            } else {\n                this.openGesuch(antrag.antragId, 'gesuch.fallcreation', isCtrlKeyPressed);\n            }\n        }\n    }\n\n    /**\n     * Oeffnet das Gesuch und geht zur gegebenen Seite (route)\n     * @param antragId\n     * @param urlToGoTo\n     * @param isCtrlKeyPressed true if user pressed ctrl when clicking\n     */\n    private openGesuch(antragId: string, urlToGoTo: string, isCtrlKeyPressed: boolean): void {\n        if (antragId) {\n            if (isCtrlKeyPressed) {\n                let url = this.$state.href(urlToGoTo, {createNew: false, gesuchId: antragId});\n                window.open(url, '_blank');\n            } else {\n                this.$state.go(urlToGoTo, {createNew: false, gesuchId: antragId});\n            }\n        }\n    }\n}\n"]}]}