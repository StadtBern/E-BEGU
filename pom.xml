<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <artifactId>parent</artifactId>
        <groupId>ch.dvbern.maven</groupId>
        <version>6.0.0-rc3</version>
    </parent>

    <groupId>ch.dvbern.ebegu</groupId>
    <artifactId>ebegu</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <packaging>pom</packaging>

    <properties>
        <!--<ear.name>kita-scheduler</ear.name>-->

        <!-- Wird ggf. im Profil "development-mode' ueberschrieben -->
        <skip-code-validation>false</skip-code-validation>

        <!-- local database properties -->
        <database.jdbc.driver>org.postgresql.Driver</database.jdbc.driver>
        <database.jdbc.url>jdbc:postgresql:ebegu</database.jdbc.url>
        <database.jdbc.usr>ebegu</database.jdbc.usr>
        <database.jdbc.pwd>ebegu</database.jdbc.pwd>

        <version.postgresql>9.4-1201-jdbc41</version.postgresql>
        <version.hibernate>4.3.10.Final</version.hibernate>

        <version.flyway>3.2.1</version.flyway>
        <version.slf4j>1.7.10</version.slf4j>
        <version.wildfly-arquillian-containers>1.0.2.Final</version.wildfly-arquillian-containers>

    </properties>

    <name>eBEGU - Multimodule Project</name>


    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.jboss.spec</groupId>
                <artifactId>jboss-javaee-7.0</artifactId>
                <version>1.0.3.Final</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>com.google.code.findbugs</groupId>
                <artifactId>annotations</artifactId>
                <version>3.0.0</version>
            </dependency>
            <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <version>19.0.20150826</version>
            </dependency>
            <dependency>
                <groupId>org.hibernate</groupId>
                <artifactId>hibernate-core</artifactId>
                <version>${version.hibernate}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.poi</groupId>
                <artifactId>poi</artifactId>
                <version>3.13</version>
            </dependency>
            <dependency>
                <groupId>org.apache.poi</groupId>
                <artifactId>poi-ooxml</artifactId>
                <version>3.13</version>
                <exclusions>
                    <exclusion>
                        <artifactId>dom4j</artifactId>
                        <groupId>dom4j</groupId>
                    </exclusion>
                </exclusions>
            </dependency>
            <!--&lt;!&ndash; Versionskonflikt &ndash;&gt;-->
            <!--<groupId>org.hibernate.common</groupId>-->
            <!--<artifactId>hibernate-commons-annotations</artifactId>-->
            <!--<version>4.0.5.Final</version>-->
            <!--</dependency>-->
            <dependency>
                <groupId>org.postgresql</groupId>
                <artifactId>postgresql</artifactId>
                <version>${version.postgresql}</version>
            </dependency>
            <dependency>
                <groupId>org.flywaydb</groupId>
                <artifactId>flyway-core</artifactId>
                <version>${version.flyway}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-lang3</artifactId>
                <version>3.3.2</version>
            </dependency>
            <dependency>
                <groupId>commons-io</groupId>
                <artifactId>commons-io</artifactId>
                <version>2.4</version>
            </dependency>
            <!--<dependency>-->
            <!--<groupId>commons-codec</groupId>-->
            <!--<artifactId>commons-codec</artifactId>-->
            <!--<version>1.9</version>-->
            <!--</dependency>-->
            <!--<dependency>-->
            <!--&lt;!&ndash; Versionskonflikt &ndash;&gt;-->
            <!--<groupId>org.jboss.logging</groupId>-->
            <!--<artifactId>jboss-logging</artifactId>-->
            <!--<version>3.1.4.GA</version>-->
            <!--</dependency>-->

            <!-- Submodule-dependencies should be on the project version -->
            <dependency>
                <groupId>${project.groupId}</groupId>
                <artifactId>ebegu-server</artifactId>
                <version>${project.version}</version>
                <type>ejb</type>
            </dependency>
            <dependency>
                <groupId>${project.groupId}</groupId>
                <artifactId>ebegu-dbschema</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>${project.groupId}</groupId>
                <artifactId>ebegu-shared</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>${project.groupId}</groupId>
                <artifactId>ebegu-rest</artifactId>
                <type>war</type>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>${project.groupId}</groupId>
                <artifactId>ebegu-testutils</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                <version>${version.slf4j}</version>
            </dependency>
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-ext</artifactId>
                <version>${version.slf4j}</version>
            </dependency>
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-simple</artifactId>
                <version>${version.slf4j}</version>
            </dependency>
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>jcl-over-slf4j</artifactId>
                <version>${version.slf4j}</version>
            </dependency>
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>log4j-over-slf4j</artifactId>
                <version>${version.slf4j}</version>
            </dependency>
            <dependency>
                <groupId>com.google.code.gson</groupId>
                <artifactId>gson</artifactId>
                <version>2.3.1</version>
            </dependency>
            <dependency>
                <groupId>org.bouncycastle</groupId>
                <artifactId>bcprov-ext-jdk15on</artifactId>
                <version>1.52</version>
            </dependency>
            <dependency>
                <groupId>net.bull.javamelody</groupId>
                <artifactId>javamelody-core</artifactId>
                <version>1.58.0</version>
                <!--<version>1.59.0-jpa21-SNAPSHOT</version>-->
                <!--<scope>provided</scope>-->
            </dependency>
            <!--Arquillian bom dependecies-->
            <dependency>
                <groupId>org.jboss.arquillian</groupId>
                <artifactId>arquillian-bom</artifactId>
                <version>1.1.11.Final</version>
                <scope>import</scope>
                <type>pom</type>
            </dependency>
        </dependencies>
    </dependencyManagement>


    <dependencies>
        <dependency>
            <groupId>com.google.code.findbugs</groupId>
            <artifactId>annotations</artifactId>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-ext</artifactId>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jcl-over-slf4j</artifactId>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>log4j-over-slf4j</artifactId>
        </dependency>


        <!-- Scope: test -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-simple</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.jboss.arquillian.junit</groupId>
            <artifactId>arquillian-junit-container</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.jboss.shrinkwrap.resolver</groupId>
            <artifactId>shrinkwrap-resolver-impl-maven</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.arquillian.extension</groupId>
            <artifactId>arquillian-persistence-api</artifactId>
            <version>1.0.0.Alpha7</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.arquillian.extension</groupId>
            <artifactId>arquillian-persistence-impl</artifactId>
            <version>1.0.0.Alpha6</version>
            <scope>test</scope>
        </dependency>

    </dependencies>


    <profiles>
        <profile>
            <id>development-mode</id>
            <activation>
                <property>
                    <name>skipTests</name>
                    <value>true</value>
                </property>
            </activation>
            <properties>
                <skip-code-validation>true</skip-code-validation>
            </properties>
        </profile>
        <profile>
            <!--INFO: Das funktioniert im Moment nicht da ein Nullpointer auftritt https://developer.jboss.org/message/723563-->
            <id>arquillian-weld-ee-embedded</id>
            <dependencyManagement>
                <dependencies>
                    <dependency>
                        <groupId>com.google.guava</groupId>
                        <artifactId>guava</artifactId>
                        <version>14.0.1</version>
                    </dependency>
                </dependencies>
            </dependencyManagement>
            <dependencies>
                <dependency>
                    <groupId>org.jboss.spec</groupId>
                    <artifactId>jboss-javaee-6.0</artifactId>
                    <version>1.0.0.Final</version>
                    <type>pom</type>
                    <scope>provided</scope>
                </dependency>

                <dependency>
                    <groupId>org.jboss.arquillian.container</groupId>
                    <artifactId>arquillian-weld-ee-embedded-1.1</artifactId>
                    <version>1.0.0.CR5</version>
                    <scope>test</scope>
                </dependency>
                <dependency>
                    <groupId>org.jboss.weld</groupId>
                    <artifactId>weld-core</artifactId>
                    <version>1.1.9.Final</version>
                    <scope>test</scope>
                </dependency>
                <dependency>
                    <groupId>org.slf4j</groupId>
                    <artifactId>slf4j-simple</artifactId>
                    <version>1.6.4</version>
                    <scope>test</scope>
                </dependency>
            </dependencies>
        </profile>

        <profile>
            <id>wildfy902-embedded</id>
            <activation>
                <property>
                    <!-- hiermit wird getestet ob ein property disable-embedded-wildfly existiert, wenn nicht lauft
                    arquillian mit embedded container-->
                    <name>!disable-embedded-wildfly</name>
                </property>
            </activation>
            <!-- the dependencies for Wildfly9.0.2.Final  -->
            <dependencies>
                <dependency>
                    <groupId>org.wildfly.arquillian</groupId>
                    <artifactId>wildfly-arquillian-container-embedded</artifactId>
                    <version>${version.wildfly-arquillian-containers}</version>
                </dependency>
                <dependency>
                    <groupId>org.wildfly</groupId>
                    <artifactId>wildfly-embedded</artifactId>
                    <version>9.0.2.Final</version>
                </dependency>
            </dependencies>

            <build>
                <plugins>

                    <!-- You need the maven dependency plugin to download locally a zip with the server,
                    unless you provide your own, it will download under the /target directory -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-dependency-plugin</artifactId>
                        <version>2.8</version>
                        <executions>
                            <execution>
                                <id>unpack</id>
                                <phase>process-test-classes</phase>
                                <goals>
                                    <goal>unpack</goal>
                                </goals>
                                <configuration>
                                    <artifactItems>
                                        <artifactItem>
                                            <groupId>org.wildfly</groupId>
                                            <artifactId>wildfly-dist</artifactId>
                                            <version>9.0.2.Final</version>
                                            <type>zip</type>
                                            <overWrite>false</overWrite>
                                            <outputDirectory>target</outputDirectory>
                                        </artifactItem>
                                    </artifactItems>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <version>2.17</version>
                        <configuration>
                            <!-- Fork every test because it will launch a separate AS instance -->
                            <forkMode>always</forkMode>
                            <systemPropertyVariables>
                                <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>
                                <!-- the maven dependency plugin will have already downloaded the server on /target -->
                                <jboss.home>${project.basedir}/target/wildfly-9.0.2.Final</jboss.home>
                                <module.path>${project.basedir}/target/wildfly-9.0.2.Final/modules</module.path>
                            </systemPropertyVariables>
                            <redirectTestOutputToFile>false</redirectTestOutputToFile>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>

    </profiles>

    <build>
        <plugins>
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <!-- Deaktiviere Annotation processing im maven-compiler-plugin.
                    Es wird stattdessen das maven-processor-plugin verwendent-->
                    <compilerArgument>-proc:none</compilerArgument>
                </configuration>
            </plugin>

            <plugin>
                <groupId>external.atlassian.jgitflow</groupId>
                <artifactId>jgitflow-maven-plugin</artifactId>
                <version>1.0-m5.1</version>
                <configuration>
                    <flowInitContext>
                        <masterBranchName>master</masterBranchName>
                        <developBranchName>dev</developBranchName>
                        <featureBranchPrefix>feature/</featureBranchPrefix>
                        <releaseBranchPrefix>release/</releaseBranchPrefix>
                        <hotfixBranchPrefix>hotfix/</hotfixBranchPrefix>
                        <versionTagPrefix/>
                    </flowInitContext>
                    <allowUntracked>true</allowUntracked>
                    <autoVersionSubmodules>true</autoVersionSubmodules>
                    <!-- Releases werden von einem eigenen Jenkings Job gebaut und deployed,
					deshalb schalten wir dies hier aus -->
                    <noDeploy>true</noDeploy>
                    <noReleaseBuild>true</noReleaseBuild>
                    <noHotfixBuild>true</noHotfixBuild>
                    <!-- Nach jgitflow:release-finish sollen release, master und develop Branch gepusht werden -->
                    <pushHotfixes>true</pushHotfixes>
                    <pushReleases>true</pushReleases>
                    <allowSnapshots>true</allowSnapshots>
                    <!-- Fast Forward merges verhindern -->
                    <suppressFastForward>true</suppressFastForward>
                    <!-- Force lf line-endings in pom.xml -->
                    <eol>lf</eol>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-deploy-plugin</artifactId>
                <configuration>
                    <!-- Nur Deployen wenn alle Module erfolgreich gebaut wurden -->
                    <deployAtEnd>true</deployAtEnd>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <executions>
                    <execution>
                        <id>checkstyle-check</id>
                        <phase>validate</phase>
                        <configuration>
                            <configLocation>checkstyle/rules/checkstyle/checkstyle-rules.xml</configLocation>
                            <suppressionsLocation>checkstyle/rules/checkstyle/checkstyle-suppressions.xml
                            </suppressionsLocation>
                            <suppressionsFileExpression>checkstyle.suppressions.file</suppressionsFileExpression>
                            <encoding>UTF-8</encoding>
                            <consoleOutput>true</consoleOutput>
                            <failsOnError>true</failsOnError>
                            <failOnViolation>true</failOnViolation>
                            <excludes>**/target/**/*</excludes>
                            <!--<linkXRef>false</linkXRef>-->
                        </configuration>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>

            </plugin>


            <!--todo team remove: hack: das ist ein workaround bis die pmd rules ueber sonar geladen werden koennen-->
            <plugin>
                <groupId>org.codehaus.gmaven</groupId>
                    <artifactId>groovy-maven-plugin</artifactId>
                    <version>2.0</version>
                      <executions>
                          <!-- set absolute base path from super pom -->
                          <execution>
                              <id>find-basepath</id>
                              <phase>validate</phase>
                              <goals>
                                  <goal>execute</goal>
                              </goals>
                              <configuration>
                                  <source>
                                      <![CDATA[
                                          import java.io.File;
                                          log.info('## define projects super pom absolute path through basepath_marker')
                                          String p = "basepath_marker";
                                          File f = null;
                                          if( p != null ) {
                                              def _max_child_poms = 0
                                              while( _max_child_poms++ < 5 ) {
                                                  f = new File( p );
                                                  if( f.exists() ) {
                                                      break;
                                                  }
                                                  p = "../" + p;
                                              }
                                          }
                                          if( f != null ) {
                                              String basePath = f.getCanonicalPath();
                                              basePath = basePath.substring( 0, basePath.lastIndexOf( File.separator ) );
                                              project.properties['base-path'] = basePath.replace( '\\' , '/');
                                              log.info(' - used base path = ' + project.properties['base-path'] );
                                          } else {
                                              log.error( 'Could not find basepath_marker marker file!' );
                                              System.stop( 0 );
                                          }
                                      ]]>
                                  </source>
                              </configuration>
                          </execution>
                      </executions>
                  </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-pmd-plugin</artifactId>
                <configuration>
                    <failOnViolation>true</failOnViolation>
                    <rulesets>
                        <!--todo team: regeln vom sonar verwenden-->
                        <ruleset>file://${base-path}/checkstyle/rules/pmd/pmd-rules.xml</ruleset>
                        <!--<ruleset>http://sonar-neu/api/qualityprofiles/export?language=java&amp;name=DV%20Bern%20Default%20%28veraltet%29&amp;exporterKey=pmd</ruleset>-->
                        <!--<ruleset>http://sonar-neu/api/qualityprofiles/export?language=java&amp;name=DV%20Bern%20Default&amp;exporterKey=pmd</ruleset>-->
                    </rulesets>
                </configuration>
                <executions>
                    <execution>
                        <id>pmd</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>

            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>findbugs-maven-plugin</artifactId>
                <configuration>
                    <!--
                        Enables analysis which takes more memory but finds more bugs.
                        If you run out of memory, changes the value of the effort element
                        to 'Low'.
                    -->
                    <effort>Max</effort>
                    <!-- Reports all bugs (other values are medium and max) -->
                    <threshold>Low</threshold>
                    <!-- Produces XML report -->
                    <xmlOutput>true</xmlOutput>
                    <!-- Configures the directory in which the XML report is created -->
                    <findbugsXmlOutputDirectory>${project.build.directory}/findbugs</findbugsXmlOutputDirectory>
                    <failOnError>true</failOnError>
                    <includeFilterFile>checkstyle/rules/findbugs/findbugs-includes.xml</includeFilterFile>
                    <excludeFilterFile>checkstyle/rules/findbugs/findbugs-excludes.xml</excludeFilterFile>
                </configuration>
                <executions>
                    <execution>
                        <id>findbugs</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>

            </plugin>
        </plugins>

        <pluginManagement>
            <plugins>

                <plugin>
                    <groupId>org.flywaydb</groupId>
                    <artifactId>flyway-maven-plugin</artifactId>
                    <version>${version.flyway}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-javadoc-plugin</artifactId>
                    <version>2.10.2</version>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-checkstyle-plugin</artifactId>
                    <version>2.15</version>
                    <configuration>
                        <skip>${skip-code-validation}</skip>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-pmd-plugin</artifactId>
                    <version>3.6</version>
                    <configuration>
                        <skip>${skip-code-validation}</skip>

                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>findbugs-maven-plugin</artifactId>
                    <version>3.0.3</version>
                    <configuration>
                        <skip>${skip-code-validation}</skip>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>de.juplo</groupId>
                    <artifactId>hibernate4-maven-plugin</artifactId>
                    <version>1.1.0</version>
                </plugin>
                <!-- todo fabio fragen ob man nicht das vom parent-pom verwenden kann-->
                <!--<plugin>-->
                <!--<groupId>org.apache.maven.plugins</groupId>-->
                <!--<artifactId>maven-enforcer-plugin</artifactId>-->
                <!--<version>1.4.1</version>-->
                <!--<executions>-->
                <!--<execution>-->
                <!--<id>check-maven-setup</id>-->
                <!--<goals>-->
                <!--<goal>enforce</goal>-->
                <!--</goals>-->
                <!--<configuration>-->
                <!--<fail>true</fail>-->
                <!--<failFast>true</failFast>-->
                <!--<rules>-->
                <!--<dependencyConvergence />-->
                <!--<reactorModuleConvergence />-->
                <!--<requireJavaVersion>-->
                <!--&lt;!&ndash; Bei aelteren Versionen aendern die Unit-Test-Ergebnisse bei Berechnungen mit BigDecimal &ndash;&gt;-->
                <!--<version>[1.8.0-40,)</version>-->
                <!--</requireJavaVersion>-->
                <!--<requireMavenVersion>-->
                <!--<version>3.3</version>-->
                <!--</requireMavenVersion>-->
                <!--&lt;!&ndash; TODO: Pruefen, dass keine SNAPSHOT-Dependencies mehr drin sind &ndash;&gt;-->
                <!--</rules>-->
                <!--</configuration>-->
                <!--</execution>-->
                <!--</executions>-->
                <!--</plugin>-->
            </plugins>
        </pluginManagement>
    </build>


    <modules>
        <module>ebegu-dbschema</module>
        <module>ebegu-shared</module>
        <module>ebegu-server</module>
        <module>ebegu-testutils</module>
        <module>ebegu-rest</module>
        <module>ebegu-runconfig</module>
    </modules>
</project>
